./ ADD NAME=GUIDE    0102-80177-80178-1121-02276-02387-02276-$SYS11  00
1


















                     WYLBUR  LEARNER'S  GUIDE







                            ITEL CORP


                           JUNE, 1980














                   The  Itel  Data Processing Center
                   San Francisco, California 94401
m                                                Page  2



       This Learner's Guide is designed for newcomers to Wylbur
 who have no knowledge of computers.  The Guide describes what a
 terminal is, how to log on to a terminal, and how to use the
 more frequently used Wylbur commands in their simplest forms.

       A supplement to this Guide is the Wylbur Reference
 Manual, a manual designed for experienced Wylbur users.  The
 Wylbur Reference Manual is arranged alphabetically by topic,
 with each topic described first in a summary fashion and then
 in more detail.



      Copies of the Wylbur Learner's Guide and the Wylbur Reference
 Manual may be obtained from the Data Processing Center #55
 Francisco St., San Francisco, Ca.



       This manual violates a rule of grammar in regard to quote
 marks.  Grammar dictates that quote marks include the rightmost
 comma or a period.  For technical clarity the comma or period
 will be placed outside of the ending quote in this publication.
1                                                Page  3

                    TABLE OF CONTENTS



 Beginners' session #1 ..................................4
     What a terminal is .................................4
     How to log on to a terminal at Itel ................5
     Wylbur's language ..................................6
         Carriage return key ............................7
         Backspace key ..................................7
         Entering commands in upper and lower case ......7
     Collect and command mode ...........................7
     Typing your letter .................................9
     Changing collect and command mode .................11
         Using the interrupt button to switch modes ....11
         Using the interrupt button to erase lines .....12
     A review  .........................................13
     Listing the rough draft of your letter ............14
         The SET UPLOW command .........................15
         The SET LENGTH command ........................18
     Saving your letter ................................19
     Logging off Wylbur ................................21

 Beginner's session #2 .................................22
     Logging on ........................................22
     Retrieving the letter .............................22
         What a data set is ............................22
         Your working data set .........................23
     Listing your data set .............................24
     The DELETE command ................................24
     The REPLACE command ...............................25
     The INSERT command ................................26
     The CHANGE command ................................26
     The range of a command ............................27
     The MODIFY command ................................28
     A review ..........................................31

     The COPY command ..................................32
     The MOVE command ..................................34
     The COLLECT command ...............................35
     The NUMBER command ................................35
     The ALIGN command .................................36
     The JUSTIFY command ...............................38

     System failure. Wylbur crashes.....................38
     Saving a backup data set ..........................39
     Abbreviations .....................................40
     Listing your data set offline on a
                     high speed printer ................40
     Saving your data set...............................41
     Logging off Wylbur ................................42
     How it all goes together ..........................43
     Final review ......................................44
1                                                Page  4



 BEGINNER'S SESSION #1
+__________ _______ __


       Wylbur is the name of the system that allows you to
 communicate with the computer.  Wylbur listens to what you say
 and directs the computer to do what you want.  Wylbur is fast
 and efficient and allows you to do a great deal of work in a
 small amount of time.

       In the beginning you'll use Wylbur to type a letter or a
 memorandum, correct your typing mistakes, and print out a clean
 copy of what you've typed.  As you gain experience with Wylbur,
 you'll use it for more than letters and memorandums.  You'll
 discover you can store a large amount of information in Wylbur
 and come back months later and retrieve that information.  You
 can also execute a computer program through Wylbur and have the
 output printed at your terminal as well as on a high speed
 printer in the computer room.  In effect, you can use all of
 the facilities of the computer while you're sitting at a Wylbur
 terminal.

       To talk to Wylbur you use a language resembling English.
 Some of Wylbur's commands, for example, are LIST, DELETE, SAVE,
 and REPLACE.  Other words in Wylbur's language will be new to
 you, such as LOGON, DDNAME, and LRECL.  You'll need to learn
 these new words, as well as Wylbur's grammar, which is rigid
 and which resembles English grammar only slightly.  You won't
 have to learn all of it at once though.  You can learn enough
 to do your work, and later when you're interested, you can
 learn more.  The purpose of this learning guide is to provide
 you with the basic concepts and commands used by Wylbur.  Once
 you learn the material in this learning guide, you'll be able
 to use Wylbur quite effectively.

       You may have wondered if you can get into trouble using
 Wylbur.  Can you hurt the computer?  Can you bring Itel to a
 halt?  Not at all.  You'll discover Wylbur keeps you in check.
 You can do a lot of work, and you can destroy your work, but
 you can't destroy anyone else's work.  And you can't disrupt
 the computer in any way.


 WHAT A TERMINAL IS
+____ _ ________ __


      A terminal is a device like a typewriter that is connected
 by a wire to the computer.  Some terminals are merely modified
 typewriters; other terminals have TV screens and fancy
 keyboards with many strange abbreviatons on them.  Whatever the
 case, when you use a terminal, you use it in the same manner as
 you would a typewriter.  You type in a line as you would on a
1                                                Page  5


 typewriter, and at the end of the line you press the carriage
 return key just as you would on a typewriter.  The one
 difference between a terminal and a typewriter is that a
 terminal will talk back to you.  That is, when you type in a
 command to Wylbur and press the carriage return key, Wylbur
 will type something back to you.  In effect, you carry on a
 conversation with Wylbur using a terminal.

       Itel has two types of terminals.  The more common type
 has a TV screen.  This type of terminal is fast and silent, but
 it lacks the ability to print anything on paper.  The other
 type of terminal at Itel resembles a typewriter in that it has
 paper in it.  A typewriter terminal is slower than the others,
 but it has the advantage of being able to print on paper while
 you're sitting at the terminal.  More important to you as a
 beginner, a typewriter terminal prints on paper the commands
 you enter as well as Wylbur's responses.  If you make a mistake
 and get into trouble, you can take the printout to some one who
 is more experienced and find out what to do.  For that reason,
 we suggest you learn Wylbur using a terminal that has paper in
 it.  The instructions in this learning guide will assume you
 are using a terminal that prints on paper.


 HOW TO LOG ON TO A TERMINAL AT ITEL
+___ __ ___ __ __ _ ________ __ ____


       To use Wylbur, you must let Wylbur know you are there.
 The process of introducing yourself to Wylbur is called a
 'logon'.  When you log on to Wylbur, you give Wylbur certain
 identifying information about yourself.  Once you give Wylbur
 this information, you are considered to be 'logged on' and then
 you can tell Wylbur what to do.

1                                                Page  6




       The printout which you'll see at your terminal (excluding
 the X's and M's printed behind your account number and keyword)
 is:



       If you can't seem to log on to a terminal, don't be
 concerned.  Some one may have turned off the power or
 misadjusted one of the special buttons or switches on the
 terminal.  If you can't get the terminal to work, ask some one
 who is knowledgeable to look at it.  If neither of you can get
 it to work, give up.  Call ext. XXX and report the terminal as
 being broken.
 If you're still in
 trouble, ask one of the computer operators to look at the
 terminal.  If that doesn't work, go home and go to bed.


 WYLBUR'S LANGUAGE
+________ ________


      As we mentioned before, Wylbur has its own language and
 grammar.  To communicate with Wylbur you must learn a minimum
 of Wylbur's language and grammar.  Some of the punctuation of
1                                                Page  7


 Wylbur's grammar is the special keys on the keyboard in front
 of you.  For example, when you logged on above, you typed your
 employe number and then you pressed the carriage return key.
 The carriage return key acts as a period at the end of a
 sentence.  It tells Wylbur that you have completed whatever you
 intend to type in for that line.  After you press the carriage
 return key, Wylbur looks at everything you have typed on
 that line and does as you command.

       Another key you'll use frequently is the backspace key.
 The backspace key not only backspaces the carriage, but also
 erases, inside the computer's memory, whatever you backspaced
 over.  So if you type a word incorrectly, backspace over it and
 retype it.  The word will look messy on the terminal printout
 because of the overtyping, but it will enter Wylbur correctly.

       The repeat key, as it name states, enables you to repeat
 a character or a blank.  For example, press the space bar, hold
 it down, and then press the repeat key to space automatically
 across the page.

       One feature of Wylbur's grammar has to do with upper and
 lower case characters.  Wylbur responds to commands typed in
 both upper and lower case characters.  When you type a command
 for Wylbur, you can type it in lower case or in upper case and
 get the same results.  In these learning exercises the commands
 are printed in UPPER CASE in the text to make them stand out,
 and in lower case in the terminal printout examples because
 that's the way they would normally appear at your terminal.

      The tab keys on the terminals are used as they are on a
 typewriter, but setting the tabs can be difficult, so the use
 of tabs will not be covered in these learning exercises.  When
 you feel ready to learn about setting tabs, look up the topic,
 TABS, in the Wylbur Reference Manual.

      If you look carefully at the keyboard on your terminal,
 you'll see that there is both the letter 'o' and the number
 '0', the letter 'l' and the number '1'.  You should always type
 the letter 'o' when you want a letter, and the number '0' when
 you want a number, and similiarly with 'l' and '1'.   Wylbur is
 rather fussy about these distinctions.



 COLLECT AND COMMAND MODES
+_______ ___ _______ _____


       One important feature of Wylbur's grammar is the
 difference between the 'command mode' and the 'collect mode'.
 You use the command mode when you tell Wylbur to do something;
 you use the collect mode when you want Wylbur to save what you
 are typing.
1                                                Page  8


       The reason Wylbur needs a collect mode and a command mode
 is that Wylbur needs to know when you are commanding Wylbur
 to do something and when you are merely typing in things you
 want to save.  Suppose for example, you wanted to type a
 sentence in a letter that began with the word 'list'.  One of
 Wylbur's commands happens to be the 'LIST' command.  When
 Wylbur finds the word 'list', Wylbur tries to list something.
 That's not what you want in this instance.  You're trying to
 type a letter.  So how do you tell Wylbur to keep its hands off
 your letter?  You 'enter' the collect mode.  You do this by
 typing in the word 'COLLECT' in response to Wylbur's prompt of
 'COMMAND ?'.  When you're in the collect mode, Wylbur doesn't
 examine what you're typing.  Wylbur merely stores it away for
 you.

       As an example, suppose you wanted to type a letter on
 Wylbur.  The first thing you would do (after logon) is enter
 the collect mode.  If you remember from above, the printed
 output at your terminal after logon looked like this:


      You can now enter the collect mode by typing the word
 'COLLECT'.  Wylbur will respond by printing a '1.' on the next
 line.  Your terminal printout looks like this:

                    COMMAND ? collect
                       1.   ?


       You are now in the collect mode and you can begin to type
 your letter.  The '1.' that Wylbur typed means that Wylbur is
 ready to 'collect' line number 1.  Wylbur will not scan the
 information you type, looking for commands.  Wylbur knows you
 are typing a letter or other text.
1                                                Page  9


 TYPING YOUR LETTER
+______ ____ ______


       Suppose the letter you want to type looks like this:

          Dear Fred,

               As I informed you over the phone on
          Tuesday, the last batch of skyhooks you
          sent us were defective.  At last count 4
          astronauts dropped into the Pacific.  Until
          your quality control department gets on
          the ball, we'll have to order our skyhooks
          from Acme Inc.

                              Still your friend,


                              Josephine Blink


      Let's start with the 'Dear Fred,'.  Type in 'Dear Fred,'
 after the number '1.'.  Type it  as you would on an ordinary
 typewriter.  Then press the carriage return key.  Your
 terminal printout looks like this:


                    COMMAND ? collect
                       1.   ? Dear Fred,
                       2.   ?

      Wylbur saved the first line you typed, and now Wylbur
 is ready to collect line number 2.   When you pressed carriage
 return, nothing printed, but for the sake of clarity, we'll use
 the expression '(cr)' to indicate a carriage return.  In the
 (cr) notation, the above printout would read:

                    COMMAND ? collect(cr)
                       1.   ? Dear Fred,(cr)
                       2.   ?
1                                                Page 10



      You are now ready to type line 2.  Looking at the example,
 you can see that the next line of the letter you intend to type
 is blank.  Easy enough.  Just press carriage return.  That
 gives you one blank line.  Your terminal printout looks like
 this:

                    COMMAND ? collect(cr)
                       1.   ? Dear Fred,(cr)
                       2.   ? (cr)
                       3.   ?

      In a similiar fashion, you proceed to type in the entire
 letter.  Assuming you are a poor typist (or maybe a good typist
 but somewhat rattled at being on Wylbur for the first time)
 your final effort might look like this:

                COMMAND ? collect(cr)
         1.   ? Dear Fred,(cr)
         2.   ? (cr)
         3.   ? As I informedd you on the phone over(cr)
         4.   ? Tuesday the last batch for Skyhooks you(cr)
         5.   ?  sent us wdere defective.  At last count(cr)
         6.   ? 40 astronauts dropped into the Atlantic.(cr)
         7.   ? Untily your quality control departments(cr)
         8.   ? gets on the ball, we'll have to order our(cr)
         9.   ? gets on the ball, we'll have to order our(cr)
        10.   ? skyhooks from Acme INc.(cr)
        11.   ?      Still your friend,(cr)
        12.   ? (cr)
        13.   ?      Josephine Blink(cr)
        14.   ?

      You've made a lot of mistakes, and you've typed in one
 line twice, but all in all you've managed to create a rough
 draft of your letter.

      Everything you've typed is saved in a special area
 reserved for you (at logon) inside Wylbur.  You'll learn more
 about this special area later.
1                                                Page 11


 CHANGING FROM COLLECT TO COMMAND MODE AND BACK AGAIN
+________ ____ _______ __ _______ ____ ___ ____ _____


       Notice in the above example that you're still in the
 collect mode.  The way you know you're in the collect mode is
 by the line number '14.  ?'.  That's Wylbur's prompt for the
 next line.  Whenever Wylbur prompts you with a line number
 you're in the collect mode, and Wylbur expects you to type in
 another line.  Wylbur would be happy collecting information
 from you forever.  It's up to you to tell Wylbur that you are
 through typing your letter.  You do that by entering the
 'command mode'.

       The way you enter the command mode is to press the key
 marked 'INT'.  This key is called the interrupt or attention
 key, and it occupies a central position in Wylbur's grammar.
 Whenever Wylbur prompts you with a line number, for example
 '10. ?', Wylbur is ready to change modes.  If you press the
 interrupt key in response to Wylbur's prompt, Wylbur will
 change back to the command mode.  In our example, you would
 press the interrupt button after '14.  ?' and Wylbur would
 print out 3 asterisks on that line, and then on the next line
 print 'COMMAND ?' The last part of your printout looks like
 this:

            10.   ? skyhooks from Acme INc.(cr)
            11.   ?      Still your friend,(cr)
            12.   ? (cr)
            13.   ?      Josephine Blink(cr)
            14.   ? ***
          COMMAND ?

       When Wylbur prompts with 'COMMAND ?' you are in the
 command mode, and you can give Wylbur whatever command you
 like.  Suppose though, having successfully gotten into the
 command mode, you decide that you want to add a postscript to
 your letter.  This means you have to get back into the collect
 mode and collect more lines of your letter.  Well, you could
 enter the 'collect' command as you did above by typing in
 'COLLECT'.  Your printout would look like this:

            10.   ? skyhooks from Acme INc.(cr)
            11.   ?      Still your friend,(cr)
            12.   ? (cr)
            13.   ?      Josephine Blink(cr)
            14.   ? ***
          COMMAND ? collect
            14.   ?

      You've probably noticed one thing: when Wylbur goes back
 to the collect mode, Wylbur remembers where you were before and
 then prompts you with the same line number.  That's rather
 handy, to say the least.
1                                                Page 12


      Another thing: the interrupt button you pressed to switch
 to the command mode, works equally well in both directions.
 That is, you can press the interrupt button to get into the
 collect mode at the point where Wylbur types 'COMMAND ?'.  The
 interrupt button  works exactly the same as if you had typed in
 the command, 'COLLECT'.   Above, for example, where you typed
 'COLLECT', suppose you had pressed the interrupt button.  Your
 terminal printout would have looked like this:


            10.   ? skyhooks from Acme INc.(cr)
            11.   ?      Still your friend,(cr)
            12.   ? (cr)
            13.   ?      Josephine Blink(cr)
            14.   ? ***
          COMMAND ? ***
            14.   ?

      In either case, you are in the collect mode now and you
 can type in your postscript.   For example, (and we'll leave
 off the (cr) notation now that you're getting to be a pro):

            10.   ? skyhooks from Acme INc.
            11.   ?      Still your friend,
            12.   ?
            13.   ?      Josephine Blink
            14.   ? ***
          COMMAND ? ***
            14.   ?
            15.   ? P.S.  HOw could you do this to me!
            16.   ?

       Having typed in your postscript, you can press the
 interrupt key and switch from the collect mode to the command
 mode.  You want to do this because you've finished your letter,
 and you want to use Wylbur commands to correct some of the
 mistakes you made.

       Before we discuss the command mode and some of the more
 common Wylbur commands, it would be best to let you know about
 another use of the interrrupt key.  Besides using the
 interrupt key to switch modes, you can use it as a kind of an
 eraser.  Suppose you had typed in part of a line and then
 noticed you typed in the wrong words.  Since you are midway
 through the line, you may press the interrupt key (but not the
 carriage return key also) and Wylbur will discard everything in
 that line and let you start that line over again.  This works
 in both the collect and command mode.  For example, suppose
 when you were typing the postcript above, your fingers got on
1                                                Page 13


 the wrong keys and you typed in garbage.  Toward the end of the
 line you glanced up, saw your mistake, and pressed the
 interrupt key to erase what you had typed.  Wylbur prompted you
 with the line number again, and you typed in the line
 correctly.  Your terminal printout looks like this:


            10.   ? skyhooks from Acme INc.
            11.   ?      Still your friend,
            12.   ?
            13.   ?      Josephine Blink
            14.   ? ***
          COMMAND ? ***
            14.   ?
            15.   ? O.S. Giw ciykd tiy di tgus ti***
            15.   ? P.S.  HOw could you do this to me!
            16.   ? ***
          COMMAND ?

      One last thing: if you log on to Wylbur and then walk away
 from your terminal, Wylbur will wait a while, and then ask you
 'ARE YOU STILL THERE?'.  Eventually Wylbur will log you off.
 Your output will be saved and restored ('RECOVERY COMPLETED')
 when you log on next.  It's best to avoid this situation by
 'logging off' when you expect to be away from the terminal for
 a long time.  You'll learn about 'logging off' later in this
 session.




 A REVIEW OF WHAT YOU'VE DONE SO FAR
+_ ______ __ ____ ______ ____ __ ___


      In the beginning, you logged on using your employe number,
 account number, and keyword.  After you logged on, Wylbur
 placed you in the command mode, prompting you with 'COMMAND ?'.
 You wanted to type in a new letter, so you entered the collect
 mode by typing in the word, 'COLLECT'.   Wylbur responded by
 prompting you with the first line number, '1.   ?'.   You then
 typed in your letter, ending each line with a carriage return.
 When you were finished, you switched back to the command mode
 by pressing the interrupt key.  Besides using the interrupt key
 to switch modes you also used it to erase a line you typed
 poorly so you could type the line in again.   Finally you
 pressed the interrupt key again and ended up in the command
 mode.

      The most important thing to remember so far is the
 difference between the command and the collect mode and the use
 of the interrupt key.  If you press the interrupt key
1                                                Page 14


 immediately after a prompt (immediately after a line number
 such as '15.  ?' or immediately after 'COMMAND ?') you are
 asking Wylbur to switch modes.  If you type in something
 and then press the interrupt key, you are asking Wylbur
 to erase what you typed on that line and let you try again.

      Now that you've learned the basics of the collect mode,
 let's find out about the command mode.


 LISTING YOUR LETTER
+_______ ____ ______


       Having typed in your letter, you probably want to see what
 it looks like under Wylbur.  You can do this with the LIST
 command.  Whenever Wylbur prompts with the word 'COMMAND ?',
 you can reply 'LIST' and Wylbur will list everything it's saved
 for you.  Continuing our example, if you typed 'LIST' and then
 a carriage return, Wylbur would respond by printing out your
 letter.  Your command and Wylbur's response looks like this:

          COMMAND ? list
             1.     DEAR FRED,
             2.
             3.     AS I INFORMEDD YOU ON THE PHONE OVER
             4.     TUESDAY THE LAST BATCH FOR SKYHOOKS YOU
             5.      SENT US WDERE DEFECTIVE,  AT LAST COUNT
             6.     40 ASTRONAUTS DROPPED INTO THE ATLANTIC.
             7.     UNTILY YOUR QUALITY CONTROL DEPARTMENTS
             8.     GETS ON THE BALL, WE'LL HAVE TO ORDER OUR
             9.     GETS ON THE BALL, WE'LL HAVE TO ORDER OUR
            10.     SKYHOOKS FROM ACME INC.
            11.          STILL YOUR FRIEND,
            12.
            13.          JOSEPHINE BLINK
            14.
            15.     P.S.  HOW COULD YOU DO THIS TO ME!
          COMMAND ?


      The first thing that strikes your eye is the upper case
 characters.  You typed the letter in both upper case and lower
 case characters.  So what happened?

       What happened is that you ran afoul of one of Wylbur's
 default options.  When you logged on to Wylbur, you
 automatically got a number of default options.  These options
 are a set of values that Wylbur always assigns to you.  The
 option you crashed into here is the one concerned with upper
 and lower case characters.  Wylbur's default option for upper
1                                                Page 15


 and lower case characters is to convert them all to upper case.
 The reason Wylbur does this is that most of the work done on
 the computer is done in upper case.  Job control cards and
 computer program cards are usually in upper case.  And since
 Wylbur was designed by computer programmers, the default option
 is upper case.  A clear example of programmer chauvinism.

      The solution to your problem is simple: when you log on to
 Wylbur, and Wylbur types in 'COMMAND ?', you must tell Wylbur
 you want to use both upper and lower case characters.  You do
 this with the 'SET UPLOW' command.   Going back to the
 beginning when you logged on, your printout would have looked
 like this:

                    COMMAND ? set uplow
                    COMMAND ? collect
                       1.   ? Dear Fred,
                       2.   ?

      You may wonder now why we didn't just tell you to SET
 UPLOW when you logged on.  You would have typed your letter
 correctly, and we wouldn't have had to go through this
 explanation.  The point is, if you forget to SET UPLOW,
 the consequences are serious: you may be in for a great deal of
 extra work.

      In our example then, you will want to type your letter
 again.  First you must get rid of what you have already typed.
 You do this with the CLEAR TEXT command.  The CLEAR TEXT
 command wipes out everything you've typed.  After you issue the
 CLEAR TEXT command, you issue the COLLECT command and then type
 your letter.  The terminal printout looks like this:

          COMMAND ? clear text
          COMMAND ? set uplow
          COMMAND ? collect
             1.   ?

       You proceed now to type the letter exactly as you did
 before.  This time when you execute the LIST command, your
 printout looks like this:
1                                                Page 16


          COMMAND ? list
             1.     Dear Fred,
             2.
             3.     As I informedd you on the phone over
             4.     Tuesday the last batch for Skyhooks you
             5.      sent us wdere defective.  At last count
             6.     40 astronauts dropped into the Atlantic.
             7.     Untily your quality control departments
             8.     gets on the ball, we'll have to order our
             9.     gets on the ball, we'll have to order our
            10.     skyhooks from Acme INc.
            11.          Still your friend,
            12.
            13.          Josephine Blink
            14.
            15.     P.S.  HOw could you do this to me!
          COMMAND ?


       Wylbur has now saved your letter in both upper and lower
 case.  And when you asked Wylbur to list it, Wylbur listed it
 exactly as you typed it.

      The LIST command has other variations.  One of these
 variations allows you to list a single line or several lines.
 The way you request which lines are to be listed is by
 specifying line numbers.  For example, if you wanted to list
 line 3 of your letter and then list lines 10-13, you would
 enter 'LIST 3' and 'LIST 10/13'.  Your printout looks like
 this:


          COMMAND ? list 3
             3.     As I informedd you on the phone over
          COMMAND ? list 10/13
            10.     skyhooks from Acme INc.
            11.          Still your friend,
            12.
            13.          Josephine Blink
          COMMAND ?


       Notice the '/' between the line numbers 10 and 13 in the
 LIST command.  The slash tells Wylbur you want to list lines 10
 to 13 inclusive.  If you leave out the slash, Wylbur will list
 lines 10 and 13 only.  There's another rule: there must be
 at least 1 blank between the word, LIST, and the line numbers.

        To aid you in specifying line numbers Wylbur has some
 special vocabulary.  You can refer to the first line of your
 letter by the word 'FIRST', and the last line  by the word
 'LAST'.  You can list your entire letter by entering any of
 these 3 commands:
1                                                Page 17


              COMMAND ?  list
              COMMAND ?  list 1/15
              COMMAND ?  list first/last

      In the first form of the command you didn't specify a
 range, so Wylbur gave you the default,  which is also
 FIRST/LAST. In the second and third forms, you specified a
 range that covered all line numbers, so you also got the
 complete letter listed.

      You can intermix 'FIRST' and 'LAST' with numbers.
 For example:

          COMMAND ?  list first/5
          COMMAND ?  list 6/last

      There is another variation of the LIST command that you
 should be aware of.  The LIST command will list 24 lines of
 your letter or memorandum and then pause.  If you want to
 continue listing the rest of your letter, you must press
 carriage return.  Wylbur will then  list another 24 lines of
 your letter.  In our example, your letter is less than 24
 lines, so you didn't see any pauses.

      When Wylbur pauses after listing 24 lines, you can
 continue the listing or enter any command you like.  At the
 point where Wylbur pauses, Wylbur is in the command mode and
 will accept either a carriage return (which tells Wylbur to
 continue) or a new command.  This is the only time you can
 enter a command without first having Wylbur prompt you with
 'COMMAND ?'.

      If you have a long letter and you don't want Wylbur to
 pause in the middle of printing it, you can use the PAGE
 parameter of the LIST command.  For example:

          COMMAND ?  list page 0

      That '0' is a zero.  It tells Wylbur not to pause when
 listing.  You can give Wylbur other values too.  For example,
 LIST PAGE 5 tells Wylbur to pause after listing every 5 lines.
 If you use the LIST command without specifying PAGE, you get
 the default of 24 lines, which is the same as entering, LIST
 PAGE 24.   If you specify line numbers as well as the PAGE
 option, specify the line numbers first:

          COMMAND ?  list first/70 page 0

      For practice you might type a letter that is longer than
 24 lines and then list it using various values for the PAGE
 parameter.
1                                                Page 18


 SETTING THE LINE LENGTH
+_______ ___ ____ ______



      In our example, the lines in your letter are all about 40
 characters long.  For a letter, lines of 40 or 50 characters
 might be appropriate.  For other material though, lines as long
 as 100 or 120 characters would be appropriate.  (Wylbur will
 let you type in lines as long as 133 characters.)  If you do
 type in a long line however, Wylbur will print out a warning
 note to you.  For example, suppose you typed the first two
 lines of your letter as one line.  Although we can't reproduce
 it on this page, your printout (and Wylbur's note) would appear
 somthing like this:

    2.   ?
    3.   As I informedd you on the phone over Tuesday the last ...
 LINE NUMBER  3. CONTAINS 76 CHARACTERS
    4.   ?

      Sometimes you want to be warned when you type in a long
 line, but usually you don't want those messages to appear.  You
 can avoid getting the messages by using the 'SET LENGTH'
 command.  The SET LENGTH command tells Wylbur the size of the
 longest line you expect to type.  In your letter, for example,
 you didn't expect to type a line longer than 45 characters.
 You could have used the SET LENGTH command if you wanted.  For
 example:

                    COMMAND ? set uplow
                    COMMAND ? set length 45
                    COMMAND ? collect
                       1.   ?

      Since you were careful in typing your letter, you didn't
 type a line longer than 45 characters and you didn't get any
 messages of the form,  'LINE  nn  CONTAINS  xx  CHARACTERS'.
 But if you had gotten distracted and typed in long line, Wylbur
 would have reminded you, and you could have corrected it at
 that time.

      The default line length that you get when you log on is 72
 characters.  If you intend to type lines longer than 72
 characters, you should use the SET LENGTH command.
1                                                Page 19


 A REVIEW OF THE COMMANDS YOU HAVE USED
+_ ______ __ ___ ________ ___ ____ ____


      So far you have used four Wylbur commands.  The most
 important command was the COLLECT command.  The COLLECT command
 allowed you to enter the collect mode after you logged on.

      Another command you used was the LIST command.  You used
 the LIST command to list all of your letter, and then used it
 to list just a few lines of your letter.

      The other two commands you used were SET commands.  You
 used SET UPLOW to tell Wylbur you wanted to type upper and
 lower case characters.  And you used the SET LENGTH command to
 tell Wylbur the length of the longest line you expected to
 type.

      At this point we recommend you get in the habit of using
 the SET UPLOW and SET LENGTH commands every time you log on
 (assuming you want upper and lower case information).  When you
 log on, you can follow this pattern:

              COMMAND ? set uplow
              COMMAND ? set length 80



 SAVING THE LETTER YOU HAVE TYPED
+______ ___ ______ ___ ____ _____


      When you logged on to Wylbur, Wylbur reserved a space for
 you inside the computer.  As you typed your letter, Wylbur
 placed the typed lines in that reserved space.  That space is
 yours as long as you are logged on to Wylbur, but once you
 'log off' (that is, once you end the Wylbur session) you lose your
 special space.  So if you want to save the letter you typed,
 you'll have to tell Wylbur to save it.  You tell Wylbur to save
 your letter by using, appropriately enough, the SAVE command.

      When you issue the SAVE command, you must tell Wylbur the
 name of what you are saving.  In your case, you might name your
 letter, 'LETTER'.  Or you might name it anything else.  There
 is a problem though: what if some one else has a letter named
 'LETTER'.  How does Wylbur keep the names straight?
1                                                Page 20


      Wylbur keeps the names straight by giving you a special
 codeword made out of your employe number and account number.
 For example, if your employe number is z1234 and your account
 is 9999, then Wylbur creates a codeword for you that is
 'Z.Z1234.A9999.'.  This code word will be added to whatever
 name you give your letter, and the result will be a unique name
 you can use for yourself.  (You don't have to worry about
 the code word.  Wylbur handles that automatically.)

        You may want to call your letter  'LETTER' or 'LETTER1'.
 You are free to use any name you like as long as the name
 begins with an alphabetic character and is 8 characters or
 less long, made up of alphabetic characters and numbers only.
 (You can make names longer than 8 characters if you
 follow some special rules; see the section on Data Set Naming
 Conventions in the Wylbur Reference Manual.)  It's a good idea
 to name the things you save with a name that reminds you of
 what it is you saved.  For example, you just typed up a letter
 to 'Fred', so you might want to name that letter FLETTER or
 FREDLTR.  In two weeks when you've forgotten what you called
 this letter, you can have Wylbur list the names of everything
 you've saved, and when you see 'FLETTER' you'll remember it's
 the letter you typed to Fred.

      Besides supplying a name for your letter, you must also
 tell Wylbur where you want to save it.   Wylbur saves
 information on mechanical devices resembling multi-platter
 record players.  These devices are called disk packs.  Each
 disk pack has an individual name.  The names of some of the
 more commonly used packs at Itel are USECTL, USER01, USER02,
 etc.  Usually some one will supply you with the name of a disk
 pack to use.  If you haven't been supplied with a disk pack
 name, you can call User Services at Ext. 7764, and some one
 will tell you which pack has the most room on it.  (When you
 get more knowledgeable, you can find out for yourself by
 reading $PUBLIC.SPACE.  Read about $PUBLIC.SPACE in the
 Wylbur Reference Manual.)  Although you can use any of
 several different disk packs, it's a good idea to keep
 everything you save on the same pack.  That way you'll have no
 trouble remembering where your information is.

      Getting back to our example, let's suppose you are told to
 save your letter on the disk pack USER50.  You would then enter
 'SAVE FLETTER ON USER50'.  Wylbur would save your letter and
 print out a message that it had been saved.  Your terminal
 printout looks like this:

                    COMMAND ? save fletter on user50
                    "FLETTER" SAVED ON USER50
                    COMMAND ?

      In this example Wylbur verified your letter was saved on
 USER50.  Wylbur might have printed an error message at this
 point.  If Wylbur does print an error message, you should find
 some one who is knowledgeable and ask them what to do.   Do not
 reply blindly to a message whose meaning is unclear.  It's
 possible to destroy something you typed in previously.
1                                                Page 21


      When Wylbur saves your letter on a disk pack, Wylbur
 merely writes a copy of it onto that disk pack.  The original
 copy of the letter still exists in your reserved space inside
 the computer, and it is this copy that you will see when you
 issue the LIST command.  Remember, if you do additional work on
 the letter in your reserved space, you will want to save it
 again when you are done.

      You'll learn  more about the SAVE command in Learning
 Session #2.   In particular, you'll learn about the REPLACE
 option of the SAVE command (i.e., SAVE FLETTER REPLACE), which
 is the form of the save command you'll use after the first
 time.  For now, use the SAVE command as shown above.


 LOGGING OFF WYLBUR
+_______ ___ ______


       When you type in a short letter as you did today, you
 would normally correct your mistakes at the same time and
 produce a final error-free copy for your own use.   Since
 you're working on Wylbur for the first time, you're probably
 tired and want to quit for a while.  Easy enough.

       The first thing you do when you want to terminate a
 Wylbur session is issue the SAVE command so whatever you typed
 will be saved permanently.  After that, you issue the LOGOFF
 command to tell Wylbur you're done.   The process of ending a
 session is called logging off.

       When you log off, you have one last option open to you.
 The place in the computer that Wylbur has reserved for you
 still contains what you've typed.  When you log off, Wylbur
 reminds you that you still have something in that space.  It's
 up to you to clear it out or at least let Wylbur know you want
 to discard it.  Since you've already saved a copy of it it on
 USER50, you can discard it now.  So when Wylbur asks you
 'CLEAR OK?', you reply 'YES'.  Wylbur will then print out
 accounting information and log you off.  The printout at your
 terminal looks like this:

                    COMMAND ? logoff
                    CLEAR OK? yes
                    EDITING TIME = 0.09 SECONDS.  I/O COUNT = 5
                    ELAPSED TIME = 00.05.11
                    END OF SESSION

1                                                Page 22


      You have now successfully completed a Wylbur session.  The
 letter you typed has been saved for posterity on USER50.  An
 hour from now, a day from now, or a month from now,  your
 letter will still be there.  (You do get charged for the space
 you use on a disk pack, so don't save things you don't need.)
 You're ready now for a coffee break and then Beginner's
 Session #2.



 BEGINNER'S SESSION #2
+__________ _______ __


       In session #2 you will retrieve the letter you typed in
 session #1, correct your spelling mistakes, add new sentences,
 and polish up a final copy.  You'll learn more of Wylbur's
 vocabulary as well as how to list your letter on a high speed
 printer in the computer room.  When you finish session #2,
 you'll know how to use Wylbur effectively and confidently.


 LOGGING ON FOR SESSION #2
+_______ __ ___ _______ __


      You log on to session #2 exactly as you did for session
 #1.  Your printout at the terminal looks like this:

                    COMMAND ? set uplow
                    COMMAND ? set length 45
                    COMMAND ?


 RETRIEVING THE LETTER YOU SAVED IN THE EARLIER SESSION
+__________ ___ ______ ___ _____ __ ___ _______ _______


      Before we discuss how to retrieve your letter, we want to
 present more of Wylbur's vocabulary.  One term that you'll
 frequently see is 'data set'.  A data set is a collection of
 information.  Your letter, for example, is a data set.  You
 saved it with the name, FLETTER.  If you had typed in a long
 memorandum, it would have been a data set also.   The term
 'data set' is a descriptive term for collection of data that
 are grouped together.
1                                                Page 23


      The data sets you'll usually hear about are the data sets
 stored on disk packs.  There is one special data set though,
 that Wylbur creates for you.  That data set is stored in
 the area of the computer reserved for you when you log
 on.  That data set is called your 'working data set'.  In
 session #1 when you typed in your letter, you typed it into
 your working data set.  And when you logged off and Wylbur
 responded  'CLEAR OK?', Wylbur was asking you if you were ready
 to discard your working data set.

       The area of the computer that is reserved for you, your
 working data set, is of vital importance.  Everything Wylbur
 does, it does with the working data set.  Wylbur cannot list or
 modify a data set you have saved on a disk pack.  Wylbur can
 list or modify only that information which is in your working
 data set.

      Consequently you must now retrieve your data set (your
 letter) from the disk pack and put it into your working data
 set.  You do this with the USE command.   When you enter the
 USE command, Wylbur goes out to the disk pack and reads that
 data set into your working data set in the computer.  For
 example, to retrieve the letter you typed in session #1, you
 type 'USE FLETTER'.   Wylbur will then read FLETTER into your
 working data set.  When Wylbur is done, Wylbur will print
 'COMMAND ?' again.  Your terminal printout reads:

                    COMMAND ? set uplow
                    COMMAND ? set length 80
                    COMMAND ? use fletter
                    COMMAND ?

      Sometimes when you ask for your data set, Wylbur is busy
 handling other users, so Wylbur will issue a 'QUEUED' message.
 For example:

                    COMMAND ? use fletter
                    QUEUED
                    QUEUED
                    COMMAND ?

      The QUEUED message is not important to you; it's merely
 Wylbur's way of telling you it's still working on your
 request.

      When Wylbur reads your letter from the disk pack and puts
 a copy of it into your working data set, Wylbur does not
 destroy the copy of your letter that is on the disk pack.
 Wylbur merely copies it into your working data set.  The data
 set on USER50 called FLETTER remains as it was when you issued
 the SAVE command at the end of lesson #1.
1                                                Page 24


 LISTING YOUR DATA SET
+_______ ____ ____ ___


       Having brought your letter into your working data set,
 you can now proceed to correct the mistakes in it.  Normally
 the first thing you do after reading in a data set is to list
 part of it to make sure you have retrieved the right
 information.  In your case, since your letter is short, you
 can list all of it.  Your terminal printout will read:

         COMMAND ? set uplow
         COMMAND ? set length 80
         COMMAND ? use fletter
         COMMAND ? list
            1.     Dear Fred,
            2.
            3.     As I informedd you on the phone over
            4.     Tuesday the last batch for Skyhooks you
            5.      sent us wdere defective.  At last count
            6.     40 astronauts dropped into the Atlantic.
            7.     Untily your quality control departments
            8.     gets on the ball, we'll have to order our
            9.     gets on the ball, we'll have to order our
           10.     skyhooks from Acme INc.
           11.          Still your friend,
           12.
           13.          Josephine Blink
           14.
           15.     P.S.  HOw could you do this to me!
         COMMAND ?

      Having assured yourself that your letter is in your
 working data set, you are free to use Wylbur editing commands
 to create a final product.


 DELETE COMMAND
+______ _______


      The function of the DELETE command is to delete 1 or more
 lines of Wylbur data.  In your letter, for example, you
 inadvertently typed in one line twice.  You now want to
 delete either line 8 or line 9 because you don't need both of
 them.  You can delete line 9 by entering 'DELETE 9'.  Your
 terminal printout looks like this:

         COMMAND ? DELETE 9
         COMMAND ?
1                                                Page 25


      If you listed your working data set, you would see the
 following printout:

         COMMAND ? delete 9
         COMMAND ? list 8/10
            8.     gets on the ball, we'll have to order our
           10.     skyhooks from Acme INc.
         COMMAND ?

      You can also use the DELETE command to delete several
 lines at the same time.  You could enter 'DELETE 3 9 13' and
 delete those three lines, or you could enter  'DELETE 3/13' and
 delete all the lines from 3 to 13.  You could also enter
 'DELETE FIRST/LAST' and delete everything in your working data
 set.  Normally you would do this only by accident, and you
 would be very unhappy.

      A rather tragic error that happens to all of us every so
 often is that we mistype the DELETE command.  For example,
 instead of entering 'DELETE 3/10', we enter 'DELETE 3/100'.
 Wylbur obediently and instantaneously deletes every line from 3
 to 100.  If we had spent an hour typing in lines 11 to 100, and
 if we hadn't yet issued the SAVE command to save that information
 on a disk pack, we would sit down and cry.  We would have to
 type all that information again.  The lesson is clear: be
 careful when you use the DELETE command.

      You will discover that besides the DELETE command, there
 are innumerable ways of instantly negating hours or even days
 of work.  You will also discover (in fact you will read about
 it later in this lesson) that there are ways of safeguarding
 yourself against these kinds of disasters.  When you come to
 that part of this lesson, read it carefully.  Until then, use
 the DELETE command with caution.


 REPLACE COMMAND
+_______ _______


         The function of the REPLACE command is to replace
 Wylbur lines in their entirety.  In your letter, for example,
 line 5 contains several mistakes.  Rather than correcting each
 mistake individually (using a command which you'll learn about
 soon), it may be easier for you to use the REPLACE command and
 retype the entire line.  To replace line 5, you would enter
 'REPLACE 5'.  Wylbur would then prompt you with '5.  ?'.   You
 then type in the new line as you want it.  Your terminal
 printout reads:

         COMMAND ? replace 5
            5.   ? sent us were defective.  At last count
         COMMAND ?

      If you listed line 5 you would see that it had been
 replaced with the line you just entered.
1                                                Page 26


      There are other options of the REPLACE command.  To learn
 about them see the Wylbur Reference Manual.


 INSERT COMMAND
+______ _______


       The INSERT command inserts new lines between old ones.
 In your letter, for example, you may want to add a sentence or
 two in the middle.  As a learning exercise, let's add a line
 between lines 6 and 7.  The most logical line number between 6
 and 7 is 6 1/2, but Wylbur doesn't work with fractions.  Wylbur
 will accept though, a decimal equivalent, like 6.5 or even 6.1
 or 6.2.   Wylbur will accept, in fact, 999 lines between 6 and
 7 as long as those lines are in decimal format, i.e.  6.001 to
 6.999.  To insert just one or two line numbers, you'll probably
 find it easier to use line numbers like 6.1, 6.2, 6.3, etc.  To
 insert line 6.1 into your letter, you would merely enter,
 'INSERT 6.1' Wylbur would prompt you with ' 6.1  ?  '.  After
 you entered the new line of information, Wylbur would return to
 the command mode and prompt you with 'COMMAND ?'.  Your
 terminal printout looks like this:

         COMMAND ? INSERT 6.1
            6.1  ? (And one came down in New York City!)
         COMMAND ?


       If you listed lines 5 through 7 after you enter
 INSERT 6.1, your terminal printout would look like this:

         COMMAND ? insert 6.1
            6.1  ?  (And one came down in New York City!)
         COMMAND ? list 5/7
            6.     40 astronauts dropped into the Atlantic.
            6.1  ? (And one came down in New York City!)
            7.     Untily your quality control departments
         COMMAND ?


      There is another option of the INSERT command, which you
 may read about in the Wylbur Reference Manual.


 CHANGE COMMAND
+______ _______


      The CHANGE command is one of the most useful editing
 commands in Wylbur.  With the CHANGE command, you can change
 words, phrases, or sentences in one Wylbur line, or in every
 line in your working data set.  As an example, we'll use the
 change command to correct some errors in your letter.  (We
 could use the CHANGE command to correct all the errors, but we
 want to save some work for the MODIFY command which you'll find
 out about next.)
1                                                Page 27


      You may recall that you typed 'Atlantic' instead of
 'Pacific' in line 6.  An easy way to correct that mistake is to
 use the CHANGE command.  You would enter, CHANGE 'Atlantic' TO
 'Pacific' IN 6.  The characters or words between the first pair
 of quote marks would be changed to the characters or words
 between the second pair of quote marks.  The two sets of
 characters need not be (and seldom are) the same length.  Your
 terminal printout would look like this:

         COMMAND ? change 'Atlantic' to 'Pacific' in 6
            6.     40 astronauts dropped into the Pacific.
         COMMAND ?


      Note that Wylbur prints out the line after the line is
 changed, allowing you to see that the change was made correctly.

      Also note that the information between the quote marks
 must be entered in upper and lower case characters exactly as
 you want it because Wylbur won't change it.

       The quote marks appear in pairs, one at the beginning and
 one at the end of each term.  If you are changing something
 that has a quote mark in the middle, use a double quote mark
 key at either end of the term.  Wylbur will accept the double
 quote mark key as a delimiter as well as the single quote mark
 key.  The double and single quote mark keys may not be mixed as
 delimiters however.  For example, to change 'IS NOT' to 'ISN'T'
 enter the following command:

       COMMAND ? change 'IS NOT' to "ISN'T" in 3/10



 THE RANGE OF A COMMAND
+___ _____ __ _ _______


      You may have noticed that most Wylbur commands require a
 line number or a list of line numbers.  These line numbers are
 called the 'range' of the Wylbur command. The range of a Wylbur
 command  can be just one line, or it can be all the lines in
 your working data set.   In many commands, as in the CHANGE
 command, if no range is specified, Wylbur uses the default
 range which is the entire working data set.  The fact that the
 range defaults to the entire working data set means you have to
 be careful when you use many of the commands, including the
 CHANGE command.

      By expanding the range of a command, you can make the
 command a great deal more powerful than it may appear to be at
 first glance.  The CHANGE command is a good example.  Suppose
 you had typed a letter that was five times as long as the
 letter in our example.  And suppose you're mind was on a trip
 to Europe.  And suppose in a five places you typed in
1                                                Page 28


 'Atlantic' instead of 'Pacific'.  Then suddenly you woke up and
 realized that you had to change five lines in the letter.  You
 could change those lines by issuing a five CHANGE commands as
 you did above; or you could use one change command in several
 different ways.  If the line numbers to be changed were 6 14 57
 89 113, you could enter, CHANGE 'Atlantic' TO 'Pacific' IN 6 14
 57 89 113.  Or, if you knew that every time the word 'Atlantic'
 occurred in your letter, you wanted the word 'Pacific', you
 could let Wylbur do the work of finding the occurrences of
 'Atlantic' and you could just enter CHANGE 'Atlantic' TO
 'Pacific' IN FIRST/LAST.  Or, since Wylbur assumes you mean
 FIRST/LAST if you don't specify a range, you could just enter
 CHANGE 'Atlantic' TO 'Pacific' and Wylbur would proceed to
 search for every occurrence of the word Atlantic and change it.

       There is a danger though.  Suppose you wanted to change
 only one occurence of the word 'Atlantic', at the same time
 leaving the word 'Atlantic' in twenty other places where it
 was correct and proper.  If you entered  CHANGE 'Atlantic' to
 'Pacific' and left off a line number, Wylbur would proceed to
 change every occurrence of 'Atlantic' even those you wanted
 left alone.  The moral of the story is to use care when you
 enter commands.  Always specify the range you intend the
 command to work with.


 MODIFY COMMAND
+______ _______


      The MODIFY command is one of the most useful of all of
 Wylbur's text editing commands.  You'll probably use it more
 frequently than the other commands.

      The MODIFY command is used to change words or sentences in
 parts of a line.  For example, line 3 in your letter contains
 the word 'over' when you intended to type 'on'.   You could use
 the CHANGE command to change 'over' to 'on', but in this case
 let's use the MODIFY command.  The MODIFY command works in two
 parts.  First you specify the range you want to modify; and
 then you perform the modifications.  In our example you would
 first enter, ' MODIFY 3 '.   Wylbur would print line 3 in its
 entirety, and on the next line, the the word 'ALTERS ?'.  Your
 terminal printout would look like this:

         COMMAND ? modify 3
            3.     As I informedd you on the phone over
          ALTERS ?


      You are now ready to make modifications to line 3 by
 typing in beneath the line the modifications you want to make.
 There are 3 types of modifications: insertions, deletions, and
 replacements.  In this example we want to do a replacement,
 replacing the word 'over' with the word 'on'.  You make a
 replacement  by typing in the letter 'R' exactly under the
 place where you want to start your replacement, and then you
 type in your replacement.  The new replacement must be the same
 length as the word or characters you replace.  In our case, the
1                                                Page 29


 word 'on' is 2 characters shorter than the word 'over', so
 you'll have to add two blanks at the end.  After you type the
 letter 'R' followed by the word 'on' followed by 2 blanks and
 then a carriage return, Wylbur would respond by printing out
 the modified version of the line and then prompt you with the
 word 'ALTERS ?' again.  Your terminal output looks like
 this:

         COMMAND ? modify 3
            3.     As I informedd you on the phone over
          ALTERS ?                                 ron
            3.     As I informedd you on the phone on
          ALTERS ?


      At this point you can make additional modifications to the
 line by typing in an 'R' followed by the replacement characters
 or replacement words; or you can tell Wylbur you are done
 modifying the line by typing in a carriage return.  The
 carriage return is a signal to Wylbur that you have finished
 making alters to the line and you wish to terminate the MODIFY
 command.

      After you make modifications, you must always type a
 carriage return by itself in response to 'ALTERS ?' in order to
 terminate the MODIFY command.

      In our case, we still have one more error in this sentence
 in the word 'informedd'.  This typographical error allows us to
 use another of the MODIFY options, the delete option.  You use
 the delete option by typing in a 'D' under the characters or
 words you want to delete.  (It's just a coincidence in this
 example that the MODIFY delete character is a 'D', and the
 character we want to delete is a 'd'.)   If you typed in a 'D'
 under the superfluous 'd' in 'informedd' and then typed a
 carriage return, Wylbur would respond once more by prompting
 you with 'ALTERS ?', and your terminal printout looks like
 this:


         COMMAND ? modify 3
            3.     As I informedd you on the phone over
          ALTERS ?                                 ron
            3.     As I informedd you on the phone on
          ALTERS ?              d
            3.     As I informed you on the phone on
          ALTERS ?


       The sentence looks fine now, so you can signal Wylbur you
 are done with the MODIFY verb by typing in a carriage return
 only in response to 'ALTERS?'.  Your terminal printout looks
 like this:
1                                                Page 30


         COMMAND ? modify 3
            3.     As I informedd you on the phone over
          ALTERS ?                                 ron
            3.     As I informedd you on the phone on
          ALTERS ?              d
            3.     As I informed you on the phone on
          ALTERS ?
         COMMAND ?

       Thus far you have used the MODIFY command to replace
 characters and delete characters in a line.   There is a third
 function of the MODIFY command, the insert function.   The
 insert function is similiar to the replace and delete
 functions.  Using line number 4 as an example, suppose you
 wanted to add the word 'evening' after the word 'Tuesday'.  The
 most effective way of doing this would be to use the insert
 function of the MODIFY command.   In this case, you would enter
 'MODIFY 4', and Wylbur would print out line 4 followed by the
 prompt 'ALTERS ?'.   You would then enter the letter 'I' in the
 place where you want to insert something, and then you would
 type the word you wanted to insert followed by a carriage
 return.  Wylbur would print out the line with the insertion and
 prompt you again with 'ALTERS ?'.  Satisfied with the result,
 you would press carriage return.  Your terminal printout looks
 like this:

         COMMAND ? modify 4
            4.     Tuesday the last batch for Skyhooks you
          ALTERS ?        i evening
            4.     Tuesday evening the last batch for Skyhooks you
          ALTERS ?
         COMMAND ?

      Note that the insertion goes before the character the 'I'
 is placed under.

      There is a combination of the delete and insert functions
 that is useful to know.  You can use the delete function along
 with the insert function to do replacements of unequal length.
 For example, suppose you have misgivings about the letter
 you're sending to Fred, and you want to elevate the style.  In
 line 8, for example, you want to change 'gets on the ball' to
 'becomes more efficient'.  You could do this with several other
 Wylbur commands, but let's do it with the MODIFY command to
 show how the delete and insert functions can be combined
 together.  You first enter 'MODIFY 8' and then enter the letter
 'D' under every character of the phrase 'gets on the ball' and
 then type in the letter 'I' followed by the new phrase.
 Satisfied with the result you type in carriage return.  The
 terminal prinout looks like this:

         COMMAND ? modify 8
            8.     gets on the ball, we'll have to order our
          ALTERS ? ddddddddddddddddibecomes more efficient
            8.     becomes more efficient, we'll have to order our
          ALTERS ?
         COMMAND ?
1                                                Page 31


      The end result is the replacement of a string of
 characters with another string of characters of a different
 length.  One last hint before we leave the MODIFY command: you
 don't have to type in D's under every character you want to
 delete.  Type in a 'D' under the first and last character to be
 deleted, and Wylbur will delete everything in between.

      You should be aware that the insert function of the MODIFY
 command is considerably different from the INSERT command.  You
 might look at the INSERT command again and note the difference.


 A REVIEW OF SESSION #2
+_ ______ __ _______ __


      Session #2 began when you retrieved the letter you wrote
 in session #1.  You used the USE command to retrieve the letter
 from a disk pack into your working data set.  You listed the
 data set using the LIST command, and then you began to correct
 your mistakes using Wylbur's editing commands.

      You used the DELETE command to delete one line from your
 letter.

      You used the REPLACE command to replace a line with one
 you typed correctly.

      You used the INSERT command to insert a new line between
 two existing lines.

      You used the CHANGE command to change a word you had
 mistyped.

      Finally you used the MODIFY command to replace a word,
 delete a character, insert a word, and replace an entire phrase
 with another phrase.

      You may have noticed by this time that many of the Wylbur
 editing commands produce the same results.  For example, you
 can always use the REPLACE command and replace an entire line,
 and you would never need to use the CHANGE or MODIFY commands.
 Or you could always use the CHANGE command and never use the
 REPLACE or MODIFY commands.   Similiarly you could use the
 MODIFY command exclusively, and never worry about how the
 REPLACE or CHANGE commands work.

       Each of the Wylbur editing commands has a strong point
 though.  The REPLACE command is handy if you've really botched
 up a line, but the MODIFY command requires less work if the
 line needs only minor changes.   The CHANGE command comes into
 its own when a change is necessary to the same word or phrase
 in twenty or thirty different places.  Each command has its own
 place.
1                                                Page 32


      At first you'll probably be happy enough to get your work
 done no matter which command you use.  But as you get to know
 Wylbur, you'll grow increasing lazy.  And when you get lazy,
 you'll benefit greatly by browsing through the Wylbur Reference
 Manual.  A large amount of information is contained there that
 could not be presented in this learning guide.

      Another valuable thing to do when you become lazy, is to
 sit down with a more knowledgeable person at a Wylbur terminal
 and watch that person do her work.  An experienced Wylbur user
 frequently cannot tell you the shortcuts she has learned but she
 can usually demonstrate them in the course of her normal job.


 MORE WYLBUR COMMANDS
+____ ______ ________


       If you have some familiarity with the commands you've
 used thus far, you're in a good position to utilize Wylbur
 effectively.  There a few more Wylbur commands that are useful
 to know about though.  You may not need them every day, but
 when you do need them, they're indispensable.  We'll present
 them in their basic form and leave it to you to read more about
 them in the reference section when you have the time.


 COPY COMMAND
+____ _______


      The COPY command copies existing lines into another place
 in your working data set.  When you use the COPY command, you
 always end up with 2 copies of the line or lines.  As an
 example, suppose you decided to remove the P.S. in your letter
 and make it part of the body of the letter.  You could do this
 by entering 'COPY  15 to 10.1' and then 'DELETE 15'.  If you
 used the MODIFY command to remove the 'P.S.', and listed the
 results, your terminal printout would look like this:
1                                                Page 33


         COMMAND ? list 8/last
            8.     gets on the ball, we'll have to order our
           10.     skyhooks from Acme INc.
           11.          Still your friend,
           12.
           13.          Josephine Blink
           14.
           15.     P.S.  HOw could you do this to me!
         COMMAND ?  copy 15 to 10.1
         COMMAND ?  list 8/last
            8.     gets on the ball, we'll have to order our
           10.     skyhooks from Acme INc.
           10.1    P.S.  HOw could you do this to me!
           11.          Still your friend,
           12.
           13.          Josephine Blink
           14.
           15.     P.S.  HOw could you do this to me!
         COMMAND ?  modify 10.1
           10.1    P.S.  HOw could you do this to me!
          ALTERS ? r      Ho
           15.           How could you do this to me!
          ALTERS ?
         COMMAND ? delete 15
         COMMAND ? list 8/last
            8.     gets on the ball, we'll have to order our
           10.     skyhooks from Acme INc.
           10.1          How could you do this to me!
           11.          Still your friend,
           12.
           13.          Josephine Blink
           14.


      You may wonder about the modification where you entered
 'r     Ho'.  In effect you replaced the first 6 characters with
 blanks and then replaced the 'H' with another 'H', and then
 replaced the upper case 'O' with a lower case 'o'.  As you can
 see, replacement characters are always one character to the
 right because you type the 'r' under the first character you
 want to replace.

      This example shows one way of moving a line (or several
 lines) to some other location.  First you use the COPY command
 to copy the line or paragraph where you want it.  Then you list
 the line in the new location and verify it's where you want it.
 Once you're sure you've moved it where you want it, you use the
 DELETE command to remove the original line or lines.

      The COPY command has another variation which is
 invaluable.  The COPY command can be used to copy lines and
 paragraphs from a data set on a disk pack into your working
 data set.  For example, suppose you wished to include in your
 letter to Fred, some data on the advertised strength of
1                                                Page 34


 skyhooks versus the tested strength after ten days' use.  You
 typed this data perhaps a week ago and saved it on disk pack
 USER50 under the name SKYDATA.  To include this data in your
 letter you would enter the following command:

        COMMAND ?  copy first/last to end from skydata
        67. - LAST LINE
        COMMAND ?

      What has occurred is that Wylbur has read in lines
 FIRST/LAST of data set SKYDATA on disk pack USER50, and placed
 those lines at the end of your working data set.  There were 52
 lines of information in SKYDATA, and consequently your letter
 now has 67 lines to it.

       You can guess from the above example that you can also
 copy part of the data set SKYDATA into the middle of your
 letter.  For example, you can enter, 'COPY  3/14 TO 13.001
 FROM SKYDATA'.   Wylbur would then copy lines 3,4,5...14
 into your letter as lines 13.001, 13.002, 13.003...  13.012.


 MOVE COMMAND
+____ _______


      The MOVE command functions a great deal like the COPY
 command in that it also copies a line or lines of Wylbur data
 from one place to another.  The MOVE command though, deletes
 the original line or lines.   For example, you could have used
 the MOVE command above instead of the COPY command, and you
 wouldn't have had to use the DELETE command because the
 original lines would have been deleted automatically.  The
 command you entered would be:

                 COMMAND ? move 15 to 10.1
                 COMMAND ?

      In general, you use the MOVE command when you are sure you
 want a line moved and not copied.  If you are unsure of what
 you're doing, a COPY and a subsequent DELETE command may be
 better for you.

      Note that the MOVE command cannot be used to get
 information from a data set on a disk pack.  Only the COPY
 command can do that.
1                                                Page 35


 COLLECT COMMAND
+_______ _______


      You've used the COLLECT command several times already, so
 you know what it does.  Essentially, it allows you to go from
 the command mode to the collect mode.   There is an option to
 the COLLECT command that you haven't seen yet.  You can, if you
 wish, begin collecting lines of Wylbur text at some point other
 than line 1.  For example, if you decided to add another
 paragraph to your letter just past line 10.1, you could do it
 by entering the command  'COLLECT  10.2' or 'COLLECT 10.111'.
 Wylbur would then prompt you with the line number and proceed
 to increment the lines proportionally to the value you specified.
 Your terminal printout looks like this:


         COMMAND ?  list 10/11
           10.     skyhooks from Acme INc.
           11.          Still your friend,
         COMMAND ?  collect 10.111
           10.111?  And I'd like to add at this point
           10.112?


      You could continue to enter lines of text now until you
 got to line 10.999, and then you would have to stop.  You could
 enter more lines then, but first you would have to use the
 NUMBER command (you'll learn about the NUMBER command next).

      To summarize the COLLECT command, if you start a new
 working data set, you merely enter COLLECT and you then begin
 collecting with line number 1.  If you already have some lines
 in your working data set and you enter COLLECT without
 specifying line numbers, you'll start collecting at the end of
 your working data set.  If you specify a range with the COLLECT
 command, you'll start collecting at that line number, and the
 increments that Wylbur uses for line numbers will depend on the
 number you supply in the COLLECT command.  For example, if you
 enter COLLECT 10.1,  Wylbur will prompt you with line numbers
 10.1, 10.2, 10.3, etc.  If you enter COLLECT 10.01, Wylbur will
 prompt you with 10.01, 10.02, 10.03, etc.



 NUMBER COMMAND
+______ _______


      The NUMBER command renumbers your working data set.
 Normally you'll use the NUMBER command to get rid of the funny
 numbers you've created by inserting, copying, and moving.  In
 your letter for example, you've delete line number 9 and
1                                                Page 36


 created a line number 6.1 and 10.1.   There's no particular
 problem with these line numbers, except they just aren't neat
 and orderly.  You may want to renumber the lines in your
 working data set by using the NUMBER command.  If you listed
 part of your letter before and after you renumbered, your
 terminal printout would look like this:

         COMMAND ? list 6/11
            6.     40 astronauts dropped into the Atlantic.
            6.1    (And one came down in New York City!)
            7.     Untily your quality control departments
            8.     gets on the ball, we'll have to order our
           10.     skyhooks from Acme INc.
           10.1          How could you do this to me!
           11.          Still your friend,
         COMMAND ?  number
         15. - LAST LINE
         COMMAND ?  list 6/12
            6.     40 astronauts dropped into the Atlantic.
            7.     (And one came down in New York City!)
            8.     Untily your quality control departments
            9.     gets on the ball, we'll have to order our
           10.     skyhooks from Acme INc.
           11.           How could you do this to me!
           12.          Still your friend,
         COMMAND ?

       There are other options of the NUMBER command.  You
 can read about them in the Wylbur Reference Manual.


 ALIGN COMMAND
+_____ _______


      The ALIGN command is used to make the lines in your
 working data set the same size.  That is, the ALIGN command
 adds words to the end of short lines to make them as long as
 the long lines.   After the ALIGN comand has executed, every
 line in your letter or memorandum is about the same size.
 We'll use part of your letter as an example.

      When you typed your letter, you typed in lines of about 40
 characters in length.  Suppose now you wanted to make the lines
 about 50 characters.  You would do this by entering
 ' ALIGN  9/15 LENGTH 50 '.  If you listed the body of your
 letter before and after you entered the ALIGN command, your
 printout would look like this:
1                                                Page 37


     COMMAND ? list 9/15
        9.          As I informed you over the phone on
       10.     Tuesday, the last batch of skyhooks you
       11.     sent us were defective.  At last count 4
       12.     astronauts dropped into the Pacific.  Until
       13.     your quality control department gets on
       14.     the ball, we'll have to order our skyhooks
       15.     from Acme Inc.
     COMMAND ? align 9/15 length 50
     COMMAND ? list 9/15
        9.          As I informed you over the phone on Tuesday,
       10.     the last batch of skyhooks you sent us were
       11.     defective.  At last count 4 astronauts dropped
       12.     into the Pacific.  Until your quality control
       13.     department gets on the ball, we'll have to order
       14.     our skyhooks from Acme Inc.
     COMMAND ?


      The ALIGN command moves words from line to line until the
 maximum number of words have been fitted on each line, given
 the length you specified in the command.  When alignment is
 complete, the extra line numbers are deleted.  In this case,
 line number 15 was deleted because there were no words in it.

       The ALIGN command has many rules governing what it will
 do, and the easiest way to discover what these rules are is to
 use the command on some test material.   (You can also read the
 Wylbur Reference Manual, but that's not half as much fun.) One
 of the rules of the ALIGN command which you do have to know, is
 that lines beginning with one or more blanks act as stop lines.
 That is, when the ALIGN command finds a line beginning with a
 blank, the ALIGN command assumes that the line is the start of
 a paragraph and consequently does not move any words from the
 beginning of that line to any of the preceding lines.

      Another rule of the ALIGN command is that it will create
 new line numbers if it doesn't have enough lines to fit the
 words on.  For example, if you aligned the above test paragraph
 into lines with a maximum length of 15 characters, the ALIGN
 command would be forced to create some new line numbers to hold
 all of the little lines you have created.  The line numbers
 would probably go from 9 to 12 and then to 12.1, 12.2, etc.

      One word of caution about the ALIGN command: since it
 changes your working data set dramatically, you're wise to save
 a copy of your working data set before you start aligning
 material and then align your text paragraph by paragraph.  If
 you make a mistake (for example, leave off the LENGTH option),
 you can go back to your original copy and start over again.
1                                                Page 38


 JUSTIFY COMMAND
+_______ _______


       The JUSTIFY command performs the same function as the
 ALIGN command.  In addition, the JUSTIFY command spaces the
 words within lines such that the last word extends to the very
 end of the line.  The JUSTIFY command does this by adding
 blanks between the words in the sentences.  For example, to use
 the JUSTIFY command on your letter instead of the ALIGN command
 you would enter, 'JUSTIFY 9/14 LENGTH 50'; if you listed the
 results, your terminal printout would look like this:

  COMMAND ? justify 9/14 length 50
  COMMAND ? list 9/14
     9.          As I informed you over the phone on  Tuesday,
    10.     the  last  batch  of  skyhooks  you  sent  us were
    11.     defective.  At last  count  4  astronauts  dropped
    12.     into  the  Pacific.   Until  your  quality control
    13.     department gets on the ball, we'll have  to  order
    14.     our skyhooks from Acme Inc.
  COMMAND ?

       The JUSTIFY command makes your copy look cleaner.  Be
 careful in using the command though, as you can ruin your
 working data set if you use it incorrectly.  To be on the safe
 side, you should save a copy of the working data set before you
 begin justifying, and then justify one paragraph at a time
 until you are satisifed with the results.

       If you have lines in your working data set that have one
 or more blanks in front of them, and these lines do not start
 paragraphs, you will have trouble with the JUSTIFY command.
 The JUSTIFY command will produce strange results in the area of
 these lines.  You can learn more about the JUSTIFY command in
 the Wylbur Reference Manual.


 SYSTEM FAILURE.  WYLBUR CRASHES.
+______ ________  ______ ________


      Every so often some part of the computer system doesn't
 function as it's suppose to, and all sorts of dire things
 happen.  What you'll usually notice as you sit at your
 terminal, is that the terminal is unresponsive.  No matter what
 you type, Wylbur doesn't answer.   The best thing to do at this
 point is to sit at your terminal and wait for the system to
 come back up.  Eventually, you'll see the 'MODEL ?' query, and
 you can log on again.

      When you finish logging on, you'll see, if you're lucky,
 the message 'RECOVERY COMPLETED'.  This means that Wylbur saved
 your working data set before Wylbur crashed, and you can
 continue where you left off.
1                                                Page 39


       More frequently though, when the system crashes you lose
 everything you've typed in since the last time you issued a
 'SAVE' command.   Consider how you would feel if you just spent
 3 hours typing a 200 page memorandum and then the system
 crashed.  If you hadn't bothered to save the memorandum
 periodically on disk, you would be faced with the prospect of
 typing the 200 page memorandum over again.  An experienced
 Wylbur user can tell you that typing a memorandum the second
 time is an onerous chore.

      The moral is: save your working data set after every
 significant increment of work.

      What a signigicant increment of work is you'll have to
 decide for yourself.  Many people save their work every 20
 minutes, particularly if they are fast typists.

      One important thing to remember after system crashes is to
 SET UPLOW and SET LENGTH.   You do not get these automatically.
 It's rather common to be so upset by a system crash, that you
 forget to SET UPLOW, and then you type for an hour and have to
 go back and type it in still a third time.  (That's the reason
 some of the offices have locks on them--on the outside.)


 SAVING A BACKUP DATASET
+______ _ ______ _______


      You've been warned often enough to save your working data
 set in a backup data set as you work along.  The way you do
 this is by issuing the SAVE command.  First, you select a name
 for your backup data set.  You can name it BACKUP or TEMPLETT
 or LULUBELL.  The name is unimportant as long as you remember
 that the data set is for backup purposes.

      The first time you issue the SAVE command, you must give
 the disk pack name, e.g., SAVE LULUBELL ON USER50.  After this
 initial save, you do not need to specify the disk pack, but you
 must specify the REPLACE option, e.g., SAVE LULUBELL REPLACE.
 (You'll learn more about the SAVE command and the REPLACE
 option later.)

      For example, to save a backup copy of FLETTER after you
 have typed 10 or so lines, you can enter:

              COMMAND ? save lulubell on user50
              "LULUBELL" SAVED ON USER50
              COMMAND ?


      Then to save a backup copy of FLETTER later, after you've
 typed line 15 or so, enter:

              COMMAND ? save lulubell replace
              "LULUBELL" REPLACED ON USER50
              COMMAND ?
1                                                Page 40



      Once you save your working data set, you are somewhat
 protected against system failure and your own mistakes.  For
 example, if you inadvertently delete half of your working data
 set, you can read in the backup copy you saved twenty minutes
 ago and start over from that point.  You bring in a copy of
 your backup by entering the USE command with the CLEAR option,
 e.g., USE LULUBELL CLEAR.  The CLEAR option tells Wylbur to
 clear out your old working data set or what's left of it, and
 replace it with LULUBELL.  For example:

              COMMAND ? use lulubell clear
              COMMAND ?


       Note that LULUBELL is a backup of your working data set
 and not a copy of FLETTER, except perhaps at the beginning of
 the day when you make your first backup.  As the day progresses
 the backup copy of your working data set in LULUBELL becomes
 increasingly different from the copy of your letter saved in
 FLETTER.  Considering this, you may find it wise to save a
 backup copy of FLETTER  (a third backup) under some other name.
 Then when you eventually replace FLETTER at the end of the day,
 you still have an old copy of it in case you inadvertently
 deleted part of your working data set just before you saved it
 as FLETTER.


 ABBREVIATIONS
+_____________


       Almost all Wylbur commands have abbreviations.  You can
 read about them under the topic, Abbreviations, in the Wylbur
 Reference Manual.  You use the abbreviations exactly as you
 would the full command.  For example, LIST FIRST/LAST can also
 be entered as L F/L.  Other handy abbreviations are MOD for
 MODIFY; CH for CHANGE; and DEL for DELETE.


 LISTING YOUR WORKING DATA SET ON A HIGH SPEED PRINTER
+_______ ____ _______ ____ ___ __ _ ____ _____ _______


      After you've typed a long time at the terminal, your
 working data set becomes very large.  To list your working data
 set at the terminal takes forever because the terminal prints
 slowly.  Fortunately there's another way.  In addition to
 the LIST command you're familiar with, there is also the LIST
 OFFLINE command.
1                                                Page 41


      When you issue the LIST OFFLINE command, Wylbur prints a
 copy of your working data set on a high speed printer in the
 computer room.  Sometimes the data set is printed before you
 can walk to the computer room to pick it up.  Sometimes you
 have to wait a few minutes.  Usually within ten minutes, your
 output is waiting for you on the counter in the Computer Room,
 room 1307.

       Suppose for example, that the letter you just aligned and
 justifed was 1000 lines long.  It would be a perfect candidate
 for listing offline.  To list it offline, you would enter
 'LIST OFFLINE PAL xxx  UPLOW'.   The 'xxx' stands for your
 'pal box' number.  If you haven't been given one, you should
 enter the first initial of your last name.  This pal box letter
 will be printed on the front of your computer listing.  Your
 employe number will also be printed on your computer listing.
 When you enter the computer room, you will find the listings
 arranged on the long counter by pal box identifiers, with
 alphabetic identifiers first followed by the numeric
 identifiers.  If you can't find your output on the long
 counter, you should look in the pal boxes across the room.
 There is a pal box there with your number or alphabetic
 identifier on it.

      If you had entered the LIST OFFLINE command above, your
 terminal printout would look like this:

                 COMMAND ?  list offline uplow pal a
                 nnn IS YOUR JOB NUMBER
                 COMMAND ?

      The 'nnn' is the number of your job as it goes through the
 computer.   If you go into the computer room and can't find
 your output, ask the computer operator about job 'nnn'.
 Possibly it's been held up somewhere by unusual conditions.

       The  LIST OFFLINE command has numerous options.  You
 should read about them in the Wylbur Reference Manual.  Some of
 the options you won't understand at this point but many of them
 you'll find useful.  In the example above, you used the UPLOW
 option.  This tells Wylbur that you want to list your working
 data set in both upper and lower case letters when it's listed
 on the high speed printer.  If you had omitted UPLOW, you would
 have gotten your data set printed in upper case letters only.


 SAVING YOUR DATA SET
+______ ____ ____ ___


      At the end of lesson #2 as in lesson #1, you will want to
 save your working data set.   You save it by entering the SAVE
 command in the same way that you did in lesson #1.  There is
 one difference though: your data set called FLETTER now exists
 on disk pack USER50.  It's true that the version of FLETTER on
1                                                Page 42


 USER50 is the old one with the mistakes, but Wylbur doesn't
 know that.  Wylbur will discover when it goes to save FLETTER,
 that there is another FLETTER on USER50.  Wylbur will warn you
 about it, and you will have to reply 'YES'  when Wylbur asks
 you 'REPLACE?'.  Your terminal printout will look like this:

         COMMAND ?  save fletter
         "FLETTER" ALREADY EXISTS ON USER50
         TO REPLACE, REPLY "YES"
         REPLACE? yes
         "FLETTER" REPLACED ON USER50
         COMMAND ?


      Note that you didn't have to tell Wylbur which disk pack
 FLETTER was on (i.e. SAVE FLETTER ON USER50).  Wylbur keeps a
 catalog of all data sets, and whenever you reference a data
 set, Wylbur searches to see where it's at.  Wylbur does this to
 safeguard you against saving two data sets with the same name.
 In the example above, if you had replied 'NO' to the 'REPLACE?'
 prompt, Wylbur wouldn't have replaced FLETTER.  The copy of
 FLETTER on the disk pack would remain unchanged; and the copy
 of FLETTER in your working data set would remain unchanged.
 You would still have to save your working data set somewhere.
 You might call this version something else, like FLETR2, and
 once again issue a save command (e.g., SAVE FLETR2 ON USER50).

      There is an option on the SAVE command that eliminates
 Wylbur's prompt for replacing.  If you add the word REPLACE to
 the SAVE command, you're telling Wylbur that you know there is
 a version of FLETTER out there on a disk pack, and you want to
 scratch that version and replace it with the version in your
 working data set.  In our example, you would enter 'SAVE
 FLETTER REPLACE'.  Your terminal printout would then read:

        COMMAND ? save fletter replace
        "FLETTER" REPLACED ON USER50
        COMMAND ?


 LOGGING OFF WYLBUR
+_______ ___ ______


      You log off Wylbur in session #2 exactly as you did in
 session #1.  Or, if you're sure you have saved your working
 data set, you can enter 'LOGOFF CLEAR' and Wylbur will not ask
 you about clearing the working data set.
1                                                Page 43


 HOW IT ALL GOES TOGETHER
+___ __ ___ ____ ________


      You're aware now of what Wylbur can do for you.  You can
 type a letter or memorandum, make corrections, save it on a
 disk pack, and list it offline on a high speed printer.  So
 where do you begin?

       An experienced Wylbur user proceeds about as follows:
 typing in the first draft, the experienced user corrects only a
 few mistakes, usually those that she can correct by backspacing
 and retyping.  Spelling and grammatical errors are left in the
 copy.  Long lines of text and short lines of text are also left
 in the copy.  The experienced user saves the working data set
 every 15-20 minutes in a backup data set (for example with the
 name BACKUP), and then at the end of his session, she saves it
 one last time (for example with the name of MYDATA) before
 listing it offline on a high speed printer.

      When she returns after lunch or in the morning, she reads
 the offline listing and makes sure it's what she thinks it
 should be.  Then using the offline listing, she marks in
 corrections in red pencil, circling the line numbers that need
 to be changed.  Then she logs on to Wylbur, saves a copy of the
 data set in a second backup (for example named BACKUP2), and
 then enters the corrections she has marked on the listing.

      When she's done with her corrections, she issues the
 NUMBER command and then lists the last line.  If the number of
 lines seems about right, she saves the dataset back in the
 original (for example named MYDATA).  She's then ready to
 proceed to add additional text, if any, to her data set.
 Eventually, she'll list the data set offline on special paper,
 unnumbered, to get a listing that appears almost hand typed.
 (To find out how to get a listing of this sort, read about the
 LIST OFFLINE command in the Wylbur Reference Manual.)

      The value of the two backup data sets is as follows: the
 data set named BACKUP will be used if the system crashes or if
 our experienced Wylbur user accidentally deletes a large
 portion of her working data set.   If either of these disasters
 happen, then our experienced user will lose at the most 20
 minutes of work because she can read in the copy of her working
 data set she saved as BACKUP 20 minutes ago.

       The data set in BACKUP2 will be used only if a more
 serious disaster occurs.  For example, if our experienced user
 accidentally deleted almost all of her working data set and
 then, unaware of what she had done, she saved this fragmented
 working data set in both BACKUP and MYDATA at the end of the
1                                                Page 44


 day, she would be in  real trouble.  When she read her offline
 listing the next morning, she would cry a while and then read
 in the data set she saved in BACKUP2 and repeat all of the
 previous day's work (except the bad deletion presumably).  She
 would have lost one day's work, but she wouldn't have lost two
 days' work or even a week's work--which has happened to some
 people.  So remember to save BACKUP2 at the beginning of a
 session after you've read your listing and are sure you know
 what it is you're backing up.


 A FINAL REVIEW
+_ _____ ______


      Session #2 began when you read in the data set FLETTER and
 began to update it.  You used a variety of Wylbur commands
 (DELETE, REPLACE, INSERT, CHANGE, MODIFY) to correct your
 spelling and typographical errors.  Then you used the  COPY
 command to copy a line from one place to another.  You learned
 that the MOVE command did much the same thing: it copies a
 line to a new place and then deletes the original line.  You
 found out that the COLLECT command had an option that allowed
 you to add paragraphs in the middle of existing lines, and you
 found you could make your line numbers orderly by using the
 NUMBER command.

      Then you got fancy with the ALIGN and JUSTIFY commands,
 and at the same time learned that it's wise to save your
 working data set freqently in a back up data set in case you
 make a serious mistake or the computer crashes.   Along the way
 you discovered that you could list your working data set on a
 high speed printer in the computer room by using the LIST
 OFFLINE command.  And lastly you issued the SAVE command and
 discovered that Wylbur keeps a catalog of your data sets, and
 that you have to tell Wylbur to scratch the existing copy
 before it will save a new version.


 CONGRATULATIONS!
+________________

       If you've had the patience to stick with it until now,
 you'll soon be using Wylbur with efficiency and pleasure.
 Wylbur is not easy to learn (as you've found out), but the
 longer you practice at it, the better you'll get.  Some day
 some one will ask you a question about Wylbur and you'll answer
 it and discover you have become a Wylbur expert.  Good luck.
./ ADD NAME=GUIDE9   0100-80177-80177-0802-02387-02387-00000-$SYS13  00
1                                                                          1.
                                                                           2.
                                                                           3.
                                                                           4.
                                                                           5.
                                                                           6.
                                                                           7.
                                                                           8.
                                                                           9.
                                                                          10.
                                                                          11.
                                                                          12.
                                                                          13.
                                                                          14.
                                                                          15.
                                                                          16.
                                                                          17.
                                                                          18.
                                                                          19.
                     WYLBUR  LEARNER'S  GUIDE                             20.
                                                                          21.
                                                                          22.
                                                                          23.
                                                                          24.
                                                                          25.
                                                                          26.
                                                                          27.
                            B. Grotz                                      28.
                                                                          29.
                                                                          30.
                           April, 1974                                    31.
                                                                          32.
                                                                          33.
                                                                          34.
                                                                          35.
                                                                          36.
                                                                          37.
                                                                          38.
                                                                          39.
                                                                          40.
                                                                          41.
                                                                          42.
                                                                          43.
                                                                          44.
                                                                          45.
                   The  Rand  Computation  Center                         46.
                   Santa Monica, California 90406                         47.
1                                                Page  2                  48.
                                                                          49.
                                                                          50.
                                                                          51.
       This Learner's Guide is designed for newcomers to Wylbur           52.
 who have no knowledge of computers.  The Guide describes what a          53.
 terminal is, how to log on to a terminal, and how to use the             54.
 more frequently used Wylbur commands in their simplest forms.            55.
                                                                          56.
       A supplement to this Guide is the Wylbur Reference                 57.
 Manual, a manual designed for experienced Wylbur users.  The             58.
 Wylbur Reference Manual is arranged alphabetically by topic,             59.
 with each topic described first in a summary fashion and then            60.
 in more detail.                                                          61.
                                                                          62.
       In addition to these two manuals, every user should have a copy    63.
 of the Wylbur Card.  The Wylbur Card contains a list of all Wylbur       64.
 commands along with helpful information on how to use them.              65.
                                                                          66.
                                                                          67.
      Copies of the Wylbur Learner's Guide, the Wylbur Reference          68.
 Manual, and the Wylbur Card may be obtained from the Computer            69.
 Documentation Center, room 1765, ext. 436.                               70.
                                                                          71.
                                                                          72.
                                                                          73.
       This manual violates a rule of grammar in regard to quote          74.
 marks.  Grammar dictates that quote marks include the rightmost          75.
 comma or a period.  For technical clarity the comma or period            76.
 will be placed outside of the ending quote in this publication.          77.
1                                                Page  3                  78.
                                                                          79.
                    TABLE OF CONTENTS                                     80.
                                                                          81.
                                                                          82.
                                                                          83.
 Beginners' session #1 ..................................4                84.
     What a terminal is .................................4                85.
     How to log on to a terminal at Rand ................5                86.
     Wylbur's language ..................................6                87.
         Carriage return key ............................7                88.
         Backspace key ..................................7                89.
         Entering commands in upper and lower case ......7                90.
     Collect and command mode ...........................7                91.
     Typing your letter .................................9                92.
     Changing collect and command mode .................11                93.
         Using the interrupt button to switch modes ....11                94.
         Using the interrupt button to erase lines .....12                95.
     A review  .........................................13                96.
     Listing the rough draft of your letter ............14                97.
         The SET UPLOW command .........................15                98.
         The SET LENGTH command ........................18                99.
     Saving your letter ................................19               100.
     Logging off Wylbur ................................21               101.
                                                                         102.
 Beginner's session #2 .................................22               103.
     Logging on ........................................22               104.
     Retrieving the letter .............................22               105.
         What a data set is ............................22               106.
         Your working data set .........................23               107.
     Listing your data set .............................24               108.
     The DELETE command ................................24               109.
     The REPLACE command ...............................25               110.
     The INSERT command ................................26               111.
     The CHANGE command ................................26               112.
     The range of a command ............................27               113.
     The MODIFY command ................................28               114.
     A review ..........................................31               115.
                                                                         116.
     The COPY command ..................................32               117.
     The MOVE command ..................................34               118.
     The COLLECT command ...............................35               119.
     The NUMBER command ................................35               120.
     The ALIGN command .................................36               121.
     The JUSTIFY command ...............................38               122.
                                                                         123.
     System failure. Wylbur crashes.....................38               124.
     Saving a backup data set ..........................39               125.
     Abbreviations .....................................40               126.
     Listing your data set offline on a                                  127.
                     high speed printer ................40               128.
     Saving your data set...............................41               129.
     Logging off Wylbur ................................42               130.
     How it all goes together ..........................43               131.
     Final review ......................................44               132.
1                                                Page  4                 133.
                                                                         134.
                                                                         135.
                                                                         136.
 BEGINNER'S SESSION #1                                                   137.
+__________ _______ __                                                   138.
                                                                         139.
                                                                         140.
       Wylbur is the name of the system that allows you to               141.
 communicate with the computer.  Wylbur listens to what you say          142.
 and directs the computer to do what you want.  Wylbur is fast           143.
 and efficient and allows you to do a great deal of work in a            144.
 small amount of time.                                                   145.
                                                                         146.
       In the beginning you'll use Wylbur to type a letter or a          147.
 memorandum, correct your typing mistakes, and print out a clean         148.
 copy of what you've typed.  As you gain experience with Wylbur,         149.
 you'll use it for more than letters and memorandums.  You'll            150.
 discover you can store a large amount of information in Wylbur          151.
 and come back months later and retrieve that information.  You          152.
 can also execute a computer program through Wylbur and have the         153.
 output printed at your terminal as well as on a high speed              154.
 printer in the computer room.  In effect, you can use all of            155.
 the facilities of the computer while you're sitting at a Wylbur         156.
 terminal.                                                               157.
                                                                         158.
       To talk to Wylbur you use a language resembling English.          159.
 Some of Wylbur's commands, for example, are LIST, DELETE, SAVE,         160.
 and REPLACE.  Other words in Wylbur's language will be new to           161.
 you, such as LOGON, DDNAME, and LRECL.  You'll need to learn            162.
 these new words, as well as Wylbur's grammar, which is rigid            163.
 and which resembles English grammar only slightly.  You won't           164.
 have to learn all of it at once though.  You can learn enough           165.
 to do your work, and later when you're interested, you can              166.
 learn more.  The purpose of this learning guide is to provide           167.
 you with the basic concepts and commands used by Wylbur.  Once          168.
 you learn the material in this learning guide, you'll be able           169.
 to use Wylbur quite effectively.                                        170.
                                                                         171.
       You may have wondered if you can get into trouble using           172.
 Wylbur.  Can you hurt the computer?  Can you bring Rand to a            173.
 halt?  Not at all.  You'll discover Wylbur keeps you in check.          174.
 You can do a lot of work, and you can destroy your work, but            175.
 you can't destroy anyone else's work.  And you can't disrupt            176.
 the computer in any way.                                                177.
                                                                         178.
                                                                         179.
 WHAT A TERMINAL IS                                                      180.
+____ _ ________ __                                                      181.
                                                                         182.
                                                                         183.
      A terminal is a device like a typewriter that is connected         184.
 by a wire to the computer.  Some terminals are merely modified          185.
 typewriters; other terminals have TV screens and fancy                  186.
 keyboards with many strange abbreviatons on them.  Whatever the         187.
 case, when you use a terminal, you use it in the same manner as         188.
 you would a typewriter.  You type in a line as you would on a           189.
1                                                Page  5                 190.
                                                                         191.
                                                                         192.
 typewriter, and at the end of the line you press the carriage           193.
 return key just as you would on a typewriter.  The one                  194.
 difference between a terminal and a typewriter is that a                195.
 terminal will talk back to you.  That is, when you type in a            196.
 command to Wylbur and press the carriage return key, Wylbur             197.
 will type something back to you.  In effect, you carry on a             198.
 conversation with Wylbur using a terminal.                              199.
                                                                         200.
       Rand has two types of terminals.  The more common type            201.
 has a TV screen.  This type of terminal is fast and silent, but         202.
 it lacks the ability to print anything on paper.  The other             203.
 type of terminal at Rand resembles a typewriter in that it has          204.
 paper in it.  A typewriter terminal is slower than the others,          205.
 but it has the advantage of being able to print on paper while          206.
 you're sitting at the terminal.  More important to you as a             207.
 beginner, a typewriter terminal prints on paper the commands            208.
 you enter as well as Wylbur's responses.  If you make a mistake         209.
 and get into trouble, you can take the printout to some one who         210.
 is more experienced and find out what to do.  For that reason,          211.
 we suggest you learn Wylbur using a terminal that has paper in          212.
 it.  The instructions in this learning guide will assume you            213.
 are using a terminal that prints on paper.                              214.
                                                                         215.
                                                                         216.
 HOW TO LOG ON TO A TERMINAL AT RAND                                     217.
+___ __ ___ __ __ _ ________ __ ____                                     218.
                                                                         219.
                                                                         220.
       To use Wylbur, you must let Wylbur know you are there.            221.
 The process of introducing yourself to Wylbur is called a               222.
 'logon'.  When you log on to Wylbur, you give Wylbur certain            223.
 identifying information about yourself.  Once you give Wylbur           224.
 this information, you are considered to be 'logged on' and then         225.
 you can tell Wylbur what to do.                                         226.
                                                                         227.
      The basic information that Wylbur needs to know when you           228.
 log on is the type of terminal you are using, the employe               229.
 number to which you are charging the session, the account               230.
 number to which you are charging the session, and the keyword           231.
 authorizing you to use the employe number and account.                  232.
 Normally you will be supplied with this information by whoever          233.
 is asking you to learn to use Wylbur.  If you do not have this          234.
 information, you should call the Rand Computation Center                235.
 Business Office, ext.7678, and have an account and keyword              236.
 assigned to you.                                                        237.
                                                                         238.
      When you sit down at a terminal, you will usually see the          239.
 word 'MODEL?' printed out.  Reply to this by typing in the              240.
 number '37' (which identifies the terminal as a tyepwriter like         241.
 device with printed output), and then press the key marked              242.
 'RETURN', which is the carriage return key.    Wylbur will then         243.
 print the message, 'RAND COMPUTATION CENTER LINE xx  mm/dd/yy           244.
 hh.mm.ss P.M.', and on the next line, 'USER?'.  Reply to                245.
 'USER'?' by typing in the employe number you have been told to          246.
 use (either your own or someone else's), and then press the             247.
 return key again.                                                       248.
1                                                Page  6                 249.
                                                                         250.
                                                                         251.
       Sometimes when you sit down at a terminal, the 'MODEL?'           252.
 line does not appear but the 'USER?' line does.  In this case           253.
 just proceed by replying to the 'USER?' line as you would               254.
 normally.                                                               255.
                                                                         256.
      Wylbur will prompt you next with 'ACCOUNT?', and then              257.
 print X's and M' in the next four spaces.  The purpose of the           258.
 X's and M's is to hide your account number after you type it.           259.
 You'll notice after you type in your account number, you won't          260.
 be able to read it because of the X's and M's typed in the              261.
 background.  This prevents some one else from stealing your             262.
 account number and charging computer time to it.                        263.
                                                                         264.
       After you reply to 'ACCOUNT?' by typing in your 4-digit           265.
 account number, press the carriage return key. Wylbur will              266.
 next prompt you with the line 'KEYWORD?', and then print X's            267.
 and M's.  Reply to 'KEYWORD?' with the 3-character keyword that         268.
 has been assigned to you.  Wylbur will pause for a moment after         269.
 you reply, and then it will print 'COMMAND?'.  You are now              270.
 loggged on.                                                             271.
                                                                         272.
       The printout which you'll see at your terminal (excluding         273.
 the X's and M's printed behind your account number and keyword)         274.
 is:                                                                     275.
                                                                         276.
              MODEL? 37                                                  277.
              RAND COMPUTATION CENTER   LINExx mm/dd/yy...               278.
              USER? x1234                                                279.
              ACCOUNT? 9999                                              280.
              KEYWORD? x12                                               281.
              COMMAND?                                                   282.
                                                                         283.
                                                                         284.
       If you can't seem to log on to a terminal, don't be               285.
 concerned.  Some one may have turned off the power or                   286.
 misadjusted one of the special buttons or switches on the               287.
 terminal.  If you can't get the terminal to work, ask some one          288.
 who is knowledgeable to look at it.  If neither of you can get          289.
 it to work, give up.  Call ext. 403 and report the terminal as          290.
 being broken.  Then go into the Computer Room (room 1307) and           291.
 log onto one of the terminals there.  If you're still in                292.
 trouble, ask one of the computer operators to look at the               293.
 terminal.  If that doesn't work, go home and go to bed.                 294.
                                                                         295.
                                                                         296.
 WYLBUR'S LANGUAGE                                                       297.
+________ ________                                                       298.
                                                                         299.
                                                                         300.
      As we mentioned before, Wylbur has its own language and            301.
 grammar.  To communicate with Wylbur you must learn a minimum           302.
 of Wylbur's language and grammar.  Some of the punctuation of           303.
1                                                Page  7                 304.
                                                                         305.
                                                                         306.
 Wylbur's grammar is the special keys on the keyboard in front           307.
 of you.  For example, when you logged on above, you typed your          308.
 employe number and then you pressed the carriage return key.            309.
 The carriage return key acts as a period at the end of a                310.
 sentence.  It tells Wylbur that you have completed whatever you         311.
 intend to type in for that line.  After you press the carriage          312.
 return key, Wylbur looks at everything you have typed on                313.
 that line and does as you command.                                      314.
                                                                         315.
       Another key you'll use frequently is the backspace key.           316.
 The backspace key not only backspaces the carriage, but also            317.
 erases, inside the computer's memory, whatever you backspaced           318.
 over.  So if you type a word incorrectly, backspace over it and         319.
 retype it.  The word will look messy on the terminal printout           320.
 because of the overtyping, but it will enter Wylbur correctly.          321.
                                                                         322.
       The repeat key, as it name states, enables you to repeat          323.
 a character or a blank.  For example, press the space bar, hold         324.
 it down, and then press the repeat key to space automatically           325.
 across the page.                                                        326.
                                                                         327.
       One feature of Wylbur's grammar has to do with upper and          328.
 lower case characters.  Wylbur responds to commands typed in            329.
 both upper and lower case characters.  When you type a command          330.
 for Wylbur, you can type it in lower case or in upper case and          331.
 get the same results.  In these learning exercises the commands         332.
 are printed in UPPER CASE in the text to make them stand out,           333.
 and in lower case in the terminal printout examples because             334.
 that's the way they would normally appear at your terminal.             335.
                                                                         336.
      The tab keys on the terminals are used as they are on a            337.
 typewriter, but setting the tabs can be difficult, so the use           338.
 of tabs will not be covered in these learning exercises.  When          339.
 you feel ready to learn about setting tabs, look up the topic,          340.
 TABS, in the Wylbur Reference Manual.                                   341.
                                                                         342.
      If you look carefully at the keyboard on your terminal,            343.
 you'll see that there is both the letter 'o' and the number             344.
 '0', the letter 'l' and the number '1'.  You should always type         345.
 the letter 'o' when you want a letter, and the number '0' when          346.
 you want a number, and similiarly with 'l' and '1'.   Wylbur is         347.
 rather fussy about these distinctions.                                  348.
                                                                         349.
                                                                         350.
                                                                         351.
 COLLECT AND COMMAND MODES                                               352.
+_______ ___ _______ _____                                               353.
                                                                         354.
                                                                         355.
       One important feature of Wylbur's grammar is the                  356.
 difference between the 'command mode' and the 'collect mode'.           357.
 You use the command mode when you tell Wylbur to do something;          358.
 you use the collect mode when you want Wylbur to save what you          359.
 are typing.                                                             360.
1                                                Page  8                 361.
                                                                         362.
                                                                         363.
       The reason Wylbur needs a collect mode and a command mode         364.
 is that Wylbur needs to know when you are commanding Wylbur             365.
 to do something and when you are merely typing in things you            366.
 want to save.  Suppose for example, you wanted to type a                367.
 sentence in a letter that began with the word 'list'.  One of           368.
 Wylbur's commands happens to be the 'LIST' command.  When               369.
 Wylbur finds the word 'list', Wylbur tries to list something.           370.
 That's not what you want in this instance.  You're trying to            371.
 type a letter.  So how do you tell Wylbur to keep its hands off         372.
 your letter?  You 'enter' the collect mode.  You do this by             373.
 typing in the word 'COLLECT' in response to Wylbur's prompt of          374.
 'COMMAND ?'.  When you're in the collect mode, Wylbur doesn't           375.
 examine what you're typing.  Wylbur merely stores it away for           376.
 you.                                                                    377.
                                                                         378.
       As an example, suppose you wanted to type a letter on             379.
 Wylbur.  The first thing you would do (after logon) is enter            380.
 the collect mode.  If you remember from above, the printed              381.
 output at your terminal after logon looked like this:                   382.
                                                                         383.
                    MODEL? 37                                            384.
                    RAND COMPUTATION CENTER   LINExx mm/dd/yy            385.
                    USER? x1234                                          386.
                    ACCOUNT? 9999                                        387.
                    KEYWORD? x12                                         388.
                    COMMAND ?                                            389.
                                                                         390.
      You can now enter the collect mode by typing the word              391.
 'COLLECT'.  Wylbur will respond by printing a '1.' on the next          392.
 line.  Your terminal printout looks like this:                          393.
                                                                         394.
                    MODEL? 37                                            395.
                    RAND COMPUTATION CENTER   LINExx mm/dd/yy            396.
                    USER? x1234                                          397.
                    ACCOUNT? 9999                                        398.
                    KEYWORD? x12                                         399.
                    COMMAND ? collect                                    400.
                       1.   ?                                            401.
                                                                         402.
                                                                         403.
       You are now in the collect mode and you can begin to type         404.
 your letter.  The '1.' that Wylbur typed means that Wylbur is           405.
 ready to 'collect' line number 1.  Wylbur will not scan the             406.
 information you type, looking for commands.  Wylbur knows you           407.
 are typing a letter or other text.                                      408.
1                                                Page  9                 409.
                                                                         410.
                                                                         411.
 TYPING YOUR LETTER                                                      412.
+______ ____ ______                                                      413.
                                                                         414.
                                                                         415.
       Suppose the letter you want to type looks like this:              416.
                                                                         417.
          Dear Fred,                                                     418.
                                                                         419.
               As I informed you over the phone on                       420.
          Tuesday, the last batch of skyhooks you                        421.
          sent us were defective.  At last count 4                       422.
          astronauts dropped into the Pacific.  Until                    423.
          your quality control department gets on                        424.
          the ball, we'll have to order our skyhooks                     425.
          from Acme Inc.                                                 426.
                                                                         427.
                              Still your friend,                         428.
                                                                         429.
                                                                         430.
                              Josephine Blink                            431.
                                                                         432.
                                                                         433.
      Let's start with the 'Dear Fred,'.  Type in 'Dear Fred,'           434.
 after the number '1.'.  Type it  as you would on an ordinary            435.
 typewriter.  Then press the carriage return key.  Your                  436.
 terminal printout looks like this:                                      437.
                                                                         438.
                                                                         439.
                    MODEL? 37                                            440.
                    RAND COMPUTATION CENTER   LINExx mm/dd/yy            441.
                    USER? x1234                                          442.
                    ACCOUNT? 9999                                        443.
                    KEYWORD? x12                                         444.
                    COMMAND ? collect                                    445.
                       1.   ? Dear Fred,                                 446.
                       2.   ?                                            447.
                                                                         448.
      Wylbur saved the first line you typed, and now Wylbur              449.
 is ready to collect line number 2.   When you pressed carriage          450.
 return, nothing printed, but for the sake of clarity, we'll use         451.
 the expression '(cr)' to indicate a carriage return.  In the            452.
 (cr) notation, the above printout would read:                           453.
                                                                         454.
                    MODEL? 37(cr)                                        455.
                    RAND COMPUTATION CENTER   LINExx mm/dd/yy            456.
                    USER? x1234(cr)                                      457.
                    ACCOUNT? 9999(cr)                                    458.
                    KEYWORD? x12(cr)                                     459.
                    COMMAND ? collect(cr)                                460.
                       1.   ? Dear Fred,(cr)                             461.
                       2.   ?                                            462.
1                                                Page 10                 463.
                                                                         464.
                                                                         465.
                                                                         466.
      You are now ready to type line 2.  Looking at the example,         467.
 you can see that the next line of the letter you intend to type         468.
 is blank.  Easy enough.  Just press carriage return.  That              469.
 gives you one blank line.  Your terminal printout looks like            470.
 this:                                                                   471.
                                                                         472.
                    MODEL? 37(cr)                                        473.
                    RAND COMPUTATION CENTER   LINExx mm/dd/yy            474.
                    USER? x1234(cr)                                      475.
                    ACCOUNT? 9999(cr)                                    476.
                    KEYWORD? x12(cr)                                     477.
                    COMMAND ? collect(cr)                                478.
                       1.   ? Dear Fred,(cr)                             479.
                       2.   ? (cr)                                       480.
                       3.   ?                                            481.
                                                                         482.
      In a similiar fashion, you proceed to type in the entire           483.
 letter.  Assuming you are a poor typist (or maybe a good typist         484.
 but somewhat rattled at being on Wylbur for the first time)             485.
 your final effort might look like this:                                 486.
                                                                         487.
                MODEL? 37(cr)                                            488.
                RAND COMPUTATION CENTER   LINE xx mm/dd/yy               489.
                USER? x1234(cr)                                          490.
                ACCOUNT? 9999(cr)                                        491.
                KEYWORD? x12(cr)                                         492.
                COMMAND ? collect(cr)                                    493.
         1.   ? Dear Fred,(cr)                                           494.
         2.   ? (cr)                                                     495.
         3.   ? As I informedd you on the phone over(cr)                 496.
         4.   ? Tuesday the last batch for Skyhooks you(cr)              497.
         5.   ?  sent us wdere defective.  At last count(cr)             498.
         6.   ? 40 astronauts dropped into the Atlantic.(cr)             499.
         7.   ? Untily your quality control departments(cr)              500.
         8.   ? gets on the ball, we'll have to order our(cr)            501.
         9.   ? gets on the ball, we'll have to order our(cr)            502.
        10.   ? skyhooks from Acme INc.(cr)                              503.
        11.   ?      Still your friend,(cr)                              504.
        12.   ? (cr)                                                     505.
        13.   ?      Josephine Blink(cr)                                 506.
        14.   ?                                                          507.
                                                                         508.
      You've made a lot of mistakes, and you've typed in one             509.
 line twice, but all in all you've managed to create a rough             510.
 draft of your letter.                                                   511.
                                                                         512.
      Everything you've typed is saved in a special area                 513.
 reserved for you (at logon) inside Wylbur.  You'll learn more           514.
 about this special area later.                                          515.
1                                                Page 11                 516.
                                                                         517.
                                                                         518.
 CHANGING FROM COLLECT TO COMMAND MODE AND BACK AGAIN                    519.
+________ ____ _______ __ _______ ____ ___ ____ _____                    520.
                                                                         521.
                                                                         522.
       Notice in the above example that you're still in the              523.
 collect mode.  The way you know you're in the collect mode is           524.
 by the line number '14.  ?'.  That's Wylbur's prompt for the            525.
 next line.  Whenever Wylbur prompts you with a line number              526.
 you're in the collect mode, and Wylbur expects you to type in           527.
 another line.  Wylbur would be happy collecting information             528.
 from you forever.  It's up to you to tell Wylbur that you are           529.
 through typing your letter.  You do that by entering the                530.
 'command mode'.                                                         531.
                                                                         532.
       The way you enter the command mode is to press the key            533.
 marked 'INT'.  This key is called the interrupt or attention            534.
 key, and it occupies a central position in Wylbur's grammar.            535.
 Whenever Wylbur prompts you with a line number, for example             536.
 '10. ?', Wylbur is ready to change modes.  If you press the             537.
 interrupt key in response to Wylbur's prompt, Wylbur will               538.
 change back to the command mode.  In our example, you would             539.
 press the interrupt button after '14.  ?' and Wylbur would              540.
 print out 3 asterisks on that line, and then on the next line           541.
 print 'COMMAND ?' The last part of your printout looks like             542.
 this:                                                                   543.
                                                                         544.
            10.   ? skyhooks from Acme INc.(cr)                          545.
            11.   ?      Still your friend,(cr)                          546.
            12.   ? (cr)                                                 547.
            13.   ?      Josephine Blink(cr)                             548.
            14.   ? ***                                                  549.
          COMMAND ?                                                      550.
                                                                         551.
       When Wylbur prompts with 'COMMAND ?' you are in the               552.
 command mode, and you can give Wylbur whatever command you              553.
 like.  Suppose though, having successfully gotten into the              554.
 command mode, you decide that you want to add a postscript to           555.
 your letter.  This means you have to get back into the collect          556.
 mode and collect more lines of your letter.  Well, you could            557.
 enter the 'collect' command as you did above by typing in               558.
 'COLLECT'.  Your printout would look like this:                         559.
                                                                         560.
            10.   ? skyhooks from Acme INc.(cr)                          561.
            11.   ?      Still your friend,(cr)                          562.
            12.   ? (cr)                                                 563.
            13.   ?      Josephine Blink(cr)                             564.
            14.   ? ***                                                  565.
          COMMAND ? collect                                              566.
            14.   ?                                                      567.
                                                                         568.
      You've probably noticed one thing: when Wylbur goes back           569.
 to the collect mode, Wylbur remembers where you were before and         570.
 then prompts you with the same line number.  That's rather              571.
 handy, to say the least.                                                572.
1                                                Page 12                 573.
                                                                         574.
                                                                         575.
      Another thing: the interrupt button you pressed to switch          576.
 to the command mode, works equally well in both directions.             577.
 That is, you can press the interrupt button to get into the             578.
 collect mode at the point where Wylbur types 'COMMAND ?'.  The          579.
 interrupt button  works exactly the same as if you had typed in         580.
 the command, 'COLLECT'.   Above, for example, where you typed           581.
 'COLLECT', suppose you had pressed the interrupt button.  Your          582.
 terminal printout would have looked like this:                          583.
                                                                         584.
                                                                         585.
            10.   ? skyhooks from Acme INc.(cr)                          586.
            11.   ?      Still your friend,(cr)                          587.
            12.   ? (cr)                                                 588.
            13.   ?      Josephine Blink(cr)                             589.
            14.   ? ***                                                  590.
          COMMAND ? ***                                                  591.
            14.   ?                                                      592.
                                                                         593.
      In either case, you are in the collect mode now and you            594.
 can type in your postscript.   For example, (and we'll leave            595.
 off the (cr) notation now that you're getting to be a pro):             596.
                                                                         597.
            10.   ? skyhooks from Acme INc.                              598.
            11.   ?      Still your friend,                              599.
            12.   ?                                                      600.
            13.   ?      Josephine Blink                                 601.
            14.   ? ***                                                  602.
          COMMAND ? ***                                                  603.
            14.   ?                                                      604.
            15.   ? P.S.  HOw could you do this to me!                   605.
            16.   ?                                                      606.
                                                                         607.
       Having typed in your postscript, you can press the                608.
 interrupt key and switch from the collect mode to the command           609.
 mode.  You want to do this because you've finished your letter,         610.
 and you want to use Wylbur commands to correct some of the              611.
 mistakes you made.                                                      612.
                                                                         613.
       Before we discuss the command mode and some of the more           614.
 common Wylbur commands, it would be best to let you know about          615.
 another use of the interrrupt key.  Besides using the                   616.
 interrupt key to switch modes, you can use it as a kind of an           617.
 eraser.  Suppose you had typed in part of a line and then               618.
 noticed you typed in the wrong words.  Since you are midway             619.
 through the line, you may press the interrupt key (but not the          620.
 carriage return key also) and Wylbur will discard everything in         621.
 that line and let you start that line over again.  This works           622.
 in both the collect and command mode.  For example, suppose             623.
 when you were typing the postcript above, your fingers got on           624.
1                                                Page 13                 625.
                                                                         626.
                                                                         627.
 the wrong keys and you typed in garbage.  Toward the end of the         628.
 line you glanced up, saw your mistake, and pressed the                  629.
 interrupt key to erase what you had typed.  Wylbur prompted you         630.
 with the line number again, and you typed in the line                   631.
 correctly.  Your terminal printout looks like this:                     632.
                                                                         633.
                                                                         634.
            10.   ? skyhooks from Acme INc.                              635.
            11.   ?      Still your friend,                              636.
            12.   ?                                                      637.
            13.   ?      Josephine Blink                                 638.
            14.   ? ***                                                  639.
          COMMAND ? ***                                                  640.
            14.   ?                                                      641.
            15.   ? O.S. Giw ciykd tiy di tgus ti***                     642.
            15.   ? P.S.  HOw could you do this to me!                   643.
            16.   ? ***                                                  644.
          COMMAND ?                                                      645.
                                                                         646.
      One last thing: if you log on to Wylbur and then walk away         647.
 from your terminal, Wylbur will wait a while, and then ask you          648.
 'ARE YOU STILL THERE?'.  Eventually Wylbur will log you off.            649.
 Your output will be saved and restored ('RECOVERY COMPLETED')           650.
 when you log on next.  It's best to avoid this situation by             651.
 'logging off' when you expect to be away from the terminal for          652.
 a long time.  You'll learn about 'logging off' later in this            653.
 session.                                                                654.
                                                                         655.
                                                                         656.
                                                                         657.
                                                                         658.
 A REVIEW OF WHAT YOU'VE DONE SO FAR                                     659.
+_ ______ __ ____ ______ ____ __ ___                                     660.
                                                                         661.
                                                                         662.
      In the beginning, you logged on using your employe number,         663.
 account number, and keyword.  After you logged on, Wylbur               664.
 placed you in the command mode, prompting you with 'COMMAND ?'.         665.
 You wanted to type in a new letter, so you entered the collect          666.
 mode by typing in the word, 'COLLECT'.   Wylbur responded by            667.
 prompting you with the first line number, '1.   ?'.   You then          668.
 typed in your letter, ending each line with a carriage return.          669.
 When you were finished, you switched back to the command mode           670.
 by pressing the interrupt key.  Besides using the interrupt key         671.
 to switch modes you also used it to erase a line you typed              672.
 poorly so you could type the line in again.   Finally you               673.
 pressed the interrupt key again and ended up in the command             674.
 mode.                                                                   675.
                                                                         676.
      The most important thing to remember so far is the                 677.
 difference between the command and the collect mode and the use         678.
 of the interrupt key.  If you press the interrupt key                   679.
1                                                Page 14                 680.
                                                                         681.
                                                                         682.
 immediately after a prompt (immediately after a line number             683.
 such as '15.  ?' or immediately after 'COMMAND ?') you are              684.
 asking Wylbur to switch modes.  If you type in something                685.
 and then press the interrupt key, you are asking Wylbur                 686.
 to erase what you typed on that line and let you try again.             687.
                                                                         688.
      Now that you've learned the basics of the collect mode,            689.
 let's find out about the command mode.                                  690.
                                                                         691.
                                                                         692.
 LISTING YOUR LETTER                                                     693.
+_______ ____ ______                                                     694.
                                                                         695.
                                                                         696.
       Having typed in your letter, you probably want to see what        697.
 it looks like under Wylbur.  You can do this with the LIST              698.
 command.  Whenever Wylbur prompts with the word 'COMMAND ?',            699.
 you can reply 'LIST' and Wylbur will list everything it's saved         700.
 for you.  Continuing our example, if you typed 'LIST' and then          701.
 a carriage return, Wylbur would respond by printing out your            702.
 letter.  Your command and Wylbur's response looks like this:            703.
                                                                         704.
          COMMAND ? list                                                 705.
             1.     DEAR FRED,                                           706.
             2.                                                          707.
             3.     AS I INFORMEDD YOU ON THE PHONE OVER                 708.
             4.     TUESDAY THE LAST BATCH FOR SKYHOOKS YOU              709.
             5.      SENT US WDERE DEFECTIVE,  AT LAST COUNT             710.
             6.     40 ASTRONAUTS DROPPED INTO THE ATLANTIC.             711.
             7.     UNTILY YOUR QUALITY CONTROL DEPARTMENTS              712.
             8.     GETS ON THE BALL, WE'LL HAVE TO ORDER OUR            713.
             9.     GETS ON THE BALL, WE'LL HAVE TO ORDER OUR            714.
            10.     SKYHOOKS FROM ACME INC.                              715.
            11.          STILL YOUR FRIEND,                              716.
            12.                                                          717.
            13.          JOSEPHINE BLINK                                 718.
            14.                                                          719.
            15.     P.S.  HOW COULD YOU DO THIS TO ME!                   720.
          COMMAND ?                                                      721.
                                                                         722.
                                                                         723.
      The first thing that strikes your eye is the upper case            724.
 characters.  You typed the letter in both upper case and lower          725.
 case characters.  So what happened?                                     726.
                                                                         727.
       What happened is that you ran afoul of one of Wylbur's            728.
 default options.  When you logged on to Wylbur, you                     729.
 automatically got a number of default options.  These options           730.
 are a set of values that Wylbur always assigns to you.  The             731.
 option you crashed into here is the one concerned with upper            732.
 and lower case characters.  Wylbur's default option for upper           733.
1                                                Page 15                 734.
                                                                         735.
                                                                         736.
 and lower case characters is to convert them all to upper case.         737.
 The reason Wylbur does this is that most of the work done on            738.
 the computer is done in upper case.  Job control cards and              739.
 computer program cards are usually in upper case.  And since            740.
 Wylbur was designed by computer programmers, the default option         741.
 is upper case.  A clear example of programmer chauvinism.               742.
                                                                         743.
      The solution to your problem is simple: when you log on to         744.
 Wylbur, and Wylbur types in 'COMMAND ?', you must tell Wylbur           745.
 you want to use both upper and lower case characters.  You do           746.
 this with the 'SET UPLOW' command.   Going back to the                  747.
 beginning when you logged on, your printout would have looked           748.
 like this:                                                              749.
                                                                         750.
                    MODEL? 37                                            751.
                    RAND COMPUTATION CENTER   LINE xx mm/dd/yy           752.
                    USER? x1234                                          753.
                    ACCOUNT? 9999                                        754.
                    KEYWORD? x12                                         755.
                    COMMAND ? set uplow                                  756.
                    COMMAND ? collect                                    757.
                       1.   ? Dear Fred,                                 758.
                       2.   ?                                            759.
                                                                         760.
      You may wonder now why we didn't just tell you to SET              761.
 UPLOW when you logged on.  You would have typed your letter             762.
 correctly, and we wouldn't have had to go through this                  763.
 explanation.  The point is, if you forget to SET UPLOW,                 764.
 the consequences are serious: you may be in for a great deal of         765.
 extra work.                                                             766.
                                                                         767.
      In our example then, you will want to type your letter             768.
 again.  First you must get rid of what you have already typed.          769.
 You do this with the CLEAR TEXT command.  The CLEAR TEXT                770.
 command wipes out everything you've typed.  After you issue the         771.
 CLEAR TEXT command, you issue the COLLECT command and then type         772.
 your letter.  The terminal printout looks like this:                    773.
                                                                         774.
          COMMAND ? clear text                                           775.
          COMMAND ? set uplow                                            776.
          COMMAND ? collect                                              777.
             1.   ?                                                      778.
                                                                         779.
       You proceed now to type the letter exactly as you did             780.
 before.  This time when you execute the LIST command, your              781.
 printout looks like this:                                               782.
1                                                Page 16                 783.
                                                                         784.
                                                                         785.
          COMMAND ? list                                                 786.
             1.     Dear Fred,                                           787.
             2.                                                          788.
             3.     As I informedd you on the phone over                 789.
             4.     Tuesday the last batch for Skyhooks you              790.
             5.      sent us wdere defective.  At last count             791.
             6.     40 astronauts dropped into the Atlantic.             792.
             7.     Untily your quality control departments              793.
             8.     gets on the ball, we'll have to order our            794.
             9.     gets on the ball, we'll have to order our            795.
            10.     skyhooks from Acme INc.                              796.
            11.          Still your friend,                              797.
            12.                                                          798.
            13.          Josephine Blink                                 799.
            14.                                                          800.
            15.     P.S.  HOw could you do this to me!                   801.
          COMMAND ?                                                      802.
                                                                         803.
                                                                         804.
       Wylbur has now saved your letter in both upper and lower          805.
 case.  And when you asked Wylbur to list it, Wylbur listed it           806.
 exactly as you typed it.                                                807.
                                                                         808.
      The LIST command has other variations.  One of these               809.
 variations allows you to list a single line or several lines.           810.
 The way you request which lines are to be listed is by                  811.
 specifying line numbers.  For example, if you wanted to list            812.
 line 3 of your letter and then list lines 10-13, you would              813.
 enter 'LIST 3' and 'LIST 10/13'.  Your printout looks like              814.
 this:                                                                   815.
                                                                         816.
                                                                         817.
          COMMAND ? list 3                                               818.
             3.     As I informedd you on the phone over                 819.
          COMMAND ? list 10/13                                           820.
            10.     skyhooks from Acme INc.                              821.
            11.          Still your friend,                              822.
            12.                                                          823.
            13.          Josephine Blink                                 824.
          COMMAND ?                                                      825.
                                                                         826.
                                                                         827.
       Notice the '/' between the line numbers 10 and 13 in the          828.
 LIST command.  The slash tells Wylbur you want to list lines 10         829.
 to 13 inclusive.  If you leave out the slash, Wylbur will list          830.
 lines 10 and 13 only.  There's another rule: there must be              831.
 at least 1 blank between the word, LIST, and the line numbers.          832.
                                                                         833.
        To aid you in specifying line numbers Wylbur has some            834.
 special vocabulary.  You can refer to the first line of your            835.
 letter by the word 'FIRST', and the last line  by the word              836.
 'LAST'.  You can list your entire letter by entering any of             837.
 these 3 commands:                                                       838.
1                                                Page 17                 839.
                                                                         840.
                                                                         841.
              COMMAND ?  list                                            842.
              COMMAND ?  list 1/15                                       843.
              COMMAND ?  list first/last                                 844.
                                                                         845.
      In the first form of the command you didn't specify a              846.
 range, so Wylbur gave you the default,  which is also                   847.
 FIRST/LAST. In the second and third forms, you specified a              848.
 range that covered all line numbers, so you also got the                849.
 complete letter listed.                                                 850.
                                                                         851.
      You can intermix 'FIRST' and 'LAST' with numbers.                  852.
 For example:                                                            853.
                                                                         854.
          COMMAND ?  list first/5                                        855.
          COMMAND ?  list 6/last                                         856.
                                                                         857.
      There is another variation of the LIST command that you            858.
 should be aware of.  The LIST command will list 24 lines of             859.
 your letter or memorandum and then pause.  If you want to               860.
 continue listing the rest of your letter, you must press                861.
 carriage return.  Wylbur will then  list another 24 lines of            862.
 your letter.  In our example, your letter is less than 24               863.
 lines, so you didn't see any pauses.                                    864.
                                                                         865.
      When Wylbur pauses after listing 24 lines, you can                 866.
 continue the listing or enter any command you like.  At the             867.
 point where Wylbur pauses, Wylbur is in the command mode and            868.
 will accept either a carriage return (which tells Wylbur to             869.
 continue) or a new command.  This is the only time you can              870.
 enter a command without first having Wylbur prompt you with             871.
 'COMMAND ?'.                                                            872.
                                                                         873.
      If you have a long letter and you don't want Wylbur to             874.
 pause in the middle of printing it, you can use the PAGE                875.
 parameter of the LIST command.  For example:                            876.
                                                                         877.
          COMMAND ?  list page 0                                         878.
                                                                         879.
      That '0' is a zero.  It tells Wylbur not to pause when             880.
 listing.  You can give Wylbur other values too.  For example,           881.
 LIST PAGE 5 tells Wylbur to pause after listing every 5 lines.          882.
 If you use the LIST command without specifying PAGE, you get            883.
 the default of 24 lines, which is the same as entering, LIST            884.
 PAGE 24.   If you specify line numbers as well as the PAGE              885.
 option, specify the line numbers first:                                 886.
                                                                         887.
          COMMAND ?  list first/70 page 0                                888.
                                                                         889.
      For practice you might type a letter that is longer than           890.
 24 lines and then list it using various values for the PAGE             891.
 parameter.                                                              892.
1                                                Page 18                 893.
                                                                         894.
                                                                         895.
 SETTING THE LINE LENGTH                                                 896.
+_______ ___ ____ ______                                                 897.
                                                                         898.
                                                                         899.
                                                                         900.
      In our example, the lines in your letter are all about 40          901.
 characters long.  For a letter, lines of 40 or 50 characters            902.
 might be appropriate.  For other material though, lines as long         903.
 as 100 or 120 characters would be appropriate.  (Wylbur will            904.
 let you type in lines as long as 133 characters.)  If you do            905.
 type in a long line however, Wylbur will print out a warning            906.
 note to you.  For example, suppose you typed the first two              907.
 lines of your letter as one line.  Although we can't reproduce          908.
 it on this page, your printout (and Wylbur's note) would appear         909.
 somthing like this:                                                     910.
                                                                         911.
    2.   ?                                                               912.
    3.   As I informedd you on the phone over Tuesday the last ...       913.
 LINE NUMBER  3. CONTAINS 76 CHARACTERS                                  914.
    4.   ?                                                               915.
                                                                         916.
      Sometimes you want to be warned when you type in a long            917.
 line, but usually you don't want those messages to appear.  You         918.
 can avoid getting the messages by using the 'SET LENGTH'                919.
 command.  The SET LENGTH command tells Wylbur the size of the           920.
 longest line you expect to type.  In your letter, for example,          921.
 you didn't expect to type a line longer than 45 characters.             922.
 You could have used the SET LENGTH command if you wanted.  For          923.
 example:                                                                924.
                                                                         925.
                    MODEL? 37                                            926.
                    RAND COMPUTATION CENTER   LINE xx mm/dd/yy           927.
                    USER? x1234                                          928.
                    ACCOUNT? 9999                                        929.
                    KEYWORD? x12                                         930.
                    COMMAND ? set uplow                                  931.
                    COMMAND ? set length 45                              932.
                    COMMAND ? collect                                    933.
                       1.   ?                                            934.
                                                                         935.
      Since you were careful in typing your letter, you didn't           936.
 type a line longer than 45 characters and you didn't get any            937.
 messages of the form,  'LINE  nn  CONTAINS  xx  CHARACTERS'.            938.
 But if you had gotten distracted and typed in long line, Wylbur         939.
 would have reminded you, and you could have corrected it at             940.
 that time.                                                              941.
                                                                         942.
      The default line length that you get when you log on is 72         943.
 characters.  If you intend to type lines longer than 72                 944.
 characters, you should use the SET LENGTH command.                      945.
1                                                Page 19                 946.
                                                                         947.
                                                                         948.
 A REVIEW OF THE COMMANDS YOU HAVE USED                                  949.
+_ ______ __ ___ ________ ___ ____ ____                                  950.
                                                                         951.
                                                                         952.
      So far you have used four Wylbur commands.  The most               953.
 important command was the COLLECT command.  The COLLECT command         954.
 allowed you to enter the collect mode after you logged on.              955.
                                                                         956.
      Another command you used was the LIST command.  You used           957.
 the LIST command to list all of your letter, and then used it           958.
 to list just a few lines of your letter.                                959.
                                                                         960.
      The other two commands you used were SET commands.  You            961.
 used SET UPLOW to tell Wylbur you wanted to type upper and              962.
 lower case characters.  And you used the SET LENGTH command to          963.
 tell Wylbur the length of the longest line you expected to              964.
 type.                                                                   965.
                                                                         966.
      At this point we recommend you get in the habit of using           967.
 the SET UPLOW and SET LENGTH commands every time you log on             968.
 (assuming you want upper and lower case information).  When you         969.
 log on, you can follow this pattern:                                    970.
                                                                         971.
              MODEL? 37                                                  972.
              RAND COMPUTATION CENTER   LINE xx mm/dd/yy...              973.
              USER? x1234                                                974.
              ACCOUNT? 9999                                              975.
              KEYWORD? x12                                               976.
              COMMAND ? set uplow                                        977.
              COMMAND ? set length 80                                    978.
                                                                         979.
                                                                         980.
                                                                         981.
 SAVING THE LETTER YOU HAVE TYPED                                        982.
+______ ___ ______ ___ ____ _____                                        983.
                                                                         984.
                                                                         985.
      When you logged on to Wylbur, Wylbur reserved a space for          986.
 you inside the computer.  As you typed your letter, Wylbur              987.
 placed the typed lines in that reserved space.  That space is           988.
 yours as long as you are logged on to Wylbur, but once you              989.
 'log off' (that is, once you end the Wylbur session) you lose your      990.
 special space.  So if you want to save the letter you typed,            991.
 you'll have to tell Wylbur to save it.  You tell Wylbur to save         992.
 your letter by using, appropriately enough, the SAVE command.           993.
                                                                         994.
      When you issue the SAVE command, you must tell Wylbur the          995.
 name of what you are saving.  In your case, you might name your         996.
 letter, 'LETTER'.  Or you might name it anything else.  There           997.
 is a problem though: what if some one else has a letter named           998.
 'LETTER'.  How does Wylbur keep the names straight?                     999.
1                                                Page 20                1000.
                                                                        1001.
                                                                        1002.
      Wylbur keeps the names straight by giving you a special           1003.
 codeword made out of your employe number and account number.           1004.
 For example, if your employe number is z1234 and your account          1005.
 is 9999, then Wylbur creates a codeword for you that is                1006.
 'Z.Z1234.A9999.'.  This code word will be added to whatever            1007.
 name you give your letter, and the result will be a unique name        1008.
 you can use for yourself.  (You don't have to worry about              1009.
 the code word.  Wylbur handles that automatically.)                    1010.
                                                                        1011.
        You may want to call your letter  'LETTER' or 'LETTER1'.        1012.
 You are free to use any name you like as long as the name              1013.
 begins with an alphabetic character and is 8 characters or             1014.
 less long, made up of alphabetic characters and numbers only.          1015.
 (You can make names longer than 8 characters if you                    1016.
 follow some special rules; see the section on Data Set Naming          1017.
 Conventions in the Wylbur Reference Manual.)  It's a good idea         1018.
 to name the things you save with a name that reminds you of            1019.
 what it is you saved.  For example, you just typed up a letter         1020.
 to 'Fred', so you might want to name that letter FLETTER or            1021.
 FREDLTR.  In two weeks when you've forgotten what you called           1022.
 this letter, you can have Wylbur list the names of everything          1023.
 you've saved, and when you see 'FLETTER' you'll remember it's          1024.
 the letter you typed to Fred.                                          1025.
                                                                        1026.
      Besides supplying a name for your letter, you must also           1027.
 tell Wylbur where you want to save it.   Wylbur saves                  1028.
 information on mechanical devices resembling multi-platter             1029.
 record players.  These devices are called disk packs.  Each            1030.
 disk pack has an individual name.  The names of some of the            1031.
 more commonly used packs at Rand are USECTL, USER01, USER02,           1032.
 etc.  Usually some one will supply you with the name of a disk         1033.
 pack to use.  If you haven't been supplied with a disk pack            1034.
 name, you can call User Services at Ext. 7764, and some one            1035.
 will tell you which pack has the most room on it.  (When you           1036.
 get more knowledgeable, you can find out for yourself by               1037.
 reading $PUBLIC.SPACE.  Read about $PUBLIC.SPACE in the                1038.
 Wylbur Reference Manual.)  Although you can use any of                 1039.
 several different disk packs, it's a good idea to keep                 1040.
 everything you save on the same pack.  That way you'll have no         1041.
 trouble remembering where your information is.                         1042.
                                                                        1043.
      Getting back to our example, let's suppose you are told to        1044.
 save your letter on the disk pack USER50.  You would then enter        1045.
 'SAVE FLETTER ON USER50'.  Wylbur would save your letter and           1046.
 print out a message that it had been saved.  Your terminal             1047.
 printout looks like this:                                              1048.
                                                                        1049.
                    COMMAND ? save fletter on user50                    1050.
                    "FLETTER" SAVED ON USER50                           1051.
                    COMMAND ?                                           1052.
                                                                        1053.
      In this example Wylbur verified your letter was saved on          1054.
 USER50.  Wylbur might have printed an error message at this            1055.
 point.  If Wylbur does print an error message, you should find         1056.
 some one who is knowledgeable and ask them what to do.   Do not        1057.
 reply blindly to a message whose meaning is unclear.  It's             1058.
 possible to destroy something you typed in previously.                 1059.
1                                                Page 21                1060.
                                                                        1061.
                                                                        1062.
      When Wylbur saves your letter on a disk pack, Wylbur              1063.
 merely writes a copy of it onto that disk pack.  The original          1064.
 copy of the letter still exists in your reserved space inside          1065.
 the computer, and it is this copy that you will see when you           1066.
 issue the LIST command.  Remember, if you do additional work on        1067.
 the letter in your reserved space, you will want to save it            1068.
 again when you are done.                                               1069.
                                                                        1070.
      You'll learn  more about the SAVE command in Learning             1071.
 Session #2.   In particular, you'll learn about the REPLACE            1072.
 option of the SAVE command (i.e., SAVE FLETTER REPLACE), which         1073.
 is the form of the save command you'll use after the first             1074.
 time.  For now, use the SAVE command as shown above.                   1075.
                                                                        1076.
                                                                        1077.
 LOGGING OFF WYLBUR                                                     1078.
+_______ ___ ______                                                     1079.
                                                                        1080.
                                                                        1081.
       When you type in a short letter as you did today, you            1082.
 would normally correct your mistakes at the same time and              1083.
 produce a final error-free copy for your own use.   Since              1084.
 you're working on Wylbur for the first time, you're probably           1085.
 tired and want to quit for a while.  Easy enough.                      1086.
                                                                        1087.
       The first thing you do when you want to terminate a              1088.
 Wylbur session is issue the SAVE command so whatever you typed         1089.
 will be saved permanently.  After that, you issue the LOGOFF           1090.
 command to tell Wylbur you're done.   The process of ending a          1091.
 session is called logging off.                                         1092.
                                                                        1093.
       When you log off, you have one last option open to you.          1094.
 The place in the computer that Wylbur has reserved for you             1095.
 still contains what you've typed.  When you log off, Wylbur            1096.
 reminds you that you still have something in that space.  It's         1097.
 up to you to clear it out or at least let Wylbur know you want         1098.
 to discard it.  Since you've already saved a copy of it it on          1099.
 USER50, you can discard it now.  So when Wylbur asks you               1100.
 'CLEAR OK?', you reply 'YES'.  Wylbur will then print out              1101.
 accounting information and log you off.  The printout at your          1102.
 terminal looks like this:                                              1103.
                                                                        1104.
                    COMMAND ? logoff                                    1105.
                    CLEAR OK? yes                                       1106.
                    EDITING TIME = 0.09 SECONDS.  I/O COUNT = 5         1107.
                    ELAPSED TIME = 00.05.11                             1108.
                    END OF SESSION                                      1109.
                                                                        1110.
                    MODEL?                                              1111.
1                                                Page 22                1112.
                                                                        1113.
                                                                        1114.
      You have now successfully completed a Wylbur session.  The        1115.
 letter you typed has been saved for posterity on USER50.  An           1116.
 hour from now, a day from now, or a month from now,  your              1117.
 letter will still be there.  (You do get charged for the space         1118.
 you use on a disk pack, so don't save things you don't need.)          1119.
 You're ready now for a coffee break and then Beginner's                1120.
 Session #2.                                                            1121.
                                                                        1122.
                                                                        1123.
                                                                        1124.
 BEGINNER'S SESSION #2                                                  1125.
+__________ _______ __                                                  1126.
                                                                        1127.
                                                                        1128.
       In session #2 you will retrieve the letter you typed in          1129.
 session #1, correct your spelling mistakes, add new sentences,         1130.
 and polish up a final copy.  You'll learn more of Wylbur's             1131.
 vocabulary as well as how to list your letter on a high speed          1132.
 printer in the computer room.  When you finish session #2,             1133.
 you'll know how to use Wylbur effectively and confidently.             1134.
                                                                        1135.
                                                                        1136.
 LOGGING ON FOR SESSION #2                                              1137.
+_______ __ ___ _______ __                                              1138.
                                                                        1139.
                                                                        1140.
      You log on to session #2 exactly as you did for session           1141.
 #1.  Your printout at the terminal looks like this:                    1142.
                                                                        1143.
                    MODEL? 37                                           1144.
                    RAND COMPUTATION CENTER   LINE xx mm/dd/yy          1145.
                    USER? x1234                                         1146.
                    ACCOUNT? 9999                                       1147.
                    KEYWORD? x12                                        1148.
                    COMMAND ? set uplow                                 1149.
                    COMMAND ? set length 45                             1150.
                    COMMAND ?                                           1151.
                                                                        1152.
                                                                        1153.
 RETRIEVING THE LETTER YOU SAVED IN THE EARLIER SESSION                 1154.
+__________ ___ ______ ___ _____ __ ___ _______ _______                 1155.
                                                                        1156.
                                                                        1157.
      Before we discuss how to retrieve your letter, we want to         1158.
 present more of Wylbur's vocabulary.  One term that you'll             1159.
 frequently see is 'data set'.  A data set is a collection of           1160.
 information.  Your letter, for example, is a data set.  You            1161.
 saved it with the name, FLETTER.  If you had typed in a long           1162.
 memorandum, it would have been a data set also.   The term             1163.
 'data set' is a descriptive term for collection of data that           1164.
 are grouped together.                                                  1165.
1                                                Page 23                1166.
                                                                        1167.
                                                                        1168.
      The data sets you'll usually hear about are the data sets         1169.
 stored on disk packs.  There is one special data set though,           1170.
 that Wylbur creates for you.  That data set is stored in               1171.
 the area of the computer reserved for you when you log                 1172.
 on.  That data set is called your 'working data set'.  In              1173.
 session #1 when you typed in your letter, you typed it into            1174.
 your working data set.  And when you logged off and Wylbur             1175.
 responded  'CLEAR OK?', Wylbur was asking you if you were ready        1176.
 to discard your working data set.                                      1177.
                                                                        1178.
       The area of the computer that is reserved for you, your          1179.
 working data set, is of vital importance.  Everything Wylbur           1180.
 does, it does with the working data set.  Wylbur cannot list or        1181.
 modify a data set you have saved on a disk pack.  Wylbur can           1182.
 list or modify only that information which is in your working          1183.
 data set.                                                              1184.
                                                                        1185.
      Consequently you must now retrieve your data set (your            1186.
 letter) from the disk pack and put it into your working data           1187.
 set.  You do this with the USE command.   When you enter the           1188.
 USE command, Wylbur goes out to the disk pack and reads that           1189.
 data set into your working data set in the computer.  For              1190.
 example, to retrieve the letter you typed in session #1, you           1191.
 type 'USE FLETTER'.   Wylbur will then read FLETTER into your          1192.
 working data set.  When Wylbur is done, Wylbur will print              1193.
 'COMMAND ?' again.  Your terminal printout reads:                      1194.
                                                                        1195.
                    MODEL? 37                                           1196.
                    RAND COMPUTATION CENTER   LINE xx mm/dd/yy          1197.
                    USER? x1234                                         1198.
                    ACCOUNT? 9999                                       1199.
                    KEYWORD? x12                                        1200.
                    COMMAND ? set uplow                                 1201.
                    COMMAND ? set length 80                             1202.
                    COMMAND ? use fletter                               1203.
                    COMMAND ?                                           1204.
                                                                        1205.
      Sometimes when you ask for your data set, Wylbur is busy          1206.
 handling other users, so Wylbur will issue a 'QUEUED' message.         1207.
 For example:                                                           1208.
                                                                        1209.
                    COMMAND ? use fletter                               1210.
                    QUEUED                                              1211.
                    QUEUED                                              1212.
                    COMMAND ?                                           1213.
                                                                        1214.
      The QUEUED message is not important to you; it's merely           1215.
 Wylbur's way of telling you it's still working on your                 1216.
 request.                                                               1217.
                                                                        1218.
      When Wylbur reads your letter from the disk pack and puts         1219.
 a copy of it into your working data set, Wylbur does not               1220.
 destroy the copy of your letter that is on the disk pack.              1221.
 Wylbur merely copies it into your working data set.  The data          1222.
 set on USER50 called FLETTER remains as it was when you issued         1223.
 the SAVE command at the end of lesson #1.                              1224.
1                                                Page 24                1225.
                                                                        1226.
                                                                        1227.
 LISTING YOUR DATA SET                                                  1228.
+_______ ____ ____ ___                                                  1229.
                                                                        1230.
                                                                        1231.
       Having brought your letter into your working data set,           1232.
 you can now proceed to correct the mistakes in it.  Normally           1233.
 the first thing you do after reading in a data set is to list          1234.
 part of it to make sure you have retrieved the right                   1235.
 information.  In your case, since your letter is short, you            1236.
 can list all of it.  Your terminal printout will read:                 1237.
                                                                        1238.
         MODEL? 37                                                      1239.
         RAND COMPUTATION CENTER   LINE xx mm/dd/yy                     1240.
         USER? x1234                                                    1241.
         ACCOUNT? 9999                                                  1242.
         KEYWORD? x12                                                   1243.
         COMMAND ? set uplow                                            1244.
         COMMAND ? set length 80                                        1245.
         COMMAND ? use fletter                                          1246.
         COMMAND ? list                                                 1247.
            1.     Dear Fred,                                           1248.
            2.                                                          1249.
            3.     As I informedd you on the phone over                 1250.
            4.     Tuesday the last batch for Skyhooks you              1251.
            5.      sent us wdere defective.  At last count             1252.
            6.     40 astronauts dropped into the Atlantic.             1253.
            7.     Untily your quality control departments              1254.
            8.     gets on the ball, we'll have to order our            1255.
            9.     gets on the ball, we'll have to order our            1256.
           10.     skyhooks from Acme INc.                              1257.
           11.          Still your friend,                              1258.
           12.                                                          1259.
           13.          Josephine Blink                                 1260.
           14.                                                          1261.
           15.     P.S.  HOw could you do this to me!                   1262.
         COMMAND ?                                                      1263.
                                                                        1264.
      Having assured yourself that your letter is in your               1265.
 working data set, you are free to use Wylbur editing commands          1266.
 to create a final product.                                             1267.
                                                                        1268.
                                                                        1269.
 DELETE COMMAND                                                         1270.
+______ _______                                                         1271.
                                                                        1272.
                                                                        1273.
      The function of the DELETE command is to delete 1 or more         1274.
 lines of Wylbur data.  In your letter, for example, you                1275.
 inadvertently typed in one line twice.  You now want to                1276.
 delete either line 8 or line 9 because you don't need both of          1277.
 them.  You can delete line 9 by entering 'DELETE 9'.  Your             1278.
 terminal printout looks like this:                                     1279.
                                                                        1280.
         COMMAND ? DELETE 9                                             1281.
         COMMAND ?                                                      1282.
1                                                Page 25                1283.
                                                                        1284.
                                                                        1285.
      If you listed your working data set, you would see the            1286.
 following printout:                                                    1287.
                                                                        1288.
         COMMAND ? delete 9                                             1289.
         COMMAND ? list 8/10                                            1290.
            8.     gets on the ball, we'll have to order our            1291.
           10.     skyhooks from Acme INc.                              1292.
         COMMAND ?                                                      1293.
                                                                        1294.
      You can also use the DELETE command to delete several             1295.
 lines at the same time.  You could enter 'DELETE 3 9 13' and           1296.
 delete those three lines, or you could enter  'DELETE 3/13' and        1297.
 delete all the lines from 3 to 13.  You could also enter               1298.
 'DELETE FIRST/LAST' and delete everything in your working data         1299.
 set.  Normally you would do this only by accident, and you             1300.
 would be very unhappy.                                                 1301.
                                                                        1302.
      A rather tragic error that happens to all of us every so          1303.
 often is that we mistype the DELETE command.  For example,             1304.
 instead of entering 'DELETE 3/10', we enter 'DELETE 3/100'.            1305.
 Wylbur obediently and instantaneously deletes every line from 3        1306.
 to 100.  If we had spent an hour typing in lines 11 to 100, and        1307.
 if we hadn't yet issued the SAVE command to save that information      1308.
 on a disk pack, we would sit down and cry.  We would have to           1309.
 type all that information again.  The lesson is clear: be              1310.
 careful when you use the DELETE command.                               1311.
                                                                        1312.
      You will discover that besides the DELETE command, there          1313.
 are innumerable ways of instantly negating hours or even days          1314.
 of work.  You will also discover (in fact you will read about          1315.
 it later in this lesson) that there are ways of safeguarding           1316.
 yourself against these kinds of disasters.  When you come to           1317.
 that part of this lesson, read it carefully.  Until then, use          1318.
 the DELETE command with caution.                                       1319.
                                                                        1320.
                                                                        1321.
 REPLACE COMMAND                                                        1322.
+_______ _______                                                        1323.
                                                                        1324.
                                                                        1325.
         The function of the REPLACE command is to replace              1326.
 Wylbur lines in their entirety.  In your letter, for example,          1327.
 line 5 contains several mistakes.  Rather than correcting each         1328.
 mistake individually (using a command which you'll learn about         1329.
 soon), it may be easier for you to use the REPLACE command and         1330.
 retype the entire line.  To replace line 5, you would enter            1331.
 'REPLACE 5'.  Wylbur would then prompt you with '5.  ?'.   You         1332.
 then type in the new line as you want it.  Your terminal               1333.
 printout reads:                                                        1334.
                                                                        1335.
         COMMAND ? replace 5                                            1336.
            5.   ? sent us were defective.  At last count               1337.
         COMMAND ?                                                      1338.
                                                                        1339.
      If you listed line 5 you would see that it had been               1340.
 replaced with the line you just entered.                               1341.
1                                                Page 26                1342.
                                                                        1343.
                                                                        1344.
      There are other options of the REPLACE command.  To learn         1345.
 about them see the Wylbur Reference Manual.                            1346.
                                                                        1347.
                                                                        1348.
 INSERT COMMAND                                                         1349.
+______ _______                                                         1350.
                                                                        1351.
                                                                        1352.
       The INSERT command inserts new lines between old ones.           1353.
 In your letter, for example, you may want to add a sentence or         1354.
 two in the middle.  As a learning exercise, let's add a line           1355.
 between lines 6 and 7.  The most logical line number between 6         1356.
 and 7 is 6 1/2, but Wylbur doesn't work with fractions.  Wylbur        1357.
 will accept though, a decimal equivalent, like 6.5 or even 6.1         1358.
 or 6.2.   Wylbur will accept, in fact, 999 lines between 6 and         1359.
 7 as long as those lines are in decimal format, i.e.  6.001 to         1360.
 6.999.  To insert just one or two line numbers, you'll probably        1361.
 find it easier to use line numbers like 6.1, 6.2, 6.3, etc.  To        1362.
 insert line 6.1 into your letter, you would merely enter,              1363.
 'INSERT 6.1' Wylbur would prompt you with ' 6.1  ?  '.  After          1364.
 you entered the new line of information, Wylbur would return to        1365.
 the command mode and prompt you with 'COMMAND ?'.  Your                1366.
 terminal printout looks like this:                                     1367.
                                                                        1368.
         COMMAND ? INSERT 6.1                                           1369.
            6.1  ? (And one came down in New York City!)                1370.
         COMMAND ?                                                      1371.
                                                                        1372.
                                                                        1373.
       If you listed lines 5 through 7 after you enter                  1374.
 INSERT 6.1, your terminal printout would look like this:               1375.
                                                                        1376.
         COMMAND ? insert 6.1                                           1377.
            6.1  ?  (And one came down in New York City!)               1378.
         COMMAND ? list 5/7                                             1379.
            6.     40 astronauts dropped into the Atlantic.             1380.
            6.1  ? (And one came down in New York City!)                1381.
            7.     Untily your quality control departments              1382.
         COMMAND ?                                                      1383.
                                                                        1384.
                                                                        1385.
      There is another option of the INSERT command, which you          1386.
 may read about in the Wylbur Reference Manual.                         1387.
                                                                        1388.
                                                                        1389.
 CHANGE COMMAND                                                         1390.
+______ _______                                                         1391.
                                                                        1392.
                                                                        1393.
      The CHANGE command is one of the most useful editing              1394.
 commands in Wylbur.  With the CHANGE command, you can change           1395.
 words, phrases, or sentences in one Wylbur line, or in every           1396.
 line in your working data set.  As an example, we'll use the           1397.
 change command to correct some errors in your letter.  (We             1398.
 could use the CHANGE command to correct all the errors, but we         1399.
 want to save some work for the MODIFY command which you'll find        1400.
 out about next.)                                                       1401.
1                                                Page 27                1402.
                                                                        1403.
                                                                        1404.
      You may recall that you typed 'Atlantic' instead of               1405.
 'Pacific' in line 6.  An easy way to correct that mistake is to        1406.
 use the CHANGE command.  You would enter, CHANGE 'Atlantic' TO         1407.
 'Pacific' IN 6.  The characters or words between the first pair        1408.
 of quote marks would be changed to the characters or words             1409.
 between the second pair of quote marks.  The two sets of               1410.
 characters need not be (and seldom are) the same length.  Your         1411.
 terminal printout would look like this:                                1412.
                                                                        1413.
         COMMAND ? change 'Atlantic' to 'Pacific' in 6                  1414.
            6.     40 astronauts dropped into the Pacific.              1415.
         COMMAND ?                                                      1416.
                                                                        1417.
                                                                        1418.
      Note that Wylbur prints out the line after the line is            1419.
 changed, allowing you to see that the change was made correctly.       1420.
                                                                        1421.
      Also note that the information between the quote marks            1422.
 must be entered in upper and lower case characters exactly as          1423.
 you want it because Wylbur won't change it.                            1424.
                                                                        1425.
       The quote marks appear in pairs, one at the beginning and        1426.
 one at the end of each term.  If you are changing something            1427.
 that has a quote mark in the middle, use a double quote mark           1428.
 key at either end of the term.  Wylbur will accept the double          1429.
 quote mark key as a delimiter as well as the single quote mark         1430.
 key.  The double and single quote mark keys may not be mixed as        1431.
 delimiters however.  For example, to change 'IS NOT' to 'ISN'T'        1432.
 enter the following command:                                           1433.
                                                                        1434.
       COMMAND ? change 'IS NOT' to "ISN'T" in 3/10                     1435.
                                                                        1436.
                                                                        1437.
                                                                        1438.
 THE RANGE OF A COMMAND                                                 1439.
+___ _____ __ _ _______                                                 1440.
                                                                        1441.
                                                                        1442.
      You may have noticed that most Wylbur commands require a          1443.
 line number or a list of line numbers.  These line numbers are         1444.
 called the 'range' of the Wylbur command. The range of a Wylbur        1445.
 command  can be just one line, or it can be all the lines in           1446.
 your working data set.   In many commands, as in the CHANGE            1447.
 command, if no range is specified, Wylbur uses the default             1448.
 range which is the entire working data set.  The fact that the         1449.
 range defaults to the entire working data set means you have to        1450.
 be careful when you use many of the commands, including the            1451.
 CHANGE command.                                                        1452.
                                                                        1453.
      By expanding the range of a command, you can make the             1454.
 command a great deal more powerful than it may appear to be at         1455.
 first glance.  The CHANGE command is a good example.  Suppose          1456.
 you had typed a letter that was five times as long as the              1457.
 letter in our example.  And suppose you're mind was on a trip          1458.
 to Europe.  And suppose in a five places you typed in                  1459.
1                                                Page 28                1460.
                                                                        1461.
                                                                        1462.
 'Atlantic' instead of 'Pacific'.  Then suddenly you woke up and        1463.
 realized that you had to change five lines in the letter.  You         1464.
 could change those lines by issuing a five CHANGE commands as          1465.
 you did above; or you could use one change command in several          1466.
 different ways.  If the line numbers to be changed were 6 14 57        1467.
 89 113, you could enter, CHANGE 'Atlantic' TO 'Pacific' IN 6 14        1468.
 57 89 113.  Or, if you knew that every time the word 'Atlantic'        1469.
 occurred in your letter, you wanted the word 'Pacific', you            1470.
 could let Wylbur do the work of finding the occurrences of             1471.
 'Atlantic' and you could just enter CHANGE 'Atlantic' TO               1472.
 'Pacific' IN FIRST/LAST.  Or, since Wylbur assumes you mean            1473.
 FIRST/LAST if you don't specify a range, you could just enter          1474.
 CHANGE 'Atlantic' TO 'Pacific' and Wylbur would proceed to             1475.
 search for every occurrence of the word Atlantic and change it.        1476.
                                                                        1477.
       There is a danger though.  Suppose you wanted to change          1478.
 only one occurence of the word 'Atlantic', at the same time            1479.
 leaving the word 'Atlantic' in twenty other places where it            1480.
 was correct and proper.  If you entered  CHANGE 'Atlantic' to          1481.
 'Pacific' and left off a line number, Wylbur would proceed to          1482.
 change every occurrence of 'Atlantic' even those you wanted            1483.
 left alone.  The moral of the story is to use care when you            1484.
 enter commands.  Always specify the range you intend the               1485.
 command to work with.                                                  1486.
                                                                        1487.
                                                                        1488.
 MODIFY COMMAND                                                         1489.
+______ _______                                                         1490.
                                                                        1491.
                                                                        1492.
      The MODIFY command is one of the most useful of all of            1493.
 Wylbur's text editing commands.  You'll probably use it more           1494.
 frequently than the other commands.                                    1495.
                                                                        1496.
      The MODIFY command is used to change words or sentences in        1497.
 parts of a line.  For example, line 3 in your letter contains          1498.
 the word 'over' when you intended to type 'on'.   You could use        1499.
 the CHANGE command to change 'over' to 'on', but in this case          1500.
 let's use the MODIFY command.  The MODIFY command works in two         1501.
 parts.  First you specify the range you want to modify; and            1502.
 then you perform the modifications.  In our example you would          1503.
 first enter, ' MODIFY 3 '.   Wylbur would print line 3 in its          1504.
 entirety, and on the next line, the the word 'ALTERS ?'.  Your         1505.
 terminal printout would look like this:                                1506.
                                                                        1507.
         COMMAND ? modify 3                                             1508.
            3.     As I informedd you on the phone over                 1509.
          ALTERS ?                                                      1510.
                                                                        1511.
                                                                        1512.
      You are now ready to make modifications to line 3 by              1513.
 typing in beneath the line the modifications you want to make.         1514.
 There are 3 types of modifications: insertions, deletions, and         1515.
 replacements.  In this example we want to do a replacement,            1516.
 replacing the word 'over' with the word 'on'.  You make a              1517.
 replacement  by typing in the letter 'R' exactly under the             1518.
 place where you want to start your replacement, and then you           1519.
 type in your replacement.  The new replacement must be the same        1520.
 length as the word or characters you replace.  In our case, the        1521.
1                                                Page 29                1522.
                                                                        1523.
                                                                        1524.
 word 'on' is 2 characters shorter than the word 'over', so             1525.
 you'll have to add two blanks at the end.  After you type the          1526.
 letter 'R' followed by the word 'on' followed by 2 blanks and          1527.
 then a carriage return, Wylbur would respond by printing out           1528.
 the modified version of the line and then prompt you with the          1529.
 word 'ALTERS ?' again.  Your terminal output looks like                1530.
 this:                                                                  1531.
                                                                        1532.
         COMMAND ? modify 3                                             1533.
            3.     As I informedd you on the phone over                 1534.
          ALTERS ?                                 ron                  1535.
            3.     As I informedd you on the phone on                   1536.
          ALTERS ?                                                      1537.
                                                                        1538.
                                                                        1539.
      At this point you can make additional modifications to the        1540.
 line by typing in an 'R' followed by the replacement characters        1541.
 or replacement words; or you can tell Wylbur you are done              1542.
 modifying the line by typing in a carriage return.  The                1543.
 carriage return is a signal to Wylbur that you have finished           1544.
 making alters to the line and you wish to terminate the MODIFY         1545.
 command.                                                               1546.
                                                                        1547.
      After you make modifications, you must always type a              1548.
 carriage return by itself in response to 'ALTERS ?' in order to        1549.
 terminate the MODIFY command.                                          1550.
                                                                        1551.
      In our case, we still have one more error in this sentence        1552.
 in the word 'informedd'.  This typographical error allows us to        1553.
 use another of the MODIFY options, the delete option.  You use         1554.
 the delete option by typing in a 'D' under the characters or           1555.
 words you want to delete.  (It's just a coincidence in this            1556.
 example that the MODIFY delete character is a 'D', and the             1557.
 character we want to delete is a 'd'.)   If you typed in a 'D'         1558.
 under the superfluous 'd' in 'informedd' and then typed a              1559.
 carriage return, Wylbur would respond once more by prompting           1560.
 you with 'ALTERS ?', and your terminal printout looks like             1561.
 this:                                                                  1562.
                                                                        1563.
                                                                        1564.
         COMMAND ? modify 3                                             1565.
            3.     As I informedd you on the phone over                 1566.
          ALTERS ?                                 ron                  1567.
            3.     As I informedd you on the phone on                   1568.
          ALTERS ?              d                                       1569.
            3.     As I informed you on the phone on                    1570.
          ALTERS ?                                                      1571.
                                                                        1572.
                                                                        1573.
       The sentence looks fine now, so you can signal Wylbur you        1574.
 are done with the MODIFY verb by typing in a carriage return           1575.
 only in response to 'ALTERS?'.  Your terminal printout looks           1576.
 like this:                                                             1577.
1                                                Page 30                1578.
                                                                        1579.
                                                                        1580.
         COMMAND ? modify 3                                             1581.
            3.     As I informedd you on the phone over                 1582.
          ALTERS ?                                 ron                  1583.
            3.     As I informedd you on the phone on                   1584.
          ALTERS ?              d                                       1585.
            3.     As I informed you on the phone on                    1586.
          ALTERS ?                                                      1587.
         COMMAND ?                                                      1588.
                                                                        1589.
       Thus far you have used the MODIFY command to replace             1590.
 characters and delete characters in a line.   There is a third         1591.
 function of the MODIFY command, the insert function.   The             1592.
 insert function is similiar to the replace and delete                  1593.
 functions.  Using line number 4 as an example, suppose you             1594.
 wanted to add the word 'evening' after the word 'Tuesday'.  The        1595.
 most effective way of doing this would be to use the insert            1596.
 function of the MODIFY command.   In this case, you would enter        1597.
 'MODIFY 4', and Wylbur would print out line 4 followed by the          1598.
 prompt 'ALTERS ?'.   You would then enter the letter 'I' in the        1599.
 place where you want to insert something, and then you would           1600.
 type the word you wanted to insert followed by a carriage              1601.
 return.  Wylbur would print out the line with the insertion and        1602.
 prompt you again with 'ALTERS ?'.  Satisfied with the result,          1603.
 you would press carriage return.  Your terminal printout looks         1604.
 like this:                                                             1605.
                                                                        1606.
         COMMAND ? modify 4                                             1607.
            4.     Tuesday the last batch for Skyhooks you              1608.
          ALTERS ?        i evening                                     1609.
            4.     Tuesday evening the last batch for Skyhooks you      1610.
          ALTERS ?                                                      1611.
         COMMAND ?                                                      1612.
                                                                        1613.
      Note that the insertion goes before the character the 'I'         1614.
 is placed under.                                                       1615.
                                                                        1616.
      There is a combination of the delete and insert functions         1617.
 that is useful to know.  You can use the delete function along         1618.
 with the insert function to do replacements of unequal length.         1619.
 For example, suppose you have misgivings about the letter              1620.
 you're sending to Fred, and you want to elevate the style.  In         1621.
 line 8, for example, you want to change 'gets on the ball' to          1622.
 'becomes more efficient'.  You could do this with several other        1623.
 Wylbur commands, but let's do it with the MODIFY command to            1624.
 show how the delete and insert functions can be combined               1625.
 together.  You first enter 'MODIFY 8' and then enter the letter        1626.
 'D' under every character of the phrase 'gets on the ball' and         1627.
 then type in the letter 'I' followed by the new phrase.                1628.
 Satisfied with the result you type in carriage return.  The            1629.
 terminal prinout looks like this:                                      1630.
                                                                        1631.
         COMMAND ? modify 8                                             1632.
            8.     gets on the ball, we'll have to order our            1633.
          ALTERS ? ddddddddddddddddibecomes more efficient              1634.
            8.     becomes more efficient, we'll have to order our      1635.
          ALTERS ?                                                      1636.
         COMMAND ?                                                      1637.
1                                                Page 31                1638.
                                                                        1639.
                                                                        1640.
      The end result is the replacement of a string of                  1641.
 characters with another string of characters of a different            1642.
 length.  One last hint before we leave the MODIFY command: you         1643.
 don't have to type in D's under every character you want to            1644.
 delete.  Type in a 'D' under the first and last character to be        1645.
 deleted, and Wylbur will delete everything in between.                 1646.
                                                                        1647.
      You should be aware that the insert function of the MODIFY        1648.
 command is considerably different from the INSERT command.  You        1649.
 might look at the INSERT command again and note the difference.        1650.
                                                                        1651.
                                                                        1652.
 A REVIEW OF SESSION #2                                                 1653.
+_ ______ __ _______ __                                                 1654.
                                                                        1655.
                                                                        1656.
      Session #2 began when you retrieved the letter you wrote          1657.
 in session #1.  You used the USE command to retrieve the letter        1658.
 from a disk pack into your working data set.  You listed the           1659.
 data set using the LIST command, and then you began to correct         1660.
 your mistakes using Wylbur's editing commands.                         1661.
                                                                        1662.
      You used the DELETE command to delete one line from your          1663.
 letter.                                                                1664.
                                                                        1665.
      You used the REPLACE command to replace a line with one           1666.
 you typed correctly.                                                   1667.
                                                                        1668.
      You used the INSERT command to insert a new line between          1669.
 two existing lines.                                                    1670.
                                                                        1671.
      You used the CHANGE command to change a word you had              1672.
 mistyped.                                                              1673.
                                                                        1674.
      Finally you used the MODIFY command to replace a word,            1675.
 delete a character, insert a word, and replace an entire phrase        1676.
 with another phrase.                                                   1677.
                                                                        1678.
      You may have noticed by this time that many of the Wylbur         1679.
 editing commands produce the same results.  For example, you           1680.
 can always use the REPLACE command and replace an entire line,         1681.
 and you would never need to use the CHANGE or MODIFY commands.         1682.
 Or you could always use the CHANGE command and never use the           1683.
 REPLACE or MODIFY commands.   Similiarly you could use the             1684.
 MODIFY command exclusively, and never worry about how the              1685.
 REPLACE or CHANGE commands work.                                       1686.
                                                                        1687.
       Each of the Wylbur editing commands has a strong point           1688.
 though.  The REPLACE command is handy if you've really botched         1689.
 up a line, but the MODIFY command requires less work if the            1690.
 line needs only minor changes.   The CHANGE command comes into         1691.
 its own when a change is necessary to the same word or phrase          1692.
 in twenty or thirty different places.  Each command has its own        1693.
 place.                                                                 1694.
1                                                Page 32                1695.
                                                                        1696.
                                                                        1697.
      At first you'll probably be happy enough to get your work         1698.
 done no matter which command you use.  But as you get to know          1699.
 Wylbur, you'll grow increasing lazy.  And when you get lazy,           1700.
 you'll benefit greatly by browsing through the Wylbur Reference        1701.
 Manual.  A large amount of information is contained there that         1702.
 could not be presented in this learning guide.                         1703.
                                                                        1704.
      Another valuable thing to do when you become lazy, is to          1705.
 sit down with a more knowledgeable person at a Wylbur terminal         1706.
 and watch that person do her work.  An experienced Wylbur user         1707.
 frequently cannot tell you the shortcuts she has learned but she       1708.
 can usually demonstrate them in the course of her normal job.          1709.
                                                                        1710.
                                                                        1711.
 MORE WYLBUR COMMANDS                                                   1712.
+____ ______ ________                                                   1713.
                                                                        1714.
                                                                        1715.
       If you have some familiarity with the commands you've            1716.
 used thus far, you're in a good position to utilize Wylbur             1717.
 effectively.  There a few more Wylbur commands that are useful         1718.
 to know about though.  You may not need them every day, but            1719.
 when you do need them, they're indispensable.  We'll present           1720.
 them in their basic form and leave it to you to read more about        1721.
 them in the reference section when you have the time.                  1722.
                                                                        1723.
                                                                        1724.
 COPY COMMAND                                                           1725.
+____ _______                                                           1726.
                                                                        1727.
                                                                        1728.
      The COPY command copies existing lines into another place         1729.
 in your working data set.  When you use the COPY command, you          1730.
 always end up with 2 copies of the line or lines.  As an               1731.
 example, suppose you decided to remove the P.S. in your letter         1732.
 and make it part of the body of the letter.  You could do this         1733.
 by entering 'COPY  15 to 10.1' and then 'DELETE 15'.  If you           1734.
 used the MODIFY command to remove the 'P.S.', and listed the           1735.
 results, your terminal printout would look like this:                  1736.
1                                                Page 33                1737.
                                                                        1738.
                                                                        1739.
         COMMAND ? list 8/last                                          1740.
            8.     gets on the ball, we'll have to order our            1741.
           10.     skyhooks from Acme INc.                              1742.
           11.          Still your friend,                              1743.
           12.                                                          1744.
           13.          Josephine Blink                                 1745.
           14.                                                          1746.
           15.     P.S.  HOw could you do this to me!                   1747.
         COMMAND ?  copy 15 to 10.1                                     1748.
         COMMAND ?  list 8/last                                         1749.
            8.     gets on the ball, we'll have to order our            1750.
           10.     skyhooks from Acme INc.                              1751.
           10.1    P.S.  HOw could you do this to me!                   1752.
           11.          Still your friend,                              1753.
           12.                                                          1754.
           13.          Josephine Blink                                 1755.
           14.                                                          1756.
           15.     P.S.  HOw could you do this to me!                   1757.
         COMMAND ?  modify 10.1                                         1758.
           10.1    P.S.  HOw could you do this to me!                   1759.
          ALTERS ? r      Ho                                            1760.
           15.           How could you do this to me!                   1761.
          ALTERS ?                                                      1762.
         COMMAND ? delete 15                                            1763.
         COMMAND ? list 8/last                                          1764.
            8.     gets on the ball, we'll have to order our            1765.
           10.     skyhooks from Acme INc.                              1766.
           10.1          How could you do this to me!                   1767.
           11.          Still your friend,                              1768.
           12.                                                          1769.
           13.          Josephine Blink                                 1770.
           14.                                                          1771.
                                                                        1772.
                                                                        1773.
      You may wonder about the modification where you entered           1774.
 'r     Ho'.  In effect you replaced the first 6 characters with        1775.
 blanks and then replaced the 'H' with another 'H', and then            1776.
 replaced the upper case 'O' with a lower case 'o'.  As you can         1777.
 see, replacement characters are always one character to the            1778.
 right because you type the 'r' under the first character you           1779.
 want to replace.                                                       1780.
                                                                        1781.
      This example shows one way of moving a line (or several           1782.
 lines) to some other location.  First you use the COPY command         1783.
 to copy the line or paragraph where you want it.  Then you list        1784.
 the line in the new location and verify it's where you want it.        1785.
 Once you're sure you've moved it where you want it, you use the        1786.
 DELETE command to remove the original line or lines.                   1787.
                                                                        1788.
      The COPY command has another variation which is                   1789.
 invaluable.  The COPY command can be used to copy lines and            1790.
 paragraphs from a data set on a disk pack into your working            1791.
 data set.  For example, suppose you wished to include in your          1792.
 letter to Fred, some data on the advertised strength of                1793.
1                                                Page 34                1794.
                                                                        1795.
                                                                        1796.
 skyhooks versus the tested strength after ten days' use.  You          1797.
 typed this data perhaps a week ago and saved it on disk pack           1798.
 USER50 under the name SKYDATA.  To include this data in your           1799.
 letter you would enter the following command:                          1800.
                                                                        1801.
        COMMAND ?  copy first/last to end from skydata                  1802.
        67. - LAST LINE                                                 1803.
        COMMAND ?                                                       1804.
                                                                        1805.
      What has occurred is that Wylbur has read in lines                1806.
 FIRST/LAST of data set SKYDATA on disk pack USER50, and placed         1807.
 those lines at the end of your working data set.  There were 52        1808.
 lines of information in SKYDATA, and consequently your letter          1809.
 now has 67 lines to it.                                                1810.
                                                                        1811.
       You can guess from the above example that you can also           1812.
 copy part of the data set SKYDATA into the middle of your              1813.
 letter.  For example, you can enter, 'COPY  3/14 TO 13.001             1814.
 FROM SKYDATA'.   Wylbur would then copy lines 3,4,5...14               1815.
 into your letter as lines 13.001, 13.002, 13.003...  13.012.           1816.
                                                                        1817.
                                                                        1818.
 MOVE COMMAND                                                           1819.
+____ _______                                                           1820.
                                                                        1821.
                                                                        1822.
      The MOVE command functions a great deal like the COPY             1823.
 command in that it also copies a line or lines of Wylbur data          1824.
 from one place to another.  The MOVE command though, deletes           1825.
 the original line or lines.   For example, you could have used         1826.
 the MOVE command above instead of the COPY command, and you            1827.
 wouldn't have had to use the DELETE command because the                1828.
 original lines would have been deleted automatically.  The             1829.
 command you entered would be:                                          1830.
                                                                        1831.
                 COMMAND ? move 15 to 10.1                              1832.
                 COMMAND ?                                              1833.
                                                                        1834.
      In general, you use the MOVE command when you are sure you        1835.
 want a line moved and not copied.  If you are unsure of what           1836.
 you're doing, a COPY and a subsequent DELETE command may be            1837.
 better for you.                                                        1838.
                                                                        1839.
      Note that the MOVE command cannot be used to get                  1840.
 information from a data set on a disk pack.  Only the COPY             1841.
 command can do that.                                                   1842.
1                                                Page 35                1843.
                                                                        1844.
                                                                        1845.
 COLLECT COMMAND                                                        1846.
+_______ _______                                                        1847.
                                                                        1848.
                                                                        1849.
      You've used the COLLECT command several times already, so         1850.
 you know what it does.  Essentially, it allows you to go from          1851.
 the command mode to the collect mode.   There is an option to          1852.
 the COLLECT command that you haven't seen yet.  You can, if you        1853.
 wish, begin collecting lines of Wylbur text at some point other        1854.
 than line 1.  For example, if you decided to add another               1855.
 paragraph to your letter just past line 10.1, you could do it          1856.
 by entering the command  'COLLECT  10.2' or 'COLLECT 10.111'.          1857.
 Wylbur would then prompt you with the line number and proceed          1858.
 to increment the lines proportionally to the value you specified.      1859.
 Your terminal printout looks like this:                                1860.
                                                                        1861.
                                                                        1862.
         COMMAND ?  list 10/11                                          1863.
           10.     skyhooks from Acme INc.                              1864.
           11.          Still your friend,                              1865.
         COMMAND ?  collect 10.111                                      1866.
           10.111?  And I'd like to add at this point                   1867.
           10.112?                                                      1868.
                                                                        1869.
                                                                        1870.
      You could continue to enter lines of text now until you           1871.
 got to line 10.999, and then you would have to stop.  You could        1872.
 enter more lines then, but first you would have to use the             1873.
 NUMBER command (you'll learn about the NUMBER command next).           1874.
                                                                        1875.
      To summarize the COLLECT command, if you start a new              1876.
 working data set, you merely enter COLLECT and you then begin          1877.
 collecting with line number 1.  If you already have some lines         1878.
 in your working data set and you enter COLLECT without                 1879.
 specifying line numbers, you'll start collecting at the end of         1880.
 your working data set.  If you specify a range with the COLLECT        1881.
 command, you'll start collecting at that line number, and the          1882.
 increments that Wylbur uses for line numbers will depend on the        1883.
 number you supply in the COLLECT command.  For example, if you         1884.
 enter COLLECT 10.1,  Wylbur will prompt you with line numbers          1885.
 10.1, 10.2, 10.3, etc.  If you enter COLLECT 10.01, Wylbur will        1886.
 prompt you with 10.01, 10.02, 10.03, etc.                              1887.
                                                                        1888.
                                                                        1889.
                                                                        1890.
 NUMBER COMMAND                                                         1891.
+______ _______                                                         1892.
                                                                        1893.
                                                                        1894.
      The NUMBER command renumbers your working data set.               1895.
 Normally you'll use the NUMBER command to get rid of the funny         1896.
 numbers you've created by inserting, copying, and moving.  In          1897.
 your letter for example, you've delete line number 9 and               1898.
1                                                Page 36                1899.
                                                                        1900.
                                                                        1901.
 created a line number 6.1 and 10.1.   There's no particular            1902.
 problem with these line numbers, except they just aren't neat          1903.
 and orderly.  You may want to renumber the lines in your               1904.
 working data set by using the NUMBER command.  If you listed           1905.
 part of your letter before and after you renumbered, your              1906.
 terminal printout would look like this:                                1907.
                                                                        1908.
         COMMAND ? list 6/11                                            1909.
            6.     40 astronauts dropped into the Atlantic.             1910.
            6.1    (And one came down in New York City!)                1911.
            7.     Untily your quality control departments              1912.
            8.     gets on the ball, we'll have to order our            1913.
           10.     skyhooks from Acme INc.                              1914.
           10.1          How could you do this to me!                   1915.
           11.          Still your friend,                              1916.
         COMMAND ?  number                                              1917.
         15. - LAST LINE                                                1918.
         COMMAND ?  list 6/12                                           1919.
            6.     40 astronauts dropped into the Atlantic.             1920.
            7.     (And one came down in New York City!)                1921.
            8.     Untily your quality control departments              1922.
            9.     gets on the ball, we'll have to order our            1923.
           10.     skyhooks from Acme INc.                              1924.
           11.           How could you do this to me!                   1925.
           12.          Still your friend,                              1926.
         COMMAND ?                                                      1927.
                                                                        1928.
       There are other options of the NUMBER command.  You              1929.
 can read about them in the Wylbur Reference Manual.                    1930.
                                                                        1931.
                                                                        1932.
 ALIGN COMMAND                                                          1933.
+_____ _______                                                          1934.
                                                                        1935.
                                                                        1936.
      The ALIGN command is used to make the lines in your               1937.
 working data set the same size.  That is, the ALIGN command            1938.
 adds words to the end of short lines to make them as long as           1939.
 the long lines.   After the ALIGN comand has executed, every           1940.
 line in your letter or memorandum is about the same size.              1941.
 We'll use part of your letter as an example.                           1942.
                                                                        1943.
      When you typed your letter, you typed in lines of about 40        1944.
 characters in length.  Suppose now you wanted to make the lines        1945.
 about 50 characters.  You would do this by entering                    1946.
 ' ALIGN  9/15 LENGTH 50 '.  If you listed the body of your             1947.
 letter before and after you entered the ALIGN command, your            1948.
 printout would look like this:                                         1949.
1                                                Page 37                1950.
                                                                        1951.
                                                                        1952.
     COMMAND ? list 9/15                                                1953.
        9.          As I informed you over the phone on                 1954.
       10.     Tuesday, the last batch of skyhooks you                  1955.
       11.     sent us were defective.  At last count 4                 1956.
       12.     astronauts dropped into the Pacific.  Until              1957.
       13.     your quality control department gets on                  1958.
       14.     the ball, we'll have to order our skyhooks               1959.
       15.     from Acme Inc.                                           1960.
     COMMAND ? align 9/15 length 50                                     1961.
     COMMAND ? list 9/15                                                1962.
        9.          As I informed you over the phone on Tuesday,        1963.
       10.     the last batch of skyhooks you sent us were              1964.
       11.     defective.  At last count 4 astronauts dropped           1965.
       12.     into the Pacific.  Until your quality control            1966.
       13.     department gets on the ball, we'll have to order         1967.
       14.     our skyhooks from Acme Inc.                              1968.
     COMMAND ?                                                          1969.
                                                                        1970.
                                                                        1971.
      The ALIGN command moves words from line to line until the         1972.
 maximum number of words have been fitted on each line, given           1973.
 the length you specified in the command.  When alignment is            1974.
 complete, the extra line numbers are deleted.  In this case,           1975.
 line number 15 was deleted because there were no words in it.          1976.
                                                                        1977.
       The ALIGN command has many rules governing what it will          1978.
 do, and the easiest way to discover what these rules are is to         1979.
 use the command on some test material.   (You can also read the        1980.
 Wylbur Reference Manual, but that's not half as much fun.) One         1981.
 of the rules of the ALIGN command which you do have to know, is        1982.
 that lines beginning with one or more blanks act as stop lines.        1983.
 That is, when the ALIGN command finds a line beginning with a          1984.
 blank, the ALIGN command assumes that the line is the start of         1985.
 a paragraph and consequently does not move any words from the          1986.
 beginning of that line to any of the preceding lines.                  1987.
                                                                        1988.
      Another rule of the ALIGN command is that it will create          1989.
 new line numbers if it doesn't have enough lines to fit the            1990.
 words on.  For example, if you aligned the above test paragraph        1991.
 into lines with a maximum length of 15 characters, the ALIGN           1992.
 command would be forced to create some new line numbers to hold        1993.
 all of the little lines you have created.  The line numbers            1994.
 would probably go from 9 to 12 and then to 12.1, 12.2, etc.            1995.
                                                                        1996.
      One word of caution about the ALIGN command: since it             1997.
 changes your working data set dramatically, you're wise to save        1998.
 a copy of your working data set before you start aligning              1999.
 material and then align your text paragraph by paragraph.  If          2000.
 you make a mistake (for example, leave off the LENGTH option),         2001.
 you can go back to your original copy and start over again.            2002.
1                                                Page 38                2003.
                                                                        2004.
                                                                        2005.
 JUSTIFY COMMAND                                                        2006.
+_______ _______                                                        2007.
                                                                        2008.
                                                                        2009.
       The JUSTIFY command performs the same function as the            2010.
 ALIGN command.  In addition, the JUSTIFY command spaces the            2011.
 words within lines such that the last word extends to the very         2012.
 end of the line.  The JUSTIFY command does this by adding              2013.
 blanks between the words in the sentences.  For example, to use        2014.
 the JUSTIFY command on your letter instead of the ALIGN command        2015.
 you would enter, 'JUSTIFY 9/14 LENGTH 50'; if you listed the           2016.
 results, your terminal printout would look like this:                  2017.
                                                                        2018.
  COMMAND ? justify 9/14 length 50                                      2019.
  COMMAND ? list 9/14                                                   2020.
     9.          As I informed you over the phone on  Tuesday,          2021.
    10.     the  last  batch  of  skyhooks  you  sent  us were          2022.
    11.     defective.  At last  count  4  astronauts  dropped          2023.
    12.     into  the  Pacific.   Until  your  quality control          2024.
    13.     department gets on the ball, we'll have  to  order          2025.
    14.     our skyhooks from Acme Inc.                                 2026.
  COMMAND ?                                                             2027.
                                                                        2028.
       The JUSTIFY command makes your copy look cleaner.  Be            2029.
 careful in using the command though, as you can ruin your              2030.
 working data set if you use it incorrectly.  To be on the safe         2031.
 side, you should save a copy of the working data set before you        2032.
 begin justifying, and then justify one paragraph at a time             2033.
 until you are satisifed with the results.                              2034.
                                                                        2035.
       If you have lines in your working data set that have one         2036.
 or more blanks in front of them, and these lines do not start          2037.
 paragraphs, you will have trouble with the JUSTIFY command.            2038.
 The JUSTIFY command will produce strange results in the area of        2039.
 these lines.  You can learn more about the JUSTIFY command in          2040.
 the Wylbur Reference Manual.                                           2041.
                                                                        2042.
                                                                        2043.
 SYSTEM FAILURE.  WYLBUR CRASHES.                                       2044.
+______ ________  ______ ________                                       2045.
                                                                        2046.
                                                                        2047.
      Every so often some part of the computer system doesn't           2048.
 function as it's suppose to, and all sorts of dire things              2049.
 happen.  What you'll usually notice as you sit at your                 2050.
 terminal, is that the terminal is unresponsive.  No matter what        2051.
 you type, Wylbur doesn't answer.   The best thing to do at this        2052.
 point is to sit at your terminal and wait for the system to            2053.
 come back up.  Eventually, you'll see the 'MODEL ?' query, and         2054.
 you can log on again.                                                  2055.
                                                                        2056.
      When you finish logging on, you'll see, if you're lucky,          2057.
 the message 'RECOVERY COMPLETED'.  This means that Wylbur saved        2058.
 your working data set before Wylbur crashed, and you can               2059.
 continue where you left off.                                           2060.
1                                                Page 39                2061.
                                                                        2062.
                                                                        2063.
       More frequently though, when the system crashes you lose         2064.
 everything you've typed in since the last time you issued a            2065.
 'SAVE' command.   Consider how you would feel if you just spent        2066.
 3 hours typing a 200 page memorandum and then the system               2067.
 crashed.  If you hadn't bothered to save the memorandum                2068.
 periodically on disk, you would be faced with the prospect of          2069.
 typing the 200 page memorandum over again.  An experienced             2070.
 Wylbur user can tell you that typing a memorandum the second           2071.
 time is an onerous chore.                                              2072.
                                                                        2073.
      The moral is: save your working data set after every              2074.
 significant increment of work.                                         2075.
                                                                        2076.
      What a signigicant increment of work is you'll have to            2077.
 decide for yourself.  Many people save their work every 20             2078.
 minutes, particularly if they are fast typists.                        2079.
                                                                        2080.
      One important thing to remember after system crashes is to        2081.
 SET UPLOW and SET LENGTH.   You do not get these automatically.        2082.
 It's rather common to be so upset by a system crash, that you          2083.
 forget to SET UPLOW, and then you type for an hour and have to         2084.
 go back and type it in still a third time.  (That's the reason         2085.
 some of the offices have locks on them--on the outside.)               2086.
                                                                        2087.
                                                                        2088.
 SAVING A BACKUP DATASET                                                2089.
+______ _ ______ _______                                                2090.
                                                                        2091.
                                                                        2092.
      You've been warned often enough to save your working data         2093.
 set in a backup data set as you work along.  The way you do            2094.
 this is by issuing the SAVE command.  First, you select a name         2095.
 for your backup data set.  You can name it BACKUP or TEMPLETT          2096.
 or LULUBELL.  The name is unimportant as long as you remember          2097.
 that the data set is for backup purposes.                              2098.
                                                                        2099.
      The first time you issue the SAVE command, you must give          2100.
 the disk pack name, e.g., SAVE LULUBELL ON USER50.  After this         2101.
 initial save, you do not need to specify the disk pack, but you        2102.
 must specify the REPLACE option, e.g., SAVE LULUBELL REPLACE.          2103.
 (You'll learn more about the SAVE command and the REPLACE              2104.
 option later.)                                                         2105.
                                                                        2106.
      For example, to save a backup copy of FLETTER after you           2107.
 have typed 10 or so lines, you can enter:                              2108.
                                                                        2109.
              COMMAND ? save lulubell on user50                         2110.
              "LULUBELL" SAVED ON USER50                                2111.
              COMMAND ?                                                 2112.
                                                                        2113.
                                                                        2114.
      Then to save a backup copy of FLETTER later, after you've         2115.
 typed line 15 or so, enter:                                            2116.
                                                                        2117.
              COMMAND ? save lulubell replace                           2118.
              "LULUBELL" REPLACED ON USER50                             2119.
              COMMAND ?                                                 2120.
1                                                Page 40                2121.
                                                                        2122.
                                                                        2123.
                                                                        2124.
      Once you save your working data set, you are somewhat             2125.
 protected against system failure and your own mistakes.  For           2126.
 example, if you inadvertently delete half of your working data         2127.
 set, you can read in the backup copy you saved twenty minutes          2128.
 ago and start over from that point.  You bring in a copy of            2129.
 your backup by entering the USE command with the CLEAR option,         2130.
 e.g., USE LULUBELL CLEAR.  The CLEAR option tells Wylbur to            2131.
 clear out your old working data set or what's left of it, and          2132.
 replace it with LULUBELL.  For example:                                2133.
                                                                        2134.
              COMMAND ? use lulubell clear                              2135.
              COMMAND ?                                                 2136.
                                                                        2137.
                                                                        2138.
       Note that LULUBELL is a backup of your working data set          2139.
 and not a copy of FLETTER, except perhaps at the beginning of          2140.
 the day when you make your first backup.  As the day progresses        2141.
 the backup copy of your working data set in LULUBELL becomes           2142.
 increasingly different from the copy of your letter saved in           2143.
 FLETTER.  Considering this, you may find it wise to save a             2144.
 backup copy of FLETTER  (a third backup) under some other name.        2145.
 Then when you eventually replace FLETTER at the end of the day,        2146.
 you still have an old copy of it in case you inadvertently             2147.
 deleted part of your working data set just before you saved it         2148.
 as FLETTER.                                                            2149.
                                                                        2150.
                                                                        2151.
 ABBREVIATIONS                                                          2152.
+_____________                                                          2153.
                                                                        2154.
                                                                        2155.
       Almost all Wylbur commands have abbreviations.  You can          2156.
 read about them under the topic, Abbreviations, in the Wylbur          2157.
 Reference Manual.  You use the abbreviations exactly as you            2158.
 would the full command.  For example, LIST FIRST/LAST can also         2159.
 be entered as L F/L.  Other handy abbreviations are MOD for            2160.
 MODIFY; CH for CHANGE; and DEL for DELETE.                             2161.
                                                                        2162.
                                                                        2163.
 LISTING YOUR WORKING DATA SET ON A HIGH SPEED PRINTER                  2164.
+_______ ____ _______ ____ ___ __ _ ____ _____ _______                  2165.
                                                                        2166.
                                                                        2167.
      After you've typed a long time at the terminal, your              2168.
 working data set becomes very large.  To list your working data        2169.
 set at the terminal takes forever because the terminal prints          2170.
 slowly.  Fortunately there's another way.  In addition to              2171.
 the LIST command you're familiar with, there is also the LIST          2172.
 OFFLINE command.                                                       2173.
1                                                Page 41                2174.
                                                                        2175.
                                                                        2176.
      When you issue the LIST OFFLINE command, Wylbur prints a          2177.
 copy of your working data set on a high speed printer in the           2178.
 computer room.  Sometimes the data set is printed before you           2179.
 can walk to the computer room to pick it up.  Sometimes you            2180.
 have to wait a few minutes.  Usually within ten minutes, your          2181.
 output is waiting for you on the counter in the Computer Room,         2182.
 room 1307.                                                             2183.
                                                                        2184.
       Suppose for example, that the letter you just aligned and        2185.
 justifed was 1000 lines long.  It would be a perfect candidate         2186.
 for listing offline.  To list it offline, you would enter              2187.
 'LIST OFFLINE PAL xxx  UPLOW'.   The 'xxx' stands for your             2188.
 'pal box' number.  If you haven't been given one, you should           2189.
 enter the first initial of your last name.  This pal box letter        2190.
 will be printed on the front of your computer listing.  Your           2191.
 employe number will also be printed on your computer listing.          2192.
 When you enter the computer room, you will find the listings           2193.
 arranged on the long counter by pal box identifiers, with              2194.
 alphabetic identifiers first followed by the numeric                   2195.
 identifiers.  If you can't find your output on the long                2196.
 counter, you should look in the pal boxes across the room.             2197.
 There is a pal box there with your number or alphabetic                2198.
 identifier on it.                                                      2199.
                                                                        2200.
      If you had entered the LIST OFFLINE command above, your           2201.
 terminal printout would look like this:                                2202.
                                                                        2203.
                 COMMAND ?  list offline uplow pal a                    2204.
                 nnn IS YOUR JOB NUMBER                                 2205.
                 COMMAND ?                                              2206.
                                                                        2207.
      The 'nnn' is the number of your job as it goes through the        2208.
 computer.   If you go into the computer room and can't find            2209.
 your output, ask the computer operator about job 'nnn'.                2210.
 Possibly it's been held up somewhere by unusual conditions.            2211.
                                                                        2212.
       The  LIST OFFLINE command has numerous options.  You             2213.
 should read about them in the Wylbur Reference Manual.  Some of        2214.
 the options you won't understand at this point but many of them        2215.
 you'll find useful.  In the example above, you used the UPLOW          2216.
 option.  This tells Wylbur that you want to list your working          2217.
 data set in both upper and lower case letters when it's listed         2218.
 on the high speed printer.  If you had omitted UPLOW, you would        2219.
 have gotten your data set printed in upper case letters only.          2220.
                                                                        2221.
                                                                        2222.
 SAVING YOUR DATA SET                                                   2223.
+______ ____ ____ ___                                                   2224.
                                                                        2225.
                                                                        2226.
      At the end of lesson #2 as in lesson #1, you will want to         2227.
 save your working data set.   You save it by entering the SAVE         2228.
 command in the same way that you did in lesson #1.  There is           2229.
 one difference though: your data set called FLETTER now exists         2230.
 on disk pack USER50.  It's true that the version of FLETTER on         2231.
1                                                Page 42                2232.
                                                                        2233.
                                                                        2234.
 USER50 is the old one with the mistakes, but Wylbur doesn't            2235.
 know that.  Wylbur will discover when it goes to save FLETTER,         2236.
 that there is another FLETTER on USER50.  Wylbur will warn you         2237.
 about it, and you will have to reply 'YES'  when Wylbur asks           2238.
 you 'REPLACE?'.  Your terminal printout will look like this:           2239.
                                                                        2240.
         COMMAND ?  save fletter                                        2241.
         "FLETTER" ALREADY EXISTS ON USER50                             2242.
         TO REPLACE, REPLY "YES"                                        2243.
         REPLACE? yes                                                   2244.
         "FLETTER" REPLACED ON USER50                                   2245.
         COMMAND ?                                                      2246.
                                                                        2247.
                                                                        2248.
      Note that you didn't have to tell Wylbur which disk pack          2249.
 FLETTER was on (i.e. SAVE FLETTER ON USER50).  Wylbur keeps a          2250.
 catalog of all data sets, and whenever you reference a data            2251.
 set, Wylbur searches to see where it's at.  Wylbur does this to        2252.
 safeguard you against saving two data sets with the same name.         2253.
 In the example above, if you had replied 'NO' to the 'REPLACE?'        2254.
 prompt, Wylbur wouldn't have replaced FLETTER.  The copy of            2255.
 FLETTER on the disk pack would remain unchanged; and the copy          2256.
 of FLETTER in your working data set would remain unchanged.            2257.
 You would still have to save your working data set somewhere.          2258.
 You might call this version something else, like FLETR2, and           2259.
 once again issue a save command (e.g., SAVE FLETR2 ON USER50).         2260.
                                                                        2261.
      There is an option on the SAVE command that eliminates            2262.
 Wylbur's prompt for replacing.  If you add the word REPLACE to         2263.
 the SAVE command, you're telling Wylbur that you know there is         2264.
 a version of FLETTER out there on a disk pack, and you want to         2265.
 scratch that version and replace it with the version in your           2266.
 working data set.  In our example, you would enter 'SAVE               2267.
 FLETTER REPLACE'.  Your terminal printout would then read:             2268.
                                                                        2269.
        COMMAND ? save fletter replace                                  2270.
        "FLETTER" REPLACED ON USER50                                    2271.
        COMMAND ?                                                       2272.
                                                                        2273.
                                                                        2274.
 LOGGING OFF WYLBUR                                                     2275.
+_______ ___ ______                                                     2276.
                                                                        2277.
                                                                        2278.
      You log off Wylbur in session #2 exactly as you did in            2279.
 session #1.  Or, if you're sure you have saved your working            2280.
 data set, you can enter 'LOGOFF CLEAR' and Wylbur will not ask         2281.
 you about clearing the working data set.                               2282.
1                                                Page 43                2283.
                                                                        2284.
                                                                        2285.
 HOW IT ALL GOES TOGETHER                                               2286.
+___ __ ___ ____ ________                                               2287.
                                                                        2288.
                                                                        2289.
      You're aware now of what Wylbur can do for you.  You can          2290.
 type a letter or memorandum, make corrections, save it on a            2291.
 disk pack, and list it offline on a high speed printer.  So            2292.
 where do you begin?                                                    2293.
                                                                        2294.
       An experienced Wylbur user proceeds about as follows:            2295.
 typing in the first draft, the experienced user corrects only a        2296.
 few mistakes, usually those that she can correct by backspacing        2297.
 and retyping.  Spelling and grammatical errors are left in the         2298.
 copy.  Long lines of text and short lines of text are also left        2299.
 in the copy.  The experienced user saves the working data set          2300.
 every 15-20 minutes in a backup data set (for example with the         2301.
 name BACKUP), and then at the end of his session, she saves it         2302.
 one last time (for example with the name of MYDATA) before             2303.
 listing it offline on a high speed printer.                            2304.
                                                                        2305.
      When she returns after lunch or in the morning, she reads         2306.
 the offline listing and makes sure it's what she thinks it             2307.
 should be.  Then using the offline listing, she marks in               2308.
 corrections in red pencil, circling the line numbers that need         2309.
 to be changed.  Then she logs on to Wylbur, saves a copy of the        2310.
 data set in a second backup (for example named BACKUP2), and           2311.
 then enters the corrections she has marked on the listing.             2312.
                                                                        2313.
      When she's done with her corrections, she issues the              2314.
 NUMBER command and then lists the last line.  If the number of         2315.
 lines seems about right, she saves the dataset back in the             2316.
 original (for example named MYDATA).  She's then ready to              2317.
 proceed to add additional text, if any, to her data set.               2318.
 Eventually, she'll list the data set offline on special paper,         2319.
 unnumbered, to get a listing that appears almost hand typed.           2320.
 (To find out how to get a listing of this sort, read about the         2321.
 LIST OFFLINE command in the Wylbur Reference Manual.)                  2322.
                                                                        2323.
      The value of the two backup data sets is as follows: the          2324.
 data set named BACKUP will be used if the system crashes or if         2325.
 our experienced Wylbur user accidentally deletes a large               2326.
 portion of her working data set.   If either of these disasters        2327.
 happen, then our experienced user will lose at the most 20             2328.
 minutes of work because she can read in the copy of her working        2329.
 data set she saved as BACKUP 20 minutes ago.                           2330.
                                                                        2331.
       The data set in BACKUP2 will be used only if a more              2332.
 serious disaster occurs.  For example, if our experienced user         2333.
 accidentally deleted almost all of her working data set and            2334.
 then, unaware of what she had done, she saved this fragmented          2335.
 working data set in both BACKUP and MYDATA at the end of the           2336.
1                                                Page 44                2337.
                                                                        2338.
                                                                        2339.
 day, she would be in  real trouble.  When she read her offline         2340.
 listing the next morning, she would cry a while and then read          2341.
 in the data set she saved in BACKUP2 and repeat all of the             2342.
 previous day's work (except the bad deletion presumably).  She         2343.
 would have lost one day's work, but she wouldn't have lost two         2344.
 days' work or even a week's work--which has happened to some           2345.
 people.  So remember to save BACKUP2 at the beginning of a             2346.
 session after you've read your listing and are sure you know           2347.
 what it is you're backing up.                                          2348.
                                                                        2349.
                                                                        2350.
 A FINAL REVIEW                                                         2351.
+_ _____ ______                                                         2352.
                                                                        2353.
                                                                        2354.
      Session #2 began when you read in the data set FLETTER and        2355.
 began to update it.  You used a variety of Wylbur commands             2356.
 (DELETE, REPLACE, INSERT, CHANGE, MODIFY) to correct your              2357.
 spelling and typographical errors.  Then you used the  COPY            2358.
 command to copy a line from one place to another.  You learned         2359.
 that the MOVE command did much the same thing: it copies a             2360.
 line to a new place and then deletes the original line.  You           2361.
 found out that the COLLECT command had an option that allowed          2362.
 you to add paragraphs in the middle of existing lines, and you         2363.
 found you could make your line numbers orderly by using the            2364.
 NUMBER command.                                                        2365.
                                                                        2366.
      Then you got fancy with the ALIGN and JUSTIFY commands,           2367.
 and at the same time learned that it's wise to save your               2368.
 working data set freqently in a back up data set in case you           2369.
 make a serious mistake or the computer crashes.   Along the way        2370.
 you discovered that you could list your working data set on a          2371.
 high speed printer in the computer room by using the LIST              2372.
 OFFLINE command.  And lastly you issued the SAVE command and           2373.
 discovered that Wylbur keeps a catalog of your data sets, and          2374.
 that you have to tell Wylbur to scratch the existing copy              2375.
 before it will save a new version.                                     2376.
                                                                        2377.
                                                                        2378.
 CONGRATULATIONS!                                                       2379.
+________________                                                       2380.
                                                                        2381.
       If you've had the patience to stick with it until now,           2382.
 you'll soon be using Wylbur with efficiency and pleasure.              2383.
 Wylbur is not easy to learn (as you've found out), but the             2384.
 longer you practice at it, the better you'll get.  Some day            2385.
 some one will ask you a question about Wylbur and you'll answer        2386.
 it and discover you have become a Wylbur expert.  Good luck.           2387.
./ ADD NAME=MANUAL   0100-80225-80225-1323-10776-10776-00000-$SYS11  00
1

















         Title:          ITEL/WYLBUR Manual

         Date:           June 1, 1980

         Abstract:       This  manual  is   an   introduction   to
                         ITEL/WYLBUR as well as a reference manual
                         for that system.

         Published by:   The ITEL Corporation, Data Processing Center
                         55 Fransico St., San Francisco, California


         Version:        Version  2


1TABLE OF CONTENTS                                                  TOFC. - 1

                         Table of Contents



   I.  Introduction to WYLBUR..................................I-1
       A.  Account Numbers...................................I.A-1
       B.  The Selectric Terminal............................I.B-1
       C.  WYLBUR Modes - COLLECT-COMMAND....................I.C-1
           1.  COMMAND Mode..................................I.C-1
               a.  Upper and Lower Case......................I.C-1
               b.  Separators................................I.C-1
               c.  Short Forms...............................I.C-2
               d.  Changing Modes............................I.C-2
           2.  COLLECT Mode..................................I.C-3
               a.  Upper and Lower Case......................I.C-3
               b.  Changing Modes............................I.C-3
       D.  Use of Non-Typing Keys in WYLBUR..................I.D-1
           1.  Carriage Return...............................I.D-1
           2.  Backspace.....................................I.D-1
           3.  Attention (ATTN)..............................I.D-2
           4.  Shift-Key.....................................I.D-3
       E.  WYLBUR Files - ACTIVE-EXTERNAL-EXEC...............I.E-1
       F.  Sign-On Procedure.................................I.F-1
       G.  Sign-Off Procedure................................I.G-1

  II.  Creating a File......................................II.A-1
       A.  Global Parameters................................II.A-1
           1.  Case.........................................II.A-1
           2.  TABS.........................................II.A-2
               a.  Selectric Terminals......................II.A-2
               b.  Setting Tabs - Long Form.................II.A-3
               c.  Setting Tabs - Short Form................II.A-3
               d.  CRT Terminals............................II.A-4
               e.  Clearing Tabs............................II.A-4
           3.  DELTA........................................II.A-5
               a.  Setting Delta with the COLLECT Command...II.A-5
               b.  Setting Delta with the SET Command.......II.A-5
           4.  LENGTH.......................................II.A-6
           5.  TERSE-VERBOSE................................II.A-6
       B.  COLLECT..........................................II.B-1
           1.  Specifying Line Numbers......................II.B-1
           2.  MERGE........................................II.B-2
           3.  Clear........................................II.B-2
       C.  Line Numbers.....................................II.C-1
           1.  Constants....................................II.C-1
           2.  Arithmetic Expressions.......................II.C-1
           3.  Symbolic Line Numbers........................II.C-1
           4.  Referring to Line Numbers....................II.C-2
       D.  The LIST Command (Short form: L).................II.D-1
           1.  UNNUMBERED...................................II.D-1
           2.  MARKER.......................................II.D-2
           3.  CLEAN........................................II.D-3
           4.  NOTEXT.......................................II.D-3
           5.  Explicit Range...............................II.D-4
           6.  Associative Range............................II.D-4
           7.  Explicit and Associative Range...............II.D-4
1TABLE OF CONTENTS                                                  TOFC. - 2


       E.  The NUMBER Command...............................II.D-5
           1.  Specifying a Starting Line...................II.D-5
           2.  Specifying Delta.............................II.D-5
           3.  Scaling......................................II.D-6
           4.  Range........................................II.D-6
 III.  Editing an Active File..............................III.A-1
       A.  Specifying Ranges...............................III.A-1
           1.  Explicit Range..............................III.A-2
           2.  Explicit Range-Count Field..................III.A-2
           3.  Associative Range...........................III.A-3
               a.  Use of Quotes...........................III.A-3
               b.  Specifying Ordinal Occurrence...........III.A-4
               c.  Specifying Column Position..............III.A-4
               d.  Specifying Null Lines...................III.A-4
           4.  Negative Associative Range..................III.A-4
       B.  The DELETE, INSERT, and REPLACE Commands........III.B-1
           1.  DELETE (Short Form: DEL or D)...............III.B-1
               a.  Deleting a Single Line..................III.B-1
               b.  Deleting an Explicit Range..............III.B-1
               c.  Deleting an Associative Range...........III.B-1
               d.  LIST....................................III.B-1
           2.  INSERT (Short Form: INS or I)...............III.B-2
               a.  Inserting One Line......................III.B-2
               b.  Inserting Multiple Lines-Explicit Range.III.B-2
               c.  Inserting Multiple Lines-DITTO..........III.B-2
               d.  Inserting Multiple Lines-COLLECT........III.B-3
           3.  REPLACE (Short Form: REP)...................III.B-3
               a.  LIST....................................III.B-4
               b.  Explicit Range..........................III.B-4
               c.  Associative Range.......................III.B-4
               d.  DITTO Option............................III.B-5
               e.  Using The ATTN Key......................III.B-5
           4.  Alternate Short Forms of DEL, INS, REP......III.B-5
       C.  The CHANGE Command (Short Form: CH).............III.C-1
           1.  Position in Line............................III.C-2
               a.  String Replacement......................III.C-2
               b.  Column Replacement......................III.C-4
               c.  Column Insertion........................III.C-5
           2.  Search Range................................III.C-5
           3.  The Replacement.............................III.C-7
               a.  Quoted String...........................III.C-7
               b.  Incremented Integer.....................III.C-7
               c.  Transferred Replacement.................III.C-9
       D.  The COPY and MOVE Commands......................III.D-1
           1.  COPY........................................III.D-1
               a.  Copy an Explicit Range..................III.D-2
               b.  Specifying Delta........................III.D-3
               c.  MERGE...................................III.D-4
               d.  Copy an Associative Range...............III.D-4
               e.  Copy to the End of a File...............III.D-6
               f.  Copy FROM an External File..............III.D-6
                   1)  Copy All of an External File........III.D-6
                   2)  Copy Part of an External File.......III.D-6
               g.  Copy TO the Beginning of a File.........III.D-7
               h.  Copy FROM an External File and COMBINE..III.D-7
1TABLE OF CONTENTS                                                  TOFC. - 3


           2.  MOVE........................................III.D-7
               a.  Move an Explicit Range of Lines.........III.D-8
               b.  Move an Associative Range of Lines......III.D-8
               c.  MERGE...................................III.D-8
       E.  The ALIGN Command...............................III.E-1
           1.  Aligning an Explicit Range..................III.E-2
           2.  Using a MARKER..............................III.E-2
           3.  NUMBER......................................III.E-3
           4.  Setting LENGTH in the Align Command.........III.E-3
           5.  SPACE Option................................III.E-4
           6.  Aligning Indented Material..................III.E-4
           7.  Indenting using the EVEN Option.............III.E-4
              a.  Indenting Paragraphs.....................III.E-5
              b.  Hanging Indentations.....................III.E-5
       G.  The EDIT and MODIFY Commands....................III.G-1
           1.  EDIT (Short Form:  EDI or E)................III.G-1
               a.  Range...................................III.G-2
               b.  NOLIST..................................III.G-2
               c.  SINGLE..................................III.G-2
               d.  Terminating the EDIT Command............III.G-3
                   1.  Terminating all Lines Remaining
                       in the Range........................III.G-3
                   2.  Terminating the Current Line Only...III.G-3
                   3.  Terminating the EDITS...............III.G-3
               e.  Changing from EDIT to MODIFY............III.G-4
               f.  The ATTN Key in EDIT....................III.G-4
                   1.  ATTN................................III.G-4
                   2.  $ATTN...............................III.G-4
                   3.  @ATTN...............................III.G-4
                   4.  ¢ATTN...............................III.G-4
           2. The MODIFY Command (Short Form:  MOD or M)...III.G-5
               a.  To Delete Characters from a Line--D.....III.G-6
               b.  To Blank Characters in a Line--B........III.G-7
               c.  Insert Characters in a Line--I..........III.G-7
               d.  Replace Characters in a Line--R.........III.G-7
               e.  Multiple Modifications in a LINE........III.G-8
               f.  To Complete the Alteration Process......III.G-9
               g.  NOLIST - N..............................III.G-9
               h.  SINGLE - S.............................III.G-10
               i.  Terminating the MODIFY Command.........III.G-10

  IV.  Saving, Retrieving and Deleting a File...............IV.A-1
       A.  SAVE.............................................IV.A-1
           1.  VOLUME.......................................IV.A-2
           2.  REPLACE/SCRATCH..............................IV.A-3
           3.  Format.......................................IV.A-3
           4.  NUMBERED.....................................IV.A-4
           5.  ON CATLG.....................................IV.A-4
               a.  Sequential Data Sets.....................IV.A-4
               b.  Partitioned Data Sets....................IV.A-5
           6.  RECATLG/UNCATLG..............................IV.A-5
               a.  RECATLG..................................IV.A-5
               b.  UNCATLG..................................IV.A-5
           7.  CONDENSE - (PDS Only)........................IV.A-5
1TABLE OF CONTENTS                                                  TOFC. - 4


       B.  SCRATCH..........................................IV.B-1
           1.  Scratching a Sequential Data Set.............IV.B-1
           2.  Scratching a PDS Member......................IV.B-1
           3.  Scratching a Cataloged Data Set..............IV.B-2
           4.  Scratching a non-WYLBUR Data Set.............IV.B-2
       C.  USE..............................................IV.C-1
           1.  On VOLUME/CATLG..............................IV.C-1
           2.  Clearing the Active File.....................IV.C-1
       D.  Data Set Naming Conventions......................IV.D-1
           1.  Your Data Sets...............................IV.D-1
               a.  Sequential Data Sets.....................IV.D-1
               b.  Partitioned Data Sets....................IV.D-1
           2.  Your Group's Data Sets.......................IV.D-2
               a.  Sequential Data Sets.....................IV.D-2
               b.  Partitioned Data Sets....................IV.D-2
           3.  Other WYLBUR Data Sets.......................IV.D-2
               a.  Sequential Data Sets.....................IV.D-3
               b.  Partitioned Data Sets....................IV.D-3
               c.  SET USER and SET GROUP...................IV.D-3
           4.  Non-WYLBUR Data Sets.........................IV.D-4
           5.  Locating a Data Set..........................IV.D-4
               a.  Locating Your Own Data Sets..............IV.D-5
               b.  Locating Your Group's Data Sets..........IV.D-5
               c.  Locating Data Sets of Other WYLBUR Users.IV.D-6
               d.  Locating Non-WYLBUR Data Sets............IV.D-7
           6.  Managing Your Data Sets......................IV.D-7
               a.  PDS vs. Sequential Space.................IV.D-8
               b.  CONDENSE (PDS only)......................IV.D-8
               c.  Scratching Obsolete Data Sets............IV.D-9

1TABLE OF CONTENTS                                                  TOFC. - 5


   VI. Using the Central Computer through WYLBUR............VI.A-1
       A.  LIST OFFLINE.....................................VI.A-1
           1.  BIN..........................................VI.A-1
           2.  PROJECT......................................VI.A-2
           3.  (n) Positioning..............................VI.A-2
           4.  CC or MC (Carriage Control)..................VI.A-2
           5.  'Title'......................................VI.A-3
           6.  NOEJECT......................................VI.A-3
           7.  COPIES.......................................VI.A-3
           8.  UPLOW........................................VI.A-3
           9.  DARKLIST.....................................VI.A-3
          10.  SC (Service Class)...........................VI.A-3
          11.  ID...........................................VI.A-4
          12.  DEST.........................................VI.A-4
          13.  FORMS........................................VI.A-4
       B.  PUNCH............................................VI.B-1
           1.  RANGE........................................VI.B-1
           2.  LIST.........................................VI.B-1
           3.  EXEC.........................................VI.B-1
           4.  List Options.................................VI.B-1
           5.  ID Option....................................VI.B-1
       C.  RUN..............................................VI.C-1
           1.  JOBNAME......................................VI.C-1
           2.  LIST Options.................................VI.C-1
           3.  EXEC Option..................................VI.C-1
           4.  CANCEL and Reject............................VI.C-1
       D.  LOCATE...........................................VI.D-1
       E.  HOLD and RELEASE.................................VI.E-1
       F.  Getting Output at the Terminal...................VI.F-1
       G.  Converting Card Decks to WYLBUR Files............VI.G-1

   VII.  Summary of Commands.................................VII-1

   VIII. Definition of Terms................................VIII-1

   Appendix A--Short Forms of WYLBUR Command Words.........APP.A-1
   Appendix B--Editing Hints...............................APP.B-1
   Appendix C--User/System News............................APP.C-1
       A.  User Suggestions................................APP.C-1
       B.  News from WYLBUR................................APP.C-1
1I. INTRODUCTION TO WYLBUR                                            I - 1


 I.  Introduction to WYLBUR


 WYLBUR is a computer system used as a text editor and remote job
 entry  facility.   Ordinarily  it  is  used  with  a   Selectric
 typewriter  terminal  (2741-type),  a  teletype  device or a CRT
 (cathode-ray tube:  Hazeltine, 2260, etc.).  This  text  editing
 facility can be used to create, modify, store and retrieve  text
 such  as  a  computer program, a letter or a dissertation.  This
 manual was created using WYLBUR.


 A person using WYLBUR can create and edit a computer program and
 its Job Control Language just as he would any other WYLBUR text.
 The computer program may be written in  any  language.   He  can
 then  insert  the  program  into the computer's input stream for
 processing as a normal batch job.

 This manual is designed to serve both  as  a  tutorial  for  the
 WYLBUR  system  and  also  as  a  reference text.  The first six
 sections of this manual will describe  the  most  commonly  used
 functions of WYLBUR.  Within the discussion of each command, the
 simple  form  will  be  discussed  first,  and  the options will
 follow.  After each paragraph  describing  an  operation,  there
 will  be an illustration showing the way it will look when it is
 typed out.  In these illustrations,  the  use  of  the  carriage
 return will be indicated by (CR).  Sections VII and VIII of this
 manual  are  intended  as  a  reference for knowledgeable WYLBUR
 users.  Commands will be discussed much more  briefly  in  those
 sections,  and  some  commands  will  be discussed only in those
 sections.
1INTRODUCTION TO WYLBUR                                             I.A - 1



 A.  Account Numbers

 To  become a  WYLBUR  user  you need a  valid  ITEL  TSO USER ID
 which  may  be  obtained  by filing the appropriate forms at the
 Data Processing Center. You will be assigned as user ID begining
 with a $ followed by a unique  3 character idenfification repre-
 senting your  organization,  followed by a  two digit identifier
 representing your  unique  user  identification.   You must also
 select a  password to use to initailly logon that you may change
 during your first logon session.
1INTRODUCTION TO WYLBUR                                             I.B - 1


 B.  The Selectric Terminal

 The Selectric typewriter terminal is a device which looks and is
 operated much like an  ordinary  electric  typewriter  with  one
 additional  key, ATTN (attention).  It can be linked to the CUCC
 computer system through a standard telephone line.  The terminal
 may be disconnected from  the  computer  by  flipping  a  toggle
 switch  from  COM  (communicate)  to  LCL  (local) and used as a
 standard typewriter  for  normal  office  tasks.   However,  the
 terminal  typewriters are different from ordinary typewriters in
 three respects:  the typeface may be different,  the  characters
 of  standard  Selectric  balls do not correspond to the keyboard
 (except on correspondence terminals), and they cost about $2500.
 When it is connected  to  the  computer  (COM)  and  the  WYLBUR
 program,  several keys have functions different from those of an
 ordinary typewriter.  The use of  these  keys  is  discussed  in
 Section I.D.

 The Selectric terminal typewriters have  the  Typamatic  feature
 which  permits  the repeat of a hyphen, underline, backspace, or
 space by holding the proper key down  with  a  steady  pressure.
 WYLBUR  can  use all of the characters on the keyboard of an IBM
 Selectric typewriter terminal  except  the  margin  release  key
 which has no effect on WYLBUR text.

1INTRODUCTION TO WYLBUR                                             I.C - 1



 C.  WYLBUR Modes - COLLECT-COMMAND

 WYLBUR has two modes  of  operation,  called  COLLECT  mode  and
 COMMAND mode.

 COLLECT mode is used for accumulating lines of text  for  a  new
 file, or adding lines of text to an existing file.

 COMMAND mode is used to perform any other tasks such as  editing
 an existing file, or submitting a job to the central computer.


 You are in COMMAND mode whenever you are responding to a command
 prompt  (COMMAND?),  and  in  COLLECT  mode  whenever  you   are
 responding to a line number prompt  (1.  ?).

     1. COMMAND Mode

        The bulk of this manual deals with the rules and purposes
        of WYLBUR Commands.


        a. Upper and Lower Case

           Case is of no importance in WYLBUR commands.  You  may
           use   all   upper   or  lower  case  characters  or  a
           combination.  WYLBUR always responds and prompts  with
           upper case.

        b. Separators

           æ Blank, Comma, Equal Sign ( ,=)

             WYLBUR will recognize a blank, comma, and equal sign
             as equivalent  separators  in  any  command.   These
             three LIST commands are equivalent:

             COMMAND? LIST 2,3,4,5
             COMMAND? LIST 2 3 4 5
             COMMAND? LIST 2=3=4=5

1INTRODUCTION TO WYLBUR                                             I.C - 2


           æ Slash (/)

             The slash  is  used to designate range.  The command

             COMMAND?  LIST 2/5

             means to list all lines from 2 to 5  inclusive.   It
             is  not equivalent to any of the three LIST commands
             shown above as there may  be  more  than  two  lines
             between lines 2 and 5.  For example, lines 2.5, 3.5,
             and 4.5 may also be present.

           æ Semi-Colon (;)

             A semi-colon stops  the  scan  of  a  command  line;
             comments  may  follow  it.  If a command line begins
             with a semi-colon, the whole line is a comment.   As
             you will see later, this will only be useful in exec
             files.

             COMMAND? LIST 2/5 ; EXAMPLE OF LIST COMMAND

        c. Short Forms

           The short form (abbreviation) of each command is noted
           along with its description.  A list of short forms can
           be found in Appendix A, Short Forms.

        d. Changing Modes

           To change  from  COMMAND  mode  to  COLLECT  mode,  or
           vice-versa,  press the ATTN key as the first character
           in a line.

           There is another way to change from COMMAND to COLLECT
           mode.  Type the command COLLECT:

           COMMAND?  COLLECT
             1.      ?


1INTRODUCTION TO WYLBUR                                             I.C - 3


     2. COLLECT Mode

        a. Upper and Lower Case

           Any combination of upper and lower case may be used in
           COLLECT mode.  However, all letters will be  converted
           to upper case unless you use this command:

           COMMAND?  SET UPLOW

           Some terminals, such as CRT's, have  only  upper  case
           letters.  The SET UPLOW command has no effect on these
           terminals but is accepted as a legal command.


        b. Changing Modes

           To change from COLLECT to COMMAND mode, press the ATTN
           key.

1INTRODUCTION TO WYLBUR                                             I.D - 1



 D.  Use of Non-Typing Keys in WYLBUR

 The non-typing keys have special functions in  WYLBUR  that  are
 quite different from those on an ordinary typewriter.

     1. Carriage Return (or CR)

        This key returns the printing head to the left margin  as
        on  any  typewriter,  but in WYLBUR it also indicates the
        end of a line.  In COMMAND mode WYLBUR responds to a (CR)
        with the appropriate response to the command, followed by
        a prompt for the next  command,  or  a  prompt  for  more
        information for the current command.  In COLLECT mode, it
        is  the  signal  for  WYLBUR to prompt with the next line
        number followed by  a  question  mark  so  that  you  may
        continue to enter text.

     2. Backspace

        This key moves the printing head one space to  the  left,
        and  erases whatever was in the space from the computer's
        memory (but not from the paper on hardcopy terminals;  on
        display terminals, characters will  be  erased  from  the
        screen  only  after you have typed in the replacement for
        that character).  A whole line of type can be erased from
        the computer's memory by backspacing  over  it,  but  you
        cannot erase characters in this manner from lines already
        terminated  with  a carriage return (CR).  On Hazeltines,
        backspacing is performed by simultaneously depressing the
        CTRL  and  H  keys.   In  addition,  be  careful  not  to
        backspace into  the  line  number  that  WYLBUR  prompted
        because any characters subsequently typed in those spaces
        will be lost.

        A command called SET BACK changes  the  function  of  the
        backspace  key so that an upper case backspace (shift and
        backspace on 2741-type terminals), will backspace without
        erasing and will enter a backspace  in  the  text.   This
        makes  it  possible,  for  example, to have a WYLBUR text
        containing underlined material.

1INTRODUCTION TO WYLBUR                                             I.D - 2



        If BACK is set on a Hazeltine-type terminal, CTRL + H  is
        the  equivalent of an upper case backspace on a 2741-type
        terminal and there  is  no  equivalent  to  a  lower-case
        backspace.   When  underscores  are  typed  in  they will
        appear to have erased the characters in  the  text.   The
        text  and  underlining  have  been accepted by WYLBUR, it
        just will not show up on the screen.  Also note  that  if
        BACK  is  set on a Hazeltine, backspace (CTRL + H) cannot
        be used to erase a character;  the  whole  line  must  be
        retyped.   The  underlining would appear in output listed
        at a hardcopy terminal.

        In anything listed at the  central  computer,  the  upper
        case  backspaces  appear  as  blanks  and the underscores
        appear as characters after the succession of blanks.   To
        have  underlining  appear  in text printed at the central
        computer, see Appendix B.  The SET BACK  command  can  be
        given in response to any COMMAND?  prompt from WYLBUR.


     3. Attention (or ATTN)

        The attention key (or 'break' button on ASCII  terminals)
        may  be  used to change from COLLECT mode to COMMAND mode
        and vice versa.  When the attention key is pressed before
        any spaces or characters are typed, WYLBUR first responds
        by typing *** or ...  .

        COMMAND?  ***(ATTN)
           1.  ? PRESSING THE ATTN KEY PUT ME (CR)
           2.  ? IN COLLECT MODE. (CR)
           3.  ? NOW THAT I AM FINISHED, (CR)
           4.  ? I WANT TO LEAVE COLLECT MODE. (CR)
           5.  ? ***(ATTN)
        COMMAND?

        When this file is listed on the terminal, there will  not
        be a line 5.

        This key has an additional function.  You can  erase  the
        entire  line you are working on by pressing the attention
        key instead of using the backspace key.  WYLBUR will then
        prompt with the same line number, if you are  in  COLLECT
        mode,  or  'COMMAND?'  if  you are in COMMAND mode.  This
        will not erase any text previously ended with a  carriage
        return.

          22.  ? THIS LINE IS A MESS ***(ATTN)
          22.  ?

        The ATTN key may be used with several special  characters
        in  the  EDIT  and  MODIFY commands to do certain special
        tasks.  See Section III.G, for more  information  on  the
        use of the attention key in these commands.

1INTRODUCTION TO WYLBUR                                             I.D - 3



     4. Shift Key

        There is a distinction between the effect  of  the  shift
        key at the terminal and its effect on a WYLBUR text.  The
        shift  key  operates  just as on any typewriter as far as
        the terminal copy is concerned, but  its  effect  on  the
        WYLBUR text depends on the WYLBUR mode and on the command
        SET  UPLOW  and  SET  UPPER.   The use of this key has no
        effect during COMMAND mode and all alphabetic  characters
        are  converted  to  upper  case.   In COLLECT mode, it is
        treated in two ways.  If you have used  the  command  SET
        UPLOW,  WYLBUR  will accept upper and lower case letters.
        If  you  have  not  used  this  command,  all  alphabetic
        characters are converted to upper case.   UPPER  case  is
        the  default  so it is necessary to do a SET UPLOW if you
        wish to have lower case letters as  part  of  your  text.
        (Reminder:  all JCL must be in upper case only.)

        The  above  applies  to  "uplow"  terminals   only.    On
        "upper-case"   only  terminals,  although  SET  UPLOW  is
        accepted as a command, the use of the shift key is not at
        all the same, except when used  for  upper  case  special
        characters,  such as '#', '<', '>', etc.  Otherwise there
        is no correspondence between the shifted letter you  type
        and  the character displayed on the screen and understood
        by WYLBUR.

1INTRODUCTION TO WYLBUR                                             I.E - 1


 E.  WYLBUR Files - ACTIVE-EXTERNAL-EXEC

 The term file is used to describe any collection of text  (which
 might  be a letter, a list of data, a dissertation or report, or
 a computer program).

 A file is called an ACTIVE file while it is held in  the  active
 part  of the computer's memory and you are working on it.  While
 in COLLECT mode, you may accumulate  lines  of  text  into  this
 file;  this  is  the  only  file  to  which  you  may  make text
 modifications.

 A file is called an EXTERNAL file when it is stored on  a  disk.
 A detailed explanation of the use of external files may be found
 in Section IV.

 There is another type of active file called  an  EXEC  (execute)
 file,  which is stored in the same way as an active file, but in
 another  part  of  the  computer's  memory.   This  file  simply
 consists of a set of WYLBUR commands which,  when  the  file  is
 executed, will be executed  in the order in which they appear in
 the file.

 If a file is a complete program with JOB card and JCL, it can be
 submitted for execution with a WYLBUR command from the terminal,
 and you may use other WYLBUR commands to check on  the  progress
 of the job and retrieve your output. (See Section VI.)



1INTRODUCTION TO WYLBUR                                             I.F - 1



 F.  Sign-On Procedure

 In order to use the WYLBUR system, you must succesfully  sign-on
 at  a terminal.  When the procedure is completed, you will be in
 COMMAND mode.  The procedure described below  is  for  hardwired
 (directly  connected  to  the  computer)  terminals  only.   For
 information on signing on to dial-up terminals, see  the  User's
 Manual Appendix, WYLBUR.

     1. All lines to the computer at CUCC are controlled by TPMON
        (a program  which  enables  users  to  connect  with  our
        teleprocessing  systems).   When  you  begin your session
        TPMON will ask for your CUCC project number and the  name
        of  the  system you wish to use (unless the previous user
        has signed off with the command  'LOGON').   This  number
        must  be  valid  to ASP.  Type your project number in the
        overprinted spaces provided by  TPMON  and  hit  carriage
        return  (CR) after you type in the name of the system you
        wish to use.

           TPMON:  PROJECT NUMBER,SYSTEM?  WWWWWWW
+                                          XXXXXXX
+                                          GGGGGGG
           user:                           UR00000,WYLBUR (CR)

        At this  point  if  you  are  on  a  teletype   or   CRT
        terminal  you  will  be connected with the WYLBUR system
        and you may proceed from 2  below.   If  you  are  on  a
        2741-type terminal,  the  keyboard will unlock and await
        additional  information  on  the  type of connection you
        wish   to   make.   Since   APL    and    correspondence
        typeballs   are  extremely  different  from the standard
        2741   typeball,   WYLBUR   will  make   the   necessary
        translations if it knows which you are using.

        If you are using an APL typeball you must now type:

            A (CR)

        If you are on  a  correspondence  terminal  (this  has  a
        slightly  different  keyboard  from  a  standard 2741 and
        looks more like a regular typewriter) type:

            C (CR)

        If you are  using  a  standard  typeball  on  a  standard
        2741-type terminal you may simply type:

            (CR)


1INTRODUCTION TO WYLBUR                                             I.F - 2



     2. After connecting to WYLBUR  through  TPMON,  WYLBUR  will
        begin   its   own  signon  procedure.   As  part  of  the
        procedure, WYLBUR asks you a series of questions so  that
        the  validity  of your account number can be checked.  If
        you do not receive a series of questions immediately that
        means that your terminal is not equipped with the REVERSE
        BREAK hardware feature.  You must flip the toggle  switch
        from  COM  to  LCL  and then back again.  After this, you
        must hit the RETURN key and WYLBUR will begin  its  LOGON
        routine.   Do  not hit the ATTN key or you will be signed
        off and have to establish connection to the system again.
        For further  information,  see  the  CUCC  User's  Manual
        Appendix, WYLBUR.

        The system will then type:

            CUCC LINE x hh:mm:ss mm/dd/yy

        This signifies that the  terminal  is  ready  to  receive
        information.  x is your line number for this session.  It
        may be used in the TO and SHOW LINE commands described in
        Section  VII.  The current time is given as hour (24-hour
        clock), minute, and second - hh:mm:ss  and  the  date  is
        given as month, day and year - mm/dd/yy.

        The system may follow this with another line  giving  the
        message  of  the  day (also called the broadcast message)
        which includes  any  special  information  of  which  you
        should be aware.

        The  system  will  then  type  the  following  series  of
        prompts, one at a time and await your  response  to  each
        before  typing the next.  In this example, an appropriate
        response follows the ?:

            TERMINAL?   S23(CR)
            INITIALS?   ABC(CR)
            GROUP?      UR(CR)
            KEYWORD?    XYZ(CR)
+                       MMM


1INTRODUCTION TO WYLBUR                                             I.F - 3



        Let us look  at  each  prompt.   When  the  system  types
        TERMINAL?,  answer  by  typing  the terminal ID.  (If the
        command LOGON was typed by the previous user, WYLBUR will
        not prompt for a new terminal ID).  The terminal ID is  a
        three-character  field,  where  the  first character is a
        letter and the next two are numbers.  The letters A and H
        have special significance (as described below), otherwise
        you may use any alphabetic character.

        Ann - Terminal is hard copy teletype compatible.

        Hnn - Terminal is display teletype (e.g., Hazeltine)  and
        the  user  wants  screen paging.  (See SET CRT command in
        Section VII).

            TERMINAL?  S23 (CR)

        Now you are asked for your initials, the user ID assigned
        to you by the Computer Center.

            INITIALS?  ABC(CR)

        Next you will be asked to identify  yourself  further  by
        giving  your group ID which was assigned at the same time
        as the initials.

            GROUP?  UR(CR)

        If you have a keyword, you will be asked to supply it  to
        determine  whether you have a right to use the group   ID
        and initials you have just given.  If you do not  have  a
        keyword  assigned,  WYLBUR will not prompt for one.  As a
        protection feature, 2741-type (hardcopy)  terminals  will
        overprint  the  keyword  with  a  series of miscellaneous
        characters.

              KEYWORD? XYZ(CR)
+                      MMM
              COMMAND?

        This prompt from the system indicates  that  the  sign-on
        procedure  is  complete, and the terminal is now ready to
        accept WYLBUR commands.

1INTRODUCTION TO WYLBUR                                             I.F - 4



        If an invalid response is  given  to  any  of  the  above
        prompts, you will be asked to try again.

        To terminate the sign-on procedure, strike the  attention
        key in response to any of the system's prompts.

        You may bypass  the  INITIALS?   and  GROUP?   prompt  by
        entering that information before it is requested.

              TERMINAL ? S23,ABC,UR
           or
              TERMINAL ? S23
              INITIALS ? ABC,UR

        Blanks or equal signs may replace  the  commas,  and  the
        initials  and  group may be typed as ABC$UR.  The keyword
        prompt, if there is one, cannot be bypassed.

        If you wish to use a terminal just  as  someone  else  is
        preparing  to sign off, you may sign on without repeating
        the whole sign-on procedure provided that the other  user
        has not yet signed off.  Type:

              COMMAND?  LOGON

        WYLBUR will print all the statistics  from  the  previous
        session  and  prompt  for  your  initials.   You may then
        continue as for any sign-on.  Since you will not be going
        through TPMON (TPMON designates the project number to  be
        billed  for  each session) the time for this session will
        be charged to the previous user.  The  TERMINAL?   prompt
        will  not  be given.  LOGIN or SIGNON may be used instead
        of LOGON.  There is no difference in the three  commands.
        Be  sure  to  clear  the  active file for the user before
        issuing the LOGON command.  Otherwise,  the  active  file
        will  automatically  be  saved  by  WYLBUR  and the space
        subtracted from that user's allocation.
1INTRODUCTION TO WYLBUR                                             I.G - 1



 G.  Sign-Off Procedure

 To end a session, issue a LOGOFF, LOGOUT,  or  SIGNOFF  command.
 WYLBUR  will  reply  with  various  statistics on the session as
 shown and return control to TPMON.

       COMMAND? LOGOFF (CR)
       14.73 SECONDS EDITING TIME
       2153 PAGE READS 1887 PAGE WRITES
       127 DISK READS 240 DISK WRITES
       ELAPSED TIME = 01:03:18
       END OF SESSION

 The editing time is the actual computer  (CPU)  time  used  when
 processing  commands.   Page  reads and writes are counts of the
 I/O operations performed to execute the various commands dealing
 with the active or exec file during the session.  Disk reads and
 writes are counts of the I/O operations performed  to  read  and
 write external files.  Elapsed time, which is reported in hours,
 minutes  and  seconds,  is the time during which you were logged
 on through TPMON.

 In addition, WYLBUR keeps track of activity at a terminal and if
 nothing has been typed in at a logged-on terminal for  a  period
 of ten minutes, WYLBUR will ask for some action to show that you
 are still there.

       COMMAND? ###
       ARE YOU STILL THERE?
       COMMAND?

 A carriage return is sufficient reply.  If  you  don't  respond,
 WYLBUR  will give you another five minutes and ask again.  If no
 reply is made, WYLBUR will wait another five minutes and  logoff
 the terminal without further queries.

       COMMAND? ###
       RESPOND OR BE LOGGED OFF.
       COMMAND?

 To avoid being logged off in this manner, type the command:

       COMMAND? SET NOTIME

 This will allow you to remain signed on until you sign  yourself
 off.   On  terminals without the reverse break feature or if you
 have  SET  NOBREAK  the  above  messages  will  not  be  issued.
 Therefore, you will be  logged  off  without  warning  after  20
 minutes of inactivity.
1INTRODUCTION TO WYLBUR                                             I.G - 2


 You cannot logoff with an active file.  If you forget  to  clear
 the  active  file  before  attempting  to  sign off, WYLBUR will
 prompt for permission to clear it.  A YES or OK response  causes
 a  CLEAR  and  normal signoff.  Any other response continues the
 session.  If you are logged off by WYLBUR or if your session  is
 terminated  abnormally  by  communication  problems  or a system
 crash, the WYLBUR system will attempt to save  and  catalog  the
 current  active  file  as an external file named ACTIVE.  WYLBUR
 will save your active file exactly, although the last few  lines
 may  occasionally  be lost if the system crashes.  However, your
 active file will not be saved if you have  exceeded  your  space
 allocation.   You should make sure, therefore, to leave at least
 one sequential track open in the event of a  system  crash.   If
 WYLBUR  crashes  a second time, the new ACTIVE will be saved and
 cataloged (provided you have enough space) and  the  old  ACTIVE
 will  be  uncataloged but not scratched.  You may later retrieve
 your cataloged file ACTIVE by specifying the command USE  ACTIVE
 ON CATLG.  See Section IV for more about the USE command.   Also
 remember to scratch your files named ACTIVE after you have USE'd
 them.
1II.    CREATING A FILE                                             II.A - 1


 II.  Creating a File

 In order to create a file you  must  enter  the  COLLECT   mode.
 You  may   enter   COLLECT  mode  by striking the ATTN key or by
 using the COLLECT command.  The terminal is  in   COLLECT   mode
 when   it   is  prepared  to  accumulate  lines of text typed at
 the terminal and store them in the active area of the computer's
 memory.   Before you enter COLLECT mode, you may want to  adjust
 certain  parameters  for   the   duration  of the WYLBUR session
 such as tab settings or line length.  You may do this  by  using
 the  SET  command  with appropriate  options.    These   options
 are discussed below.



 A.  Global Parameters

 Global parameters are features in WYLBUR which may  be  set   to
 an appropriate  value  and  will  remain  set  at that value for
 the duration of  the  session  or  until  reset.   Two  commands
 are  associated    with   global   parameters:   SET  and  SHOW.
 Global parameters are  changed  by  a  SET  command.   The  SHOW
 command may be used in most cases to see which global parameters
 are  in   effect.  Some parameters described in this section are
 associated with the SHOW  command  but  may  not be set  by  the
 user.  For  additional  information  on  global  parameters  see
 Section IV.



    1. CASE

       Case is determined by the shift key just as   it   is   on
       an  ordinary   typewriter.   However,  unless you give the
       command SET UPLOW  (set  upper  and  lower  case)   before
       starting  in  COLLECT  mode,  in   file will be stored and
       listed  only in upper case no matter which case characters
       you type.

       COMMAND? COLLECT  (CR)
         1.   ? This is a sample passage to show what (CR)
         2.   ? happens when you type in upper and lower (CR)
         3.   ? case without setting UPLOW. (CR)
         4.   ? ***(ATTN)
       COMMAND? LIST (CR)
         1.     THIS IS A SAMPLE PASSAGE TO SHOW WHAT
         2.     HAPPENS WHEN YOU TYPE IN UPPER AND LOWER
         3.     CASE WITHOUT SETTING UPLOW.
       COMMAND?
1CREATING A FILE                                                    II.A - 2


       If UPLOW is  in  effect,  you   may   revert   to   having
       all  alphabetic characters in upper case by giving the SET
       UPPER command.   The  command  SHOW  CASE can be  used  to
       find out whether UPPER or UPLOW is currently in effect.

       COMMAND?  SHOW CASE (CR)
       UPPER CASE ONLY

       Note that the SET UPLOW  command  is  only  operable  with
       "up-low"  terminals.  The Hazeltine terminals available at
       CUCC use upper case only for  alphabetic  characters.   If
       you  SET  UPLOW  and  use the shift key while typing on an
       Hazeltine the cases will appear as below.

                 ABCDEFGHIJKLMNOPQRSTUVWXYZ   <--user enters
                 QRSTUVWXYZÝ¬¢|_@ABCDEFGHIJ   <--WYLBUR transmits

       This means that if you type an A while holding  the  shift
       key, the Hazeltine will display and transmit a Q, etc.

    2. TABS

          Tabs may be used with WYLBUR to speed up terminal input
          and output by skipping long strings  of  blanks.   This
          requires  a SET TABS command  for internal WYLBUR tabs,
          and the setting of the hardware tabs.

       a. Selectric Terminals

          There is a distinction  between  setting  tabs  in  the
          WYLBUR  system  with  the  SET  command and setting the
          hardware tabs on the terminal typewriter.  The hardware
          tabs  are  set  and  cleared  as   for   any   electric
          typewriter.   Their use during typing is also the same.
          However,  you  cannot  use  the  tab  settings  on  the
          typewriter unless you have already set the WYLBUR  tabs
          with  a  SET TABS.  If you try to do so, you will get a
          diagnostic message after every line in  which  you  use
          UNSET  TABS  (tabs  that  have  not  been  set  through
          WYLBUR).  WYLBUR  will  use  tabs  while  listing  text
          unless   SLOWLIST   is   set.   The  WYLBUR  tabs  must
          correspond to the hardware tabs.  Once tabs  have  been
          set, they are used to speed up listing by skipping long
          strings of blanks.

          To SET TABS, first clear the hardware tabs  by  holding
          down  the CLEAR switch while spacing over to the end of
          a line.   Then  hit  carriage  return.   You  may  then
          proceed from section b below.
1CREATING A FILE                                                    II.A - 3


       b. Setting Tabs - Long Form--Spacing Over

          COMMAND? SET TABS (CR)
          TYPE A "1" BENEATH EACH POSITION AT WHICH YOU SET A TAB.
                    12345678911234567892123456789312...
  +                          _         _         _
            START ?

          Starting at the left, space  over  to  each  successive
          column  in  which  you  want  a  tab set, press the SET
          toggle switch on the keyboard, and then type the number
          1.  You may set a maximum of eight tabs.

          COMMAND? SET TABS (CR)
          TYPE A "1" BENEATH EACH POSITION AT WHICH YOU SET A TAB.
                    12345678911234567892123456789312...
+                            _         _         _
             START ?         1         1         1 (CR)
          VERIFY             1         1         1

          The example above  shows  the  successful  setting  and
          verifying  of  the  tabs  in  columns  10,  20, and 30.
          Because the physical tab settings at the terminal  must
          correspond  to  the  information  given when using this
          form of the  SET  TABS  command,  WYLBUR  will  type  a
          verification  line.   WYLBUR  will  tab  to each of the
          positions and  again  type  1.   If  the  1's  are  not
          directly under each other, reset the physical tabs.


       c. Setting Tabs - Short Form--Appending Column Numbers

          You may append to  the  SET  TABS  command  a  list  of
          numbers  representing  the  column  numbers for the tab
          settings.  If the  1's  are  not  directly  under  each
          other, reset the physical tabs in the proper positions.
1CREATING A FILE                                                    II.A - 4


          COMMAND? SET TABS = 10,20,30 (CR)
          VERIFY             1         1         1
          VERIFY             1         1         1

          Because the physical tab settings at the terminal  must
          correspond  to  the  information  given when using this
          form of the SET TABS  command,  WYLBUR  will  type  two
          verification  lines.   WYLBUR  will  first space out to
          each of the tab positions and type a 1.  Then  it  will
          tab  to each of the positions and again type 1.  If the
          1's are  not  directly  under  each  other,  reset  the
          physical tabs.

          If the tabs have not been set and the tab key is  used,
          WYLBUR will pay no attention to the line and will issue
          the message:

                   UNSET TABS - RETYPE

          This also occurs if the tab key is pressed  more  times
          than  there are tabs set.  If you are not sure how many
          tabs have been set, ask WYLBUR to SHOW TABS.

          COMMAND? SHOW TABS (CR)
          10 - 20 - 30  -  TABS

          The SET SLOWLIST command will suppress the use of  tabs
          in  listing  if  they have been set.  SET FASTLIST will
          cause WYLBUR to resume using tabs in output.   To  find
          out  which  option  is  in  effect, use either the SHOW
          FASTLIST or SHOW SLOWLIST command.

          You may suppress the verification of tabs  in  the  SET
          TABS command by specifying NOVERIFY.

          COMMAND? SET TABS NOVERIFY (CR)
          TYPE A "1" BENEATH EACH POSITION AT WHICH YOU SET A TAB.
                    12345678911234567892123456789312...
+                            _         _         _
             START ?         1         1         1 (CR)
          COMMAND?

          You may request that the tabs be verified in  the  SHOW
          TABS command by using the VERIFY option.

          COMMAND? SHOW TABS VERIFY (CR)
          VERIFY             1         1         1
          VERIFY             1         1         1


       d. CRT Terminals

          To set tabs use the short form described above.
             You  may  physically  set  the  tabs by
          simultaneously depressing the CTRL  and  I  keys  after
          spacing the cursor to the desired column.  Set SLOWLIST
          to see the tabs in the proper columns.

1CREATING A FILE                                                    II.A - 5


       e. Clearing Tabs

          To clear the tab settings during  a  session,  use  the
          CLEAR  TABS  command.   This  will  suppress the use of
          tabs.  There is little reason to do so since  SET  TABS
          automatically  clears  the old WYLBUR tabs as its first
          action and SET SLOWLIST will also suppress the  use  of
          tabs for listings.

          COMMAND? CLEAR TABS (CR)
          COMMAND? SHOW TABS (CR)
          NO TABS



    3. DELTA

       DELTA is the increment which WYLBUR adds  to  the  present
       line  number  to  get  the next one.  It is also used as a
       starting line number for a file.  You may set a value  for
       DELTA  at any number between .001 and 99999.999 inclusive.
       If you do not set DELTA, 1.000 is  used  as  the  default.
       The line number increment can be set to a value other than
       1.000  in several ways.  You may set it temporarily at the
       time you enter COLLECT mode, or you may reset the  default
       DELTA with the SET DELTA command.

       a. Setting Delta with the SET Command

          Delta  may  be  set  at  any  time  in  response  to  a
          "COMMAND?" prompt by the system.

          COMMAND?  SET DELTA  5 (CR)

          The current value for this parameter can be ascertained
          as follows:

          COMMAND? SHOW DELTA (CR)
           5.  - DELTA

       b. Setting DELTA with the COLLECT Command

          COMMAND? COLLECT 90 BY 10 (CR)
           90.   ?

          This command will start collecting lines 90, 100,  110,
          etc.   The  specified  increment  of  10 will remain in
          effect as long as the command is in effect.   The  line
          number  increment  can be set implicitly with a command
          which specifies a line number with a  fractional  part.
          This is useful, for example, to do a COLLECT which will
          insert  lines  between  existing lines.  If this is the
          text:

           25.  to fully express our gratitude to
           26.  Mr. Jones, Eileen Roberts and the rest of the
1CREATING A FILE                       II.A - 6                     II.A - 6


          Material  can  be  inserted  between  these  lines   by
          entering:

          COMMAND? COLLECT 25.1 (CR)
           25.1  ?

          WYLBUR will now COLLECT lines 25.1, 25.2, etc.,  adding
          one  to  the  low-order  fractional  unit.  It will not
          COLLECT 26.0 because that would write over  an  already
          existing line.

          COMMAND? COLLECT 25.1 (CR)
            25.1   ?  THE NEXT LINE (25.2) IS ALREADY THERE (CR)
          NO REPLACE OR INTERLEAVE
          COMMAND?


    4. LENGTH

       LENGTH is another global parameter and may be set  to  any
       value between 1 and 133 characters.  If you do not set the
       LENGTH attribute, it defaults at SIGNON to a value of 72.

       COMMAND? SET LENGTH  30 (CR)

       WYLBUR will accept lines which are  longer  than  the  set
       length,  but  a  message  will  be  typed  out  after each
       over-length line  indicating  that  the  length  has  been
       exceeded.

       32.  ? THIS LINE IS LONGER THAN LENGTH, WHICH IS 30.  (CR)
       LINE NO. 32. CONTAINS 45 CHARACTERS
       33.  ?

    5. TERSE-VERBOSE

       The SET TERSE command  shortens  WYLBUR's  usual  COMMAND?
       prompt to a ?  The TERSE mode also eliminates the response
       to  certain commands and causes a short form of file names
       to be typed to the user instead of  the  full  name.   See
       Section IV.D on file naming conventions.

       COMMAND? SET TERSE (CR)
       ?
       SET VERBOSE returns this parameter to its default.

       ? SET VERBOSE (CR)
       COMMAND?

1CREATING A FILE                                                    II.B - 1


 B.  COLLECT (Short Form:  COL, C)

 To enter COLLECT mode, type COLLECT and  a  carriage  return  in
 answer to WYLBUR's prompt, "COMMAND?"

       COMMAND? COLLECT (CR)

 WYLBUR will then type a line  number  and  allow  you  to  begin
 entering  text  into the system.  When you finish a line and use
 the carriage return, WYLBUR will  respond  with  the  next  line
 number so that you may continue to enter information.

       COMMAND? COLLECT (CR)
         1.    ? I am interested in creating (CR)
         2.    ? a WYLBUR file. (CR)
         3.    ?

 As a convenience, the COLLECT command can be given in one of two
 shortened forms:  COL and C.

       COMMAND?  COL (CR)
           1.    ?

 Remember to leave COLLECT  mode  before  giving  a  command,  or
 WYLBUR will interpret the command as part of the file.

           3.    ? LIST (CR)
           4.    ? ***
         COMMAND?


 The *** shows that the ATTN key was  pressed  and  that  changed
 WYLBUR  back  to  COMMAND  mode.  The LIST command in line 3 was
 accepted as text and not recognized as a command by WYLBUR.

    1. Specifying Line Numbers

       It is possible to start collecting lines at a number other
       than one by specifying the number in the COLLECT command.

       COMMAND? COLLECT 10 (CR)
          10.   ?


       If no line number is given in the COLLECT command,  WYLBUR
       will  resume  collecting at the place it left off when you
       were last in COLLECT mode.  If this is impossible  because
       it  would  overwrite an already existing line, WYLBUR will
       abort the command and print  out  the  message:
                  "xxxx. LINE NO. ILLEGAL."

       The command, COLLECT END, will cause  WYLBUR  to  add  the
       value  of  DELTA  to the highest line number in the active
       file and prompt with that line number.
1CREATING A FILE                                                    II.B - 2



    2. MERGE

       If you use the MERGE option, the collected lines  will  be
       interleaved  among  line numbers that already exist in the
       active  file.   The  line  numbers  must  be   such   that
       interleaving is possible.  For example, if the active file
       consists only of odd numbered lines,  the command

                 COLLECT 2 BY 2 MERGE (CR)

       will result in prompts for even  numbered  lines  and  the
       result would be a merged file.

    3. CLEAR

       You  may  specify  that  the  active   file   be   cleared
       (completely erased) as you begin COLLECTing a new file.

       COMMAND? COLLECT CLEAR (CR)
         1.   ?
1CREATING A FILE                                                    II.C - 1


 C.  Line Numbers

 Line numbers may be expressed  in  WYLBUR  commands  in  several
 ways.   The  simplest  way  is  by default as shown in the first
 example of the COLLECT command.  The default is 1 for both   the
 DELTA and the first line number.

 Line numbers may be a constant or arithmetic expression.   There
 are also 6 symbolic line numbers for the active and exec files.

    1. Constants

       The constant may be any line number of the form nnnnn.nnn.
       Each of the following is  an  example  of  the  same  line
       number.

            00032.000       32.
               32.000       32

    2. Arithmetic Expressions

       You may refer to a line number with  a  simple  arithmetic
       expression  having  a  +  or -.  29+3 and 100-68 are valid
       line numbers; they both refer to line 32.   However,  29+3
       may refer to line 29.3 if lines 29.1 and 29.2 are present.
       There  are  some restrictions on expressing a line in this
       form.

       æ There can be no blanks.  30 + 2  is  not  a  valid  line
         number.

       æ The resultant number must be a valid line number between
         0 and 99999.999.  30+2 is a valid line number whether  a
         file  has  a  line numbered 32 or not but 30-32 is not a
         valid line number.

       æ There can be only one + or -.   An  expression  such  as
         30+4-2 is not allowed.

       If you express a line number as an  arithmetic  expression
       in  a  command,  WYLBUR replies with the line number which
       corresponds to it.

            COMMAND? COLLECT 30+2
               32.   ?

    3. Symbolic Line Numbers

       There are six pointers to lines in  the  active  and  exec
       files called symbolic line numbers.

            FIRST        - first line in a file
            LAST         - last line in a file
            END          - last line + DELTA
            CURRENT or * - last line edited
            PREVIOUS     - line before CURRENT
            NEXT         - line after CURRENT
1CREATING A FILE                                                    II.C - 2


       Consider a hypothetical file numbered consecutively from 1
       to 10 with a DELTA of 1.  The first  three  symbolic  line
       numbers are:

            FIRST = 1
            LAST  = 10
            END   = 11

       END does not point to an existing line; it points  to  the
       line  number  of the next line to be added to the end of a
       file.

       The next three symbolic line numbers (CURRENT,  NEXT,  and
       PREVIOUS)  may or may not be set, depending on the actions
       you have taken.  If you are creating a file  and  entering
       lines,  CURRENT  or * points to the last LINE NUMBER typed
       by WYLBUR.  But if you have just fetched an external  file
       the  CURRENT  line  is  not  set.   PREVIOUS  and NEXT are
       entirely dependent on CURRENT.  For instance, if you  have
       just  typed  line   10   into   the   hypothetical   file,
       CURRENT=11=END, PREVIOUS=10, and NEXT=12.



    4. Referring to Line Numbers

       Very often it is handier to refer to a line number by  its
       symbolic  pointer  rather  than  its  actual number.  This
       feature can be extended by using symbolic line numbers  in
       arithmetic  expressions to refer to one line or a range of
       lines.

             INSERT FIRST-.1
             LIST   */LAST
             DELETE *, *+4, *+6

1CREATING A FILE                                                    II.D - 1


 D.  The LIST Command (Short form:  L)

 You may use the LIST command to see your  file  printed  at  the
 terminal.   The  example  which  follows  is a form letter which
 shows what happens in response to a LIST command.  Each line  of
 text  is  printed with its associated line number.  When all the
 lines in a file have been listed,  WYLBUR  prompts  for  another
 command.  To stop the listing at any time, press the ATTN key.

       COMMAND? LIST (CR)
         1.     We regret that because of the budget restrictions
         2.     and travel ceiling under which we are now
         3.     operating, we are unable to approve your
         4.     request of $1000 for foreign travel.
         4.5    $
         5.     Please feel free to call on us at any time
         6.     for information about your grant.
         7.
         8.                      Sincerely yours,
         9.
        10.
        11.                      John Jones
        12.
        13.     $
       COMMAND?

 For further information on the LIST command see Section VI.A.

    1. UNNUMBERED/NONUMBERED

       To list a file without line numbers, specify UNNUMBERED.

       COMMAND? L UNNUMBERED (CR)
       We regret that because of the budget restrictions
       and travel ceiling under which we are now
       operating, we are unable to approve your
       request of $1000 for foreign travel.
       $
       Please feel free to call on us at any time
       for information about your grant.

                        Sincerely yours,


                        John Jones

       $

       Note that the text is shifted to the left into the columns
       normally occupied by the line numbers.

1CREATING A FILE                                                    II.D - 2


       To list a file without line numbers, but without  shifting
       to  the left specify NONUMBERED, this puts blanks in place
       of the numbers on the left.

       COMMAND? LIST NONUMBERED (CR)
                We regret that because of the budget restrictions
                and travel ceiling under which we are now
                operating, we are unable to approve your
                request of $1000 for foreign travel.
                $
                Please feel free to call on us at any time
                for information about your grant.

                                 Sincerely yours,


                                 John Jones

                $
       COMMAND?



    2. MARKER

       You may specify one character as a MARKER. If this  MARKER
       occurs  in  the first column of any line in the range, the
       listing  will  be  temporarily  suspended,  but  a  MARKER
       elsewhere  in  a  line  will  be  treated  as  any   other
       character.   After  suspension, the listing may be resumed
       by striking the carriage return  key.  The  MARKER  itself
       will  not  be listed.  Do not use the characters:

                        (  )  "  '  ,  =

       blank or lower case letters as markers unless you  enclose
       them in quotation marks such as:

       LIST UNN MARKER = "=" (CR)

       COMMAND? LIST MARKER = $ UNNUMBERED (CR)
       We regret that because of the budget restrictions
       and travel ceiling under which we are now
       operating, we are unable to approve your
       request of $1000 for foreign travel.
       (CR) (hit carriage return to continue listing)
       Please feel free to call on us at any time
       for information about your grant.

                        Sincerely yours,


                        John Jones

       (CR) (hit carriage return to continue listing)

1CREATING A FILE                                                    II.D - 3


       Notice that the lines containing the MARKER in column  one
       (lines  4.5  and  13)  are not printed and that the MARKER
       character is recognized only when it occurs in column one.
       Also, if you insert a  new  sheet  of  paper  just  before
       striking  the Carriage Return which begins the listing and
       remove it just before typing the  final  Carriage  Return,
       the  COMMAND?   prompt  will  not  mar  the listing of the
       letter.


    3. CLEAN

       In order to  be  certain  that  no  message  from  another
       terminal will interrupt your listing, add the CLEAN option
       to  the  above  command.   Note  that  messages  from  the
       operator can interrupt you.

       COMMAND? LIST CLEAN MARKER=$ UNN (CR)


    4. NOTEXT

       Though there would be no point in doing this to  the  form
       letter, you may have just the line numbers listed.

       COMMAND? LIST NOTEXT (CR)
          1.
          2.
          3.
          4.
          4.5
          5.
          6.
          7.
          8.
          9.
         10.
         11.
         12.
         13.
       COMMAND?

       This NOTEXT option is more  useful  for  creating  a  file
       which is a computer program rather than a simple text, and
       then finding the line numbers of all lines which contain a
       certain series of characters.  This character string might
       typically  be  a mathematical formula or an instruction to
       the  computer  and  is  illustrated  in  the  section   on
       associative range which is on the next page.

       In general, wherever LIST is a valid option on a  command,
       the  NONUMBERED, UNNUMBERED, NOTEXT, and NOLIST parameters
       are also valid.  This  applies  to  the  INSERT,  COLLECT,
       REPLACE, DELETE, and CHANGE commands for example.
1CREATING A FILE                                                    II.D - 4


    5. EXPLICIT Range

       You may restrict the LISTing to a specific range by giving
       the line numbers of the  first  and  last  numbers  to  be
       listed  separated by a slash.  Range is discussed fully in
       Section III.

       COMMAND? LIST 5/7 (CR)
         5.     Please feel free to call on us at any time
         6.     for information about your grant.
         7.
       COMMAND?

       If you do not specify a range,  ALL  is  assumed  and  the
       entire the entire file will be listed.


    6. ASSOCIATIVE Range

       The following example shows that WYLBUR  can  be  used  to
       find  instances  of  some  character  string  which  is of
       interest  to  the  user.   WYLBUR  will  find  all   lines
       containing  the  word  "your"  and  print  their image for
       inspection.

       COMMAND?  LIST 'your' (CR)
         3.      operating, we are unable to approve your
         6.      for information about your grant.
         8.                        Sincerely yours,
       COMMAND?

       Line 8 is listed because "yours" contains  the  characters
       'your'.  Had you specified ' your ' in the command, line 8
       would not have been listed.

    7. EXPLICIT and ASSOCIATIVE Range

       You may combine the explicit and associative ranges in the
       LIST command.  To list all lines which contain ' your ' in
       lines 1 through 5:

       COMMAND? LIST ' your ' in 1/5 (CR)
         3.     operating, we are unable to approve your
       COMMAND?

       Case is significant,  and  asking  for  'YOUR'  would  not
       retrieve  these  lines.  Unless you have SET UPLOW in this
       session, you cannot reference a string that contains lower
       case characters.

       You could also ask for only the line numbers of the  lines
       containing the string.
1CREATING A FILE                                                    II.D - 5


       COMMAND? LIST 'your' IN ALL NOTEXT (CR)
         3.
         6.
         8.
       COMMAND?

       Likewise, you could append the phrase  UNNUMBERED  instead
       of NOTEXT and receive the line contents only.

1CREATING A FILE                                                    II.E - 1


 E.  The NUMBER Command


 You may request WYLBUR to change the line numbers of  the  lines
 of text in an active file by typing the NUMBER command.

       COMMAND? NUMBER (CR)

 This causes the renumbering of all the  lines  of  text  in  the
 file,  using  the  current  value  of  the  DELTA parameter as a
 starting line and as an increment.

    1. Specifying a Starting Line

       You may specify another number at which the  numbering  is
       to begin by giving it in the command.

       COMMAND? NUMBER 2.065 (CR)
         673.065 - LAST LINE.
       COMMAND?

       WYLBUR will then start at a value of 2.065 for  the  first
       new line number and print the number of the last line.

    2. Specifying Delta

       You may temporarily  override  the  setting  of  the  line
       number  increment,  DELTA,  and  ask WYLBUR to use another
       value.

       COMMAND? NUMBER 2.065 BY .01 (CR)
           8.795 - LAST LINE.
       COMMAND?
1CREATING A FILE                                                    II.E - 2


    3. Scaling

       You may also simply scale the existing line numbers in the
       file by a given line number.

       COMMAND?  NUMBER TIMES 10 (CR)
        6740.     - LAST LINE.
       COMMAND?

       would cause all line numbers in the file to be  multiplied
       by 10 while

       COMMAND? NUMBER TIMES .1 (CR)
          67.4   - LAST LINE.
       COMMAND?

       would cause all line numbers to be effectively divided  by
       10.   Remember, this command causes the renumbering of the
       entire file and not just a specific range.

       WYLBUR line numbers must be between 0.000 and 99999.999.


    4. Range

       You may specify a single  range  of  starting  line/ending
       line

       COMMAND? NUMBER 600/1500 (CR)

       would number lines 600 through 1500 by the current  delta.
       The  first  line in the renumbered lines would be 600.  If
       there were too many lines  to  be  accommodated  with  the
       current delta, WYLBUR would calculate the largest possible
       DELTA to make them fit.
1III.  EDITING AN ACTIVE FILE                                     III.A - 1


 III.  Editing an Active File

 WYLBUR is a powerful text editor with a number of commands  which
 may be used to change part of an active file.  With these you may
 change  or delete single characters, groups of characters, entire
 lines or even groups  of  lines.   The  editing  commands  either
 affect  an  entire  line  or  part  of a line.  The commands that
 affect a whole line are:

         DELETE                COPY                ALIGN
         INSERT                MOVE                JUSTIFY
         REPLACE               CENTER

 Commands that affect part of a line are:

         CHANGE                EDIT                MODIFY

 All of these commands may be confined to one line or may treat an
 entire file. The MODIFY command is used to insert, blank, delete,
 or  replace  parts of a single line.  The EDIT Command is used to
 replace parts of a single line.  The CHANGE  command  can  effect
 changes  either  within  a  single  line or throughout a group of
 lines.  Before editing a file, you need to know how line  numbers
 may  be  specified  in  WYLBUR  and the various ways there are to
 refer to a range of lines.  These are necessary in order  to  use
 the editing commands efficiently.


 A.  Specifying Ranges

 Various commands use range  options.   These  commands  must  all
 refer  to an explicit range, but it may be implied by the default
 range ALL in the following commands.  However in  all  of  these,
 you may specify an explicit range to override the default.

         CHANGE                LOAD                PUNCH
         COPY                  MODIFY              REPLACE
         EDIT                  NUMBER              RUN
         LIST                  POINT               SUGGEST

 In the MOVE, DELETE, CENTER, JUSTIFY and ALIGN commands you  must
 specify an explicit range.  The commands LIST, REPLACE and DELETE
 will be used here to illustrate range.

1EDITING AN ACTIVE FILE                                           III.A - 2


    1. Explicit Range

       An EXPLICIT RANGE is a line or group of lines identified by
       its line numbers.  This type of range is denoted in  WYLBUR
       by giving the numbers of the first and last lines separated
       by a slash.

       COMMAND?  LIST 1/10 (CR)

       The range in the command  above  includes  all  lines  from
       1.000  to  10.000.   A  single  line  is referred to by its
       number alone.

       COMMAND?  REPLACE 79.3 (CR)


       Through the use of disjoint explicit ranges, the  user  can
       specify  up  to  eleven different line numbers or ranges in
       one command.  The LIST can contain single lines or  groups,
       and ranges can overlap, but each group counts as two of the
       numbers allowed.

       COMMAND? LIST 1,7,4,3.6,6/10,5 (CR)

       This command will list line 1 followed by line 7, then line
       4, line 3.6, lines 6 through 10 inclusive, and then line 5.
       In this example, six of the eleven ranges allowed are used.


    2. Explicit Range - Count Field

       Another way of denoting an explicit range of  lines  is  by
       using  the  first  line number followed by a count field in
       parentheses.  The count must be a positive integer.

       COMMAND?  LIST 10(6) (CR)

       would list the six lines starting at line 10.   It  is  not
       necessarily the same range as 10/15 unless the next 6 lines
       are  numbered  10,  11,  12, 13, 14 & 15.  LIST 10(6) might
       produce a list of lines 10, 40, 41, 42, 68 and 72 if  those
       were the next six lines in the file.


       FIRST (F) and LAST (L) can also be used to define a range:

       FIRST/LAST or F/L or ALL
       1.05/LAST or 1.05/L
       FIRST/10.0 or F/10.0

       The word ALL has the same meaning as FIRST/LAST.

       CURRENT, PREVIOUS and NEXT can be used to define a range if
       the CURRENT line has been set.  (See  Section  II.C  for  a
       discussion of symbolic line numbers.)
1EDITING AN ACTIVE FILE                                           III.A - 3


    3. Associative Range

       An ASSOCIATIVE RANGE specifies a line  or  group  of  lines
       each  of  which  contains  a  certain series of characters.
       This type of range is specified by enclosing the  character
       string within quote marks and indicating which lines should
       be searched by giving an explicit range. If the command has
       a default range of ALL, only the associative range need  be
       specified unless you wish to override that default.

       a. Use of Quotes

          A terminal  keyboard has two types  of  quote  marks,  a
          single  quote  (')  and  a  double quote (").  Either of
          these may be used to enclose the character  string,  but
          consistency must be maintained.  Thus, the following are
          valid associative ranges.

          "VARIABLE" IN ALL
          'X*(15 A * B**2)' IN 1/10

          The following example, however, is not valid.

          "VARIABLE'

          Also note that blanks are significant in an  associative
          range specification, so that,

          " BLANKS ARE PART OF THE STRING " IN 5/15

          and

          "BLANKS ARE PART OF THE STRING" IN 5/15

          are not equivalent range specifications.

          If a quote mark appears in  the  character  string,  you
          must  follow  some  additional  rules.  It is easiest to
          enclose the character  string  in  quotes  of  the  type
          opposite of those appearing within the character string.
          If  the  same type of quotes must be used to enclose the
          string, type those  quote  marks  which  appear  in  the
          character  string  as  two  consecutive instances of the
          quote mark.  For example:

          "DON'T" IN ALL
             and
          'DON''T' IN ALL

          both designate the range  of  lines  which  contain  the
          character string:  DON'T.

1EDITING AN ACTIVE FILE                                           III.A - 4


       b. Specifying the Ordinal Occurrence of a String

          It is not necessary to  consider  all  the  lines  which
          contain the specified string of characters.

          COMMAND?  LIST 'INTEGER' (1,3,5/10) (CR)

          is legal and will  list  the  first,  third,  and  fifth
          through  tenth  lines  in  which  the  character  string
          INTEGER  occurs.   The occurrence list must be ascending
          with no overlap of range and should not be confused with
          specific line numbers 1, 3, and 5 through 10.   Remember
          that  WYLBUR  cannot tell when a line contains more than
          one instance of the specified string.  WYLBUR  prohibits
          the   use  of  the  occurrence  specifications  and  the
          multiple group explicit range in the same command.

          A maximum of ten numbers or ranges  may  appear  in  the
          occurrence list.

       c. Specifying Column Position

          The user may restrict an associative range by  suffixing
          the string with column positions within which the string
          must be contained in any given line.

          COMMAND?  DELETE 'INTEGER' 10/16 IN ALL (CR)

          The  above  command  will  delete  all  lines  in  which
          'INTEGER' occurs in columns 10 to  16.   Note  that  the
          string  must  begin  and end within the specified column
          positions.  If only one column  position  is  specified,
          the string is required to start in that column position.

       d. Specifying Null Lines

          Blank lines are considered by WYLBUR to  be  lines  with
          null  content.   Thus,  the  associative  range '' or ""
          would retrieve all blank lines in the active file.   The
          range  '  '  or  " " would retrieve all lines having one
          blank and at least one  non-blank  character;  in  other
          words, not blank lines.

    4. Negative Associative Range

       You may specify the lines which do not  contain  a  certain
       character string by using the ¬ symbol and quotes.

       COMMAND? LIST ¬'not this string' (CR)

       WYLBUR will list all the lines which do not contain:
       'not this string'.
1EDITING AN ACTIVE FILE                                           III.B - 1




 B.  The DELETE, INSERT, and REPLACE Commands

 These three commands may be used to completely erase a  line  and
 its  line  number,  insert a new line and line number, or replace
 the contents of an existing line.

    1. DELETE (Short Form:  DEL or D)

       You may delete (erase) lines in an active  file  by  giving
       the  DELETE  command  and the number of the line to delete.
       The deleted lines are erased, not replaced by blanks.   The
       line numbers of the deleted lines are erased, too.

       a. Deleting a Single Line

       COMMAND? DELETE 5.03 (CR)

       b. Deleting an Explicit Range of Lines

       You may also delete a range by typing  the  number  of  the
       first and last lines of the range.  Up to 5 disjoint ranges
       are allowed.

       COMMAND? DELETE 5.03/6.08 (CR)

       c. Deleting an Associative Range

       You can also have all lines containing a specific character
       string eliminated.  These lines are  an  associative  range
       and  the  string must be enclosed in quotation marks.  Note
       that the associative range  is  in  addition  to,  and  not
       instead of, the explicit range (see Section III.A).

       COMMAND?  DELETE 'X = 3Y' IN ALL (CR)

       This command  will  eliminate  all  lines  containing  this
       equation   from   the  file.   However,  if  the  specified
       character string is split between two  lines,  WYLBUR  will
       not recognize it.

       d.  LIST

       The LIST option allows you to look at the lines after  each
       is  deleted.   If  you are deleting a range and listing it,
       you have time to stop the command by pressing the ATTN key.
       The line being listed will already have been deleted.

       COMMAND?  DELETE 1 35 LIST (CR)

       You are cautioned not to abbreviate  LIST  with  an  L.   L
       stands  for LAST when used as a parameter and thus the last
       line of your file would be deleted and no lines listed.
1EDITING AN ACTIVE FILE                                           III.B - 2



    2. INSERT (Short Form:  INS or I)

       Opposite to the DELETE command is the  INSERT  command.   A
       line  to  be  inserted  must have a line number assigned by
       you.  If you attempt to insert a line with the same  number
       as  an  existing line, WYLBUR prompts with an error message
       that that line is in the file and no insert may be made.

         COMMAND? INSERT 1934  (CR)
          1934.    IN FILE. NO INSERT.

       a. Inserting One Line

          COMMAND? INSERT 13.02 (CR)
           13.02 ?

          The above command is to insert a  line  numbered  13.02.
          WYLBUR responds with that number and expects you to fill
          in  the  contents of the line as if you were temporarily
          in COLLECT mode.

       b. Inserting Multiple Lines - Explicit Range

          It is also possible to insert  more  than  one  line  at
          multiple  points in the active file.  WYLBUR will prompt
          with each line number to be inserted.

          COMMAND? LIST 1/6 (CR)
            2.     THIS IS AN OLD LINE
            4.     THIS IS AN OLD LINE
          COMMAND? INSERT 1,3 (CR)
            1.   ? I AM A NEW LINE (CR)
            3.   ? I AM A NEW LINE TOO (CR)

          The explicit range may specify up to 21 lines,  but  you
          may  not  specify a continuous range of lines by using a
          slash(/), such as 1/3.

       c. Inserting One Line at Multiple Points - DITTO

          The DITTO option may be used to insert one line at up to
          21 points within a file.  WYLBUR  will  prompt  for  the
          first line only.

          COMMAND? INSERT 1,3,5 DITTO (CR)
            1.     I AM A NEW LINE (CR)
          COMMAND? LIST 1/6 (CR)
            1.     I AM A NEW LINE
            2.     THIS IS AN OLD LINE
            3.     I AM A NEW LINE
            4.     THIS IS AN OLD LINE
            5.     I AM A NEW LINE
1EDITING AN ACTIVE FILE                                           III.B - 3


       d. Inserting Multiple Lines - COLLECT

       You may insert  several  consecutive  lines  by  specifying
       COLLECT.  Though this is, strictly speaking, not the INSERT
       command, the effect is to insert lines.

          COMMAND?  COL 2.1 (CR)
            2.1     My new line (CR)
            2.2     My 2nd new line (CR)
            2.3     My third new line (CR)
            2.4 ?   ***(ATTN)
          COMMAND?

          The command stops when the last line inserted plus DELTA
          equals an existing line.  Note that DELTA is temporarily
          changed by the form with  which  you  specify  the  line
          number to be collected.  For instance,

          COMMAND?  COL 2.0 (CR)
            2.  ?   This is the first line (CR)
            2.1 ?   This is the second (CR)
            2.2 ?   This is the third (CR)
            2.3 ?   ***(ATTN)
          COMMAND?

          or

          COMMAND?  COL 2.00  (CR)
            2.   ?  This  is the first line   (CR)
            2.01 ?  This is the second    (CR)
            2.02 ?  This is the third    (CR)
            2.03 ?  ***(ATTN)
          COMMAND?


    3. REPLACE (Short Form: REP or R)

       To delete the contents of a line and  insert  another  line
       into  the  file  with  the same number in one step, use the
       REPLACE command.

       COMMAND? REPLACE 13.06 (CR)
          13.06  ?

       WYLBUR  will  overwrite  the  old  contents  of  the   line
       specified with the new contents which you type in.

1EDITING AN ACTIVE FILE                                           III.B - 4


       a. LIST

          If you use the LIST option, WYLBUR will  list  the  line
          first and then prompt with the line numbers.

          COMMAND?  REPLACE 13.06 LIST (CR)
            13.06  THIS IS THE OLD LINE
            13.06?

          Do not use L as an abbreviation for  LIST;  it  will  be
          interpreted as LAST.

       b. Explicit Range

          You may specify that a range of  lines  be  replaced  in
          which  case  WYLBUR  will prompt successive line numbers
          from the specified range until the range  is  exhausted.
          If  you  wish to replace lines 1.02, 1.03, 1.031, 1.032,
          1.033, 1.04, and 1.05 of a file, do as follows:

          COMMAND?  REPLACE 1.02/1.05 (CR)

          WYLBUR will prompt for new contents  of  each  currently
          existing line between 1.02 and 1.05.

          If you reply to a  line  prompt  with  only  a  carriage
          return, the line will not be replaced.

          If you hit only the ATTN key as the new contents of  the
          line,  the  REPLACE  command  is  aborted,  and  the old
          contents of the line remain unchanged.

       c. Associative Range

          You may also REPLACE all the  lines  in  an  associative
          range.

          COMMAND?  REPLACE '3*X*X*Y/3.14159' (CR)

          WYLBUR will then prompt with the  number  of  each  line
          containing  the  character  string  which  is within the
          quotation marks.  For further information on associative
          ranges, see Section III.A, Specifying Ranges.

          You cannot replace the contents of a line which does not
          exist in the file--i.e.,  use  the  REPLACE  command  to
          insert.   Should  you  attempt  to  do this, WYLBUR will
          reply with the message VOID RANGE.  To do this, use  the
          INSERT command.

1EDITING AN ACTIVE FILE                                           III.B - 5


       d. DITTO Option

          You may replace more than one line at a  time  by  using
          the DITTO option.

          COMMAND? REPLACE 10/20 DITTO (CR)
             10.   ?



          Whatever you type for line 10 will be repeated for lines
          (already there) between 10 and 20, inclusive.

       e. Using the ATTN Key

          If you hit the ATTN key while replacing a line, any text
          already typed will be ignored  and  WYLBUR  will  prompt
          again  for  the  line.   If  you  hit ATTN before typing
          anything in the line, the command will  be  aborted  and
          the line will not be replaced.

          COMMAND? REPLACE 4 (CR)
              4.   ? This is not the text that I want ***(ATTN)
              4.   ? ***(ATTN)
          COMMAND? LIST 4 (CR)
              4.   THIS IS THE OLD TEXT.

    4. Alternate Short Form of DEL, INS, REP

       There is another short form for  the  DELETE,  INSERT,  and
       REPLACE commands:

       COMMAND?  13.06 (CR)

       Line 13.06 will be deleted.

       Type the full line of text for  the  inserted  or  replaced
       line:

       COMMAND?  13.06 The new contents of this line go here.

       There must be a blank as the required separator between the
       line number and the contents of the line.   Line  13.06  is
       replaced if it already exists and inserted if it does not.
1EDITING AN ACTIVE FILE                                           III.C - 1



 C.  The CHANGE Command (Short form: CH)


 The CHANGE command is the single most powerful command in WYLBUR.
 Every CHANGE command has three sections:  position,  replacement,
 and  range.  The position identifies the location within the line
 which is to be changed.  The range specifies which lines  are  to
 be considered for changing.  You may omit the range specification
 and  the  default  range  ALL  will  be assumed.  The replacement
 describes what change is to be made.  The  command  searches  the
 lines  specified in the range for instances of the position to be
 changed  and,  when  it  encounters  one,  makes  the   indicated
 replacement.   As  each  line  is  changed, the resulting line is
 listed.

 The command can be given in either of two orders:

    CHANGE position TO replacement IN range

    CHANGE position IN range TO replacement

 There is also an alternate form which will be discussed last:

    CHANGE position IN range USING replacement

 The user can  suppress  the  listing  of  each  changed  line  by
 specifying  the  NOLIST option in the command.  Remember that any
 attempt to interrupt the  listing  of  the  changed  lines,  when
 NOLIST is not given, will also halt the change process.

 A sample data set  will  be  used  to  show  the  effect  of  the
 commands.  When each command is given, the active file will be:

       1.     123456ABC
       2.     123456ABC
       3.     AAABBBCCC
       4.     AAABBBCCC
       5.     AAABBBCCC
1EDITING AN ACTIVE FILE                                           III.C - 2



    1. Position in Line

       There are three  basic  types  of  locations  that  can  be
       specified  in  the position section of the command:  string
       replacement, column replacement, and column insertion.  The
       order used to illustrate this section of the  command  will
       be:

       CHANGE position TO replacement IN range

       a. String Replacement

          The simplest version of the first form is:

          CHANGE 'string1' TO 'string2'

          In the examples below a  simple  version  of  the  later
          parts  of  the command (the replacement) and the default
          range ALL will be used.

          COMMAND? CHANGE 'A' TO '*' (CR)
             1.     123456*BC
             2.     123456*BC
             3.     ***BBBCCC
             4.     ***BBBCCC
             5.     ***BBBCCC
          COMMAND?

          Each 'A' in the active file has been found  and  changed
          to an '*'.

          The command can also  specify  that  the  string  to  be
          changed  must  occur  completely  within  certain column
          positions.  Notice that the string  being  replaced  and
          its replacement can be of different lengths.

          COMMAND? CH 'BC' 5/8 TO 'X' (CR)
             3.     AAABBXCC
             4.     AAABBXCC
             5.     AAABBXCC
          COMMAND?

          The 'BC' strings in lines  1  and  2  were  not  changed
          because  they  ended  in  column  9 and were, therefore,
          outside the range specified.

1EDITING AN ACTIVE FILE                                           III.C - 3


          It is also possible to mention just the column  position
          in  which the string must begin.  Thus, CHANGE 'BC' 6 TO
          'X' IN ALL would have had the same effect as  the  above
          example.

          You may specify  a  third  column.   This  is  the  fill
          column,  and  when  it is given, nothing to the right of
          that column will be changed in the range.

          COMMAND? CH 'BBB' 3/6/7 TO '&' (CR)
             3.      AAA&  CCC
             4.      AAA&  CCC
             5.      AAA&  CCC
          COMMAND?

          Again you may mention  only  the  column  in  which  the
          string  must  begin  along  with  the fill column.  Thus
          CH 'BBB' 3//7 TO '&' would be equivalent in this case to
          the above example.

          You may also specify the fill column when specifying  no
          other  column  positions.   This  will cause all columns
          before  the  fill  column  to  be   searched   for   the
          appropriate string.

          COMMAND? CHANGE 'C' //8 TO ' ' (CR)
             3.      AAABBB CC
             4.      AAABBB CC
             5.      AAABBB CC
          COMMAND?

          If the replacement cannot be  made  within  the  columns
          before  the  fill column, the change will be made losing
          some of the characters of the    new   line  and  WYLBUR
          will  issue  a  message  indicating  the  lines in which
          non-blank characters were lost.

          COMMAND? CH 'A' //12 TO 'XX' (CR)
             1.      123456XXBC
             2.      123456XXBC
          LINE NO.      3.    LOST CHARACTERS
             3.      XXXXXXBBBCC
          LINE NO.      4.    LOST CHARACTERS
             4.      XXXXXXBBBCC
          LINE NO.      5.    LOST CHARACTERS
             5.      XXXXXXBBBCC
          COMMAND?

          You can also choose to change just a certain instance of
          a string in each line.  For example:

          COMMAND? CH 'C' (2) TO '??' (CR)
             3.      AAABBBC??C
             4.      AAABBBC??C
             5.      AAABBBC??C
          COMMAND?
1EDITING AN ACTIVE FILE                                           III.C - 4


          This command will change only the second instance of the
          string 'C' within each line.

          If column positions and an instance  are  combined,  the
          columns must be given first.

          A command using the most complex version of the position
          section might read in outline:

          CHANGE 'string1' col/col/col (instance) TO 'string2'

          COMMAND?  CHANGE 'C' 8/50 (2) TO 'Y' (CR)
             3.     AAABBBCCY
             4.     AAABBBCCY
             5.     AAABBBCCY
          COMMAND?

       b. Column Replacement

          The second form of the position section specifies column
          positions  to  be  changed  without  regard   to   their
          contents.

          CHANGE column/column/column TO 'string2'

          COMMAND?  CHANGE 3/6 to '00' (CR)
             1.     1200ABC
             2.     1200ABC
             3.     AA00CCC
             4.     AA00CCC
             5.     AA00CCC
          COMMAND?

          As the example shows, the replacement string can be of a
          different length than the material it replaces.

          COMMAND?  CHANGE 1/3 TO '' (CR)
             1.     456ABC
             2.     456ABC
             3.     BBBCCC
             4.     BBBCCC
             5.     BBBCCC
          COMMAND?

          The above example illustrates the use of the null string
          ("" or '') to eliminate columns completely.

          Again, the fill column may be specified.

          COMMAND? CH 3/6/8 TO '00' (CR)
             1.     1200A  BC
             2.     1200A  BC
             3.     AA00C  CC
             4.     AA00C  CC
             5.     AA00C  CC
1EDITING AN ACTIVE FILE                                           III.C - 5



       c. Column Insertion

          The third form of the position  section  designates  the
          column position before which an insertion is to be made.

          CHANGE column TO 'string2' IN range

          COMMAND? CHANGE 3 IN ALL TO ' -' (CR)
             1.     12 -3456ABC
             2.     12 -3456ABC
             3.     AA -ABBBCCC
             4.     AA -ABBBCCC
             5.     AA -ABBBCCC
          COMMAND?

          Since 3 was the specified column position, the insertion
          was made in front of that position, and the rest of  the
          line was moved to the right.

          You may also specify a fill column for column insertion.

          COMMAND? CH 3//6 TO ' -' (CR)
          LINE NO.   1.    LOST CHARACTERS
             1.     12 -36ABC
          LINE NO.   2.    LOST CHARACTERS
             2.     12 -36ABC
          LINE NO.   3.    LOST CHARACTERS
             3.     AA -ABCCC
          LINE NO.   4.    LOST CHARACTERS
             4.     AA -ABCCC
          LINE NO.   5.    LOST CHARACTERS
             5.     AA -ABCCC
          COMMAND?

          Notice that  it  is  always  the  column(s)  immediately
          preceeding  the  fill  column  that  will be deleted, if
          necessary.  If only blanks are deleted, the message LINE
          NO.  x LOST CHARACTERS will not be given.

    2. Search Range

       The range section of the CHANGE command tells WYLBUR  which
       lines  of  the  active  file  to search for the location to
       change.  This section can  contain  any  valid  ASSOCIATIVE
       RANGE or EXPLICIT RANGE.  IN ALL is the default range.

       CHANGE position TO replacement IN range

       This section may simply specify that the entire active file
       should be searched.
1EDITING AN ACTIVE FILE                                           III.C - 6


       COMMAND? CHANGE 'A' TO '  ' (CR)
          1.     123456  BC
          2.     123456  BC
          3.           BBBCCC
          4.           BBBCCC
          5.           BBBCCC
       COMMAND?

       As was mentioned above, the order of  the  replacement  and
       the  range  can  be  reversed; so the general form can also
       read:

       CHANGE position IN range TO replacement

       The specific command above could also have been stated as:

       COMMAND?  CHANGE 'A' IN ALL TO ' ' (CR)

       Note:  "'A'  IN  ALL"  in  the  above  example  is  not  an
       ASSOCIATIVE RANGE.


       The range can specify that only certain  lines  are  to  be
       searched.

       COMMAND?  CHANGE 'B' TO '' IN 1,3/5 (CR)
          1.  123456AC
          3.  AAACCC
          4.  AAACCC
          5.  AAACCC
       COMMAND?

       The range can be further restricted to lines containing (or
       not containing) a given string which  can  be  required  to
       fall within certain column positions.

       COMMAND?  CHANGE 2/4 to '$$' IN ¬'A' 1/5 IN 2/LAST (CR)
          2.  1$$56ABC
       COMMAND?

       You can further restrict changes to  certain  instances  of
       lines  meeting  the  criteria.  Notice that in the example,
       the third line containing "A" and "BB" is not changed.

       COMMAND?  CHANGE 'A' TO 'Z' IN 'BB' (1,2) IN ALL (CR)
          3.  ZZZBBBCCC
          4.  ZZZBBBCCC
       COMMAND?

       The form of the command using the most complex  version  of
       the  range section and showing the use of all three strings
       might read:

       CHANGE 'string1' TO 'string2' IN 'string3' column/column
       (instances) IN linenumber,linenumber/linenumber
1EDITING AN ACTIVE FILE                                           III.C - 7



    3. The Replacement

       The third section of the command specifies the  replacement
       string  which  is to be put in the positions being changed.
       The order used to illustrate this section will be:

       CHANGE position IN range TO replacement

       The replacement may  be  one  of  three  types:   a  quoted
       string,   an   incremented   integer,   or   a  transferred
       replacement range.

       a. Quoted String

          CHANGE 'string1' IN range TO 'string2'

          The simplest use  of  this  section  involves  a  direct
          replacement  of  the  designated  location with a single
          quoted string.


          COMMAND?  CHANGE 'ABC' IN ALL TO '%+%' (CR)
             1.     123456%+%
             2.     123456%+%
          COMMAND?

       b. Incremented Integer

          The second form the replacement string can  take  is  an
          integer which is incremented each time it is used.  This
          can be used, for example, to generate  page  numbers  or
          sequence numbers.

          If a single integer is given, it is incremented  by  one
          each time it is used.

          COMMAND?  CHANGE 'C' IN ALL TO 1 (CR)
             1.     123456AB1
             2.     123456AB2
             3.     AAABBB345
             4.     AAABBB678
             5.     AAABBB91011
          COMMAND?

          Notice that the field  is  expanded  if  necessary.   An
          increment other than one may be specified.

          COMMAND?  CHANGE 12 IN ALL TO 0+5 (CR)
             1.     123456ABC  0
             2.     123456ABC  5
             3.     AAABBBCCC  10
             4.     AAABBBCCC  15
             5.     AAABBBCCC  20
          COMMAND?
1EDITING AN ACTIVE FILE                                           III.C - 8


          The incrementing number may be negative.

          COMMAND?  CH 12 IN ALL TO 30-10 (CR)
             1.     123456ABC  30
             2.     123456ABC  20
             3.     AAABBBCCC  10
             4.     AAABBBCCC  0
             5.     AAABBBCCC  -10
          COMMAND?

          If leading zeros are specified in the  starting  number,
          they  will  be preserved.  If the increment is positive,
          the sign may be omitted.

          COMMAND?  CHANGE 9/9 IN 3/5 TO 005 60 (CR)
             3.     AAABBBCC005
             4.     AAABBBCC065
             5.     AAABBBCC125
          COMMAND?

          Leading  blanks  can  be  specified  by  enclosing   the
          starting  number in quotes.  The incrementing number can
          be negative.

          COMMAND?  CHANGE 9/9 IN ALL TO ' 15'-5 (CR)
             1.     123456AB 15
             2.     123456AB 10
             3.     AAABBBCC  5
             4.     AAABBBCC  0
             5.     AAABBBCC -5
          COMMAND?

          Non-numeric characters may also be used if the number is
          enclosed in quotes.  In general, a non-numeric character
          is changed to a blank if at least one blank  follows  it
          in  the  result.   The  characters  +,  -,  $  and # are
          exceptions to this rule.  Only one of these may occur in
          the number, and  it  will  be  placed  adjacent  to  the
          left-most significant digit.

          COMMAND?  CHANGE 10 IN ALL TO '$ , 15' +270 (CR)
             1.     123456ABC    $15
             2.     123456ABC   $285
             3.     AAABBBCCC   $555
             4.     AAABBBCCC   $825
             5.     AAABBBCCC $1,095
          COMMAND?
1EDITING AN ACTIVE FILE                                           III.C - 9


          The incrementing number can be  negative;  the  starting
          number  can  also  be  negative,  if  it  is enclosed in
          quotes.  The field is  expanded  if  necessary  to  hold
          minus signs.

          COMMAND?  CHANGE 'C' IN 3/5 TO '-5'+1 (CR)
             3.     AAABBB-5-4-3
             4.     AAABBB-2-1-0
             5.     AAABBB 1 2 3
          COMMAND?

          Normally the number is incremented for  each  occurrence
          of  the string to be changed.  It is possible to have it
          incremented only at the beginning of  each  line  to  be
          changed.

          COMMAND?  CHANGE 'C' IN ALL TO 15 LINE (CR)
             1.     123456AB15
             2.     123456AB16
             3.     AAABBB171717
             4.     AAABBB181818
             5.     AAABBB191919

       c. Transferred Replacement  (USING)

          The third form,  transferred  replacement,  permits  the
          contents  of  the  replacement strings to be copied from
          another location in the active file.  This can be useful
          for moving portions of the active file around.

          CHANGE position IN range USING replacement

          As for example in :

          COMMAND?  CHANGE 15 IN 1/2 USING 4/5 (CR)
             1.     123456ABC     AAABBBCCC
             2.     123456ABC     AAABBBCCC
          COMMAND?


          Here, the entire contents of lines 4 and 5  have  served
          as  replacement  strings.   Note that lines 4 and 5 have
          not been deleted from the active file.  The  replacement
          range is limited to one set of contiguous lines.
1EDITING AN ACTIVE FILE                                           III.C - 10


          If there are not enough lines in the  replacement  range
          to  CHANGE  the  target range of lines, WYLBUR will give
          you the option  of  reusing  the  replacement  range  by
          repeating  the operation from the beginning.  The REPEAT
          parameter  may  be  used  on  the  CHANGE   command   to
          accomplish this function.

          COMMAND?  CHANGE 15 IN ALL USING 2/3 REPEAT (CR)
             1.     123456ABC     123456ABC
             2.     123456ABC     AAABBBCCC
             3.     AAABBBCCC     123456ABC
             4.     AAABBBCCC     AAABBBCCC
             5.     AAABBBCCC     123456ABC
          COMMAND?

          It is also  possible  to  restrict  the  material  being
          transferred to certain columns of the copied lines.

          COMMAND?  CHANGE 15 IN 1/2 USING 4/5 COLUMNS 1/3 (CR)
             1.     123456ABC     AAA
             2.     123456ABC     AAA
          COMMAND?

          Only the contents of columns 1 through 3 have been  used
          as the replacements.

          To transfer the contents of a single column from a group
          of lines:

          COMMAND?  CHANGE 15 IN 1/2 USING 4/5 COLUMNS 3/3 (CR)
             1.     123456ABC     A
             2.     123456ABC     A
          COMMAND?

          Specifying a single column position  only  once  in  the
          replacement range causes that column position and all to
          the right of it to be used.

          COMMAND?  CHANGE 15 IN 1/2 USING 4/5 COLUMN 3 (CR)
             1.     123456ABC     ABBBCCC
             2.     123456ABC     ABBBCCC
          COMMAND?

          Normally a new line is obtained for each  occurrence  of
          the  string  to  be  replaced.  However, you may specify
          that the ranges are to be matched line-by-line.

          COMMAND? CH 'C' IN ALL USING 2/3 COLUMNS 1/2 LINE (CR)
             1.      123456AB12
             2.      123456ABAA
             3.      AAABBB121212
             4.      AAABBBAAAAAA
             5.      AAABBB121212
          COMMAND?

1EDITING AN ACTIVE FILE                                           III.D - 1



 D.  The COPY and MOVE Commands

 COPY and MOVE may be used to move lines to a different  place  in
 the  active  file.   COPY does not erase the lines from their old
 position whereas MOVE does erase.

    1. COPY

       WYLBUR will COPY one or more lines into a  section  of  the
       active file.  The lines copied may be in the active file or
       in  an external file.  The lines copied are not erased from
       their old position.  The new lines are renumbered according
       to the implicit DELTA  unless  you  specify  an  overriding
       DELTA in the COPY command.  Also note that lines already in
       the  file cannot be overwritten by use of the COPY command.
       The following file will be  used  to  show  the  effect  of
       various COPY commands.

       1.     THIS IS A DUMMY FILE WHICH WILL BE USED
       2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
       3.     AAAA
       4.     BBBBBB
       5.     CCCCC
       6.     DDDDDDD
       7.     EEE

       In the examples, assume that each  COPY  command  is  given
       when the file is in the unmodified form given above.

       COMMAND? COPY (CR)
          14.  -  LAST LINE
       COMMAND? LIST (CR)
          1.     THIS IS A DUMMY FILE WHICH WILL BE USED
          2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
          3.     AAAA
          4.     BBBBBB
          5.     CCCCC
          6.     DDDDDDD
          7.     EEE
          8.     THIS IS A DUMMY FILE WHICH WILL BE USED
          9.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
         10.     AAAA
         11.     BBBBBB
         12.     CCCCC
         13.     DDDDDDD
         14.     EEE

       This is the simplist form of the  COPY  command.   It  will
       copy  all  of  the  active  file to the line number that is
       referenced by the symbolic line number END.
1EDITING AN ACTIVE FILE                                           III.D - 2


       a. Copy an Explicit Range

          If you copy a range of lines rather than a  whole  file,
          range  must  be  the  first parameter.  If you specify a
          line to COPY TO, it must be a non-existing line.  In the
          following command, line 6.5 is used to COPY TO.

          COMMAND? COPY 5 TO 6.5 (CR)
          COMMAND? LIST (CR)
            1.     THIS IS A DUMMY FILE WHICH WILL BE USED
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            3.     AAAA
            4.     BBBBBB
            5.     CCCCC
            6.     DDDDDDD
            6.5    CCCCC
            7.     EEE

          If the range copied results in the addition of more than
          one line to the file, the last line number  of  the  new
          lines will be indicated.

          COMMAND? COPY 3/5 TO 47 (CR)
           49.    - LAST LINE.
          COMMAND? LIST (CR)
            1.     THIS IS A DUMMY FILE WHICH WILL BE USED
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            3.     AAAA
            4.     BBBBBB
            5.     CCCCC
            6.     DDDDDDD
            7.     EEE
           47.     AAAA
           48.     BBBBBB
           49.     CCCCC


          COMMAND?  COPY 3/5 TO END (CR)

          would have accomplished the  same  thing  but  the  line
          numbers  would have been 8, 9, and 10 instead of 47, 48,
          49.  If  the  TO  linenumber  is  omitted,  the  default
          assumed is TO END.
1EDITING AN ACTIVE FILE                                           III.D - 3


       b. Specifying Delta

          COMMAND?  COPY 2/3 TO 4.01
            4.02  - LAST LINE.

          In the example above, the two lines  from  line  2.0  to
          line  3.0  inclusive  were  copied to follow 4.01 with a
          default increment of .01.  In the  following  example  a
          DELTA of .001 is specified.

          COMMAND?  COPY 6/7 TO 2.03 BY .001 (CR)
            2.031 - LAST LINE.
          COMMAND?  LIST (CR)
            1.     THIS IS A DUMMY FILE WHICH WILL BE USED
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            2.03   DDDDDDD
            2.031  EEE
            3.     AAAA
            4.     BBBBBB
            5.     CCCCC
            6.     DDDDDDD
            7.     EEE


          If the range to  be  copied  overlaps  the  range  being
          copied into, bizarre results may be produced.

          COMMAND? COPY 6/10  TO 8 BY .01 (CR)
          10.02 - LAST LINE
          COMMAND? LIST (CR)
            1.     THIS IS A DUMMY FILE WHICH WILL BE USED
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            3.     AAAA
            4.     BBBBBB
            5.     CCCCC
            6.     DDDDDDD
            7.     EEE
            8.     DDDDDDD
            8.01   EEE
            8.02   DDDDDDD
            8.03   EEE
            8.04   DDDDDDD
            8.05   EEE


          And so it goes, until  it  copies  10  to  10.02.   This
          happens  because  WYLBUR  copies one line at a time.  It
          begins at 6 and copies that into 8.0; it next copies 7.0
          into  8.01;  then  8.0  into  8.02,  and  it   continues
          generating  and  copying  until  the limit, 10, has been
          copied.  This feature  can  be  used  deliberately  when
          multiple copies of a line or range of lines are wanted.
1EDITING AN ACTIVE FILE                                           III.D - 4


       c. MERGE

          The MERGE option may be used  to  interleave  lines.   A
          DELTA  must  be  specified  which  will allow the merged
          lines to fit between the existing lines which are  being
          copied  to.   Replaces  are not permitted.  The old line
          numbers of the lines copied from are not retained by the
          COPY MERGE command.

          COMMAND?  COPY 1/3 TO 2.1 BY 2 MERGE (CR)
            6.1  - LAST LINE
          COMMAND?  LIST (CR)
            1.     THIS IS A DUMMY FILE WHICH WILL BE USED
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            2.1    THIS IS A DUMMY FILE WHICH WILL BE USED
            3.     AAAA
            4.     BBBBBB
            4.1    TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            5.     CCCCC
            6.     DDDDDDD
            6.1    AAAA
            7.     EEE


       d. Copy an Associative Range

          The following example shows the successful  use  of  the
          COPY command applied to an associative range.

          COMMAND?  COPY 'FILE' IN 1/6 TO 33  (CR)
          COMMAND?  LIST (CR)
            1.     THIS IS A DUMMY FILE WHICH WILL BE USED
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            3.     AAAA
            4.     BBBBBB
            5.     CCCCC
            6.     DDDDDDD
            7.     EEE
           33.     THIS IS A DUMMY FILE WHICH WILL BE USED
1EDITING AN ACTIVE FILE                                           III.D - 5


          Bizarre situations can occur if you ask WYLBUR  to  copy
          all   the   lines   containing  a  specified  string  of
          characters because multiple copies  of  a  line  can  be
          generated.

          COMMAND? COPY 'A DUMMY' IN ALL TO 2.03 BY .01 (CR)
          ABORTED BY ATTEMPT TO REPLACE OR INTERLEAVE. 2.99 - LAST LINE
          COMMAND? LIST (CR)
            1.     THIS IS A DUMMY FILE WHICH WILL BE USED
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            2.03   THIS IS A DUMMY FILE WHICH WILL BE USED
            2.04   THIS IS A DUMMY FILE WHICH WILL BE USED
            2.05   THIS IS A DUMMY FILE WHICH WILL BE USED
                 .
                 .
                 .
            2.99   THIS IS A DUMMY FILE WHICH WILL BE USED
            3.     AAAA
            4.     BBBBBB
            5.     CCCCC
            6.     DDDDDDD
            7.     EEE


          These examples illustrate the importance of  considering
          carefully the results of a COPY command before using it.

          You may  specify  that  only  some  columns  are  to  be
          searched  for  the  string.  The following example would
          give the same results as the above example.

          COMMAND? COPY 'A' COLUMNS 9/9 IN ALL TO 2.03 BY .01 (CR)
          ABORTED BY ATTEMPT TO REPLACE OR INTERLEAVE. 2.99 - LAST LINE
          COMMAND?

          You may specify a LIST option.  This will result in  the
          line  preceeding  the new lines as well as the new lines
          being listed.

          COMMAND?  COPY LIST (CR)
             7.     EEE
             8.     THIS IS A DUMMY FILE WHICH WILL BE USED
             9.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            10.     AAAA
            11.     BBBBBB
            12.     CCCCC
            13.     DDDDDDD
            14.     EEE
1EDITING AN ACTIVE FILE                                           III.D - 6


       e. COPY TO the End of a File

          Frequently you may want to position the copied lines  at
          the  end  of  the  file.   The special line number, END,
          which is equal to LAST plus the current value for DELTA,
          will allow this.  END is the  default  when  TO  is  not
          specified.

          COMMAND?  COPY 2.0 TO END (CR)
          or
          COMMAND?  COPY 2.0 (CR)

       f. COPY FROM an External File

          You may also copy lines from any external file by giving
          a FROM phrase which specifies the external file.  If you
          use dsname parameters  such  as  ON  volume,  they  must
          follow the dsname.

          a) COPY All of an External File

             If the range is omitted, a default range  of  ALL  is
             assumed.   If  the TO is omitted, a default TO END is
             assumed.  Therefore, the command

             COMMAND?  COPY FROM MYTEXT ON DCU209 (CR)
               126.   - LAST LINE

             would cause all of the external file named MYTEXT  to
             be copied to the end of the active file.


          b) COPY Part of an External File

             COMMAND? COPY 1/57 TO 35 BY .1 FROM MYTEXT (CR)
              97.    - LAST LINE.

             This would cause all lines which are numbered between
             1.000 and 57.000 in the external file named MYTEXT to
             be copied into the active file starting  at  line  35
             with  a  DELTA  (line  increment) of .1.  As with the
             COLLECT or INSERT commands, there is  no  overwriting
             or interleaving existing lines in the active file.

             COMMAND?  COPY F(11) FROM MYFILE ON DCU207 (CR)
                18.  -  LAST LINE

             This command copies the first eleven lines  from  the
             external file MYFILE to the END of the active file.

             Another rule concerning the COPY command is that  any
             external  file  which  is  specified  must be in edit
             format.  Any file created  at  a  terminal  with  the
             WYLBUR  system  is in edit format.  For a description
             of the various formats, see FORMAT in Section VIII.
1EDITING AN ACTIVE FILE                                           III.D - 7


       g. COPY TO the Beginning of a File

          To copy one file to the beginning of another, copy to  a
          line  number  less than the first line.  For example, if
          the first line of the active file which  is  to  receive
          the copy is numbered 1,

          COMMAND?  COPY TO .1 FROM FILE1 ON DCU208 (CR)

          WYLBUR attempts to calculate a DELTA which will make all
          the lines from the external file fit.  This command is a
          convenient way to insert a file of JCL statements at the
          beginning of a text file.

       h. COPY part of an External File and COMBINE

          The COMBINE parameter allows lines from an external file
          to be merged  into  the  active  file.   The  difference
          between COMBINE and MERGE is that MERGE requires a DELTA
          whereas  COMBINE  will  use  the  line  numbers  in  the
          external  file  to  determine the position in the active
          file of the new lines.  Interleaving  is  permitted  but
          replacing is not.

          COMMAND? COPY 'abcd' FROM MYTEXT ON DCU208 COMBINE (CR)
            6.5   - LAST LINE
          COMMAND? LIST (CR)
            1.     THIS IS A DUMMY FILE WHICH WILL BE USED
            1.5    abcdgoldfish?
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            3.     AAAA
            4.     BBBBBB
            5.     CCCCC
            6.     DDDDDDD
            6.5    abcdbbbbb?
            7.     EEE
          COMMAND?


    2. MOVE

       To copy a range of lines and delete the  old  copy  of  the
       lines, use the command MOVE.  This functions exactly as the
       COPY command with the following exceptions:

          The old lines which were copied are deleted.

          It is not possible to  apply  the  MOVE  command  to  an
          external  file.
1EDITING AN ACTIVE FILE                                           III.D - 8


       Following are some examples of the MOVE command as  applied
       to  the  sample  file  used  in the explanation of the COPY
       command.

       a. Move an Explicit Range of Lines

          Range must be the first parameter.

          COMMAND? MOVE 6/7 TO 2.03 BY .001 (CR)
            2.031 - LAST LINE.
          COMMAND? LIST (CR)
            1.     THIS IS A DUMMY FILE WHICH WILL BE USED
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            2.03   DDDDDDD
            2.031  EEE
            3.     AAAA
            4.     BBBBBB
            5.     CCCCC
          COMMAND?

       b. Move an Associative Range of Lines

          COMMAND? MOVE 'FILE' IN 1/7 TO 33 (CR)
          COMMAND? LIST (CR)
            2.     TO SHOW THE EFFECT OF VARIOUS COPY COMMANDS.
            3.     AAAA
            4.     BBBBBB
            5.     CCCCC
            6.     DDDDDDD
            7.     EEE
           33.     THIS IS A DUMMY FILE WHICH WILL BE USED
          COMMAND?

          You may specify the special line  number  END  following
          the  TO.   END  is  one  DELTA increment higher than the
          current LAST of the active file.

       c. MERGE

          The MERGE option works just as for COPY except that  the
          MOVED  lines  will be erased from their old position and
          you may not MOVE from an external file.


1EDITING AN ACTIVE FILE                                           III.E - 1


 E.  The ALIGN and JUSTIFY Commands

 These commands are used to adjust the LENGTH of lines in  a  file
 to   the  length  specified.   JUSTIFY  right-justifies  text  in
 addition; otherwise the commands are  identical.   They  will  be
 used  interchangably  in this section.  To ALIGN or JUSTIFY text,
 set LENGTH equal to the longest line you wish to  allow.   WYLBUR
 will  then arrange the lines so that they are as long as possible
 without exceeding the LENGTH specified.  Splits  in  a  line  are
 always  made  at  a blank; that is, a word is never split between
 two lines.

 WYLBUR assumes that each word or single character in a line to be
 aligned should be followed by one space unless it is  a  question
 mark,  period, or exclamation point, in which case it is followed
 by two spaces.

       COMMAND? SET LENGTH = 80 (CR)
       COMMAND? COLLECT 1 (CR)
           1.   ?   $  THIS IS A SAMPLE FILE USED TO (CR)
           2.   ?   SHOW THE EFFECTS OF (CR)
           3.   ?   POSING THE ALIGN (CR)
           4.   ?   COMMAND TO WYLBUR. (CR)
           5.   ?   $ (CR)
           6.   ?   THE $ MARKERS IN (CR)
           7.   ?   COLUMN ONE CAUSE THE RESTARTING (CR)
           8.   ?   OF THE (CR)
           9.   ?   ALIGNMENT PROCESS. (CR)
          10.   ?     (CR)
          11.   ?   BUT TO USE MARKERS YOU MUST SPECIFY THE MARKER (CR)
          12.   ?   OPTION IN THE ALIGN COMMAND. (CR)
          13.   ?   ALSO NOTE THAT (CR)
          14.   ?     INDENTED MATERIAL (CR)
          15.   ?     WON'T BE ALIGNED (CR)
          16.   ?     UNLESS SPECIFIED (CR)
          17.   ?   (ATTN)***
       COMMAND? JUSTIFY ALL LEN 28 (CR)
       COMMAND? LIST (CR)
           1.   $  THIS  IS  A  SAMPLE  FILE
           2.   USED  TO SHOW THE EFFECTS OF
           3.   POSING THE ALIGN COMMAND  TO
           4.   WYLBUR.   $ THE $ MARKERS IN
           5.   COLUMN   ONE    CAUSE    THE
           6.   RESTARTING  OF THE ALIGNMENT
           7.   PROCESS.
           8.
           9.   BUT TO USE MARKERS YOU  MUST
          10.   SPECIFY THE MARKER OPTION IN
          11.   THE   ALIGN  COMMAND.   ALSO
          12.   NOTE THAT
          13.     INDENTED MATERIAL
          14.     WON'T BE ALIGNED
          15.     UNLESS SPECIFIED

1EDITING AN ACTIVE FILE                                           III.E - 2


 In order to JUSTIFY the text, WYLBUR inserts blanks between words
 alternating between starting from the right and starting from the
 left.  These blanks become part of the text.

 Note that the alignment process may cause a  renumbering  of  the
 aligned  portion  of  the  file using the largest DELTA possible.
 You may specify up to 5 disjoint explicit  ranges  in  one  ALIGN
 command.

        COMMAND? ALIGN 1/2 4/5 7/8 10/11 13 (CR)

 A blank in column  one  (as  in  indented  material)  causes  the
 alignment  process  to  be restarted at the beginning of the next
 line, unless the INDENT option has been specified.

    1. Aligning an Explicit Range

       ALIGN and JUSTIFY  require  an  explicit  range.   You  may
       specify  ALL  or  any single range of line numbers.  In the
       example, only lines 8 to LAST are  to  be  aligned.   Also,
       length  is  set to 28.  If this were not done, the previous
       value of length would be used.

       COMMAND? SET LENGTH = 28 (CR)
       COMMAND? ALIGN 8/L (CR)
       COMMAND? LIST 8/L (CR)
         8.   OF THE ALIGNMENT PROCESS.
         9.
        10.   BUT TO USE MARKERS YOU MUST
        11.   SPECIFY THE MARKER OPTION IN
        12.   THE ALIGN COMMAND.  ALSO
        13.   NOTE THAT
        14.     INDENTED MATERIAL
        15.     WON'T BE ALIGNED
        16.     UNLESS SPECIFIED

    2. Using a MARKER

       Any line which has a special MARKER character in its  first
       column  will cause the alignment process to be restarted at
       the next line.  The MARKER line is not changed.  The MARKER
       is designated in the ALIGN command if this option is to  be
       used.   Do  not  use the characters ()"' or = or lower case
       letters (if UPLOW is  in  effect)  as  markers  unless  you
       enclose   them   in   quotation   marks  (e.g.   ALIGN  ALL
       MARKER=',').  If a marker appears anywhere except column 1,
       it is treated as any other character.
1EDITING AN ACTIVE FILE                                           III.E - 3


       COMMAND? SET LENGTH = 28 (CR)
       COMMAND? ALIGN ALL MARKER = $ (CR)
       COMMAND? LIST (CR)
           1.   $  THIS IS A SAMPLE FILE USED TO
           2.   SHOW THE EFFECTS OF POSING
           3.   THE ALIGN COMMAND TO WYLBUR.
           4.   $
           5.   THE $ MARKERS IN COLUMN ONE
           6.   CAUSE THE RESTARTING OF THE
           7.   ALIGNMENT PROCESS.
           8.
           9.   BUT TO USE MARKERS YOU MUST
          10.   SPECIFY THE MARKER OPTION IN
          11.   THE ALIGN COMMAND.  ALSO
          12.   NOTE THAT
          13.     INDENTED MATERIAL
          14.     WON'T BE ALIGNED
          15.     UNLESS SPECIFIED

    3. NUMBER

       The  NUMBER  option  will  cause  the  entire  file  to  be
       renumbered rather  than  just  the  aligned  portion.   The
       starting line number and increment will both be DELTA.


    4. Setting LENGTH in the ALIGN Command

       A temporary LENGTH, for use only during  execution of the
       ALIGN command, may be specified in the command.

       COMMAND?  ALIGN ALL LENGTH = 40 MARKER = $ (CR)

       If WYLBUR attempts to ALIGN  a  line  which  has  a  string
       longer  than  the  current LENGTH, the whole string will be
       placed on a single line.  For example,

       COMMAND? LIST (CR)
          1.   ABCDEFGHIJKLMNOPQRSTUVWXYZ   or
          2.   ZYXWVUTSRQPONMLKJIHGFEDCBA
       COMMAND?   ALIGN ALL LEN 20 (CR)
       COMMAND?   LIST  (CR)
          1.   ABCDEFGHIJKLMNOPQRSTUVWXYZ
          2.   or
          3.   ZYXWVUTSRQPONMLKJIHGFEDCBA
       COMMAND?
1EDITING AN ACTIVE FILE                                           III.E - 4


    5. SPACE option

       The SPACE option may be  used  to  squeeze  out  spaces  on
       material  to  be  aligned  or  justified.  It is especially
       useful on successive JUSTIFYs of the same text.  As  WYLBUR
       justifies text, it inserts blanks to even up the right hand
       margin.   These  spaces  become  part  of  the  text and if
       successive JUSTIFY commands are used, it may begin to  look
       awkward.   The  SPACE  option  will first compress multiple
       blanks.  It will then restart the justification process  on
       the file, leaving two blanks after a period, question mark,
       exclamation point, or colon.

    6. Aligning Indented Material - INDENT Option

       Indented material is ordinarily ignored  in  the  alignment
       process.   In  order to align or justify indented material,
       you must use the INDENT option and specify  the  column  in
       which the material begins.

       COMMAND?  ALIGN ALL INDENT 5 (CR)

       This command will align only those lines indented 5  spaces
       (lines  starting  in column 6).  Lines starting in column 1
       have an indentation of 0 so they are ignored.

    7. Indenting Material - EVEN Option

       The ALIGN command may be used to  indent  material  if  you
       specify  the  EVEN option with the INDENT option.  There is
       no separate INDENT command in WYLBUR.

       COMMAND? JUSTIFY 1/10 INDENT 5 EVEN LEN 30 (CR)

       This command will align and  justify  lines  1  through  10
       indenting  them  all 5 spaces regardless of where each line
       started.  Any leading blanks are stripped off.  The  LENGTH
       of  50 includes the 5 leading spaces, so only 45 spaces are
       left for the text.

       Since EVEN will indent all  material  no  matter  in  which
       column  the  text  began,  it  can  change  all of a file's
       format.  Take care with the EVEN option lest you find  your
       indentations and columns destroyed.
1EDITING AN ACTIVE FILE                                           III.E - 5


       a. Indenting Paragraphs

          The INDENT option may have  two  numbers  following  it.
          The  second  number  may be used for indenting the first
          line of paragraphs.

          COMMAND?  JUSTIFY ALL INDENT 5 4 EVEN (CR)

          This command will justify all lines of a file, indenting
          them 5 spaces plus 4 more each  time  the  alignment  is
          restarted  after a null or marker line.  Since no marker
          was specified in this command,  alignment  is  restarted
          only  after  each  null  line.  If you have a blank line
          between paragraphs, the first line of each paragraph  is
          indented 9 spaces.

          COMMAND? ALIGN ALL LEN 30 INDENT 0 4 EVEN (CR)
             1.        $  THIS IS A SAMPLE FILE
             2.    USED TO SHOW THE EFFECTS OF
             3.    POSING THE ALIGN COMMAND TO
             4.    WYLBUR.  $ THE $ MARKERS IN
             5.    COLUMN ONE CAUSE THE
             6.    RESTARTING OF THE ALIGNMENT
             7.    PROCESS.
             8.
             9.        BUT TO USE MARKERS YOU
            10.    MUST SPECIFY THE MARKER OPTION
            11.    IN THE ALIGN COMMAND.  ALSO
            12.    NOTE THAT INDENTED MATERIAL
            13.    WON'T BE ALIGNED UNLESS
            14.    SPECIFIED

       b. Hanging Indentations

          The second number following the keyword  INDENT  may  be
          negative, in which case a hanging indentation results.

          COMMAND?  ALIGN 1/3 INDENT 10-4 EVEN LENGTH 30 (CR)

          This command aligns lines 1 through 3 indenting them  10
          spaces  regardless  of their previous indentation.  Each
          time the alignment process is restarted, the first  line
          is indented 6 spaces (10-4).

          COMMAND? LIST 1/3 (CR)
             1.         THIS IS A SAMPLE FILE
             2.             USED TO SHOW A
             3.             HANGING INDENT.

1EDITING AN ACTIVE FILE                                           III.F - 1


 F.  The CENTER Command (Short Form: CEN)

 The CENTER command may be used to center text on a line within  a
 specified length.  It is useful in centering titles, headings, or
 lines of text to be emphasized.

             COMMAND? SET LENGTH 50 (CR)
             COMMAND? CENTER FIRST (CR)
             COMMAND? LIST FIRST (CR)
                1.                 THIS IS MY TITLE
             COMMAND?

 The text is centered assuming leading and trailing blanks  to  be
 insignificant.   The  first and last non-blank characters will be
 symmetrically placed at the center  of  the  line  based  on  the
 LENGTH  that  has  been set.  Blanks imbedded within the line are
 not changed.

         1.  Specifying LENGTH

             You may  override  the  global  LENGTH  parameter  by
             specifying a LENGTH option in the command.

             COMMAND? CENTER 20 LENGTH=26 (CR)
             COMMAND? LIST 19/21 (CR)
               19.  ABCDEFGHIJKLMNOPQRSTUVWXYZ
               20.       February 14, 1984
               21.  12345678901234567890123456
             COMMAND?

         2.  Explicit Range

             You may specify an explicit range in the command.

             COMMAND? CENTER 1/3 LEN 30 (CR)
             COMMAND? LIST 1/3 (CR)
               1.     208 Computer Center
               2.     Columbia University
               3.   New York, New York 10027
         COMMAND?

         3.  Centering Indented Material

             You may center indented material  by  specifying  the
             INDENT option with the CENTER command.

             COMMAND?  CENTER 3 IND 4 LEN 20  (CR)

             This will center text between columns 4 and 20.
1EDITING AN ACTIVE FILE                                           III.G - 1


 G.  The EDIT and MODIFY Commands

 EDIT and MODIFY are very powerful commands  for  making  multiple
 changes in a line or a range of lines.

    1. EDIT (Short Form: EDI or E)

       The EDIT command may be used to change a line or a range of
       lines in the active file without retyping the entire  line.
       WYLBUR's  response to EDIT is fairly complex.  First WYLBUR
       lists the number and contents of the line to be edited  and
       then prompts with the word EDITS.

       COMMAND?  EDIT 2 (CR)
           2.    THIS IS THE LINE TO BEEDITED.
          EDITS ?

       If you decide that the line does not need to be edited, hit
       carriage return immediately after the EDITS?   prompt.   If
       you  wish  to make changes, space over to the character you
       wish to replace and type the replacement character.  WYLBUR
       will list the line with the changes and again  prompt  with
       the  word  EDITS ?  You may continue to make changes or end
       the command with a carriage return.  You may  make  several
       changes  per  line;  you  may  even change every character,
       though it would  be  more  efficient  to  use  the  REPLACE
       command  for  that.   To  replace a character with a blank,
       type a vertical bar (| on a 2741).  If you type a | under a
       blank, you will get a | on the output.  There is no way  to
       insert  or  delete  a  character unless you replace all the
       remaining characters in the line.

       COMMAND?  EDIT 2 (CR)
           2.     THIS IS THE LINE TO BEEEDITED
         EDITS ?    at                  |      .(CR)
           2.     THAT IS THE LINE TO BE EDITED.
         EDITS ?          not the|line|to|edit.|(CR)
           2.     THAT IS NOT THE LINE TO EDIT.
         EDITS ? (CR)
       COMMAND?

       In the first example, the two characters IS  were  replaced
       with  AT, E was blanked, and a period was inserted.  In the
       last example, the word "not" was inserted and the word "be"
       and letters "ed" were deleted.  Obviously, this is  awkward
       and  it  might  be  simpler  to use the REPLACE command and
       retype the entire line.
1EDITING AN ACTIVE FILE                                           III.G - 2


       a. Range

          You may specify an explicit  or  associative  range  and
          WYLBUR  will  prompt  with successive line numbers until
          the range is exhausted.  In  the  preceding  example,  a
          single  line  was  specified.  You may specify up to ten
          line numbers in a list rather  than  type  ten  separate
          commands.

          COMMAND?  EDIT 2 3 4/5 (CR)

          If you do not specify a range, ALL is assumed.


       b. NOLIST (Short Form: N)

          Normally, WYLBUR lists  the  corrected  line.   You  may
          suppress this by specifying NOLIST.

          COMMAND?  EDIT 2 NOLIST (CR)
                2.   THIS IS THE LINE TO BEEEDITED
            EDITS ?    at                  |      .
            EDITS ? (CR)
          COMMAND?

          There is another way of specifying NOLIST once  you  are
          in the EDIT command.  An N in column 0 will suppress the
          listing  for  that  line  only.   An  L in column 0 will
          override the NOLIST option and list the corrected  line.
          Note  that  column  0 does not correspond to a column in
          the line being edited; it must be blank, N, or L.

          COMMAND? EDIT 2 (CR)
             2.      THIS IS THE LINE TO BEEEDITED
            EDITS ? N  at                  |      .(CR)
            EDITS ? (CR)
          COMMAND?


       c. SINGLE (Short Form: S)

          WYLBUR will prompt with EDITS ? for each line until only
          a  carriage  return  is  given  in response.  The SINGLE
          option can be used to change  this  to  one  prompt  per
          line.

          COMMAND? EDIT 3 SINGLE (CR)
              3.     This is the line.
            EDITS ?    at(CR)
              3.     That is the line.
          COMMAND?
1EDITING AN ACTIVE FILE                                           III.G - 3


          There is another way to indicate SINGLE if you  did  not
          specify  it  in  the  EDIT command.  Simply type @(ATTN)
          instead of a carriage return at the end of a line.  This
          will give another prompt for the current line if  SINGLE
          was  specified or terminate prompts for the current line
          if the normal multiple mode was in effect.

       d. Terminating the EDIT Command

          To end the EDIT command  normally,  press  the  carriage
          return  as  the  first  character  in  a  line after all
          editing has been done.

          COMMAND? EDIT 2 (CR)
              2.     THAT IS NOT THE LINE TO EDIT.
            EDITS ? (CR)
          COMMAND?


          1. Terminating All Lines Remaining in the Range - $(ATTN)

             $(ATTN) will  terminate  the  command  including  any
             remaining  lines if you have specified an explicit or
             associative range.

             COMMAND? EDIT 2 3 (CR)
                 2.     THAT IS NOT THE LINE TO EDIT.
               EDITS ?    is$(ATTN)
                 2.     THIS IS NOT THE LINE TO EDIT.
             COMMAND?

          2. Terminating the Current Line Only - @(ATTN)

             If you are in multiple prompt  mode,  typing  @(ATTN)
             will stop further prompts for that line only.

             COMMAND? EDIT 2 3 NOLIST (CR)
                 2.     THAT IS NOT THE LINE TO EDIT.
               EDITS ?    is @(ATTN)
                 3.     NEXT LINE

             The replacement characters "IS" are entered  in  this
             case.

          3. Terminating and Eliminating the EDITS - (ATTN)

             Pressing the ATTN key aborts the command and  reneges
             on  EDITS made to the current line.  The line will be
             as it was before you used the EDIT command.
1EDITING AN ACTIVE FILE                                           III.G - 4


       e. Changing from EDIT to MODIFY

          Use ¢(ATTN) to change to the MODIFY command.   Refer  to
          the next section for a discussion of MODIFY.

       f. Summary of the Use of the ATTN key in the EDIT Command

          1. (ATTN)
             Pressing (ATTN) in response to the EDITS prompt  will
             abort  the command and leave the line unchanged.  All
             lines already edited will remain in  their  new  form
             and no subsequent lines in the range will be edited.
          2. $(ATTN)
             The  $(ATTN)  terminates  the  whole   EDIT   command
             including  any unedited lines remaining in the range.
             It does not affect lines already  terminated  with  a
             (CR)  or  alterations  in  the  line  terminated with
             $(ATTN).
          3. @(ATTN)
             @(ATTN) gives one more prompt  in  SINGLE  mode.   In
             multiple  mode  it  changes to SINGLE mode, and lists
             the line but gives no more  prompts.   If  there  are
             other  lines  remaining in the range, they are listed
             and EDITS are prompted for.
          4. ¢(ATTN)
             Pressing ¢(ATTN) in response to an EDITS prompt  will
             switch  you  to  the MODIFY command.  The next prompt
             will be ALTERS ?  instead of EDITS ?.


1EDITING AN ACTIVE FILE                                           III.G - 5


    2. The MODIFY Command (Short Form: MOD or M)

       Like EDIT, MODIFY can be used to alter a line or a range of
       lines without retyping all of each line, but  MODIFY  makes
       it  easier  to insert or erase characters.  You may specify
       an explicit or associative  range  of  lines.   The  MODIFY
       command   allows   you  to  make  the  following  types  of
       alterations to a line of text:

             delete -    WYLBUR deletes the  characters  indicated
                         by  you  and shifts the text to eliminate
                         the resultant blanks.

             blank -     WYLBUR changes the  characters  indicated
                         to blanks and does not shift the text.

             insert -    WYLBUR inserts the  character(s)  in  the
                         position   indicated   and   shifts   the
                         remainder  of  the  text  to the right as
                         many places as necessary.

             replace -   WYLBUR deletes the old  character(s)  and
                         inserts the new one(s).

       Although MODIFY has this broad range of  capabilities,  the
       nature  of  the  responses  involved and the time they take
       mean that this command may be  used  efficiently  only  for
       certain kinds of modifications.

       WYLBUR's response to MODIFY is similiar to its response  to
       EDIT.   First  it  types  the  line to be modified and then
       prompts for alterations with the word ALTERS.

            COMMAND?  MODIFY 23.01 (CR)
             23.01   THIS LINE IS TOOO BE MODIFIED.
            ALTERS ?

       At this point any of the four types of alterations  may  be
       made to the line, or if it looks all right, you may end the
       MODIFY  command  with  a  carriage  return  and no changes.
       However, there is one significant  difference  between  the
       responses  to  MODIFY  and  to EDIT.  Alterations to MODIFY
       require a key to designate  which  of  the  four  types  of
       alterations  you  are  doing;  d  (delete),  b  (blank),  i
       (insert),   and   r  (replace).   To  enter  a  replacement
       character without  first  typing  the  key  is  an  illegal
       response.   Blanks  entered  as  replacement characters are
       significant as will be illustrated in the example.

1EDITING AN ACTIVE FILE                                           III.G - 6


       After you have  made  alterations  and  used  the  carriage
       return,  WYLBUR  will  type  the  line with the changes and
       issue another ALTERS prompt.  You may then make  additional
       changes or end the command with a carriage return.

       Although there are  a  few  exceptions,  usually  only  one
       modification may be entered on a line.  This restriction of
       one  change per typed line at a time can make MODIFY a slow
       command to use.  If a line is to be changed  in  more  than
       one  place, it may be easier to use the REPLACE command and
       retype the whole line or to use the EDIT command.

       MODIFY may be used with the range  capability  which  saves
       you from typing several commands.

                 MODIFY  1/3 7 10 12 16 20/30 40/50 (CR)

       Even in this case, other  commands  may  be  handier.   For
       example,  if  you  wish  to make an identical change to the
       same text in several lines (associative range) or  wish  to
       make  a  change in the same column in each line, it is much
       faster to use the CHANGE command.  If you want to change  a
       few  characters in each line, use EDIT.  MODIFY is handiest
       for inserting and deleting characters to a range  of  lines
       because it shifts the text for you.

       To return  to  the  example,  any  of  the  four  types  of
       alterations described below may be made to a line.


       a. To Delete Characters from a Line--D

          To remove characters from  a  line  type  the  letter  D
          beneath  the  first letter to be deleted and type either
          spaces or D's beneath each character you wish to delete,
          then hit carriage return.  The extra characters in  TOOO
          are removed from the line in the following example.

          COMMAND?  MODIFY 23.53 (CR)
           23.53     THIS LINE IS TOOO BE MODIFIED
            ALTERS ?                DD(CR)
           23.53     THIS LINE IS TO BE MODIFIED
            ALTERS ? (CR)
          COMMAND?

          Actually, it is necessary to type a  D  under  only  the
          first  character  of any string which is to be deleted -
          everything between the D and the carriage return will be
          deleted.  Note that the carriage return  will  be  after
          the  last  character  to be deleted has had a blank or D
          typed under it.  The (CR) response to the second ALTERS?
          prompt signals the end of the modification  process  for
          that line.

1EDITING AN ACTIVE FILE                                           III.G - 7


       b. To Blank Characters in a Line--B

          The blank option replaces with blanks all  positions  in
          the  line  that  have  a B typed under them.  The option
          does not change the character position of the  line  and
          it erases only those positions that have a B typed under
          them.   Any other modify character may follow the B (see
          e. below).

          COMMAND?  MODIFY 23.53 (CR)
           23.53     THIS LINE ISSTO BE MODIFIED
            ALTERS ?             B(CR)
           23.53     THIS LINE IS TO BE MODIFIED

       c. To Insert Characters in a Line--I

          You may insert new  characters  into  a  line  by  first
          typing  an  I  underneath the character before which the
          insertion is to be made  and  following  this  with  the
          character string to be inserted.

          COMMAND?  MODIFY 23.53 (CR)
           23.53     THIS LINE IS TO BE MODIFIED
            ALTERS ?              IGOING (CR)
           23.53     THIS LINE IS GOING TO BE MODIFIED
            ALTERS ? (CR)
          COMMAND?

          Notice there is a space  between  GOING  and  the  (CR).
          That is necessary to provide for the space between GOING
          and TO.

       d. To Replace Characters in a Line--R

          Finally, you may replace a character string in the  line
          contents  by typing an R under the first character to be
          replaced and following this with a string of  characters
          which  are  the  replacements.   As  many characters are
          replaced, starting with the one over the R, as there are
          characters in the string, including blanks.

          COMMAND? MODIFY 23.53 (CR)
           23.53     THIS LINE IS NOT TO BE MOD
            ALTERS ?                  RBEING MODIFIED (CR)
           23.53     THIS LINE IS NOT BEING MODIFIED
            ALTERS ? (CR)
          COMMAND?
1EDITING AN ACTIVE FILE                                           III.G - 8


          Using the R  indicator  restricts  you  to  replacing  a
          number of characters with the same number of characters.
          In  the  example above, the new text had more characters
          but the excess characters were replacing blanks  at  the
          end  of  the line.  To do a replacement with a different
          number of characters, use a combination of the D  and  I
          indicators as illustrated in the next paragraph.

       e. Multiple Modifications in a Line DI-DR, BI-BR-BD

          A few combinations of alterations are allowed per ALTERS
          prompt.  They are:

          Delete followed by Insert or Replace (DI or DR)
          Blank followed by Insert, Replace or Delete (BI, BR, BD)

          To replace a string by a longer string, it is convenient
          to use delete followed by insert.

          COMMAND?  MODIFY 23.53 (CR)
           23.53     THIS LINE IS NOW BEING MODIFIED
            ALTERS ?              D DIIN THE PROCESS OF(CR)
           23.53     THIS LINE IS IN THE PROCESS OF BEING MODIFIED
            ALTERS ? (CR)
          COMMAND?

          The D D caused the word NOW to  be  deleted  and  the  I
          under the blank following the word NOW caused the string
          following the I to be inserted before the blank.

          It was not necessary to type the second  D  to  indicate
          the  range  of  the  deletion since the I indicator will
          automatically  terminate  the  deletion  range  at   the
          character position just before the I.

          To replace a long string by a shorter  string,  you  may
          follow  the  D  range with a replacement indicator and a
          string of replacement characters.

          COMMAND?  MODIFY 23.53 (CR)
           23.53     THIS LINE IS IN THE PROCESS OF BEING MODIFIED
            ALTERS ?           D                 RHAS BEEN(CR)
           23.53     THIS LINE HAS BEEN MODIFIED
            ALTERS ? (CR)
          COMMAND?

          The string that  was  deleted  included  a  blank  after
          PROCESS.  Had the blank not been included, the corrected
          version  would  have  included 2 blanks between LINE and
          HAS as shown below.  This is because the blank following
          LINE becomes the blank between LINE and HAS.

          THIS LINE  HAS BEEN MODIFIED
1EDITING AN ACTIVE FILE                                           III.G - 9


          COMMAND?  MODIFY 23.53 (CR)
           23.53   THIS LINE ISSTOOOBE MODIFIED
            ALTERS ?           B  BD(CR)
           23.53   THIS LINE IS TO BE MODIFIED

       f. To Complete the Alteration Process Normally

          To signal that all alterations to  the  line  have  been
          completed,  type  only a carriage return into the ALTERS
          line.

           23.53     THIS LINE HAS BEEN MODIFIED
            ALTERS ? (CR)


       g. NOLIST--N

          In the  above  examples  WYLBUR  always  typed  out  the
          modified   image   of   the  line  after  the  specified
          alteration.  This may be suspended by specifying  NOLIST
          (or  N)  as  illustrated  in  the discussion of the EDIT
          command (see 1.b above) or by typing an N before  giving
          any alteration indicators.

          COMMAND?  MODIFY 23.53 (CR)
           23.53     THIS LINE IS TOOOO BE MODIFIED
            ALTERS ?               ND D(CR)
            ALTERS ? (CR)
          COMMAND?


          The position of the N is of no concern to WYLBUR as long
          as  it  appears  before  any  other  characters  on  the
          alteration line.  On the other hand, you may get a  copy
          of  the modified line, as it stands after correction, by
          typing a few blanks into the ALTERS line before  hitting
          Return.   Remember  that hitting Return alone causes the
          modification process to be terminated.

          COMMAND?  MODIFY 23.53 (CR)
           23.53     THIS LINE IS TOOO BE MODIFIED
            ALTERS ?              N DD(CR)
            ALTERS ?    (CR)
           23.53     THIS LINE IS TO BE MODIFIED
            ALTERS ? (CR)
          COMMAND?
1EDITING AN ACTIVE FILE                                           III.G - 10


       h. SINGLE--S

          The SINGLE option has the same function for MODIFY as it
          does for the EDIT command.  It produces a single  ALTERS
          prompt  per  line  instead of the usual multiple prompt.
          If you specify SINGLE or S in the MODIFY command, ending
          an ALTERS line with @(ATTN) instead of a (CR) will  give
          you one more prompt.

          COMMAND?  MODIFY 23.53 SINGLE (CR)
           23.53     THIS LINE IS TO BE MODIFIED
            ALTERS ?   RAT(CR)
           23.53     THAT LINE IS TO BE MODIFIED
          COMMAND?

          COMMAND?  MODIFY 23.53 SINGLE (CR)
           23.53     THAT LINE IS TO BE MODIFIED
            ALTERS ?   RIS @(ATTN)
           23.53     THIS LINE IS TO BE MODIFIED
            ALTERS ?   RAT(CR)
           23.53     THAT LINE IS TO BE MODIFIED
          COMMAND?



       i. Terminating the MODIFY Command

          The MODIFY command is terminated just the same as  EDIT.
          There is a full discussion in Section III.F.1.  Briefly,
          the ways of terminating the MODIFY command are:

           (CR)        Normal Termination

           $(ATTN)     Terminates the current line and  all  lines
                       remaining in the range.

           @(ATTN)     Changes from single prompt mode and  allows
                       one more prompt.

           (ATTN)      Terminates  the  command   and   eliminates
                       modifications made in the current line.

           ¢(ATTN)     Change from MODIFY to the EDIT command.
1SAVING, RETRIEVING, DELETING                                       IV.A - 1


 IV.  Saving, Retrieving and Deleting a File

 Files not currently active are kept as external  files  on  disk.
 The  active  file  is  not on disk; while being modified it is in
 core storage.  WYLBUR has commands which enable you to SAVE  your
 active  file onto a disk and USE a copy of it (bring a copy of it
 to your active file) later in the session or in a later  session.
 Once saved, the file will remain on disk until you delete it with
 a  SCRATCH  command.  You may also retrieve a copy of a file that
 someone else has created, provided  you  know  his  initials  and
 group  ID.  USE is the command for retrieving a file.  It reads a
 copy of the file from disk into your active file.

 In order to use any of these commands, it is necessary to specify
 the name of the disk volume on which the external file resides or
 is to reside.  You must select a volume when  you  save  a  file.
 All  future  references  to  this external file must mention this
 volume either explicitly or implicitly.

 There are  certain  naming  conventions  that  must  be  observed
 whenever you SAVE, SCRATCH or USE a file.  These are explained in
 Section IV.D.

 Throughout this section assume that you are a WYLBUR  user  whose
 user ID is ABC and whose group ID is UR.

 A.  SAVE (Short Form:  S)

 To save a data set or a section of text or JCL that has just been
 created, leave COLLECT mode, type SAVE, give the data set a  name
 and  specify  the disk volume on which it is to be saved.  Saving
 the active file creates an external file by  writing  a  copy  of
 your  active  file onto the volume specified and giving that copy
 the name specified.  The active file remains  unchanged  and  you
 may  continue  working  with it.  It must be cleared with a CLEAR
 ACTIVE command before you can retrieve  another  file.   You  may
 save  a  data set only in your WYLBUR space; you may save it as a
 member of a partitioned data set (PDS) or as  a  sequential  data
 set  (For  a  discussion  of differences between the two kinds of
 data sets, see Section  IV.D  ).   A  PDS  member  name  must  be
 enclosed  in  parentheses  or,  alternatively, be preceded by a #
 sign.  If you do not use parentheses or the # sign, the data  set
 is saved as a sequential one.

 Suppose you want to save a file which you  will  name  MYTEXT  on
 DCU207.

       COMMAND?  SAVE MYTEXT ON DCU207(CR)
       WYL.UR.ABC.MYTEXT SAVED ON DCU207
       COMMAND?

1SAVING, RETRIEVING, DELETING                                       IV.A - 2


 The data set name (dsname or dsn) MYTEXT is assigned to your file
 and WYLBUR generates the WYL.UR.ABC heading from  your  user  and
 group  IDs.   The  WYL.   identifies it to the system as a WYLBUR
 file.   See  Section  IV.D.   for  more  about  data  set  naming
 conventions.  The SAVE command just shown is the simplest form of
 SAVE.  In addition there are a number  of  additional  parameters
 which may be used.

    1. VOLUME

       The file in the example  was  saved  on  the  disk  volume
       called DCU207.  If you do not specify a volume in the SAVE
       command, WYLBUR will prompt for it.

       COMMAND? SAVE MYTEXT(CR)
       VOLUME ? DCU207(CR)
       WYL.UR.ABC.MYTEXT SAVED ON DCU207
       COMMAND?

       In order to specify the volume on which your  file  is  to
       reside, you must know which are available for SAVE's.

       COMMAND? SHOW VOLUMES (CR)
       USE & SAVE -- DCU106 DCU111 DCU131 DCU132 DCU150 DCU207
                DCU208 DCU209
       TEMPORARY --  DCU115 DCU118
       USE --   DCU110 DCU117 DCU126 DCU141 DCU142 DCU147

       WYLBUR's reply of USE & SAVE  --  DCU106...   DCU209  means
       that  the  volumes named DCU106...  DCU209 may be used with
       the USE and SAVE commands.  The  second  line  of  WYLBUR's
       reply  means  that  data  sets  on  these  volumes  will be
       scratched periodically and should not be used for data sets
       that are to  be  saved  permanently.   The  third  line  of
       WYLBUR's  reply  means  that  the  volumes  named DCU110...
       DCU147 are valid for the USE command only.  Thus  any  data
       set  on one of those volumes may be fetched at the terminal
       but  you  cannot  save  a  data  set  on   those   volumes.
       Ordinarily,  you  should only SAVE your sequential files on
       the same volume on which your LIBRARY is  allocated.   Only
       users  with  a  GROUP  ID  of  BI  are permitted to SAVE on
       DCU150; only users  with  a  GROUP  ID  of  CU  or  IS  are
       permitted  to  SAVE  on  DCU131 and DCU132.  All other data
       sets will be SCRATCH'ed from these volumes.

       If  you  exceed  your  sequential  space  allocation  while
       executing  a  SAVE,  WYLBUR  will  allow  the  command   to
       complete.   However if your total space allocation has been
       met or  exceeded  any  furthur  sequential  saves  will  be
       blocked  (a  message  will  be  given  to that effect).  To
       permit a dataset to be saved or to allow recovery, at least
       one track of your sequential space must be unused.  If your
       allocation has  been  used  completely  or  exceeded,  your
       active  file  will not be saved by WYLBUR (recovery) in the
       event of a system crash.   WYLBUR  will  also  give  you  a
       warning   message  when  you  have  90%  or  more  of  your
       allocation .
1SAVING, RETRIEVING, DELETING                                       IV.A - 3


       In  a  number  of  the  following  examples  no  volume  is
       specified, this  is  because  a  default  volume  has  been
       established.   This  is  done using the SET VOLUME command.
       This command establishes a default VOLUME for  any  command
       that   requires  a  VOLUME  to  be  specified,  it  may  be
       overridden at any time by explicitly stating the volume  in
       your command.

       COMMAND? SET VOLUME DCU208(CR)
       COMMAND? SAVE MYTEXT(CR)
       WYL.UR.ABC.MYTEXT SAVED ON DCU208
       COMMAND?

       In addition to setting the volume to a specific  volume  it
       may  also  be set to refer to the system catalog.  This way
       WYLBUR will keep track of the location of all of your  data
       sets  for  you.   The  first time that you place a data set
       onto the disk, however, you will have to specify  a  volume
       explicitly.

       COMMAND? SET VOLUME CATLG(CR)
       COMMAND? SAVE MYTEXT ON DCU208 CATLG(CR)
       COMMAND? USE MYTEXT(CR)
       VOLUME IS DCU208
       COMMAND?


    2. REPLACE/SCRATCH

       If a file already exists and you want to replace it with a
       new version, you may do it in one operation by  using  the
       REPLACE  or  SCRATCH  parameter on the SAVE command.  Both
       commands are synonymous.

       COMMAND? SAVE MYTEXT ON DCU207 REPLACE(CR)
       WYL.UR.ABC.MYTEXT  REPLACED ON DCU207

       For sequential data sets WYLBUR checks to see that you have
       not exceeded your space allocation, then scratches the  old
       copy  and  saves  the new copy.  For library members WYLBUR
       first saves the new copy and then  deletes  the  old  copy.
       The dsname cannot be omitted.  SAVE REPLACE ON DCU207 would
       save your file with the dsname REPLACE.

    3. Format

       Data sets are automatically saved in  the  form  in  which
       they  were  created  (EDIT  format)  but it is possible to
       choose CARD, PRINT, or LRECL formats.  However,  only  the
       EDIT  format  is allowed for PDSs.  For details on format,
       see Section VIII and the SAVE command in Section VII.

1SAVING, RETRIEVING, DELETING                                       IV.A - 4


    4. NUMBERED/INTEGER

       The NUMBERED option specifies that the file would be  saved
       with  line  numbers  in the last eight positions of 80 byte
       records, saving it with LRECL=80, unless some  other  LRECL
       is specified.  The data set is not saved in EDIT format and
       may  take  much  more  disk  space  than  EDIT format would
       require.

       The INTEGER  option  performs  the  same  function  as  the
       NUMBERED option, except that columns 73-80 contain 8 -digit
       integers.

    5. CATLG

       a. Sequential Data Sets

          You may specify CATLG to have the system make  an  entry
          in  the  system  catalog for an external file.  When you
          retrieve that  file  later  you  may  specify  ON  CATLG
          instead  of  the  volume name.  You must assign a volume
          the first time it is saved.

          COMMAND? SAVE MYTEXT ON DCU207 CATLG (CR)
          WYL.UR.ABC.MYTEXT  SAVED AND CATLG'D ON DCU207

          You may now access the file MYTEXT without  remembering
          which volume it is on:

          COMMAND? USE MYTEXT ON CATLG(CR)

          If you had omitted the CATLG in the SAVE  example,  the
          file  called  MYTEXT  would  have  been  saved  but not
          cataloged and a volume specification  would  have  been
          necessary to retrieve it.

          COMMAND? USE MYTEXT ON DCU207(CR)

          If a data set is already cataloged, you may specify  ON
          CATLG  to  save the data set on the volume named in the
          catalog.  If you do not specify  REPLACE,  WYLBUR  will
          prompt for it.

          COMMAND? SAVE MYTEXT ON CATLG
          WYL.UR.ABC.MYTEXT ALREADY THERE.
          REPLACE? YES (CR)
          WYL.UR.ABC.MYTEXT REPLACED ON DCU207

          The ON CATLG phrase is not sufficient  information  for
          saving a file the first time.

          COMMAND? SAVE MYTEXT ON CATLG (CR)
          WYL.UR.ABC.MYTEXT NOT ON CATLG


1SAVING, RETRIEVING, DELETING                                       IV.A - 5


       b. Partitioned Data Sets

          When saving a file as a member of a PDS or library,  it
          is  permissable  to  specify ON CATLG.  This is allowed
          because  your  library,   WYL.UR.ABC.LIB   is   already
          cataloged  and  the  system  uses that catalog entry to
          find the volumes.   The  use  of  parentheses  or  a  #
          signals to WYLBUR that it is a PDS member name.

          COMMAND? SAVE (MYTEXT) ON CATLG (CR)
          MEMBER MYTEXT SAVED IN WYL.UR.ABC.LIB

    6. RECATLG/UNCATLG

       a. RECATLG

          Once a data set has been cataloged, you  may  recatalog
          it.   There is no point, however, unless the volume has
          changed.

          COMMAND? USE MYTEXT ON CATLG (CR)
          VOLUME IS DCU207
          COMMAND? SAVE MYTEXT ON DCU208 RECATLG (CR)
          WYL.UR.ABC.MYTEXT SAVED AND RECATLG'D ON DCU208

          WYLBUR  will  recatalog  whether  the  data   set   was
          cataloged previously or not.

          COMMAND? SAVE MYTEXT ON DCU207 RECATLG (CR)
          WYL.UR.ABC.MYTEXT ALREADY THERE
          REPLACE? YES (CR)
          WYL.UR.ABC.MYTEXT  REPLACED AND RECATLG'D ON DCU207

       b. UNCATLG

          To uncatalog means to remove the catalog entry.

          COMMAND? SAVE MYTEXT ON DCU207 REPLACE UNCATLG (CR)
          WYL.UR.ABC.MYTEXT REPLACED AND UNCATLG'D ON DCU207

          If you specify UNCATLG when saving a member of  a  PDS,
          the entire PDS will be uncataloged.

    7. CONDENSE - (PDS only)

       If you attempt to SAVE a member of a PDS and there  is  not
       sufficient  space available in it, WYLBUR will prompt for a
       CONDENSE.  Reply YES or OK and WYLBUR will submit a job  to
       condense  your  library,  charging it to the project number
       which you  signed  on.   After  that  job  has  succesfully
       completed,  try  the SAVE again.  A reply other than YES or
       OK to the CONDENSE prompt prevents the  submission  of  the
       job.

1SAVING, RETRIEVING, DELETING                                       IV.B - 1


 B.  SCRATCH (Short Form: SCR)

 You may use this command to delete any data set or member  of  a
 PDS  which  belongs  to you.   The data set need not be a WYLBUR
 data set.  Once scratched, the file cannot  be  retrieved.   You
 must  always  specify  a  dsname.   In addition, if you have not
 previously done a SET VOLUME command to the  proper  volume  for
 that  data  set,  you  must  specify  a  VOLUME parameter on the
 SCRATCH command.  If you do not, WYLBUR will prompt for one.

       COMMAND? SCRATCH MYTEXT (CR)
       VOLUME?

 If you do not know on which volume the data set  resides,  do  a
 SHOW  DSNAMES ON  volume  for each WYLBUR volume and WYLBUR will
 list your data set names.

       COMMAND? SHOW DSNAMES ON DCU207 (CR)
       DCU207
       WYL.UR.ABC.CHARGING
       WYL.UR.ABC.SURTEXT
       WYL.UR.ABC.FILE1
       WYL.UR.ABC.MYTEXT
       WYL.UR.ABC.NEWS1
       COMMAND? SHOW DSNAMES ON DCU208 (CR)
       DCU208
       COMMAND?

       In the second SHOW DSNAMES example,  there  were  no  data
       sets for user ABC, group UR, on DCU208.

       If you catalog all of your  data  sets  however,  you  can
       avoid  searching  all of the volumes for them. WYLBUR will
       then keep track of the volume for you.  Now if you want to
       see all of your data sets only one command will have to be
       given.

       COMMAND? SHOW CATLG (CR)
       WYL.UR.ABC
       LIB - ON DCU207
       MYTEXT - ON DCU207

    1. Scratching a Sequential Data Set

       To scratch the sequential  data  set  named  MYTEXT  which
       resides on DCU207:

       COMMAND? SCRATCH MYTEXT ON DCU207 (CR)
       WYL.UR.ABC.MYTEXT  SCRATCHED ON DCU207
       COMMAND?

    2. Scratching a PDS Member

       Suppose you also have a PDS member  named  MYTEXT  on  the
       same  volume,  which  is  permitted by WYLBUR, and wish to
       scratch it.

1SAVING, RETRIEVING, DELETING                                       IV.B - 2


       COMMAND? SCRATCH (MYTEXT) ON CATLG (CR)
       or
       COMMAND? SCRATCH (MYTEXT) ON DCU207(CR)
       MEMBER MYTEXT SCRATCHED FROM WYL.UR.ABC.LIB

       LIB is the dsname of your PDS and MYTEXT was a  member  of
       it.

    3. Scratching a Cataloged Data Set

       You may delete both the file and the catalog entry:

       COMMAND? SCRATCH MYTEXT ON CATLG (CR)
       WYL.UR.ABC.MYTEXT SCRATCHED AND UNCATLG'D ON DCU207

       You may delete the file and leave the catalog entry:

       COMMAND? SCRATCH MYTEXT ON DCU207 (CR)
       WYL.UR.ABC.MYTEXT SCRATCHED ON DCU207

       Since  this  leaves  a  catalog  entry   pointing   to   a
       non-existant  data  set you should generally uncatalog the
       data set when you scratch it.

    4. Scratching a non-WYLBUR Data Set

       You may SCRATCH non-WYLBUR data sets provided they  belong
       to  you.  Data  sets  are identified as yours by WYLBUR if
       they are of any of the following forms:

             $SYSMSG.uuu...
             $USER.uuu...
             $CB.uuu...

       where uuu are the initials with which you signed on.

       COMMAND? SCRATCH $SYSMSG.ABCUR001 ON CAT (CR)
       SYSMSG.ABCUR001 SCRATCHED AND UNCATLG'D ON DCU208

       You may SCRATCH an entire PDS with one operation  provided
       that  WYLBUR  recognizes the data set as belonging to you.
       The parameter which permits this operation is PDS.  WYLBUR
       will allow you to SCRATCH your WYLBUR library.

       COMMAND? SCRATCH $USER.ABCURLIB ON CAT PDS (CR)
       SYSMSG.ABCURLIB SCRATCHED AND UNCATLG'D ON DCU208

       If PDS is not  specified,  WYLBUR  will  use  the  current
       MEMBER  parameter  if one has been set. This can be set by
       either a a SET  MEMBER  command  or  a  USE  command.  The
       current  can  be  shown  by the SHOW MEMBER command. If no
       member has been set,  WYLBUR  will  ask  if  you  want  to
       scratch  the entire PDS. A reply other than YES or OK will
       abort the SCRATCH command.

1SAVING, RETRIEVING, DELETING                                       IV.B - 3


       COMMAND? SCRATCH $USER.ABCURLIB ON CAT (CR)
       MEMBER NOT SPECIFIED
       OK TO SCRATCH USER.ABCURLIB PDS? OK (CR)
       USER.ABCURLIB SCRATCHED AND UNCATLG'D ON DCU118

1SAVING, RETRIEVING, DELETING                                       IV.C - 1



 C.  USE (Short Form: U)

 You may retrieve a copy of an external file with the USE command.
 The file may belong to you, or to another user  whether  in  your
 group or not.  The examples in this section will be for your file
 only.   See Section IV.D.  for illustrations of retrieving copies
 of files belonging to your group or other users.

 Only a copy of the external file is made available as  an  active
 file.   If  you make disasterous changes to it, you may clear the
 active file and retrieve another copy of the original version.

 The USE command may be used to fetch a sequential or partitioned
 data set.  The dsname or member name must always  be  specified.
 You  indicate  the difference by using a # symbol before the PDS
 member name or by using parentheses to enclose it.

    1. ON volume/CATLG

       You must specify the  volume  on  which  the  WYLBUR  file
       resides.

       COMMAND? USE MYTEXT ON DCU207 (CR)

       If you cataloged the file when you saved it, you may use ON
       CATLG and  WYLBUR  will  locate  the  volume  on  which  it
       resides.

       COMMAND? USE MYTEXT ON CATLG (CR)

       If you specify neither, WYLBUR will prompt for a volume:

       COMMAND? USE MYTEXT (CR)
       VOLUME?

       If you do not remember which volume the file is on,  do  a
       SHOW DSNAMES or SHOW CATLG.

    2. Clearing the Active File

       You cannot fetch a copy of an external data set unless you
       have an empty active file.

       CLEAR can be appended to a USE command to clear an  active
       file before USE is executed.

       COMMAND? USE MYTEXT ON DCU207 CLEAR (CR)



       The CLEAR in the second command cleared the active file of
       the file MYFILE.  CLEAR may also be  used  as  a  separate
       command, as in CLEAR TEXT or ACTIVE.  See Section VII  for
       details.

1SAVING, RETRIEVING, DELETING                                       IV.D - 1



 D.  Data Set Naming Conventions

 There  are  certain  rules  for  establishing  data  set   names
 (dsnames)  and they must be observed when using WYLBUR commands.
 Two attributes affect a dsname:   the  kind  of  data  set,  and
 ownership of the data set.

 There are two kinds of data sets -  sequential  and  partitioned
 data  sets  (PDSs).   A PDS is often called a library; the terms
 are synonymous.  Each WYLBUR user  has  one  PDS  plus  as  many
 sequential  data  sets  as  he  wants and as will fit within his
 space allocation.

    1. Your Data Sets

       Using your own data sets is the simplest case.   When  you
       sign  on  with  your  initials  and  group  ID,     WYLBUR
       retains the information and uses it when  necessary.   You
       may USE, SCRATCH or SAVE your data sets by specifying only
       a  dsname  for  sequential data sets and a member name for
       PDSs.  WYLBUR adds the necessary header.  However,  should
       you  sign  on  with  someone  else's  initials and account
       number, you must treat your own data sets as  though  they
       belonged to another user.

       a. Sequential Data Sets

          To USE a  sequential  data  set  named  FILE1,  specify
          either of these:

          COMMAND? USE FILE1 (CR)
          COMMAND? USE WYL.UR.ABC.FILE1 (CR)

          Both commands are equivalent; for  the  first  command,
          WYLBUR  adds  the  WYL.UR.ABC header for you.  The same
          rule holds true for  the  SAVE  and  SCRATCH  commands.
          Note  that   both of these  examples   assume  that you
          have previously indicated a volume with the SET  VOLUME
          command.

       b. Partitioned Data Sets

          Your  PDS  actually  consists  of  a  data  set   named
          WYL.UR.ABC.LIB  and  each  member name has this header.
          The commands:

          COMMAND? SAVE WYL.UR.ABC.LIB(FILE1) ON DCU208 (CR)
          COMMAND? SAVE #FILE1 ON DCU208 (CR)

          are equivalent.  The name  (FILE1)  is  in  parentheses
          because  it  is a member of the PDS called LIB.  #FILE1
          is another way of referring to the same library member.
1SAVING, RETRIEVING, DELETING                                       IV.D - 2



    2. Your Group's Data Sets

       Most groups have a central pool of disk space allocated  to
       them  from which  any user in that group may  USE , SAVE or
       SCRATCH.  This group space is a  convenient  place  to  put
       files  needed  by  more than one member of the group.  This
       space is referenced as if it belonged to a  user  with  the
       initials  of  PUB.   PUB is  a dummy user ID and can not be
       signed on to.  You may also USE data sets which  belong  to
       other  users  and  to  other  groups.   That  procedure  is
       discussed in the section below on other WYLBUR data sets.

       a. Sequential Data Sets

          To SCRATCH a data set named FILE2 which belongs to  your
          group (PUB):

            COMMAND? SCRATCH WYL.UR.PUB.FILE2 ON DCU207 (CR)
         or COMMAND? SCRATCH &PUB.FILE2 ON DCU207 (CR)
         or COMMAND? SCRATCH FILE2 ON DCU207 USER PUB (CR)
            WYL.UR.PUB.FILE2 SCRATCHED ON DCU207

          All three of these commands accomplish the same results.
          The USER uuu form may be used in the  USE,  SCRATCH  and
          SAVE  commands  to  designate a user's initials.  If you
          are going to use a series of files from the  same  user,
          use the SET USER command.

          COMMAND? SET USER DEF (CR)

       b. Partitioned Data Sets

          A group PDS has LIB for a dsname, and PUB for initials.

          COMMAND? SCRATCH WYL.UR.PUB.LIB(FILE2) ON DCU207 (CR)

          would scratch the member (FILE2) from the PDS  belonging
          to the group whose group ID is UR.

          COMMAND? SCRATCH (FILE2) USER PUB ON DCU207 (CR)

          would accomplish the same.

    3. Other WYLBUR Data Sets

       You may access WYLBUR data sets belonging  to  other  users
       with  a  USE  command  only.   You  may  not  SCRATCH files
       belonging to another  user  or  SAVE  into  another  user's
       allocated  space.   If  you sign on with another user's ID,
       you may access his files as you would  your  own.   In  the
       cases  discussed  here, assume that you have signed on with
       your own initials and  group  ID.   When  you  USE  someone
       else's  data  set,  you  must  always  specify  the  user's
       initials.  In addition, you must specify his group , unless
       he is a member of your own group.

1SAVING, RETRIEVING, DELETING                                       IV.D - 3


       a. Sequential Data Sets

          COMMAND? USE WYL.EC.JMM.FILE1 ON DCU207 (CR)

          This  command  would  fetch  a  data  set  named  FILE1
          belonging to user JMM of group EC.  In  this  case  you
          must  specify  the  heading,  because  if you typed USE
          FILE1, WYLBUR would default to your  own  initials  and
          group.

          There are two other forms of the command:

          COMMAND? USE FILE1 ON DCU207 USER JMM GROUP EC (CR)
          COMMAND? USE @EC.&JMM.FILE2 (CR)

          Both commands fetch the same file as the first form.

       b. Partitioned Data Sets

          There are also two ways to specify  a  PDS  of  another
          user.

          COMMAND? USE WYL.EC.JMM.LIB(FILE1) (CR)
          VOLUME IS DCU207
          COMMAND?

          COMMAND? USE (FILE1) USER JMM GROUP EC (CR)
          VOLUME IS DCU207
          COMMAND?

          Since a PDS is always cataloged, you  do  not  have  to
          specify  the volume, but WYLBUR does type it out if you
          do not specify it.

       c. SET USER and SET GROUP

          If you are going to use a series of files from the same
          group or user, you may use the SET USER  or  SET  GROUP
          commands.  In the first USE example, MAR is a member of
          your  group.   In  the  second USE example, TTT are the
          initials of someone in group ED.

          COMMAND? SET USER MAR (CR)
          COMMAND? USE DATASET ON DCU111 (CR)
          COMMAND? SET GROUP ED (CR)
          COMMAND? USE DATA1 ON DCU106 USER TTT (CR)
          COMMAND?

          You can reset the user to yourself and reset the  group
          to your own by:

          COMMAND? CLEAR NAME (CR)

          You can simplify the specification of a user  or  group
          ID  by  using  an & to indicate another set of initials
          and an @ to indicate another group.
1SAVING, RETRIEVING, DELETING                                       IV.D - 4


          COMMAND? USE @ED.&TTT.DATA1 ON  DCU106(CR)
          COMMAND? USE &MAR.DATASET ON DCU111 (CR)
          COMMAND? USE @ED.&TTT#MEMBER (CR)

    4. Non-WYLBUR Data Sets

       You may access data sets that are  not  WYLBUR  data  sets,
       provided  you know their name and provided that they are on
       volumes that are valid for the USE command.  The name of  a
       non-WYLBUR  data set must be preceded by a $ or enclosed in
       quotes.

       In   order to use   a non-WYLBUR   data set  it  must  have
       a BLKSIZE of less than or  equal  to  3520,  and  a  record
       format of F,FB,V,VB or U.  If the LRECL is greater than 133
       only the first 133 characters will be displayed.  This  may
       be  circumvented  by  specifying  an LRECL of less than 133
       which divides evenly into the actual LRECL of the data set.
       This way each line will have  as  many  characters  as  you
       specify  in  your  USE command.  For example if TEMP has an
       LRECL of 800 a BLKSIZE of 3200 and a RECFM of FB all of the
       information in the file may be USEd by:

       COMMAND?  USE $TEMP ON DCU118 LRECL 80 (CR)

       You will not be able to save the file back with an LRECL of
       800 however so you can not make changes  to  the  file  and
       return  it  to  the  disk  as it was originally.  Also when
       using VB records a use without an LRECL specified will  get
       you up to the first 133 characters of each record.  However
       if  you  do specify an LRECL in the USE command WYLBUR will
       treat  the  file  as  if  the  block  and   record   length
       information stored in the data set were part  of  the  data
       set.   See the CUCC User's Manual for information on LRECL,
       BLKSIZE, etc.

       COMMAND? USE $CB.NAMEIT.SYSPRINT ON DCU126 (CR)

       To fetch a non-WYLBUR PDS,

       COMMAND? USE $SYS1.PROCLIB(PL1) ON CATLG (CR)
       VOLUME IS DCU147
       COMMAND?
                               or
       COMMAND? USE 'SYS1.PROCLIB'(PL1) ON CATLG (CR)

       If the data set is a PDS, the quotes  enclose  the  dsname
       only, not the member name.

    5. Locating a Data Set

       The examples so far in this section  have  been  concerned
       with  using  data sets when you know the volume name.  But
       you may want to use a data set when you do not know  where
       it resides.
1SAVING, RETRIEVING, DELETING                                       IV.D - 5


       In the examples which follow, assume that  you  signed  on
       with  your own initials and group number, and again assume
       that your user ID is ABC and your group ID is UR.

       For all the illustrated cases, you may have to do  a  SHOW
       VOLUMES to get a list of the volumes available.

       COMMAND? SHOW VOLUMES (CR)

       USE & SAVE -- DCU106 DCU111 DCU131 DCU132 DCU150 DCU207
                DCU208 DCU209
       TEMPORARY -- DCU115 DCU118
       USE -- DCU110 DCU117 DCU126 DCU141 DCU142 DCU147

       Any searching from a WYLBUR terminal will  be  limited  to
       those volumes listed.

       a. Locating Your Own Data Sets

          If you want one of your own data sets, do a

                     SHOW DSNAMES ON volume

          You must specify the volume.  If you are looking for  a
          WYLBUR  data  set, search only the WYLBUR volumes which
          are those whose names are in the USE & SAVE list.   You
          will  get  a  list  of the fully qualified names of all
          your sequential data sets on a given volume.  The  data
          set  named  WYL.UR.ABC.LIB is your PDS.  To have WYLBUR
          list the members of your PDS:

          COMMAND? SHOW DIRECTORY (CR)

       b. Locating Your Group's Data Sets

          You may get a list of all the  data  sets  belonging  to
          persons in your group, but you must specify a volume.

          COMMAND? SHOW DSNAMES LIKE WYL.UR. ON DCU208 (CR)
          DCU208
          WYL.UR.ABC.FILE1
          WYL.UR.DEF.LIB
          WYL.UR.MUM.AFILE
             .
             .
             .
          COMMAND?

1SAVING, RETRIEVING, DELETING                                       IV.D - 6


          Another way of doing this is to specify user  ALL.   ALL
          may also be used to get a listing   of the  data    sets
          belonging to all groups:

          COMMAND? SHOW DSN USER ALL GROUP ALL ON DCU208
          DCU208
          WYL.UR.ABC.FILE10
          WYL.OR.GGG.ATLAST
          WYL.GB.GBS.REGRESS
          WYL.UR.MEL.RESULTS
          .
          .
          .
          COMMAND?

          This command would list every WYLBUR data set on DCU208.

          Any data set named LIB  is  a  PDS.   To  look  at  the
          members  of  a  PDS belonging to someone in your group,
          for example, to DEF:

          COMMAND? SHOW DIR IN WYL.UR.DEF.LIB ON DCU208 (CR)
          or
          COMMAND? SHOW DIR USE DEF ON DCU208 (CR)
          WYL.UR.DEF.LIB
          BEEP
          BIG
          LITTLE
              .
              .
              .
          COMMAND?


       c. Locating Data Sets of Other WYLBUR Users

          To find a data set belonging to any WYLBUR user who  is
          not a member of your group, you must know that person's
          initials and group ID.

          COMMAND? SHOW DSNAMES LIKE WYL.EG.AAB ON DCU208 (CR)
          DCU208
          WYL.EG.AAB.LIB
          WYL.EG.AAB.TESTDATA
          WYL.EG.AAB.FORTRAN
          COMMAND?

          Again, you must  specify  a  WYLBUR  volume.   In  this
          example,  AAB  are  the  user's  initials and EG is his
          group ID.

          To look at the PDS members belonging to the same user:

          COMMAND? SHOW DIR IN WYL.EG.AAB.LIB ON DCU208 (CR)

1SAVING, RETRIEVING, DELETING                                       IV.D - 7


       d. Locating Non-WYLBUR Data Sets

          All names of non-WYLBUR data sets must be preceded by a
          $ or enclosed in single quotes.  If the  data  set  you
          want  is  cataloged you may USE it without specifying a
          volume name.  For example, to use  (PL1),  which  is  a
          member of the PDS named SYS1.PROCLIB, type

          COMMAND? USE $SYS1.PROCLIB(PL1) ON CAT (CR)
          or
          COMMAND? USE 'SYS1.PROCLIB'(PL1) ON CATLG (CR)

          In this case the data set was cataloged but  if  it  is
          not,  you  must specify the volume.  If you do not know
          the volume you must type

          COMMAND? SHOW DSNAMES LIKE $SYS1.PROCLIB ON volume (CR)

          for each volume valid with the USE  command  until  you
          locate  the  file or determine that it is not on any of
          the volumes.  Fortunately there is a shorter form.

          COMMAND? SET PREFIX $SYS1.PROCLIB (CR)
          COMMAND? SHOW DSNAMES LIKE * ON volume (CR)

          Once you have set the name, you need type only  LIKE  *
          instead  of  specifying  the  fully qualified dsname in
          each command.  The prefix may be set by using  the  SET
          option on the USE command.

          To continue the example, assume you have  located  this
          data  set  and it is on the volume named DCU147.  Since
          the data set is a PDS, you may want to know  the  names
          of  all  its members:

          COMMAND? SHOW DIR IN $SYS1.PROCLIB ON DCU147 (CR)

          or if the prefix has been set in a previous command:

          COMMAND? SHOW DIR IN * ON DCU147 (CR)

    6. Managing Your Data Sets

       A few guidelines are presented below  which  may  make  it
       easier for you to manage your space. Space is allocated in
       1 track increments and you may not exceed your allocation.
       Therefore,   careful   management   of  your  library  and
       sequential space will allow you to save more information.

1SAVING, RETRIEVING, DELETING                                       IV.D - 8


       a. PDS vs. Sequential Space

          Each user may save data sets as sequential data sets or
          library members.   To  be  efficient,  they  should  be
          managed  differently.   A PDS is designed to hold small
          data sets.  A small data set in this case is less  than
          100  card images.  To illustrate the difference between
          a PDS and sequential data space suppose you had 7 or  8
          very  small  data  sets,  such  as 10 card images each.
          They would probably all fit  on  one  track  in  a  PDS
          whereas  it  would  take  7 or 8 tracks to save them as
          sequential data sets.   This  is  because  the  minimum
          allocated  to  each  sequential  data set is one track.
          Since one track can  actually  hold  100  to  200  card
          images  (depending  on the number of imbedded blanks in
          your data), it works best to use sequential space  only
          for data sets over 100 or 200 cards.  A maximum of 4000
          to  5000  card images is workable for a sequential data
          set.  Although WYLBUR can handle larger  files,  it  is
          time  consuming.   The  SHOW SPACE command is useful to
          show how many tracks of sequential data space  you have
          used.

       b. CONDENSE (for PDS only)

          When you save a PDS member, it is saved at the  end  of
          your  library  space.   As you do a series of SAVEs and
          SCRATCHes, empty space develops wherever a  PDS  member
          was  scratched.   Eventually  you reach the end of your
          space and cannot save another PDS  member  even  though
          there  may  be  enough scattered space to hold the data
          set.  When this happens, WYLBUR prompts you with an  OK
          TO  CONDENSE?  message.  If you reply YES or OK, WYLBUR
          submits a job to the CUCC ASP system to  condense  your
          PDS  -  that  is  to  shuffle  the  members and leave a
          contiguous empty space at the end.  Meanwhile  you  may
          not  save  a PDS member but you may do other tasks like
          edit a file.  In the interim, the active  file  may  be
          saved  as a sequential file. You may avoid the CONDENSE
          prompt by choosing a more convenient time  to  condense
          your PDS.  Use the CONDENSE command,

          COMMAND? CONDENSE LIB ON DCU207 ACCOUNT UR99999 (CR)

          JOB 8101, ABCUR001 SUBMITTED

          It is not nessasary to specify an  account  number  when
          using  the condense command.  If you do not the condense
          job will be charged  to  the  account  number  that  you
          signed on with.

          You should remember that CONDENSE'ing  costs  money  and
          uses  up  computer  time,  so  it  should  not  be  done
          excessively.

1SAVING, RETRIEVING, DELETING                                       IV.D - 9


          The time to condense is when you are getting  close  to
          the  limit  of  your library space allocation.  To find
          out how close you are:

          COMMAND? SHOW DSNAMES SPACE LIKE LIB ON DCU207 (CR)
          DCU207
          WYL.UR.ABC.LIB -- 18 of 20 TRKS


          Suppose you did a CONDENSE command at this point:

          COMMAND? CONDENSE LIB ON DCU207  (CR)
          JOB 8101, ABCUR001 SUBMITTED

          When job ABCUR001 is finished executing, look  at  your
          space again:

          COMMAND? SHOW DSNAMES SPACE LIKE LIB ON DCU207
          DCU207
          WYL.UR.ABC.LIB -- 8 OF 20 TRKS


       c. Scratching Obsolete Data Sets

          ACTIVE and REPLACE

          It is up to the discretion of each user to decide  when
          a  data  set  is obsolete.  But it pays to look at your
          dsnames once in a while.

          COMMAND? SHOW DSNAMES ON DCU207 (CR)
          DCU207
          WYL.UR.ABC.LIB
          WYL.UR.ABC.ACTIVE
          WYL.UR.ABC.REPLACE
          WYL.UR.ABC.FILE1

          Occasionally you may find dsnames  like  those  listed.
          LIB  is your PDS library.  Assume FILE1 is a valid name
          for a data set, but that ACTIVE and  REPLACE  were  not
          names  knowingly  assigned  by  you.   ACTIVE is a name
          assigned to a data set by WYLBUR when the system fails.
          If there is an active file at that time,  WYLBUR  saves
          and  catalogs  it  with  the  dsname of ACTIVE.  On the
          session following a system crash, as you signon, WYLBUR
          will  tell  you  whether  your  ACTIVE  was  saved  and
          catalogued at the last session.  If so, do a USE ACTIVE
          ON CATLG and take a look at it. Be sure to  scratch  it
          after  you  have saved it under its proper name so that
          you release the space used by the file.

          A data set named REPLACE usually got there because  you
          left out the dsname on a SAVE REPLACE command.

1SAVING, RETRIEVING, DELETING                                       IV.D - 10


          COMMAND? SAVE FILE1 ON DCU208 REPLACE (CR)
          COMMAND? SAVE REPLACE ON DCU208 (CR)

          In the first  command  the  active  file  replaces  the
          contents  of  FILE1;  in  the second command the active
          file is saved with a dsname of REPLACE.

          You may SHOW the creation date of any  data  set  on  a
          pack  enabled  for  WYLBUR  USE's  and  the date that a
          WYLBUR sequential file (WYL.UR.ABC.FILENAME)  was  last
          accessed from WYLBUR.

          COMMAND? SET VOL DCU207 (CR)
          COMMAND? SHO DSNAMES DATED (CR)
          DCU207
          WYL.UR.ABC.ACTIVE
               CR:  06/18/73   LA:  06/18/73
          WYL.UR.ABC.OUTPUT
               CR:  06/10/73   LA:  06/10/73
          WYL.UR.ABC.WARBLE
               CR:  05/04/73   LA:  06/05/73

          also you may find out how much space each data set is
          using and what type it is:

          COMMAND? SHOW DSNAME SPACE TYPE ON DCU207 (CR)
          DCU207
          WYL.UR.ABC.ACTIVE -- 2 TRKS
              PS, U3520/3520
          WYL.UR.ABC.OUTPUT -- 7 TRKS
              PS, FB/80/3440
          WYL.UR.ABC.WARBLE -- 1 TRKS
               PS, U/3520/3520
          WYL.UR.ABC.LIB -- 8 OF 10 TRKS
               PO, U/3520/3520

          The second line of information in each case is  the  DCB
          of  the  data  set.   First  is the DSORG then comes the
          RECFM/LRECL/BLKSIZE. See the CUCC User's Manual for    a
          description of DCB, DSORG, etc.
1


1 V. EXEC FILES                                                      V. - 1



















                                 SECTION V

                  ***************************************
                  * This Section  of  the  CUCC  WYLBUR *
                  * Manual  will be released at a later *
                  * date.                               *
                  *                                     *
                  * You must retain the  SECTION V card *
                  * issued to you  when  you  purchased *
                  * this  manual  in  order  to receive *
                  * Section V when released.   It  must *
                  * be    stamped      "APPROVED"  when *
                  * purchased.                          *
                  *                                     *
                  * If this card  is  not  retained  an *
                  * additional charge will be made.     *
                  ***************************************

1EXEC FILES                                                       V.A - 1


 V. Introduction to Exec Files

 Thus far, two kinds of WYLBUR files have been described:

    1) "external files" are data sets stored on disk as members of
       a partitioned data set (or "library") or as sequential data
       sets;

    2) the active file is a facility available to  a  WYLBUR  user
       for text-editing, modification and/or submission as a batch
       job (see Section VI).

 In addition to the active file, WYLBUR has a facility called  the
 exec  (execute) file.  The exec file differs from the active file
 in several ways.  Its function is to perform a series of commands
 sequentially (in a user-specified order).  Users  often  find  it
 necessary   to   perform  the  same  series  of  WYLBUR  commands
 repeatedly.  If such a series of commands is  collected  into  an
 active file  and  SAVed, it is thereafter necessary to type in an
 EXEC command (see Section V.B) any time you wish to  execute  all
 those commands.  Any WYLBUR file may become ("be moved into") the
 exec  file, as long as it does not exceed 3 WYLBUR pages (see the
 SHOW PAGES command in Section VII).  If  an  illegal  command  is
 given  within  an  exec  file,  the execution of the file will be
 interrupted.


 A.  Creating an Exec File

 To create an exec file, enter collect mode and enter one  command
 per  line.  The commands will eventually be executed in the order
 in which they are encountered, so the order  in  which  they  are
 collected may be significant.  Any valid WYLBUR command may occur
 in an exec file, and each line will be treated as a command.

 For example, if you usually enter the  same  series  of  commands
 each  time you sign on to WYLBUR ("SET TERSE", "SET VOLUME," "SET
 TABS," "SET LENGTH," "SHOW SPACE"), it may be more convenient  to
 create  a  file  consisting of these commands and SAVE it in your
 library:

         COMMAND? COLLECT (CR)
              1.  ? SET TERSE (CR)
              2.  ? SET VOLUME DCU308 (CR)
              3.  ? SET TABS 10 20 30 50 NOVERIFY (CR)
              4.  ? SET LENGTH 132 (CR)
              5.  ? SHOW SPACE; CAN I ACCOUNT FOR SPACE USED? (CR)
              6.  ? *** (ATTN)
        COMMAND? SAVE #SIGNON
        MEMBER SIGNON SAVED IN WYL.UR.ABC.LIB
        COMMAND?

1EXEC FILES                                                       V.A - 2


 Thus SAVEd, it may be accessed as needed, whenever  you  want  to
 execute those commands.

 Note that  in  line  5  of  the  previous  example,  there  is  a
 semi-colon followed by the words "CAN I ACCOUNT FOR SPACE USED?".
 As  discussed  in  Section  I.C, a semi-colon stops the scan of a
 command line; anything following it is a comment.

 With this basic example, you will be able  to  begin  using  exec
 files  as  well  as  attempt to understand the more sophisticated
 examples of exec files introduced later.
1EXEC FILES                                                       V.B - 1


 B.  EXEC Command  (Short forms: EXE or X)


 The EXEC command is used to move an external or active file  into
 the exec file and execute the commands.


    1. Executing the Active File

       The ACTIVE option will place the active file into the  exec
       file  and  execute  it.   When  you give this command,  the
       active file is cleared.

       Using the example described on the preceding page, you  may
       proceed as follows just after SAVing #SIGNON:

       COMMAND? EXEC ACTIVE (CR)
       ->   1.  SET TERSE
       ->   2.  SET VOLUME DCU308
       ->   3.  SET TABS 10 20 30 50 NOVERIFY
       ->   4.  SET LENGTH 132
       ->   5.  SHOW SPACE ; CAN I ACCOUNT FOR SPACE USED?
       ABC - 5 TRKS USED, 7 TRKS ALLOWED
       EXEC END
       ?

       As each command in the file is executed, WYLBUR  lists  it,
       preceded by an arrow indicating that it is the current line
       in the exec file.


    2. Executing an External File

       You may execute a file that has been  SAVEd  by  specifying
       the  FROM  option,  followed  by the name of the file to be
       executed.  The external file must be in valid  WYLBUR  edit
+                                   ____
       format.  All of the options used in referencing an external
       file   (USER  uuu,  GROUP  gg,  ON  volume,  etc.)  may  be
       specified.  WYLBUR places  a  copy  of  the  external  file
       directly  into  the  exec  file without altering the active
       file.

       For example, if  you have  created and saved #SIGNON,  that
       file may be executed by typing,

       COMMAND? EXEC FROM #SIGNON ON DCU308 (CR)
       ->   1.  SET TERSE
       ->   2.  SET VOLUME DCU308
       ->   3.  SET TABS 10 20 30 50 NOVERIFY
       ->   4.  SET LENGTH 132
       ->   5.  SHOW SPACE ; CAN I ACCOUNT FOR SPACE USED?
       ABC - 6 TRKS USED, 7 TRKS ALLOWED
       EXEC END
       ?


1EXEC FILES                                                       V.B - 2


    3. Specifying a Starting Line Number

       You may specify that WYLBUR begin  execution  of  the  exec
       file  at some line other than the first line in the file by
       using the START option and giving the line  number  of  the
       first line to be executed.

       COMMAND? EXEC FROM #SIGNON ON DCU308 START 2 (CR)
       ->   2.  SET VOLUME DCU308
       ->   3.  SET TABS 10 20 30 50 NOVERIFY
       ->   4.  SET LENGTH 132
       ->   5.  SHOW SPACE ; CAN I ACCOUNT FOR SPACE USED?
       ABC - 6 TRKS USED, 7 TRKS ALLOWED
       EXEC END
       COMMAND?


    4. PAUSE Option  (Short form: PAU)

       The PAUSE option may be used to suspend  execution  of  the
       exec  file and return you to COMMAND mode.  This option can
       be used in two different ways:  with  the  FROM  or  ACTIVE
       option and within an exec file.

       a. Using PAUSE with FROM or ACTIVE

          When used with either the FROM or ACTIVE  option,  PAUSE
          prevents the file from executing immediately after it is
          placed  in  the  exec file.  Instead you are returned to
          command mode and must use the exec command  to  commence
          execution of the exec file.

1EXEC FILES                                                       V.B - 3


          COMMAND? COL (CR)
             1.   ?  CH '&&' TO 'MR. JOHN DOE' NOLIST (CR)
             2.   ?  CH '@@' TO '1234 MAIN STREET' NOLIST (CR)
             3.   ?  CH '##' TO 'ANYTOWN, USA  12345' NOLIST (CR)
             4.   ?  LIST CLEAN NONUMBER MARKER=$ (CR)
             5.   ?  (ATTN)***
          COMMAND? EXEC ACTIVE PAUSE (CR)
          COMMAND? USE #FORMLTTR ON DCU308 (CR)
          COMMAND? LIST (CR)
                  1.     &&
                  2.     @@
                  3.     ##
                  4.
                  5.
                  6.     DEAR &&, (ATTN) ***
          COMMAND? EXEC (CR)
          ->   1.  CH '&&' TO 'MR. JOHN DOE' NOLIST
                     .
                     .
                     .
          ->   4.  LIST CLEAN NONUMBER MARKER=$

               MR. JOHN DOE
               1234 MAIN STREET
               ANYTOWN, USA 12345

               DEAR MR. JOHN DOE,

               ENCLOSED ARE THE ITEMS YOU REQUESTED.
               WE HOPE YOU WILL FIND THEM SATISFACTORY.

                                 SINCERELY,

                                 SAM SMITH
               (CR)
          EXEC END
          COMMAND?


       b. Using PAUSE within an Exec File

          By using the PAUSE option within an  exec  file,  it  is
          possible  to  create an exec file which serves more than
          one purpose.  For example, suppose that you may want  to
          SET  UPLOW  for some sessions, but not for others.  With
          the addition of the EXEC PAUSE statement to  the  SIGNON
          file,  the first four commands of the file will execute,
          after which the PAUSE command will return you to COMMAND
          mode.  To execute the remainder of the file,  type  EXEC
          and   execution  will  recommence  with  the  SET  UPLOW
          statement.   Otherwise,  continue   with   any   command
          normally permitted in command mode.

1EXEC FILES                                                       V.B - 4


          COMMAND? USE #SIGNON ON DCU308 (CR)
          COMMAND? COL (CR)
             6.   ?  EXEC PAUSE (CR)
             7.   ?  SET UPLOW (CR)
             8.   ?  *** (ATTN)
          COMMAND? EXEC ACTIVE  (CR)
          ->   1.    SET TERSE
          ->   2.    SET VOLUME DCU308
          ->   3.    SET TABS 10 20 30 50 NOVERIFY
          ->   4.    SET LENGTH 132
          ->   5.    SHOW SPACE ; CAN I ACCOUNT FOR SPACE USED?
          ABC - 6 TRKS USED, 7 TRKS ALLOWED
          ->   6.    EXEC PAUSE
          ? EXEC (CR)
          ->   7.    SET UPLOW
          EXEC END
          ?

       c. Using the Exec File as Temporary Storage

          It is sometimes useful to store the active file  in  the
          exec  file  temporarily  while doing something else with
          the active file.  The PAUSE option allows  any  type  of
          file  (less  than  three WYLBUR pages) to be in the exec
          file without being executed.

          COMMAND? USE #PL1JOB ON DCU307 (CR)
          COMMAND? EXEC ACTIVE PAUSE (CR)
          COMMAND? USE #PL1DATA ON DCU307 (CR)
          COMMAND? MODIFY 5 (CR)
          5.         THIS IS SOME INCORRECT DATA
          ALTERS?                 DD
          5.         THIS IS SOME CORRECT DATA
          ALTERS? (CR)
          COMMAND? SAVE #PL1DATA ON DCU307 REPLACE
          MEMBER PL1DATA REPLACED ON DCU307
          COMMAND? RESTORE CLEAR
          COMMAND?

          The RESTORE command replaces the existing exec  file  in
          the active file (See Section V.D).

    5. CLEAR Option  (Short form: CLR,CLE)

       If you already have an exec file, it must be cleared before
       you can execute another file.  One way to  accomplish  this
       is by using the CLEAR option in the EXEC command.

       COMMAND?  EXEC FROM (SIGNON) CLEAR (CR)

       The exec file may  also  be  cleared  by  using  the  CLEAR
       command.

       COMMAND? CLEAR EXEC (CR)
1EXEC FILES                                                       V.B - 5



    6. EXEC VERBOSE/TERSE and EXEC LOG/NOLOG


       These global parameters may be used to govern the amount of
       response that WYLBUR prints at the terminal.   All  of  the
       above examples  have  used VERBOSE and LOG, the defaults at
       signon.

       These parameters may be specified  in  either  a  SET  EXEC
       command  or  in  the  EXEC  command.  In either command the
       parameter(s) specified will be set for the duration of  the
       session or until reset.

       If  TERSE  is  specified,  WYLBUR  shortens  some  of   the
       responses  and causes WYLBUR not to print line numbers.  If
       NOLOG is specified, command  lines  do  not  list  as  they
       execute.

       COMMAND? EXEC FROM #SIGNON ON DCU308 TERSE LOG (CR)
       ->   SET TERSE
       ->   SET VOLUME DCU308
       ->   SET TABS 10 20 30 50 NOVERIFY
       ->   SET LENGTH 132
       ->   SHOW SPACE ; CAN I ACCOUNT FOR SPACE USED?
       ABC - 6 TRKS USED, 7 TRKS ALLOWED
       EXEC END
       ? EXEC FIRST NOLOG VERBOSE (CR)
       ABC - 6 TRKS USED, 7 TRKS ALLOWED
       EXEC END
       ?


       These parameters may also be set using the SET command.

       Note  that  EXEC  TERSE/VERBOSE  has  no  effect   on   the
       TERSE/VERBOSE for COMMAND mode described in Section II.
1EXEC FILES                                                       V.C - 1


 C. LOAD Command  (Short form: LOA)


 The LOAD command is similar to the  EXEC  command,  but  has  two
 major  differences:   you  may specify that a range of lines from
 the active file is to be loaded  into  the  exec  file,  and  the
 active file will not be altered by the LOAD command.

 You also may specify that a range of lines from an external  file
 be  LOADed  and executed.  If you specify a range, it must be the
 first option after the LOAD command.

       COMMAND? LOAD 8/20 FROM #XFILE1 ON DCU308 (CR)

 After you type this command, lines 8/20 of #XFILE1 will be placed
 in the EXEC file and then executed.

 When  loading  the  entire  active  file  the  LOAD  command   is
 comparable  to  the  EXEC  ACTIVE command, except that the active
 file is not cleared.

 Note that the LOAD command may  not  be  used  to  execute  lines
 currently  in  the  exec file,i.e., it may not be used to replace
 the EXEC line number command.

1EXEC FILES                                                       V.D - 1


 D. RESTORE Command  (Short form: RES)

 You may not make modifications directly to  the  exec  file.   To
 make  modifications,  you  must  first  move the exec file to the
 active file.  To do this, use the  RESTORE  command,  which  will
 place  the  exec  file into the active file if the active file is
 clear.  This will also clear the exec file.  If  an  active  file
 already  exists,  you may specify the CLEAR option of the RESTORE
 command to clear the active file before RESTORing the exec  file.
 If  you  do  not  specify  CLEAR, WYLBUR will prompt to clear the
 active file.

 COMMAND? RESTORE (CR)
 OK TO CLEAR? OK (CR)
 COMMAND?
1EXEC FILES                                                       V.E - 1


 E. SET and SHOW EXEC

 The SET EXEC command is used to set those global parameters which
 affect the exec file.  Note however that this has  no  effect  on
 the general global parameters.

    1. Specifying a Line Number

       The SHOW EXEC command may be used to list a single line  of
       the  exec  file.  You may specify a line number, a symbolic
       line number, or RETRY.  SHOW EXEC RETRY will list the  line
       that would be executed on an EXEC RETRY command(see below).

    2. Specifying Global Exec Parameters

       To set a global exec parameter(s), it is  necessary  merely
       to  type  SET  EXEC  (parameters).  You may ascertain which
       EXEC modes (VERBOSE or TERSE,LOG or NOLOG) are in effect by
       specifying one or more of these global exec  parameters  in
       the SHOW EXEC command.

       COMMAND? SET EXEC TERSE NOLOG (CR)
       COMMAND? SHO EXEC TERSE (CR)
       EXEC TERSE IS IN EFFECT.
       COMMAND? SHO EXEC LOG VERBOSE (CR)
       EXEC NOLOG TERSE IS IN EFFECT.
       COMMAND?


1EXEC FILES                                                       V.F - 1


 F. Other Commands and Features Useful with Exec Files

 Any WYLBUR command may be used in an exec file.  The commands are
 executed as if you had entered them one by one  in  command  mode
 (except, perhaps, for some uses of the EXEC or LOAD command).

 There are some commands that, though they may be used in  COMMAND
 mode,  are  especially  useful  when  used in an exec file.  Many
 commands that have been discussed in  previous  sections  may  be
 used  with  an EXEC option which changes the file referenced from
 the active file to the exec file.

    1. LIST Command

       You may use the EXEC option of the LIST command to list all
       or part of the exec file.  The EXEC option may be used with
       any other valid options in the LIST command.

       COMMAND? L 'TABS' EXEC NONUM (CR)
                SET TABS 10 20 30 50 NOVERIFY
       COMMAND?

    2. Branching

       A very important  feature  of  the  exec  facility  is  the
       ability to branch within the file while executing.

       a. Specifying a Line Number

          If you specify a line number in the EXEC  command,  your
          current  exec  file will be executed beginning with that
          line number, or the next line  after  it  if  that  line
          number does not exist in the exec file.

          COMMAND? EXEC 3 (CR)

       b. Symbolic Line Numbers

          As noted in Section II, there are two distinct  sets  of
          symbolic  line  numbers:   one  set refers to the active
          file, the other refers to the exec file.   As  the  exec
          file  is  executed, the exec current line pointer points
          to the command currently  executing.

       c. Exec Break

          If you hit the (ATTN) key while executing an exec  file,
          an  exec  break will occur:  WYLBUR interrupts execution
          on  the  current  command,  types  out  EXEC  BREAK, and
          returns you to  command  mode.   (This  also  occurs  if
          WYLBUR  encounters  an illegal command or a command that
          cannot be  executed.)  The  exec  current  line  pointer
          points to the line that was interrupted or was in error.
1EXEC FILES                                                       V.F - 2


          When an exec break occurs,  you  may  want  to  continue
          executing  the file.  To execute the interrupted command
          use either of the following (in this command,  they  are
          synonomous):

          COMMAND? EXEC * (CR)
          or
          COMMAND? EXEC RETRY (CR)

          To execute the next command use one of the following:

          COMMAND? EXEC NEXT (CR)
          or
          COMMAND? EXEC (CR)

    3. Looping

       The following file is a simple example of the  use  of  the
       line  number  option in an exec file.  More useful examples
       will be given at the end of this section.

             1.   ;THIS IS A "SPIDER WEB" INFINITE LOOP.
             2.   ;HIT THE ATTN KEY TO TERMINATE IT.
             3.   EXEC *+2
             4.   EXEC LAST
             5.   EXEC 4
             6.   EXEC FIRST

    4. POINT Command  (Short form: P)

       WYLBUR keeps track of the commands being  executed  in  the
       exec  file  by  use  of a line pointer.  As each command is
       executed, the line  pointer  is  incremented  to  the  line
       number of the next command.

       The POINT command is identical to the LIST  command  except
       that  the  current  line pointer is changed to point to the
       line last listed (or referenced, if NOLIST  is  specified).
       The   NOLIST  option,  though  it  completely  negates  the
       usefulness of the LIST command, may be used  in  the  POINT
       command to set the current line pointer without listing the
       range.   The SET CURRENT command may not always be adequate
       to set the current line  pointer;  for  instance,  you  may
       POINT to an associative range.

       When the EXEC option is used with the  POINT  command,  the
       exec  current  line pointer is changed and the range in the
       exec file is listed.

       During execution of an exec  file,  WYLBUR  sets  the  exec
       current  line pointer to the line currently being executed.
       The next line to be executed is always the line  referenced
       by  the  exec  symbolic line pointer NEXT, unless otherwise
       specified.  Because of this, POINT (range) EXEC may be used
       to branch within an exec file.

1EXEC FILES                                                       V.F - 3


       In the following file, the POINT command is  used  to  show
       how labels may be used in an exec file.

          1.  LIST 1
          2.  POINT 1 ';SKIP' EXEC NOL
          3.  LIST 2
          4.  ;SKIP
          5.  LIST 3

       After statement one executes, statement two sets  the  EXEC
       line  pointer  to  the  last line in the file which has the
       character string ";SKIP" starting in the first column.  (If
       you had not specified "1"  in  the  POINT  command, WYLBURr
       would  search  the  exec  file for the last line containing
       ";SKIP" in any postion within it.) In this case  line  four
       is  the  only line which has the string ";SKIP" starting in
       its first column and the exec line pointer is set to  four.
       As  stated previously, the next line which is to execute is
       the line immediately following the line referenced  by  the
       exec  line pointer, line five.  Thus the order of execution
       of the statements in the file is one, two and finally five;
       output from their execution consists of a listing of  lines
       one and three of the active file  as  lines 1 and 5  of the
       exec file are executed.

    5. READ Command     (short form: REA)

       The READ command may be used to read and execute one WYLBUR
       command.  When the READ command is  executed,  WYLBUR  will
       prompt  for a command to be entered, followed by a carriage
       return (CR).  WYLBUR will execute that command  and  return
       you  to COMMAND mode if WYLBUR was in COMMAND mode when the
       READ command was executed; however, if WYLBUR  was  in  the
       process of executing an exec file, it will proceed with the
       execution of the file.

       The following example shows the use of READ in COMMAND mode
       and in an exec file.

       COMMAND? READ (CR)
       ENTER? EXE FROM #SIGNON ON DCU306 (CR)
       ->   1.   SET TERSE
       ->   2.   SET VOLUME DCU306
       ->   3.   READ ; THIS MAY BE USED TO SKIP LINE 4
       ENTER? EXE 5 (CR)
       ->   5.   SHOW SPACE
       ABC - 6 TRKS USED, 7 TRKS ALLOWED
       EXEC END
       ?

1EXEC FILES                                                       V.F - 4


       In this example the READ  command  is  used  for  the  same
       purpose  as  the  EXEC  PAUSE  was  used  for in a previous
       example:  to allow you to decide within the file whether or
       not to set the LENGTH parameter.  Had the response  to  the
       ENTER?  prompt been either a (CR) or EXEC, execution of the
       file  would  have  continued  at  the next line of the exec
       file.  If the response to the ENTER?  prompt had been  EXEC
       6  (or any non-existent line in the exec file) WYLBUR would
       respond EXEC END and terminate execution of the exec file.
1EXEC FILES                                                       V.F - 5


       a. PROMPT  Option    (short form: PRO)

          Unless you specify otherwise, WYLBUR will respond to the
          READ command with the prompt, "ENTER?" You may  override
          this prompt and specify one of your own choice using the
          PROMPT option followed by the prompt in quotes.

          COMMAND? READ PROMPT 'WHAT NEXT? '
          WHAT NEXT? EXE FRO #GETREADY TER NOLOG (CR)
          VOLUME IS DCU306
          ENTER X 5 TO SKIP SETTING LENGTH: X 5 (CR)
          ABC - 6 TRKS USED, 7 TRKS ALLOWED
          EXEC END
          ?

       b. Reading a Line

          You may READ a command from your active file.

          COMMAND? LIST 6 (CR)
             6.   sho date
          COMMAND? READ 6 (CR)
          16:32:47 07/19/74 (74.200)

          You may specify that  the  line  be  deleted  from  your
          active  file  after  it  is  executed  using  the DELETE
          option.

          COMMAND? READ 6 DELETE (CR)
          16:32:47 07/19/74 (74.200)
          COMMAND? LIST 6
          VOID RANGE
          COMMAND?

          If you have entered a command  in  COLLECT  mode  rather
          than  in  COMMAND mode, the above command is an easy way
          to correct the error.

          You may execute a  single  line  of  the  exec  file  by
          specifying  the EXEC option along with the READ command.
          You may not specify both the DELETE and EXEC options.

          COMMAND?  READ LAST EXEC (CR)
          ABC - 6 TRKS USED, 7 TRKS ALLOWED
          COMMAND?


1EXEC FILES                                                       V.F - 6


    6. COPY EXEC

       The EXEC option may be specified in  the  COPY  command  to
       copy  all or part of the exec file to the active file.  Any
       of the other COPY options may  also  be  specified,  except
       FROM  (and associated options such as ON volume); COPY FROM
       EXEC would use an external file with the dsname EXEC.

       COMMAND? COPY FIRST/3 EXEC TO .1 BY 1 MERGE (CR)
          2.3  -  LAST LINE
       COMMAND?

    7. COMMENT Command  (Short form: COMM)

       The COMMENT command may be used in an exec  file  to  print
       messages  or  instructions on the use of the exec file.  It
       differs from a comment line beginning with a semi-colon (;)
       in two ways:

       a. It cannot appear on the same line as another command.

       b. In EXEC NOLOG  mode,  the  text  following  the  COMMENT
          command will be printed, whereas comments beginning with
          a semi-colon will not.

          COMMAND? LIST (CR)
             1. ; THIS LINE WILL NOT BE PRINTED
             2. COMMENT BUT THIS LINE WILL.
          COMMAND? EXE ACTIVE NOLOG (CR)
          BUT THIS LINE WILL.
          EXEC END
          COMMAND?


    8. CLEAR EXEC

       The exec option used with the CLEAR command causes the exec
       file to be cleared.

       COMMAND? CLEAR EXE (CR)
       COMMAND? LIST EXEC (CR)
       NO EXEC FILE
       COMMAND?

1VI.  USING THE CENTRAL COMPUTER                                  VI.A - 1


 VI.  Using the Central Computer through WYLBUR

 WYLBUR has two  commands  which  make  it  possible  to  use  the
 center's computer without writing your own JCL statements.  These
 commands may be used only with an active file.  They are:

      LIST OFFLINE (to list an active file on the system  printer)
      PUNCH (to punch a card deck)

 You may also submit a job to ASP for execution with this command.

      RUN            (to submit a job into the batch)

 In addition, you may monitor  the  progress  of  a  job,  whether
 submitted from WYLBUR or not, by using this command:

      LOCATE

 WYLBUR's primary function, however, is as an efficent text editor
 and not merely as a convenient, but expensive keypunch.

 A.  LIST OFFLINE

 It is not convenient to list all of a  very  large  file  at  the
 typewriter   terminal   because  the  selectric  prints  only  15
 characters per second, and a CRT will not give a printed copy  of
 the  file.   (You  may  want  to  check previous corrections on a
 printed copy).  WYLBUR has a command which lists your ACTIVE file
 on a high speed printer.

      COMMAND?  LIST OFFLINE (CR)

 or, you may use the shorter form:

      COMMAND?  L OFF (CR)

 WYLBUR will generate the necessary JCL,  put  the  job  into  the
 computer's job queue and bill the TPMON project number.

      JOB 8101, ABCUR001 SUBMITTED


 LIST OFFLINE is a form of the LIST command encountered in Section
 III.  Actually OFFLINE is  a  parameter  of  LIST.   All  of  the
 options  which  are available with LIST are also usable with LIST
 OFFLINE.  In addition, LIST OFFLINE has  special  features  which
 are described in this section.

    1. BIN

       The output will be delivered to your default bin unless you
       specify another bin in the command.

       COMMAND?   LIST OFFLINE BIN A1 (CR)

1USING THE CENTRAL COMPUTER                                       VI.A - 2


    2. ACCOUNT

       A CUCC project number may be  specified  in  the  LIST  OFF
       command.   It  need  not  be  the  same number that will be
       billed for your connect time on WYLBUR,  that  is  for  the
       project number with which you signed on.  The parameter  is
       ACCOUNT or ACC.

       COMMAND?   LIST OFFLINE ACCOUNT=aaaaaaa (CR)

       If you do not specify an account number  in  the  LIST  OFF
       command, the job will be charged to the project number used
       to sign on to TPMON.  If you give an invalid project number
       (mistyped  or  no funds remaining for the project) ASP will
       reject the JOB and the following message will be issued:

         JOB ABCUR001 REJECTED BY ASP. CHECK AND RESUBMIT.

       ASP will pick up some other JCL errors and also  give  this
       response.   These  errors  refer  to  the  JOB  card or ASP
       control statements.

    3. (n)  (Positioning)

       When listing offline you may position output on the printed
       paper by specifying a count of the number of blanks  to  be
       inserted  at  the left.  In this way you may obtain margins
       or even center text on a page.

       COMMAND?   LIST OFF (5) (CR)

       This example will produce  output  which  is  shifted  five
       positions  to  the  right.   The number of blanks specified
       must be between zero and 70.  There may be a maximum of 132
       characters on a printed line.   (n)  must  be  positive  or
       zero.   If  it  is  zero, (0), then the text is listed with
       carriage control and UNNUMBERED.


    4. CC or MC (Carriage Control)

       WYLBUR allows you to list a file  which  contains  its  own
       printer control characters in column 1.

       COMMAND?   LIST OFFLINE  CC (CR)

       See Appendix B, Editing Hints, for more about using carriage
       control characters.

       When the LIST OFFLINE command is given for a file that  has
       been  created  by some of the IBM processors or assemblers,
       such as Assembler F or the Linkage Editor, WYLBUR  requires
       the MC (machine carriage control) option since the carriage
       control  characters  output  by  the processors are not the
       standard (ASA) characters used by WYLBUR.

       COMMAND?   LIST OFF MC (CR)
1USING THE CENTRAL COMPUTER                                       VI.A - 3



    5. 'title'

       You may have a title on the first page of each copy of  the
       output.   It  may be up to 64 characters in length and must
       be enclosed in quotes.

       COMMAND?  LIST OFF 'THIS IS MY TITLE' (CR)

       The title must always be specified after OFFLINE or it will
       considered as part of the associative range.

    6. NOEJECT

       You may use NOEJECT to suppress the  feature  which  causes
       the  printer  to  move to the top of the next page after 60
       lines have been printed.  It will then print on every line,
       even over page perforations.

       COMMAND?   LIST OFF BIN A1  NOEJECT (CR)

    7. COPIES

       It is possible to request up to 99  copies  of  an  offline
       list.

       COMMAND?  LIST OFF COPIES=50 (CR)

       If a call is made for more than  15,000  lines  of  output,
       WYLBUR prints the line count and asks if it should proceed.
       A  YES  or  OK  reply  will produce the listing.  Any other
       reply stops the job.

    8. UPLOW

       An offline listing can be printed using the upper and lower
       case print train if you specify  UPLOW.   Note  that  since
       characters  such  as ¢ and !  are not on the standard print
       train, they will be printed as blanks in an offline listing
       unless the UPLOW option is specified.

    9. DARKLIST

       The DARKLIST option produces  output  that  is  overprinted
       once.   This  is  handy if the listing is to be reproduced.
       You can get up to four overprints by specifying  DARKLIST=n
       (n must be four or less).

   10. SC  (service class)

       The  valid  service  classes  for  ASP  are  E,H,N,O,S   in
       descending  order of CUCC scheduling priority.  The service
       class default is N. (The default for UI jobs is S.)

1USING THE CENTRAL COMPUTER                                       VI.A - 4


   11. ID

       Any jobs submitted through WYLBUR will be given  a  jobname
       by  WYLBUR  of the form uuuggnnn, where uuu is the user ID,
       gg is the  group  id,  and  nnn  is  a  three-digit  number
       incremented each time a new job is submitted.  If ID=aaa is
       specified,  where  aaa  is  any  set  of  3  letters and/or
       numbers, the job will  be  given  a  jobname  of  the  form
       uuuggaaa.  For example,

       COMMAND?  LIST OFF ID=CAT (CR)
       JOB 6003, ABCURCAT SUBMITTED

       For user ABC of group UR, WYLBUR will submit the  job  with
       the job name ABCURCAT.

   12. DEST

       You may use the DEST  option  when  you  want  your  output
       routed  to  a location other than the bins in the reception
       area.  For instance, if you wanted output directed  to  the
       Self-Service  I/O  area, you would include the following in
       the command:

       COMMAND?  LIST OFF DEST=SSERV (CR)

   13. FORMS

       The FORMS option is used when output is to  be  printed  on
       other than the standard lined paper.  The command

       LIST OFF FORMS=HEAVY

       would cause the output to be printed on heavy  plain  white
       paper.


       The complete form of the LIST  command  for  use  with  the
       OFFLINE option is:

       LIST Ýrange¨ ÝLIST options¨ ÝSQUASHED¨ ÝEXEC¨
            ÝCOLUMNS  m/n¨  ÝOFFLINE¨  ÝCC¨  ÝBIN=bb¨
            ÝACCOUNT=aaaaaaa¨ ÝSC=c¨ Ý'title'¨ ÝCOPIES=nn¨ ÝUPLOW¨
            Ý(n)¨ ÝNOEJECT¨ ÝMC¨ ÝFORMS=forms¨ ÝID=aaa¨ ÝDEST=dest¨
            ÝDARKLIST¨

       The parameters which are listed following OFFLINE are valid
       only when used with OFFLINE and must be typed in  following
       the  word  'OFFLINE'.  See Section VII for more information
       on all options.
1USING THE CENTRAL COMPUTER                                       VI.B - 1


 B.  PUNCH

 You may obtain a punched card deck of the  active  or  exec  file
 with  the  PUNCH command.  The ACCOUNT parameter may be specified
 on this command as in the LIST OFF.  To punch the active file:

      COMMAND?   PUNCH (CR)

 If the NUMBERED option is specified, the  line  numbers  will  be
 punched  into  columns  73-80,  overwriting whatever was in those
 columns.  The range is optional.  If a job punches more than 2000
 cards, WYLBUR will send a message to that effect and  ask  if  it
 should  proceed.  A YES reply is needed for the job to go on.  To
 submit the exec file as a job, use the EXEC option.

    1. RANGE

        You may specify an explicit or  associative range.

    2. LIST

       The LIST option gives you a listing of the deck punched  in
       the same job.

    3. EXEC

       PUNCH EXEC will produce a punched deck  of  the  exec  file
       instead of the active file.

    4. List options

       The default is  UNNUMBERED.   IF  NUMBERED  or  INTEGER  is
       specified, line numbers will be punched in columns 73-80.

    5. DEST, ID, SC, BIN, COPIES, and ACCOUNT

        These  options are used in the same way  here  as  in  the
        LIST OFFLINE command.


 The complete form of the PUNCH command is

    PUNCH Ýrange¨ ÝLIST options¨ ÝBIN=bb¨ ÝACCOUNT=aaaaaaa¨ ÝLIST¨
         ÝEXEC¨ ÝSC=c¨ ÝID=aaa¨ ÝDEST=dest¨ Ý'title'¨



1USING THE CENTRAL COMPUTER                                       VI.C - 1


 C.  RUN

 The RUN command directs WYLBUR to put the active or exec file into
 the input stream.

      COMMAND?   RUN (CR)

 The active file must contain the necessary JCL statements to form
 a complete job.  The job card may contain a job  name.   All  JCL
 must be in upper case.

    //jobname  JOB  (acctinfo),i.name

 1. JOBNAME

 You may also allow WYLBUR to create a job name for  your  job  by
 leaving  at  least one space between the // and the word 'JOB' on
 the job card.  The jobname must begin with the  (signon)  USERID.
 The  fields printed in the example in lower case must be replaced
 by the appropriate information.

    //  JOB  (acctinfo),i.name

 The job name supplied will be of the form uuuggnnn, where uuu and
 gg  are  the user ID  and group ID  specified  in  the   signon
 procedure,  and nnn is a three-digit number incremented each time
 you submit a job from WYLBUR.  The value of nnn for the next  job
 you submit may be obtained by giving the following command:

    COMMAND?  SHOW JOBNO (CR)
    002 - NEXT JOBNO

 This response indicates that the next job you submit  would  have
 the default jobname of uuugg002.

 It is possible to override the JOBNO  by  using  the  ID  option.
 Whether  or  not  you  specify  the  ID option, the JOBNO will be
 incremented.

    COMMAND?  RUN ID=AAA (CR)
    JOB 6002, ABCURAAA SUBMITTED


 After WYLBUR places the job in the input stream, it  acknowledges
 the job's submission:

      JOB 8101, ABCUR001 SUBMITTED

 In this example 8101 is the ASP JOB number and  ABCUR001  is  the
 job name.


 When the RUN command is given, WYLBUR  automatically  passes  the
1USING THE CENTRAL COMPUTER                                       VI.C - 2


 file  to the system in CARD format so that it can be processed by
 the computer.  Take care not to run a file whose JCL was  created
 while the SET UPLOW command  was  in  effect,  since  lower  case
 characters  are  not  converted to upper case.  If you forget and
 submit a JOB with a JOB card in lower case you will  receive  the
 message:

         BAD JOB CARD, LINE     1.


 2. LIST options


 If NUMBERED is specified, line numbers will automatically be  put
 into character positions 73-80, overwriting whatever was in those
 positions.   Thus  the  output from the run will contain the line
 numbers to facilitate further editing.

       COMMAND?   RUN NUMBERED (CR)



 3. EXEC option

      COMMAND? RUN EXEC (CR)

 The RUN EXEC cammand can be used to submit a JOB from  your  exec
 file.   The  JOB must be a valid JOB.  It must have the necessary
 control cards.  If there is no JOB card or it  is  not  typed  in
 properly, ASP will prompt with the message:

          BAD JOB CARD, LINE   n

 where n is the line number of the JOB card.  If you want  to  run
 only a section of the exec file you can specify:

         RUN range EXEC


 5. CANCEL and reject

 To cancel a run, hit the ATTN  key  before  the  'JOB  SUBMITTED'
 reply appears.  This will cause the run command to be aborted and
 the  job  will  not be submitted.  When this is done, WYLBUR will
 respond:

      JOB FLUSHED AT USER'S REQUEST.

 Occasionally it may happen that  a  job  will  be  submitted  and
 WYLBUR will reply:

      ABCUR001 REJECTED BY ASP. CHECK AND RESUBMIT.

 If this  happens,  check  JOB  and  ASP  Control  statements  and
 resubmit the job.

1USING THE CENTRAL COMPUTER                                       VI.D - 1


 D.  LOCATE

 After a job has been submitted to the central computer,  you  may
 keep track of it with LOCATE.  You must indicate either the job's
 name  or  number  to  do  this.   You  may use LOCATE for any job
 submitted to the center's computer, whether or not  it  was  done
 from  WYLBUR.   Occasionally  ASP will be down and NO RUN will be
 set in which case you will receive the message:

      NO JOB SUBMISSION ALLOWED

 You may have  the  following  operands  as  part  of  the  LOCATE
 command:

      aaa         the last three letters or digits of the job name
                  WYLBUR prefixes them with the user and group ID
                  specified at signon time
      jobname     the name on the job statement
      nnnn        the ASP job number
      ?           the first job in user hold.
      n or nn     becomes 000n or 00nn (ASP job number)
      $nnn        becomes 0nnn (ASP job number)
      $aaa        becomes aaa (job name)
      *           the last job submitted with a default job name
      *+n, *-n    jobno plus or minus n

 If you have set a user or group then WYLBUR will LOCATE with that
 user and/or group as the default unless you specify '*' in  which
 case  WYLBUR uses the signon users or group.  The WYLBUR commands
 which may be used to submit a job are LIST OFFLINE,  PUNCH,  RUN,
 CONDENSE, and SUGGEST.

 If you have a user or group set then WYLBUR will locate with that
 user and/or group as the default unless you use  an  *  in  which
 case  your  default (signon) users/group will apply only to those
 JOBS beginning with your user and group can be  held,  cancelled,
 or released.  If an attempt is made to do any of the above with a
 different user or group, the following message will be issued:

                JOB NAME MUST START WITH USER INITIALS

 WYLBUR will respond to the LOCATE command with the current status
 of the job.

      JOB 8101,ABCUR001 PRTY=00 MAIN(C),CRBEOUT(C),PUNCH,PRINT
      or
      JOB ABCUR002 IS NOT IN THE SYSTEM

 The possible job status letters may be received:

         Q,V       Queued for processing
         U,V       Setup jobs-waiting for devices
         R,V       Setup jobs-in setup
         A,V       Active
         C         Completed

1USING THE CENTRAL COMPUTER                                       VI.E - 1


 E.   HOLD, RELEASE and CANCEL

 Once your job has been submitted to ASP, you may control when  it
 runs on the computer by using the HOLD and RELEASE commands.  The
 HOLD  option  can  be used to save time and money by coding it as
 HOLD=YES.  This will hold your job  without  printing  until  you
 issue  the  RELEASE  command.   In this case you can CANCEL a JOB
 using the CANCEL command before it prints if the  output  is  not
 needed.   You  may  only  HOLD,  RELEASE,  and  CANCEL  jobs with
 jobnames beginning with your signon user ID.  If you try  to  use
 any  of the above commands with a user name or group to which you
 have not signed on, you will receive the error message:

           JOBNAME MUST START WITH USER INITIALS

 The following operands are usable  with  the  HOLD,  RELEASE  and
 CANCEL commands:

      jobname    the name on the job card.
      aaa        the last three letters or digits of the job name.
      *          the last job submitted with a default job name
      *+n,*-n    jobno plus or minus n

        COMMAND?  CANCEL 063 (CR)
        JOB 063, ABCUR063 IS BEING CANCELLED

        HOLD *
        JOB 064, ABCUR064 RELEASED FROM HOLD STATUS

 If PRINT is specified after the jobname in  the  CANCEL  command,
 then  whatever was done up to the time the job was cancelled will
 be printed.

        COMMAND? CANCEL ABCUR001 PRINT (CR)

 If you attempt to CANCEL a job before CRBEOUT takes over you will
 not get any printed output. (See F below.)

1USING THE CENTRAL COMPUTER                                       VI.F - 1


 F.  Getting Output at the Terminal

 You may  route  your  output  to  the  terminal  after  you  have
 submitted  a job.  There are three possible forms of output which
 the system may produce in response to your request  for  terminal
 output.

         An explicitly allocated data set
         The ASP job facts file
         ASP output data sets limited to  40 tracks on DCU126

 You may explicitly create a  data  set  with  LRECL  and  BLKSIZE
 specified.   This data set should be allocated on the same volume
 as your LIBRARY and should conform  to  WYLBUR  data  set  naming
 conventions:   WYL.gg.nnn.name  .   A  sample explicit allocation
 follows:

       //SYSPRINT DD DSN=WYL.UR.ABC.OUTPUT,DISP=(,KEEP),UNIT=2314,
       //            VOL=SER=DCU207,SPACE=(TRK,(10,10),RLSE),
       //            DCB=(RECFM=FB,LRECL=121,BLKSIZE=3509)

 You may also request ASP to create  output  data  sets  for  you.
 When  your job has completed, ASP will construct a job facts file
 if you requested any output data sets on DCU126.   You  would  do
 this by inserting a /*FORMAT RT card after your JOB card.

 The  name  of  the  job  facts  data  set   is   $SYSMSG.jobname.
 Therefore,   you  could  inspect  it  by  issuing  the  following
 commands:

         USE $SYSMSG.jobname ON CAT  (CR)
         SCR * ON CAT (CR)
         LIST (CR)

 The job facts data set will describe each output data  set  which
 you  requested  through the use of a /*FORMAT card.  A sample job
 which includes this ASP control card follows:

         //       JOB (acctinfo),i.name
         /*FORMAT   RT,DDNAME=SYSMSG
         /*FORMAT   RT DDNAME=SYSPRINT
         //  EXEC FORTGCG
         //FORT.SYSIN DD *
                READ (5,10) DATA
          10    FORMAT (F5.0)
                WRITE (6,20) DATA
          20    FORMAT (F5.0)
                STOP
                END
         //GO.SYSIN DD *
          10.0
         /*

 Inserting a blank between the RT and DDNAME on the /*FORMAT  card
 causes  the  output  data  set  to  be  created  but prevents its
 printing on the system printer.  A comma between them allows such
 printing and the creation of the output data set on DCU126.
1USING THE CENTRAL COMPUTER                                       VI.F - 2


 The format of the output  data  set  will  be  $CB.jobname.ddname
 which  can  be  found  on  DCU126.  Therefore, you may USE it and
 SCRATCH from WYLBUR.  Since disk space is  scarce  at  CUCC,  you
 should  SCRATCH  your  output data sets as soon as you have USE'd
 them.  In any event, they will be scratched by the system  within
 8  hours  of  their  creation.  The exec file #OUT can be used to
 retrieve a data set from DCU126 easily.  This exec  file  can  be
 invoked by specifying:

         EXEC FROM #OUT USER CTR GROUP CU

 The directions from this exec file can be  listed  by  doing  the
 following:

          COMMAND? USE @CU.&CTR#WYLMAN ON CAT (CR)

 and then listing the file either at the terminal or offline.

 You may automatically place your job in HOLD status after it  has
 finished  execution  but before printing.  This is useful because
 it allows you to look at your output over WYLBUR before  deciding
 whether  to  print  it  (and  be  charged  for the printing).  To
 accomplish this, construct a /*FORMAT  cards  with  a  comma  (,)
 between  the  RT  and the DDNAME parameters and add the parameter
 HOLD=YES.  The HOLD parameter on any /*FORMAT card will cause the
 entire job to be put in HOLD.  You may  subsequently  RELEASE  or
 CANCEL it.

          /*FORMAT RT,DDNAME=SYSPRINT,HOLD=YES

 Since output retrieval is a common task, we  recommend  that  you
 use  the  the  exec files provided such as #OUT.  This can save a
 lot of time and effort  and  is  easily  invoked.

1USING THE CENTRAL COMPUTER                                       VI.G - 1


 G.  Converting Card Decks to WYLBUR Files

 If you have a program or text on cards, you may  place  it  in  a
 WYLBUR  file  in  CARD  format  by punching the following JCL and
 submitting the job from the card  reader.   This  JCL  should  be
 employed for card decks containing more than 2000 cards.

         //       JOB (acctinfo),i.name
         // EXEC PUP,NAME=PRESS
         //SYSUT2 DD DSN=dsname,UNIT=2314,
         //       DISP=SHR,DCB=(RECFM=U,BLKSIZE=3520)
         //SYSUT1 DD DATA
            Your data with no /* or JOB cards
         /*

                        your data with no /* or JOB cards in it

         /*

 Remember not to include in your deck any /* cards or  JOB  cards;
 other JCL is admissible.

 A more inexpensive method which may be used for decks under  2000
 cards in length employs ASP control cards as follows:

         //   JOB (acctinfo),i.name
         /*PROCESS CRBEOUT
         /*FORMAT RT DDNAME=ddname,CONTROL=SINGLE
         /*ENDPROCESS
         /*DATASET DDNAME=ddname

                        your data with no /* or JOB cards in it

         /*ENDDATASET

 In this case, the cards will be saved on DCU126 under the name of
 $CB.jobname.ddname.  The data set will eventually be scratched by
 the system.  Therefore, you should promptly USE the data set  and
 save it in your WYLBUR space.

 COMMAND? USE $CB.ABCUR061.SYSPRINT ON DCU126
 COMMAND? SCR $CB.ABCUR062.FT06F001 ON DCU126
 $CB.ABCUR062.FT06F001 SCRATCHED ON DCU126
 COMMAND? SAVE #MYFILE
 MEMBER MYFILE SAVED IN LIB
1VII.  SUMMARY OF COMMANDS                                          VII - 1


 VII.  Summary of Commands

 This section and the following one are meant  to  be  used  as  a
 reference once you know the basic WYLBUR Commands.

 This section gives a succinct review of all  WYLBUR  commands  as
 well as references to information in the previous section of this
 manual.   All  commands  appear  here with their complete list of
 parameters even if all the parameters were not  included  earlier
 in  this  manual.   In addition, these commands are introduced in
 this section:

           CATLG      DECIDE      POINT      RENAME
           COMMENT    GIVE        PUT        RESTORE
           COMPARE    HELP        RECATLG    UNCATLG

 Three of these commands (CATLG, RECATLG, UNCATLG) were  discussed
 as  parameters  in  the  SAVE command in Section IV, but they are
 also valid as separate commands.  Several SET and  SHOW  commands
 are also introduced in this section.

 For each command, the format is given in outline form  under  the
 following rules:

 Required parameters are denoted by their general  terms  enclosed
 in  pointed  brackets  -- <...>.  Each is discussed under its own
 heading in Section VIII.  Section VIII also  defines  some  other
 terms used in the text.

 Optional phrases are denoted by enclosure in regular brackets  --
 Ý...¨.

 Alternate choices are separated by a | symbol and are enclosed in
 regular brackets Ý...¨ if the entire phrase  is  optional  or  in
 braces  »...º  if one of the options must be selected.  If one of
 the options is a default, it is underlined.

 Direct substitutions are denoted by lower  case  letters  in  the
 following ways:
        a - any alphabetic or numeric character
        bb - any valid bin number
        c - any appropriate character
        gg - a valid group id
        i,j,k,l,m,n - a valid integer value
        uuu - a valid user id

1SUMMARY OF COMMANDS                                                VII - 2


 ALIGN Command (Short Form:  ALI)

 ALIGN <range> ÝLENGTH=n¨ ÝMARKER=c¨ ÝNUMBER¨ ÝINDENT=i Ýj¨¨
     ÝEVEN¨ ÝSPACE¨

 ALIGN rearranges the contents  of  the  lines  in  the  <explicit
 range>  of  the  active  file  so that each line contains as many
 words as possible but not more than LENGTH characters.  Splits in
 a line are made only at blanks.  After  the  lines  are  aligned,
 WYLBUR  renumbers that portion of the file that was aligned.  One
 blank is inserted after each word unless it ends with  a  period,
 exclamation  point,  or  question  mark, which forces two blanks.
 See Section III.E.  for a discussion and examples  of  the  ALIGN
 command.

 If LENGTH is not specified in the command, the current  value  of
 the   global  LENGTH  parameter  is  used.   The  maximum  LENGTH
 permitted is 133 characters.

 The MARKER option must be specified in the command  if  you  want
 this  feature.   When WYLBUR encounters the MARKER character or a
 blank in column one of any line being aligned, that line  is  not
 aligned and the alignment process is restarted after that line.

 If NUMBER is specified, WYLBUR renumbers the  entire  file  after
 the alignment process.

 INDENT=i will indent each aligned line by i spaces.   INDENT=i  j
 will also further indent paragraph beginnings that are indented j
 spaces.   If INDENT is not specified, INDENT 0 0 is assumed; if j
 is  not  specified,  INDENT=i  0  is  assumed.   Unless  EVEN  is
 specified, only those lines beginning in either column i+1 or j+1
 will be aligned.

 If EVEN is specified, the alignment  process  is  restarted  only
 after  a  blank  line and all lines in the <range> are aligned on
 the left margin to the columns specified in the INDENT parameter.

 If SPACE is specified, WYLBUR respaces the lines so that there is
 only one space between words unless the word ends with a  period,
 exclamation point, or question mark, when it inserts two spaces.
1SUMMARY OF COMMANDS                                                VII - 3


 CANCEL Command (Short Form:  CAN)

 CANCEL »<jobname> | aaa | *º ÝPRINT¨

 The CANCEL command allows a job to be deleted from the ASP queue.
 If the job is executing on MAIN, it will be stopped.   No  output
 for the job will be provided unless you specify the PRINT option.

 The job may  be  referenced  by  the  complete  <jobname>  (e.g.,
 ABCURXYZ)  or  by  the last three characters (aaa) (e.g., XYZ) of
 the jobname (WYLBUR will assume that  the  jobname  is  uuuggaaa,
 where  uuu  and  gg  are  the values of the global USER and GROUP
 parameters) or by an asterisk which denotes uuuggnnn,  where  nnn
 is  the current value of the preprocessor variable JOBNO which is
 part of the jobname if the ID option was not specified  when  the
 job  was  submitted (see the ID option of the RUN command).  This
 option may also be specified by *+m or *-m which  references  the
 preprocessor JOBNO + OR - the value of m.

 You may CANCEL only jobs which begin with your  signon  user  ID.
 For  example,  if  you  signed on with initials ABC, you may only
 CANCEL jobs with a jobname beginning with ABC.


 CATLG Command (Short Form:  CAT)

 CATLG <dsname> ON <volume> ÝUSER uuu¨ ÝGROUP gg¨ ÝSET|NOSET¨
+                                                      _____

 CATLG causes the specified data set to be cataloged in the system
 catalog.  You are informed if the data set is already  cataloged.
 You must specify a dsname and a volume.

 You may catalog only data sets which belong to  you  or  to  your
 group  (USER  PUB).   USER  uuu may be used to catalog a data set
 with your own initials if you have done a SET USER earlier in the
 session.  For example, if you did a SET USER XYZ and later wished
 to catalog a data set with your own initials, ABC,  specify  USER
 ABC.   This  will  work  only  if  you  have  signed on with your
 initials, ABC.  You can only catalog a data  set  to  either  the
 initials  with which you signed on or PUB.  GROUP gg has the same
 kind of restrictions as USER uuu.


 CENTER Command

 CENTER <range> ÝLENTH=n¨ ÝINDENT=m¨

 The CENTER command centers each line of text in the range  within
 the  LENGTH  specified  or  the global LENGTH.  The INDENT option
 allows you to specify centering based on an indentation value.
1SUMMARY OF COMMANDS                                                VII - 4

 CHANGE Command (Short Form:  CHA or CH)

 This command allows you to change a specified character string in
 all lines which are in some specified <range> in the active file.

 CHANGE <string1> ÝÝi¨Ý/Ýj¨Ý/k¨¨¨ Ý(n)¨ TO <string2> ÝIN <range>¨
     Ý<list options>¨ ÝLINE¨

 The entire active file or the <range>, if specified, is  searched
 for  lines containing an instance of <string1>.  In each of these
 lines, the  specified  occurrence  of  <string1>  is  changed  to
 <string2>.   See  Section  III.C.  for a discussion of the CHANGE
 command.

 The optional i and j modifiers restrict the search to  columns  i
 through  j  of  the  line.   If only i is specified, <string1> is
 restricted to start in column i of the line.  If specified, k  is
 the  fill  column, and nothing from that column to the end of the
 line should be moved or changed.  If j is specified,  i  must  be
 specified,  but  both  i  and  j  are  optional.  The fill column
 feature is useful for  preserving  sequence  numbers  in  columns
 73-80,  for  instance,  or for preserving columnization in texts.
 Because of this feature, characters may be lost.  If this happens
 a warning message  will  be  issued  explaining  in  which  lines
 characters  were  lost.   See  Section III.C for more on the fill
 column.

 If the n modifier is not given, all occurrences of  <string1>  in
 the  line  are changed.  A (3) would specify the third occurrence
 in the line.

 Ordinarily the changed lines are listed together with their  line
 numbers.   If any of the <LIST options> are specified the changed
 lines will be listed accordingly.  These options as well  as  the
 IN range option may be used with any form of the CHANGE command.

 <string2> may take the form of an incremented  integer:   n  m  ,
 where  n  is  a  starting number and m is an increment to be used
 each time a change is made.  Either may  be  positive  (sign  not
 required) or negative (minus sign is required).  If m=1 it may be
 omitted.   The  LINE  option causes the integer to be incremented
 only at the beginning of each line changed.
1SUMMARY OF COMMANDS                                                VII - 5


 CHANGE ÝÝi¨Ý/Ýj¨Ý/k¨¨¨ TO <string2> ÝIN <range>¨ ÝLINE¨

 In this alternate form, changes are made to columns i  through  j
 of  each line in the <range>.  If i and j are both specified, the
 characters in positions i through j are  replaced  by  <string2>.
 If  only  i  is specified, <string2> is inserted before character
 position i.  Thus CHANGE 1 to ' ' would insert a blank in  column
 1.   CHANGE  1/1  to  ' ' would change the character presently in
 column 1 to a blank.  k is the fill column as specified above.

 <string2> may take the form of an  incremented  integer  with  or
 without the LINE option, as above.

 An alternate form of the command allows the replacement string to
 be taken from a range of lines in the data set.

 CHANGE Ý<string1>¨  ÝÝi¨Ý/Ýj¨Ý/k¨¨¨  ÝIN  <range1>¨  Ý(n)¨
     USING <range2> ÝCOLUMNS=»Ým1¨Ý/m2¨º¨ ÝREPEAT¨

 The replacement may be any single set of contiguous lines.

 The contents of the lines  in  the  replacement  range  are  used
 successively  as  replacements.   If  more changes are to be made
 than there are lines in the replacement range, the REPEAT  option
 may  be  specified.   This  causes  WYLBUR to recycle through the
 replacement range.

 COLUMNS=m1/m2 can be added to specify  that  only  the  indicated
 range  of columns is to be used from each line in the replacement
 range.  COLUMNS=m1 specifies  that  the  contents  of  the  lines
 beginning  with  column m1 are to be used.  COLUMNS=/m2 specifies
 that the contents of the lines from column 1  through  column  m2
 are to be used.


 CLEAR Command (Short Form:  CLE or CLR)

 CLEAR »ÝACTIVE¨ ÝEXEC¨ ÝTEXT¨ ÝNAME¨ ÝTABS¨º

 This command is used to erase either the current active  file  or
 the  current  exec  file.  The TEXT option is an alternate way to
 clear the active file.  The settings of global parameters  remain
 in  effect  even  after  the  active  file  is cleared.  Refer to
 Section IV.C.2 for clearing the active file.   See  Section  V.C.
 for clearing the exec file.

 The NAME option resets the GROUP, USER, PREFIX, and MEMBER fields
 to the default signon values.  Those fields are used  in  forming
 <dsnames>.

 The TABS option clears the tab positions that have been set by  a
 SET TABS command.
1SUMMARY OF COMMANDS                                                VII - 6


 COLLECT Command (Short Form:  COL or C)

 COLLECT Ý<lineno1>|END¨ ÝBY <lineno2>¨ ÝMERGE¨  Ý<list  options>¨
     ÝCLEAR¨

 Lines are collected into the  active  file  beginning  with  line
 <lineno1>,  and deriving successive line numbers by using a DELTA
 of <lineno2>.  If <lineno2> isn't specified, a 1 in the low order
 digit of <lineno1> is used.  If <lineno1>  isn't  specified,  the
 starting  number  is  DELTA  higher  than  the last line that was
 collected.  If this line is presently in the text, a message will
 inform you that you cannot collect at that point.  The  only  way
 to  reset  this  pointer  for  the same active file is to specify
 <lineno1> in the COLLECT  command.   END  means  last  line  plus
 DELTA.   You  would specify END if you wanted to add lines to the
 end of a file.

 The COLLECT  command  will  not  normally  allow  overwriting  or
 interleaving  existing  lines  in  the  file  but  it  will allow
 interleaving if you use the MERGE option.

 The LIST or NOTEXT option will list the line or  line  number  in
 the  file  which  precedes  the  next  line to be collected.  The
 UNNUMBERED, NONUMBERED, OR INTEGER option will prompt for the new
 line.


 COMMENT Command (Short Form:  COMM)

 COMMENT any text

 This command is designed to be used in exec files to write at the
 terminal instructions to describe how to  use  the  current  exec
 file.   If LOG is in effect, the COMMENT command lines are listed
 just as all other commands are.   If  NOLOG  is  in  effect,  the
 COMMENT  text  is  listed even though the other commands are not.
 In this respect, comments in a COMMENT command are different from
 comments following a semi-colon on other command  lines  for  the
 latter  are  not  listed  under NOLOG.  A semi-colon in a COMMENT
 command is part of the comment to be displayed just as any  other
 character.

      COMMAND? LIST (CR)
        1. COMMENT THIS TEXT WILL BE LISTED.
        2. ; THIS TEXT WILL NOT BE LISTED.
      COMMAND? EXEC ACTIVE NOLOG (CR)
      THIS TEXT WILL BE LISTED.
      EXEC END
      COMMAND?
1SUMMARY OF COMMANDS                                                VII - 7


 COMPARE Command (Short Form:  COM)

 COMPARE Ý<list options>¨ <lineno1> <lineno2> ÝCOLUMNS »Ýn¨Ý/m¨º¨

 The COMPARE command may be used to compare the  contents  of  two
 sets  of  consecutive  lines, both of which must be in the active
 file.  The two required operands are the starting line numbers of
 the ranges to be compared.  A line by line comparison is made  of
 the  line contents until the end of the active file is reached or
 a comparison fails.

      COMMAND? COMPARE 1 4
          3.    --     6.    COMPARE
      COMMAND? COMPARE NOLIST 1 1.3
          1.1   --     2     DON'T COMPARE
      COMMAND? COMPARE 2 2.4
          2.3   --     3     DON'T COMPARE
          2.3    THIS IS A LINE IN THE FILE
          3.     THIS LINE DOES NOT MATCH

 In the first example the set of lines starting at 1  is  compared
 to the set of lines starting at 4 and did compare.  In the second
 example, the first lines of the two sets compared, but subsequent
 lines  did  not.  In the third example, NOLIST was not specified,
 so WYLBUR also listed the  first  pair  of  lines  that  did  not
 compare.

 If the COLUMNS option is specified, only columns n through m  are
 compared.   If only n is specified, n/133 is assummed.  If only m
 is specified, 1/m is assummed.


 CONDENSE Command (Short Form:  CON)

 CONDENSE <dsname> ON <volume> ÝUSER uuu¨ ÝGROUP gg¨
     ÝBIN bb¨ ÝACCOUNT aaaaaaa¨ ÝSC=c¨ ÝID=aaa¨

 The condense command causes the submission of a job  to  condense
 the  specified  partitioned data set using the COMPRESS option of
 the IBM Utility IEBCOPY.  You  can  use  the  locate  command  to
 determine  when  the  job  has  finished  execution.  Whenever an
 attempted SAVE of a PDS member cannot  be  completed  because  of
 insufficient  space  in  the  data  set,  WYLBUR  prompts  with a
 CONDENSE?  To have your library condensed, reply YES or OK.   Any
 other  reply  aborts  the  SAVE  command  and  does  not submit a
 CONDENSE.  <dsname> and ON <volume>  must  be  specified  in  the
 command.  The USER and GROUP options may be used to specify a PDS
 belonging  to another user.  BIN and ACCOUNT may be used to route
 the output to another bin and charge your project number for  the
 accounting units.
1SUMMARY OF COMMANDS                                                VII - 8


 NOTE:  The command SHOW DSNAMES LIKE LIB SPACE may be used to see
 how many tracks in your library have been used.  This information
 can be used to determine when a CONDENSE  should  be  done.   See
 Section IV.D. on the CONDENSE command.


 COPY Command (Short Form:  COP)

 This command allows you to copy a <range>  of  lines  to  another
 place  in the active file.  For a discussion of COPY, see Section
 III.D.

 COPY Ý<range>¨ ÝTO »<lineno1>|ENDº¨ ÝBY <lineno2>¨ ÝFROM <dsname>
+                              ___
     ÝON <volume>¨ ÝCOMBINE¨ ÝUSER uuu¨ ÝGROUP gg¨  ÝSET|NOSET¨¨
+                                                        _____
     ÝMERGE¨ ÝEXEC¨ Ý<list options>¨

 <range>  must  be  the  first  positional  parameter  if  it   is
 specified.   DSNAME  parameters  such  as USER uuu or ON <volume>
 must follow the <dsname> if it is used.

 A copy of the specified <range> is placed  in  the  active  file,
 beginning  at  a  line numbered <lineno1> and deriving successive
 line numbers by using <lineno2>.

 If <lineno2> is not specified, the default value is a  1  in  the
 last  specified  position  of  <lineno1>.   If the value of DELTA
 (specified or default) would cause the copied lines to interleave
 existing lines in the file, WYLBUR automatically calculates a new
 value of DELTA so that interleaving does not  take  place.   Note
 the MERGE and COMBINE options for exceptions.

 Existing lines in the file may not be replaced by using the  COPY
 command.

 The <range> is taken from the active file unless the FROM  option
 is  present,  in  which  case, the <range> will be taken from the
 named <external file>, which must be in EDIT format.  If you copy
 from an external file you may specify ON <volume>.  The USER  and
 GROUP options may be used to copy from another user's data sets.

 The SET option will set the PREFIX and  MEMBER  fields  to  those
 specified in the COPY command.  It will not set the USER or GROUP
 fields.

 The EXEC option copies all or part of the exec file to the active
 file.  Although COPY EXEC is really a copy from  the  exec  file,
 the  FROM  option  should not be used.  COPY FROM EXEC would copy
 the external file named EXEC instead of  copying  from  the  exec
 file.
1SUMMARY OF COMMANDS                                                VII - 9


 The MERGE option allows interleaving of the  file,  if  the  line
 numbers  interleave.   COMBINE  also  allows interleaving, but is
 used when an external file is referenced.

 Any <LIST option> causes the new lines to be listed.


 DECIDE Command (Short Form:  DEC)

 DECIDE any text

 This command will  use  the  text  to  determine  an  appropriate
 response from these four possible responses:

 ** YES **, ** NO **, ** MAYBE **, ** WHY NOT?  **.


 DELETE Command (Short Form:  DEL or D)

 DELETE <range> Ý<list options>¨

 This allows you to erase a <range> of lines in the  active  file.
 The  range  may be associative (i.e.  DEL 'abc' IN ALL).  In this
 case, an explicit range must be given.

 An alternate form may be used.  This consists of  giving  a  line
 number  followed immediately by a carriage return as the command.
 There is an example of the alternate form in Section III.C.4.

 Any of the <LIST options> list the deleted lines.  NOLIST is  the
 default.


 EDIT Command (Short Form:  EDI or E)

 EDIT Ý<range>¨ Ý<list options>¨ ÝSINGLE¨

 The EDIT command allows you to change the contents of  a  <range>
 of  lines in the active file.  There is a full discussion of EDIT
 in Section III.F.  The SINGLE option results in  one  prompt  per
 line  instead  of  the  usual multiple prompts.  NOLIST specifies
 that WYLBUR is not to list the changed line.

 When executed, the EDIT command will prompt with  the  designated
 line.  A character or set of characters can be replaced by typing
 under  any  undesired  character the replacement character.  If a
 verticle bar  (|)  on  2741  type  terminals  is  typed  under  a
 character  then  the  character  is  replaced  by  a blank.  If a
 verticle bar is typed under a blank then the verticle bar appears
 in the text.
1SUMMARY OF COMMANDS                                                VII - 10


 EXEC Command (Short Form:  EXE or X)

 EXEC ÝACTIVE|FROM <dsname> ÝON <volume>¨ ÝUSER uuu¨
     ÝGROUP gg¨ ÝSET|NOSET¨¨ ÝCLEAR¨ Ý<lineno1>|RETRY¨
+                    _____
     ÝPAUSE¨ ÝLOG|NOLOG¨ ÝTERSE|VERBOSE¨ ÝSTART <lineno2>¨

 The CUCC/WYLBUR system can execute a file of commands in an  exec
 file.    The   commands  are  selected  sequentially  unless  the
 <lineno1> option is used to specify a branch instruction  in  the
 exec  file.   Selection  of commands from the exec file continues
 until the end of the file is reached, a command has an  error  or
 is interrupted, or another EXEC command is executed from the file
 with  the  PAUSE  option.  See Section V for a discussion of exec
 files.

 Before commands can be executed from the exec file, the file must
 be loaded.  The ACTIVE option specifies that the file  should  be
 loaded  from  the  current  active file.  The active file will be
 cleared after the exec file is loaded.  The FROM option specifies
 that the exec file should be loaded from an EDIT format  external
 file.   The  active  file is not affected by this option.  If you
 are using an external file, you must specify ON <volume>.   After
 the  load  is  completed, execution begins from the start of exec
 file if START <lineno2> is not specified and the PAUSE option  is
 not  used.   If  neither  the  ACTIVE  nor  the  FROM  option  is
 specified, the EXEC command refers to the current exec file.

 If you specify SET, the PREFIX and MEMBER names will be set.

 USER and GROUP may be used to designate an  external  file  which
 belongs to another user.

 The CLEAR option specifies that the current exec file  should  be
 cleared   before   performing  the  rest  of  the  EXEC  command.
 Normally, this option is used with the ACTIVE or FROM  option  to
 avoid  a  prompt before clearing the current exec file.  Also see
 the CLEAR command.

 The EXEC feature maintains a current pointer to  a  line  in  the
 exec file whenever control is returned to the terminal.  Thus you
 may  continue  executing  at  the  point  of interruption without
 specifying  a  <lineno1>.   The  RETRY  option   specifies   that
 execution  should  start  with the interrupted command.  Omitting
 <lineno1> and RETRY specifies that execution should start at  the
 next  command  after  the  interrupted command.  See SHOW EXEC in
 this section.
1SUMMARY OF COMMANDS                                                VII - 11


 The PAUSE option directs WYLBUR to return control to the terminal
 after all other options have been set without executing any other
 commands.  This option can be used to load an exec file and delay
 execution until later.

 The LOG option specifies that all commands should be typed before
 execution.  If the listing of a command is interrupted  by  using
 the  ATTN key , the command will not be executed and control will
 return to the terminal.  If neither LOG nor NOLOG  is  specified,
 the  LOG  option  is  unchanged.  At signon, the option is set to
 LOG.  See also SET LOG|NOLOG.


 GIVE Command (Short Form:  GIV)

 GIVE n TO uuu

 This command allows you to give n tracks of your space allocation
 to user uuu.  The number of tracks you specify cannot be  greater
 than  the  amount  of  unused space in your allocation.  User uuu
 must be in your group.


 HELP Command (Short Form:  HEL)

 HELP

 This command returns a message indicating whom to contact if  you
 are having problems with the WYLBUR system.


 HOLD Command (Short Form:  HOL)

 HOLD »<jobname> | aaa | *º

 This command places a job in user hold after  completion  of  the
 currently  scheduled  ASP  task  (e.g.,  MAIN, CRBEOUT).  See the
 RELEASE and CANCEL commands in this section and Section VI.E  and
 Section VI.F.

 The option specified may be in the same form as  the  options  of
 the CANCEL command.

 You may HOLD only jobs which begin  with  your  signon  INITIALS.
 For  example,  if  you  signed on with initials ABC, you may only
 HOLD jobs with a jobname beginning with ABC.
1SUMMARY OF COMMANDS                                                VII - 12


 INSERT Command (Short Form:  INS or I)

 INSERT <lineno> ÝNODITTO|DITTO¨ Ý<list options>¨
+                 _______

 This command allows you to insert a line of text into the  active
 file.  INSERT is discussed in SECTION III.B.

 This command causes WYLBUR to  prompt  with  the  specified  line
 number, after which you may type in the contents of the new line.
 The  specified  line  number must not already exist in the active
 file.

 The <LIST options> work as for the COLLECT command.

 Lines can be inserted at many places with a single command.

      COMMAND? INSERT 3,5,7

 WYLBUR will prompt with the line number of  each  location.   The
 DITTO  option  may  be  used  if  you  wish to insert one line in
 several places.

      COMMAND? INSERT 3,5,7 DITTO

 WYLBUR will prompt with line number 3 and  insert  the  line  you
 type at lines 3, 5, and 7.

 An alternate form of the INSERT command  consists  of  the  <line
 number>,  followed  by a single blank character, and the contents
 of the new line  of  text.   In  this  alternate  form,  the  old
 contents will be overwritten if the specified line already exists
 in  the  active  file.  Thus a replacement is done rather than an
 insertion.


 JUSTIFY Command (Short Form:  JUS)

 JUSTIFY <range> ÝLENGTH=n¨ ÝMARKER=c¨ ÝNUMBER¨ ÝINDENT=i Ýj¨¨
     ÝEVEN¨ ÝSPACE¨

 The JUSTIFY command is identical to the ALIGN command except that
 it also right justifies the text  to  the  value  of  the  LENGTH
 option  or the value of the global LENGTH parameter if the LENGTH
 option is not specified.

 The SPACE option will respace the  text,  omitting  extra  blanks
 before  it  justifies the <range>.  See the ALIGN command in this
 section and Section III.E.
1SUMMARY OF COMMANDS                                                VII - 13


 LIST Command (Short Form:  LIS or L)

 This command lists part or all of a file.   It  is  discussed  in
 Section II.D and Section VI.A.

 LIST Ý<range>¨ Ý<list options>¨ ÝMARKER=c¨
     ÝCLEAN¨ ÝEXEC¨ ÝSQUASHED¨ ÝCOLUMNS »Ým1¨Ý/m2¨º¨
    ÝÝOFFLINE¨ ÝBIN bb¨ Ý(n)¨ ÝACCOUNT aaaaaaa¨ ÝCOPIES=nn¨
     Ý'title'¨ ÝUPLOW¨ ÝNOEJECT¨ ÝDARKLIST¨ ÝCC|MC|DOUBLE|TRIPLE¨
     ÝDEST=destination¨ ÝFORMS=formtype¨ ÝID=aaa¨ ÝSC=c¨¨


 If no options are specified, the entire active file is printed at
 the terminal.  The <range> option  limits  the  listing  to  some
 specified set of lines.

 Any of the <LIST options> lists the range  or  file  accordingly.
 The  effect  of  the  MARKER  option  is  to  suspend the listing
 whenever a line is reached which contains the MARKER character in
 column one.   The  suspended  listing  is  restarted  by  a  (CR)
 response.    An  (ATTN)  response  given  while  the  listing  is
 suspended will cause the rest of the listing to be aborted.   The
 MARKER option has no effect on an OFFLINE listing.

 The CLEAN option is used to be certain that messages  from  other
 terminals  will  not  interrupt  a  listing.   A message from the
 operator can interrupt even a CLEAN listing.

 The COLUMNS option lists only the text between columns m1 and  m2
 in  the  <range>.   If  m1  is  not  specified the line is listed
 through column m2; if m2 is not specified,  the  line  is  listed
 from column m1 through the end of the line.

 Specifying EXEC will result in listing the exec file  instead  of
 the active file.

 The SQUASHED option converts multiple blanks to single blanks for
 the listing.  The active or exec file is not altered.

 The OFFLINE option signals  that  you  want  a  printing  of  the
 specified  <range> or file on the high-speed printers rather than
 at the terminal.  You may specify a bin number  with  BIN  bb  to
 override the standard bin number for your initials.  In addition,
 you  may  have the charges incurred put onto ACCOUNT aaaaaaa.  If
 this is not specified, the charges will be put onto  the  account
 with which you signed onto TPMON.  The SC=c option may be used to
 specify  a  job priority other than the default determined by the
 project number of the job.  (SC may be E, H, N, O, or S.)
1SUMMARY OF COMMANDS                                                VII - 14


 The ID=aaa option will cause the job to be submitted with the job
 name uuuggaaa, where uuu and gg are the signon  USER  and  GROUP.
 The JOBNO is still incremented by 1.

 The (n) option inserts n blanks at the  left  of  the  high-speed
 printer,  thus  allowing  you  to center output on the paper.  If
 n=0, the WYLBUR listing routine does not put any carriage control
 characters in print position one and it is assumed that the  file
 contains  the  carriage  control  characters.  ASA characters are
 expected unless you use the MC option.  If (0) is specified,  the
 file  will be listed unnumbered.  You may have a second (n) after
 the (0), which will cause the file to be listed unnumbered, using
 the first column as carriage control and indenting n spaces.   CC
 may be equivalent to (0), except that the file may be listed with
 line numbers.

 The COPIES=nn option allows you to have up to 99 copies  made  of
 your output.

 The offline listing may be given a title of up to  64  characters
 in  length  by  enclosing  the  desired  title in quotes.  If the
 string is longer than 64 characters, it will be truncated.


 The UPLOW option causes a special print train to  be  mounted  so
 alphabetic  characters  can  be  printed  in both upper and lower
 case.  If UPLOW is not specified, a ¢ or !  and  all  lower  case
 letters will print as blanks.

 NOEJECT suppresses the feature which causes the printer  to  move
 to the top of the next page after printing 60 lines.

 The DARKLIST option will cause each line of  the  listing  to  be
 restruck.   This  option  should  be  used if the output is to be
 reproduced.

 The MC option is valid only when an UNNUMBERED OFFLINE  (0)  list
 is  being  done on a file created by one of the IBM assemblers or
 compilers.  MC specifies  machine  carriage  control  characters,
 rather  than  ASA  characters.   DOUBLE or TRIPLE will double- or
 triple-space the listing.

 The FORMS option may be used to requset that the listing be  done
 on  non-standard  paper  or  forms.  See the CUCC User Manual for
 additional information.

 The DEST option may be used to route output  to  a  specific  RJE
 location.   For example, to route your output to the Self-Service
 I/O Area, specify:

                            DEST=SSERV

 for a complete list of RJE locations, see the CUCC User's Manual.
1SUMMARY OF COMMANDS                                                VII - 15


 LOAD Command (Short Form:  LOA)

 LOAD Ý<range>¨ ÝFROM <dsname>¨  ÝON  <volume>|CATLG¨  ÝSET|NOSET¨
+                                                           _____
      ÝSTART <lineno>¨ ÝLOG|NOLOG¨ ÝTERSE|VERBOSE¨ ÝPAUSE¨ ÝCLEAR¨

 The LOAD command loads and executes the exec file.   It  is  like
 the EXEC command in all respects but two:

      LOAD FROM is the same as EXEC FROM except that  LOAD  has  a
      range  option  so  that  part  of  a  file may be loaded and
      executed.  The <range> must be the first parameter.

      LOAD is the same as EXEC  ACTIVE  except  that  EXEC  ACTIVE
      clears the active file whereas LOAD does not.

 When you specify a <range> in the LOAD command, only that <range>
 is LOADed  into the EXEC file.  If a START <lineno> is specified,
 just that line number is  LOADed   into  the  EXEC  file.   If  a
 <range>  and a START <lineno> are both specified, then the entire
 <range> is LOADed  and execution starts with the START <lineno>.

 For more about the LOAD command, see Section V.



 LOCATE Command (Short Form:  LOC)

 This command allows you to inquire about the status of any job in
 the system, whether the job was created by WYLBUR or not.

 LOCATE »aaa|jobname|*|?|aaa>|nnnnº

 LOCATE is used to find the job's status in the ASP system.   aaa,
 jobname and * have the same form as in the CANCEL command.

 ?  is your first job in user hold.  aaa> is the first job in  the
 system  with  a job name beginning with aaa.  nnnn is the ASP job
 number.


 LOGOFF Command

 LOGOFF ÝCLEAR¨

 This command terminates the session.  If CLEAR is  not  specified
 and the active file is not clear, a prompt is made to verify that
 it  is  okay to clear it and log off.  Any response to the prompt
 other than YES or OK causes the command to  be  aborted  and  the
 session  to continue.  Alternate forms of this command are LOGOUT
 and SIGNOFF.
1SUMMARY OF COMMANDS                                                VII - 16


      COMMAND? logoff
      OK TO CLEAR? yes
      3.46 SECONDS EDITING TIME
      764 PAGE READS, 369 PAGE WRITES
      20 DISK READS, 13 DISK WRITES
      ELAPSED TIME = 01:36:22
      END OF SESSION


 LOGON Command

 LOGON ÝCLEAR¨

 This command allows a new user to sign on the  terminal  that  is
 already  in  use without changing the account number to which the
 session will be charged.   It  will  also  maintain  any  options
 (e.g.,CRT) defined by the terminal id.  If CLEAR is not specified
 and the old user has an active file, it is saved and cataloged as
 the  name  ACTIVE  before  the  new  log-on  sequence is started.
 Alternate forms on this command are LOGIN and SIGNON.


 MODIFY Command (Short Form:  MOD or M)

 MODIFY Ý<range>¨ Ý<list options>¨ ÝSINGLE¨

 The MODIFY command allows insertions, replacements, and deletions
 to the contents of each line in a specified <range>.   Successive
 lines   are   prompted  for  alterations  until  the  <range>  is
 exhausted.  The MODIFY command is discussed at length in  Section
 III.F.    The  SINGLE  option  instructs  WYLBUR  to  prompt  for
 alterations only  once.   If  SINGLE  is  not  specified,  WYLBUR
 prompts  until  you  type only a carriage return in response to a
 prompt.  NOLIST means that WYLBUR will not type the changed  line
 at the terminal but it will still issue prompts.

 For each line in the specified <range> the following  process  is
 carried  out.   First,  the image of the line as it now stands is
 typed.  Then WYLBUR prompts for an alteration to be made  to  the
 line.  Alterations are one of the following:



     INSERT (I)--Type the letter I immediately below the character
     in the line before which characters are to be inserted.  This
     indicator is followed by the string of characters  which  are
     to  be  inserted.   For  example,  if you want to insert CUCC
     before the W in WYLBUR, you type an I under the W, then  type
     CUCC.   The string of characters to be inserted is terminated
     by a carriage return.
1SUMMARY OF COMMANDS                                                VII - 16.1


     REPLACE (R)--This indicator is typed  immediately  below  the
     first  character  to  be replaced in the line.  The string of
     replacement characters is typed immediately following the  R.
     As  many  characters  are replaced as there are characters in
     the replacement string.

     DELETE (D)--A string of characters to  be  deleted  from  the
     line  is  designated  by  typing  a  D  under each successive
     character to be removed.  A deleted character is not replaced
     by a blank; WYLBUR shifts the other  text  to  eliminate  the
     space.   You need type a D only underneath the first and last
     characters  in  the  string  to  be  deleted--all  characters
     between the two D's are also deleted.  The deletion range may
     also be terminated by typing either an I or R instead of a D.
     If terminated by an R, the characters following  the  deleted
     string  are  replaced  by the replacement string that follows
     the R.  If the deletion range is  terminated  by  an  I,  the
     deleted  characters  are  replaced  with  the  string  to  be
     inserted.

     BLANK (B)--Individual characters may be blanked in  the  line
     by  typing a B under each position to be blanked.  Only those
     positions are blanked and  no  shifting  of  the  line  takes
     place.  Any other alteration may follow the last B on a line.

 After the  alteration  is  specified,  type  a  carriage  return.
 WYLBUR  will  make the indicated alterations in the line and type
 the new image of the  line  for  inspection.   Then  WYLBUR  will
 prompt  for  more  alterations.   You signal that all alterations
 have been made by typing only a carriage return in answer to  the
 alteration  prompt.   WYLBUR  will  then put the new image of the
 line into the file and prompt for alterations to the next line in
 the <range>.

 The printing of the altered image of the line may be suspended by
 typing an N indicator into the alteration line before  any  other
 alteration indicators.

 You may have  WYLBUR  type  out  the  image  of  the  line  being
 modified,  as  it  currently  stands.  Type a few blanks into the
 alteration line and issue a carriage return.

1SUMMARY OF COMMANDS                                                VII - 17


 You may eliminate all alterations made to a line by hitting  ATTN
 as  the  first  character in the alters line.  WYLBUR will forget
 about all alterations already made.


 MOVE Command (Short Form:  MOV)

 MOVE <range> TO »<lineno1>|ENDº  ÝBY  <lineno2>¨  ÝMERGE¨
     Ý<list options>¨

 This command moves a specified  <range>  from  one  part  of  the
 active  file  to  another.   It  is  essentially  a  COPY command
 followed by a DELETE command, where  the  old  instances  of  the
 copied lines are deleted.  See Section III.D.  for more about the
 MOVE command.

 If <lineno2> is not specified, the line increment is a 1  in  the
 low-order digit position of <lineno1>.

 The special line number END is defined as DELTA higher  than  the
 current LAST.

 Any of the <LIST options> will list the line before <lineno1> and
 the new lines.

 <range> must be the first parameter.

 MERGE allows interleaving in the file, and must appear after  the
 <lineno2>.


 NUMBER Command (Short Form:  NUM)

 NUMBER Ý<range>¨ ÝÝBY <lineno2>¨ | ÝTIMES <lineno3>¨¨ Ý<range>¨

 This allows you to have your entire file renumbered.  See Section
 III.

 <lineno1> is the new number for the first line in the  file.   If
 it is not specified, 1.000 is used.

 <lineno2> is the increment to be used in deriving successive line
 numbers.  If it is not specified, the current value of the global
 parameter DELTA is used.

 <lineno3> is a scale factor that multiplies each of the  existing
 line numbers to form the new line numbers.

 <range> may be used to limit the numbering to an  explicit  range
 of lines.
1SUMMARY OF COMMANDS                                                VII - 18


 POINT Command (Short Form:  POI or P)

 POINT Ý<range>¨ ÝEXEC¨ ÝNOLIST¨

 POINT functions exactly the same as LIST except that  it  updates
 the  current  line  pointer  (*)  as  it lists a line.  The POINT
 command has all the options of the LIST  command  plus  a  NOLIST
 option   which  sets  *  without  listing  any  lines.   This  is
 especially useful in EXEC files.


 POINT <range> EXEC sets a separate current line pointer  for  the
 exec  file.   This  is distinct from the active file current line
 pointer, and these pointers may have different values.

      COMMAND? POINT 6/10 EXEC

 will list lines 6 through 10 of the exec file and the  exec  file
 current  line  pointer  will  be set to 10 if line 10 exists.  If
 there is no line 10, the pointer will be set to the highest  line
 number less than 10.

      COMMAND? POINT 6/10 NOLIST

 sets the current line pointer just the same in the same way,  but
 does not list lines 6/10.


 PUNCH Command (Short Form:  PUN)

 PUNCH Ý<range>¨ ÝNUMBERED|INTEGER¨ ÝACCOUNT aaaaaaa¨ ÝBIN bb¨
     ÝEXEC¨ ÝLIST¨ ÝSC=c¨ ÝID=aaa¨ ÝDEST=destination¨ Ý'title'¨

 This command allows you to produce a punched  card  output  of  a
 <range>  in  the active file.  See Section  VI.B.  If you specify
 EXEC, the exec file will be punched.

 The ACCOUNT, BIN, SC, ID, DEST and 'title' options are  the  same
 as in the LIST OFFLINE command.

 If the NUMBERED or INTEGER option is specified, line numbers will
 be punched into columns 73-80 of the cards.

 LIST will produce an offline listing of the file that is  punched
 in the same job.
1SUMMARY OF COMMANDS                                                VII - 19


 PUT Command

 PUT   »SPACE|DIRECTORY|DSNAMESº   ÝON   <volume>¨   ÝCLEAR¨
     ÝAT <lineno1>¨ ÝBY <lineno2>¨ Ý<list options>¨ Ý<show options>¨

 This command will add to your active file  the  output  from  the
 corresponding  SHOW  command as it lists at the terminal.  The AT
 option indicates where the text  is  to  be  added,  and  if  not
 specified  END  is used.  The BY option indicates an increment by
 which the text is to be added.  If  this  is  not  specified  the
 current value of the global parameter DELTA is used.

 The PUT DIRECTORY and  PUT  DSNAMES  commands  have  all  of  the
 options of their respective SHOW commands.  The PUT SPACE command
 can only be used as the SHOW SPACE ON <volume>.

     PUT DSN LIK DATA ON DCU207 SPA CLE AT .001 INT
     PUT SPA ON DCU111
     PUT DIR ON DCU209 FRO A THRU D


 READ Command (Short Form:  REA)

 READ Ý<lineno>¨ ÝEXEC|DELETE¨ ÝPROMPT <string>¨

 The READ command with no options produces a prompt for a command.
 When the new command is entered, it is executed.  It is  designed
 to  be  used in exec files to allow you to enter commands without
 having to PAUSE execution.  READ <lineno> allows one  command  to
 be  read  and  executed from the active file, or the exec file if
 EXEC is specified.   If  the  DELETE  option  is  specified,  the
 command  will  be  erased  from the active file before execution.
 DELETE and EXEC  are  mutually  exclusive.   The  DELETE  feature
 allows  you  to build single WYLBUR commands in the <active> file
 and then execute the commands without having to change the <exec>

 See the CUCC User's Manual for a  more  detailed  explanation  of
 JCL, JOB card, ASP, accounting information, etc.
 file.

 The PROMPT <string> option, when used, causes the <string> to  be
 written at the terminal before READ'ing the command.


 RECATLG Command (Short Form:  REC)

 RECATLG <dsname> ON <volume> ÝUSER uuu¨ ÝGROUP gg¨

 The RECATLG command catalogs the specified data set in the system
 catalog.  The catalog is done whether the data  set  was  already
 cataloged  or not.  You may recatalog only data sets which belong
 to you or your  group.   The  USER  and  GROUP  options  are  for
 resetting  your  own  initials and GROUP if they have been set to
 another user or group with a SET command.  RECATLG may also be  a
 parameter in the SAVE command.
1SUMMARY OF COMMANDS                                                VII - 20


 RELEASE Command (Short Form:  REL)

 RELEASE »<jobname> | aaa | *º

 This command allows a job in user hold to complete the  remaining
 ASP  DSPs  (e.g.,  CRBEOUT,  PRINT).   See  the  HOLD  and CANCEL
 commands in this section and Section VI.

 The option specified may be in the same form as  the  options  of
 the CANCEL command.

 You may RELEASE only jobs which begin with your  signon  INITIALS
 and are currently in hold status.


 RENAME Command (Short Form:  REN)

 RENAME <dsname> ÝON <volume>¨ ÝUNCAT¨ ÝUSER uuu¨ ÝGROUP gg¨
     ÝSET¨ TO <new dsname> ÝON <volume>¨ ÝUSER uuu¨ ÝGROUP gg¨
     ÝSET¨ ÝCATLG|RECATLG|UNCATLG¨

 or

 RENAME Ý<PDSname>¨#<member> ÝON <volume>¨ ÝUSER uuu¨ ÝGROUP gg¨
     »TO|ALIASº TO  <new membername> ÝON <volume>¨

 The RENAME command allows you to rename any of your data sets  or
 PDS  members.   In addition, you may add aliases to a PDS member,
 so that you may refer to a member by more than one name.

 The  ON  <volume>  option  is  necessary  if  the  global  VOLUME
 parameter has not been set.  The USER and GROUP  options  may  be
 used  to  specify  your  signon USER and GROUP if these have been
 changed with SET USER or SET GROUP commands.  The CAT, RECAT, and
 UNCAT options perform the  same  functions  as  their  respective
 commands.   If  CAT  is  global  or  specified, then the original
 dataset is uncatlg'd.  The ALIAS option will add the  new  member
 as an alternative way of referring to the PDS member named.


 REPLACE Command (Short Form:  REP or R)

 REPLACE <range> Ý<list options>¨ ÝDITTO¨

 This allows you to replace the contents of any specified  <range>
 in the active file.  See Section III.B.
1SUMMARY OF COMMANDS                                                VII - 21


 WYLBUR will prompt with successive line numbers in the  specified
 <range>,  and you may type in the new contents after each prompt.
 A (CR) causes that line not to be replaced.   This  is  continued
 until  the  range  of lines is exhausted.  DITTO causes the first
 prompt to be used to REPLACE all lines in the range.

 Alternatively, you may replace the contents of a single  line  by
 giving  the line number, followed by a single blank, and then the
 new contents of the line.

 The LIST or NOTEXT  option  will  list  the  line  before  it  is
 replaced  which  gives  you time to abort the command by pressing
 the (CR).  Do not use L for LIST as this parameter; L stands  for
 LAST.


 RESTORE Command (Short Form:  RES)

 RESTORE ÝCLEAR¨

 The RESTORE command is used to move the current exec file to  the
 active  file so that editing can be done on the file.  The active
 file is cleared before the restore; the exec file is clear  after
 the restore.


 RUN Command

 RUN Ý<range>¨ Ý<list options>¨ ÝEXEC¨ ÝID=aaa¨ ÝDEST=destination¨

 This command allows you to put the active file into the job input
 stream.  See Section VI.C.

 All JCL required to run the job must be contained  in  the  file.
 The  first  line  in  the <range> must be a job card.  If the job
 name field on the job card is blank, WYLBUR will create a  unique
 job name consisting of the initials, group and a sequence number.
 If  the  range  contains  multiple  job  cards, multiple jobs are
 submitted.

 The option NUMBERED or INTEGER will cause the line numbers of the
 <range> to appear in the job output as sequence numbers.

 The ID and DEST options are the  same  as  in  the  LIST  OFFLINE
 command.
1SUMMARY OF COMMANDS                                                VII - 22


 SAVE Command (Short Form:  SAV or S)

 The SAVE command is used to save user data from the  active  file
 in  an  external data set.  You may save data only in WYLBUR data
 sets which belong to you  or  to  your  group.   See  Section IV.
 for  more about the SAVE command.  The format of the SAVE command
 is:

 SAVE <dsname> ÝUSER uuu¨ ÝGROUP gg¨ ÝON <volume>|CATLG¨
     ÝSCRATCH|REPLACE¨ ÝNUMBERED|INTEGER¨ ÝCATLG|RECATLG|UNCATLG¨
     ÝCLEAR¨ ÝEDIT|LRECL=nnn|CARD|PRINT¨ ÝLINES <range>¨
+             ____
     ÝSET|NOSET¨ Ý(n)¨ ÝSEQFLD=(»END|posºÝ,len¨)¨ ÝNOPOINT¨
+         _____

 The optional operands contain keywords  and  may  appear  in  any
 sequence.   The  dsname  operand  is required and is described in
 Section VIII.  See also the description of  the  USE  command  in
 this section.

 ON <volume> specifies the volume name on which the data set is to
 be saved.  It is optional if you have previously entered a volume
 name via the SET VOLUME command.   As  with  USE,  "ON  <volume>"
 specified in the SAVE command overrides any previously set volume
 name.   "ON  CATLG"  may  be used in the SAVE command only if the
 data set is a cataloged PDS or if the data set to be SAVEd is  to
 replace  a  cataloged sequential data set on the same volume.  ON
 CATLG is assumed if the <dsname> is a standard WYLBUR library and
 the volume information is not supplied from any source.  You  may
 SAVE  only a portion on the active file by specifying an explicit
 range with the LINES option.

 If you use the SET option, WYLBUR  will  retain  the  prefix  and
 member fields used in the command.  This SET is identical to that
 in  the  USE  command except that NOSET is the default option for
 SAVE.

 The format operand specifies the form in which the data is to  be
 saved.   EDIT  is  the  default  value for the SAVE command.  The
 other options are permitted when you specify  a  sequential  data
 set  but if a PDS member is specified, a warning message will ask
 if you want the format of the entire PDS changed.   Any  response
 other  than  YES  or OK will abort the SAVE.  This is because all
 members  in  the  pre-allocated  PDS  are  in  the  same  format.
 However, CARD format (LRECL=80) is assumed if NUMBERED,  INTEGER,
 SEQFLD, or NOPOINT is specified without any explicit format.
1SUMMARY OF COMMANDS                                                VII - 23


 If any format other than EDIT is specified, the records are saved
 in a fixed blocked data set (RECFM=FB).  If the  records  in  the
 active  file  are  shorter  than  the  specified  LRECL, they are
 right-padded with blanks.  If the records  are  longer  than  the
 specified LRECL they are truncated at the right.  In either case,
 the  blocking factor may be specified as (n) in the SAVE command;
 in other words the data set BLKSIZE will  be  LRECL*n.   See  the
 User's Manual for a further explanation.


 When a fixed block data set is saved, WYLBUR  normally  does  not
 place  line numbers in the records.  When the file is used again,
 it is  renumbered.   The  NUMBERED  option  specifies  that  line
 numbers should be saved in the record.

 The NOPOINT option assumes the NUMBERED option and specifies that
 the line numbers should be put in the records without  a  decimal
 point or zero suppression.

 The SEQFLD option is used to change the normal position or length
 of the line numbers in the saved records.  The normal position is
 the last eight positions of each  record  (SEQFLD=(END,8)).   Any
 column  position  (pos)  and any length (len) less than 10 can be
 specified.  Line numbers are truncated on the left  to  the  size
 specified  without  checking for loss of digits.  The parentheses
 can be omitted if the length is not changed.

 WYLBUR will not permit you to SAVE a data set or a  member  of  a
 PDS  with a duplicate name on the same volume or in the same PDS.
 Should you attempt to do this, WYLBUR asks if you  want  the  old
 data  set or member to be replaced with the new data.  If you are
 aware of this condition when you enter the SAVE command, you  may
 pre-empt  this dialogue by specifying SCRATCH or REPLACE.  When a
 sequential data set is replaced, the old data  set  is  scratched
 before  the  new  data  is  saved.  However, when a PDS member is
 replaced, the new member is added to the PDS and the directory is
 updated after the new member has been written.

 You may specify that the system catalog the data set after it has
 been saved so that you do not have to remember the volume name on
 which it has been saved.  This is done with  the  CATLG  operand.
 If  the specified data set name already exists in the catalog you
 are informed.  If you want to save the data set on a volume other
 than the one on which it is catloged, you must  use  the  RECATLG
 command.   This  can  be  pre-empted  by  typing  RECATLG  in the
 command.  In that case the system will catalog the  data  set  on
 the  new  volume whether or not it is already cataloged.  RECATLG
 does not scratch the old data set.  CATLG and RECATLG are ignored
 when ON CATLG is specified for the volume.

 You may uncatalog the data set after SAVE by specifying UNCATLG.
1SUMMARY OF COMMANDS                                                VII - 24


 SCRATCH Command (Short Form:  SCR)

 This command allows you  to  scratch  any  <external  file>  that
 belongs to you or your group.  See Section IV.B.

 SCRATCH <dsname> ÝON <volume>|CATLG¨ ÝUSER uuu¨ ÝGROUP gg¨
     ÝSET|NOSET¨ ÝUNCATLG¨ ÝPDS¨
+         _____



 A cataloged sequential data set will be scratched and uncataloged
 if UNCATLG is specified or if the data set  is  referenced  using
 CATLG.   Only  a  sequential  data  set  or  members of a PDS can
 normally be scratched.  If you want to scratch an entire PDS, you
 must specify the PDS operand.  If this is not specified  and  the
 <dsname>  is a PDS, a prompt will be given to ask if you want the
 entire PDS scratched.  Any response other than  YES  or  OK  will
 abort  the  command.   The  USER and GROUP options may be used to
 reset those fields to your own initials and account if necessary.

 There are also SCRATCH  options  on  the  SHOW  DIRECTORY|DSNAMES
 commands which cause a SCRATCH?  prompt after the listing of each
 title.

 ON CATLG is assumed if volume information is not  specified  from
 any  source  and  <dsname> is a standard WYLBUR library.  The SET
 option will set the prefix and member fields to those used in the
 command.


 SET and SHOW Commands

 These commands are used to establish and display the  values  for
 the global parameters and other factors that are in effect during
 a session.  Some global parameters are discussed in Section II.A.
 and some such as SET VOLUME are discussed throughout Sections III
 and IV.  Most are introduced here.


 SET BACK, SET NOBACK, SHOW BACK

 The SET BACK command alters the function of  the  backspace  key.
 An  upper  case  backspace  (a  shift and backspace) will enter a
 backspace in the file.  This is handy for getting an underline in
 the file.  A lower case backspace continues to erase the previous
 character,  just like  any  backspace  does  when  NOBACK  is  in
 effect.

 SET NOBACK returns the backspace key to its usual function.

 SHOW BACK tells which option is in effect.
1SUMMARY OF COMMANDS                                                VII - 25


 SET BREAK, SET NOBREAK, SHOW BREAK, SHOW NOBREAK

 The SET NOBREAK command will allow no  messages  to  be  received
 until  you  hit  (CR)  or  (ATTN).  The sender's keyboard will be
 locked until the message is received.  The sender can  abort  the
 TO  command  by  hitting  (ATTN)  any  time  before  the keyboard
 unlocks.  If the message is sent to a terminal that does not have
 the BREAK hardware feature and NOBREAK is not set,  the  sender's
 terminal  will  unlock  whether  or  not the message is received.
 This will usually result in the message being lost.

 The SET  BREAK  command  allows  messages  to  interrupt  you  at
 anytime, except during a LIST CLEAN (See the LIST command above).

 SHOW BREAK will show which option is currently in effect.

 SHOW NOBREAK will display a list of lines which have this  option
 currently in effect.


 SET CRT, SET NOCRT, SHOW CRT, SHOW NOCRT

 The SET CRT and SET NOCRT commands are legal  only  for  CRT-type
 terminals (e.g., Hazeltines and teletypes), and will set or unset
 the  paging option described below.  CRT is automatically set for
 users who signon using  a  terminal  id  of  Hnn  at  a  CRT-type
 terminal.

 SHOW CRT or SHOW NOCRT will show which  option  is  currently  in
 effect.

 When NOCRT is in effect and a listing of a range longer than  the
 screen  size  (27 lines) is being done, the listing will flow off
 the top of the screen until the listing is over.  When CRT is  in
 effect,  however,  a  listing will pause when the screen has been
 filled and WYLBUR will prompt with a colon (:).   At  this  point
 you may respond with any of the following:

 (CR) -- The screen is erased and the listing is  continued  until
 the screen is filled again.

 (ATTN) -- The command is aborted.

 (CTRL) 'E' -- This does the same thing  as  (CR),  but  does  not
 clear the screen first.

 a 3-digit number, followed by (CR) or (CTRL)  'E'  --  This  will
 continue  listing that number of lines before the next :  prompt.
 If the number is greater than 256 the number of lines listed will
 be the remainder of dividing that number by 256.

    :258(CR)
    :514(CTRL)E
1SUMMARY OF COMMANDS                                                VII - 26


 will both list the next two lines.  The first example will  clear
 the  screen; the last will add the two lines at the bottom of the
 screen.  The number must be  an  integer  less  than  1000.   The
 default value is CRT.


 SET CURRENT Ý<lineno>¨ ÝEXEC¨ , SHOW CURRENT ÝEXEC¨

 SET CURRENT sets the  <current  line  pointer>  to  the  <lineno>
 specified.   SET  CURRENT 80 would set the <current line pointer>
 of the active file to 80.  SHOW CURRENT is actually just  one  of
 the  possibilities of the SHOW <symbolic line number> command.  *
 may be used in place of CURRENT.  The use of the EXEC  option  in
 either  command  will set or show the * for the exec file instead
 of the active file.


 SET DELTA, SHOW DELTA

      COMMAND? SET DELTA = <lineno> (CR)

 This sets the default value of the line number increment, DELTA.

 <lineno> may be any value between 0.000 and 99999.999  inclusive.
 DELTA has a signon value of 1.000.


 SET ESCAPE, SHOW ESCAPE

 SET ESCAPE c

 This command sets the preprocessor escape character.  If c  is  a
 special character (e.g., =,()'" or blank) it must be written as a
 <string> (e.g., enclosed in quotes).  Refer to Section V.


 SET ESCAPE (CR)

 This command unsets the escape character.

 SHOW ESCAPE  displays  the  current  escape  character.   For  an
 explanation of the use of the escape character, see Section V.


 SET EXEC, SHOW EXEC

 SET EXEC ÝTERSE|VERBOSE¨ ÝLOG|NOLOG¨

 The SET command can be used to govern the format of the  messages
 which appear on the terminal in response to an EXEC command.
1SUMMARY OF COMMANDS                                                VII - 27


 SHOW EXEC ÝTERSE|VERBOSE¨ ÝLOG|NOLOG¨

 This command may be used to  show  which  of  these  options  are
 currently  in  effect.   The defaults are VERBOSE and LOG.  TERSE
 suppresses reprinting of exec lines with  preprocessor  SKIP  and
 ESC characters, and NOLOG suppresses printing of each line in the
 exec file as it is executed.

 The SHOW can be used to display single lines in the exec file.

 SHOW EXEC Ý<lineno>|RETRY¨

 If <line number> is specified, the contents of that line will  be
 listed.  SHOW EXEC RETRY lists the line that would be executed on
 an EXEC RETRY command.  This was the line last executed.


 SET GROUP, SHOW GROUP

       SET GROUP gg (CR)

 The SET GROUP command allows you  to  specify  that  the  default
 group  gg  is to be used in forming a <dsname>.  At signon, GROUP
 is set to the group id typed in response to the ACCOUNT?  prompt.

       SET GROUP (CR)

 This form resets GROUP to the signon value.  The current value of
 GROUP can be displayed at any time with SHOW GROUP or SHOW NAME.


 SET KEYWORD

 The SET KEYWORD command safeguards against  the  unauthorized  or
 accidental misuse of an account number.  After you set a keyword,
 WYLBUR  will  check  for it in the initial sign-on dialogue every
 time you sign on with your initials and account number.

      COMMAND? SET KEYWORD KKK (CR)
      OLD KEYWORD? MMM (CR)
+                  GGG

 If the new keyword is omitted, WYLBUR will ask  for  it.   WYLBUR
 will always prompt for the old keyword.  To end keyword checking,
 respond with a carriage return to the "NEW KEYWORD?" prompt.

      COMMAND? SET KEYWORD (CR)
      OLD KEYWORD? MMM
+                  GGG
      NEW KEYWORD? GGG (CR)
+                  MMM

 The old  and  new  keywords  are  overstruck  as  in  the  signon
 procedure for protection.
1SUMMARY OF COMMANDS                                                VII - 28


 SET LENGTH, SHOW LENGTH

      COMMAND? SET LENGTH n (CR)

 The LENGTH is the number of characters which may be in  any  line
 of  text.   If  you type a line of text containing more than this
 number of characters, WYLBUR will accept the  line  but  issue  a
 warning message that you have exceeded the limit.

 n may be any integer between 1 and 133 inclusive.

 LENGTH has a signon default value of 72.


 SET MEMBER, SHOW MEMBER

      COMMAND? SET MEMBER <member name> (CR)

 This command is used to set the default member name that will  be
 used  to  form  a  <dsname>.  The <member name> specified may not
 exceed 8 characters.  If the <member name> is omitted, it is  set
 to  null.   At  signon,  it is set to null.  The current value of
 MEMBER can be shown at any time with SHOW MEMBER or SHOW NAME.


 SET MSGOFF, SET MSGON, SHOW MSGOFF, SHOW MSGON

 The SET MSGOFF command will allow only operator  messages  to  be
 received at your terminal.  When someone else tries to send you a
 message,  they  will receive a message explaining that you do not
 want to receive messages at this time and their TO  command  will
 be aborted.

 SET MSGON will unset this feature.  This is the signon condition.

 SHOW MSGOFF will display a list of those lines which have  MSGOFF
 in effect.

 SHOW MSGON will show which option is currently in effect.


 SET NAME, SHOW NAME

 SET NAME Ý<dsname>¨ ÝUSER uuu¨ ÝGROUP gg¨

 The SET NAME command allows you to set the values of  the  GROUP,
 USER,  PREFIX, and/or MEMBER fields in one command.  The <dsname>
 is formed in the usual way except that the default PREFIX is null
 rather than LIB (See <dsname> and  the  description  of  the  USE
 command).   SHOW  NAME  is  used to display the current values of
 GROUP, USER, PREFIX, and MEMBER.
1SUMMARY OF COMMANDS                                                VII - 29


 SET NOTIME, SET TIMEOUT, SHOW NOTIME, SHOW TIMEOUT

 The SET NOTIME command will prevent WYLBUR from logging  you  off
 when  there  has  been 20 minutes of inactivity at your terminal.
 After 10 minutes of inactivity,  WYLBUR  gives  a  warning.   The
 warning  is  repeated  5  minutes  later.   If  there is still no
 response within 5 minutes after the second warning,  WYLBUR  will
 signoff   the  terminal.   An  active  file  will  be  saved  and
 catologued, provided there is space available  to  do  so.   This
 command  should  be  used with care since you will be charged for
 all the time that you are signed on.  See Section I.G.

 SET TIMEOUT will unset this feature.

 SHOW NOTIME and SHOW TIMEOUT will display a listing of the  lines
 which  have the specified parameter currently in effect.  TIMEOUT
 is the default signon value.


 SET PREFIX, SHOW PREFIX

      COMMAND? SET PREFIX <string> (CR)

 This command is used to set  the  prefix  that  can  be  used  in
 building a <dsname>.  In this command <string> is not enclosed in
 quotes.   If  <string> is omitted, the prefix is set to null.  At
 signon, the prefix is set to null.

      COMMAND? SET PREFIX *<string> (CR)

 This form sets the prefix to a concatenation of the old value and
 <string>.  SHOW PREFIX or SHOW NAME  can  be  used  to  show  the
 current value of PREFIX.


 SET RESCAN, SHOW RESCAN

 SET RESCAN n

 This command sets the rescan counter  to  the  number  specified.
 The  rescan  counter  indicates  the  maximum  number  of times a
 command will be scanned by the preprocessor for skip  and  escape
 characters  before  it  is  executed.  For further details on the
 rescan feature of the preprocessor, see Section V.

 SHOW RESCAN displays the current rescan count.  The signon  value
 is 5.
1SUMMARY OF COMMANDS                                                VII - 30


 SET SKIP, SHOW SKIP

 SET SKIP c

 This command sets the preprocessor skip character.   If  c  is  a
 special character (e.g., =,()'" or blank) it must be written as a
 <string>.

 SET SKIP (CR)

 This command unsets the skip character.

 SHOW  SKIP  displays  the  current  skip   character.    For   an
 explanation of the use of the skip character, see Section V.


 SET SLOWLIST, SET FASTLIST, SHOW SLOWLIST, SHOW FASTLIST

 SET SLOWLIST keeps WYLBUR from using  any  tabs  when  listing  a
 file.

 SET FASTLIST allows WYLBUR to use the tabs.  Either SHOW SLOWLIST
 or SHOW FASTLIST will display the  option  currently  in  effect.
 FASTLIST  is  the  default  value  at signon.  Users can use this
 feature if they wish to list a few lines that were  created  with
 tabs without having the terminal actually tab.  This is useful in
 checking the accuracy of the file.


 SET TABS, SHOW TABS

 SET TABS Ýt1,t2,...¨ ÝNOVERIFY¨

 This lets you set  tabs.   WYLBUR  will  prompt  with  directions
 telling  you  what  to  do.   If no tabs have been set, or if you
 press the tab key more times than there are tabs set, WYLBUR will
 not process the line  and  will  issue  an  error  message.   See
 Section II.A.  for more about the SET TABS command.

 Tabs are used when possible to speed up  listings  taken  at  the
 terminal.  See the SET SLOWLIST command.

 SHOW TABS ÝVERIFY¨

 The current tab settings can be  shown  by  using  SHOW  TABS  or
 verified by using SHOW TABS VERIFY.
1SUMMARY OF COMMANDS                                                VII - 31


 SET TERMINAL, SHOW TERMINAL

 SET TERMINAL lnn

 This command resets the terminal ID  initialized  in  the  signon
 procedure.   SHOW TERMINAL displays the current terminal ID.  Any
 characters automatically set when  the  user  signed  on  with  a
 terminal id of either Ann or Hnn will not be affected.


 SET TERSE, SET VERBOSE

 The SET TERSE command shorten the WYLBUR command prompt  COMMAND?
 to   ?.   In  addition,  all  <dsnames>  will  be  listed  in  an
 abbreviated form instead of  the  full  <dsname>.   All  commands
 containing  the  pre-processor escape or skip characters will not
 have the processed command listed.

 SET VERBOSE puts it back.  The signon default is VERBOSE.




 SET UPLOW, SET UPPER, SHOW CASE

 These  commands  govern  the  case  of   alphabetic   characters.
 Normally, all alphabetic characters are recognized as upper case.
 If  UPLOW  is specified, full upper and lower case facilities are
 available to you.  If UPLOW is in effect, you may revert  to  the
 normal  case  (all alphabetic characters in upper case) by giving
 the SET UPPER command.  The SET UPLOW command has no effect on  a
 Hazeltine  terminal.   A  file containing lower-case letters will
 list as upper case letters on a Hazeltine terminal.  If the  same
 file  is  listed  offline,  UPLOW  must  be specified in the LIST
 command or the lower case letters will print as blanks.


 SET USER, SHOW USER

      COMMAND? SET USER uuu (CR)

 The SET USER command allows you to specify that the default  user
 uuu  is to be used in forming a <dsname>.  At signon, USER is set
 to the INITIALS used in the LOGON procedure.

      COMMAND? SET USER (CR)

 This form resets USER to the signon value.  The current value  of
1SUMMARY OF COMMANDS                                                VII - 32


 SET VALUE, SHOW VALUE

 These commands are used to SET or SHOW the current values of  the
 preprocessor variables or expressions.

 SET VALUE variable=expression

 Variable is any preprocessor variable (an S, W or N, followed  by
 a digit).  Expression is a preprocessor 'CEXPR' (see Section V.).

 SHOW VALUE expression(s)

 Expression(s) may be one or more preprocessor 'CEXPR's.

      COMMAND? SET VALUE N1=628
      COMMAND? SET VALUE S3='MMMM'
      COMMAND? SET VALUE W6=JOBNO
      COMMAND? SHOW VALUE  N1 W6 S3
      628 123.000 'MMMM'


 SET VOLUME, SHOW VOLUME, SHOW VOLUMES

 The SET/SHOW VOLUME commands are used to set and show the default
 volume which will be used if  no  other  is  specified  with  the
 following commands:  USE, SAVE, SCRATCH, COPY FROM, SHOW DSNAMES,
 and  SHOW DIRECTORY.  Alternatively, ON <volume> can be specified
 with each command that requires it.

 SHOW VOLUMES gives a list of all volumes that may be accessed  by
 you,  all volumes on which saves can be performed and all volumes
 on which data sets may reside temporarily.


 SHOW CATLG

 The SHOW CATLG command is used  to  display  a  list  of  dsnames
 and/or  index  pointers below a given index node.  Only one level
 of index name may be listed in a single command.  The  format  of
 the command is:

 SHOW CATLG ÝFOR »*|index patternº¨ ÝUSER uuu¨
     ÝGROUP gg¨ ÝUNCATLG¨ ÝSET|NOSET¨ ÝNOTYPE¨
+                              _____
     Ý»FROM|EXCLUDEº <string1>¨ Ý»THRU|TOº <string2>¨

 The "index pattern" in the FOR operand  specifies  the  level  or
 levels  of  index  used  to search the catalog.  Only those names
 found at the next level  of  index  below  the  pattern  will  be
 listed.   If  the FOR option is omitted, the SAVED USER and GROUP
 are used to form the index pattern.

    SHOW CAT FOR @EB.&ABC FROM GHI TO STU

1SUMMARY OF COMMANDS                                                VII - 33


 Normally each entry also  shows  the  type  of  entry  and  other
 pertinent  information  for that entry such as the volume name on
 data set entries.  This information may be  suppressed  with  the
 NOTYPE  option.   The  UNCATLG  option  performs the same general
 function for SHOW CATLG as SCRATCH does for SHOW DSNAMES; namely,
 WYLBUR lists every data set name that belongs to you and asks  if
 if  should be uncataloged.  All other operands are similar to the
 SHOW DSNAMES command.


 SHOW COLUMNS ÝUNNUMBERED¨

 This command will produce a line containing column  numbers.   It
 is  usually  used to decide where to set the tabs or what columns
 to specify in another command.

 The UNNUMBERED option will display the columns as they  would  be
 positioned in a LIST UNNUMBERED command.

      COMMAND? SHOW COLUMNS
               12345678...
      COMMAND? SHOW COLUMNS UNNUMBERED
      12345678...

 SHOW COUNT

 This command displays the number of users currently signed on the
 system.


 SHOW DATE

 This command may be used to see the date in two forms -- MM/DD/YY
 and the julian date -- as well as the time of day.


 SHOW DIRECTORY

 The SHOW DIRECTORY command produces a list of member  names  from
 the specified PDS.  The format of the command is:

 SHOW DIRECTORY ÝIN <dsname>¨ ÝUSER uuu¨ÝGROUP gg¨ ÝON <volume>¨
     Ý»FROM|EXCLUDEº »<string1>|#º¨ Ý»THRU|TOº »<string2>|#º¨
     ÝSCRATCH¨ ÝALL¨ ÝSET|NOSET¨
+                         _____
1SUMMARY OF COMMANDS                                                VII - 34


 If the "IN <dsname>" operand is omitted, the default name LIB  is
 assumed   for   the   current   USER   and   GROUP  values.   The
 FROM/THRU/EXCLUDE/TO operands function identically to  their  use
 in  the  SHOW  DSNAMES  command except that for this command they
 refer to member names rather than data  set  names.   IF  "#"  is
 specified  for either string, the current value in MEMBER is used
 for that string.  The SCRATCH operand is also identical  to  that
 for  SHOW  DSNAMES  except  that it applies to members instead of
 data sets.  The SET option sets the PREFIX to <dsname> and unsets
 the MEMBER name.

 Usually, only the member names are shown in the  resulting  list.
 However,  if  you  want to see the other information contained in
 the PDS  directory,  specify  ALL.   This  causes  a  hexadecimal
 display of the other directory information.

      COMMAND? SHOW DIRECTORY ALL
      WYL.UR.ABC.LIB
      FILE1     00020102  00003068
      FILE2     00030102  00003072
      FILE3     00020182  00003068

 The seventh digit of the first set of numbers, if it is equal  to
 eight, indicates an alias.  FILE3 is thus an alias of FILE1.  The
 fifth  digit  of  the second group indicate the year the file was
 created, in this case, 1973, and the next three  digits  indicate
 the  day  of  the year.  FILE1 and FILE2 were created on the 68th
 day of 1973; FILE3 was created on the 72nd day of 1973.


 SHOW DSNAMES

 The SHOW DSNAMES command produces a list of DSNAMEs  on  a  given
 volume  which satisfy the criteria specified in the command.  The
 format of this command is:

 SHOW DSNAMES ÝLIKE <dsname>¨ ÝUSER »uuu|ALLº¨ ÝGROUP »gg|ALLº¨
     Ý»FROM|EXCLUDEº »<string1>|*º¨ Ý»THRU|TOº »<string2>|*º¨
     ÝON <volume>¨ ÝSET|NOSET¨ ÝSKIP n¨
+                       _____
     ÝSCRATCH¨ ÝDATED¨ ÝTYPE¨ ÝSPACE|SIZE|TRACKS¨


 If the command has no operands, WYLBUR will list all WYLBUR  data
 sets  which  belong  to the group and user specified in the SAVED
 GROUP and SAVED USER fields.  The volume will be taken  from  the
 ON  <volume> field or from the last SET VOLUME command (CATLG may
 not be used).  To display a list of data sets for other users  or
 groups  or  both, use the USER or GROUP options.  To look at data
 set names for all users or groups, or both, specify  ALL  instead
 of a user or group id.
1SUMMARY OF COMMANDS                                                VII - 35


 The LIKE operand is used to construct a pattern against which all
 data set names on the specified volume are matched.   Only  those
 data set names beginning with the specified pattern are selected.
 The  operand  is  similar  to the standard dsname operand used in
 other commands except that there is no LIB default.

 You may limit the range of the displayed list by specifying  FROM
 and/or  THRU.   FROM  <string1>  specifies the lower limit of the
 displayed list and THRU  <string2>  specifies  the  upper  limit.
 Either  or  both  may  specify  *  to use the current PREFIX.  If
 PREFIX is null, and * alone is specified, the value of the string
 is also null; i.e., the operand is ignored.  Both  <string1>  and
 <string2>  refer  to that part of the WYLBUR DSNAME which appears
 after the pattern  constructed  from  the  LIKE  operand  or  the
 default  pattern.   Thus, if GROUP and USER are set to EG and ABC
 respectively, the command:


                SHOW DSNAMES LIKE XYZ FROM F THRU G

 would cause a display of all data set names of the form:

           WYL.EG.ABC.XYZFxxxxx  through  WYL.EG.ABC.XYZGxxxxx


 You may reverse this range by specifying EXCLUDE instead of FROM.
 In this case, all data sets except those  between  the  specified
 limits are displayed.

 To list the names of data  sets  other  than  WYLBUR  data  sets,
 specify  the  dsname  in  quotes  or  preceded  by  $ in the LIKE
 command.  The quotes or $ perform the same  function  as  in  the
 dsname operand of other commands.

 If the FROM operand is omitted, the range starts from the  lowest
 data  set  name  found.   If  THRU  is omitted, the range extends
 through the last data set name found.  If both are  omitted,  all
 data  sets  for the default pattern or specified LIKE pattern are
 listed.

 SET will  set  the  saved  PREFIX  and  MEMBER  fields  to  those
 specified in the command.

 You may also request that other information associated  with  the
 data  sets  be  displayed.  DATED gives you the date on which the
 data set was created and the date on which it was last  accessed.
 SPACE  means the amount of space occupied by the data set and the
 number of extents if not 1; TYPE information  consists  of  DSORG
 RECFM/LRECL/BLKSIZE  separated  by  slashes as indicated.  If the
 values are not valid, an asterisk appears instead.   EDIT  format
 data  sets are normally "U/3520/3520", PRINT format data sets are
 normally "FB/133/3458", and CARD format data  sets  are  normally
 "FB/80/3520".
1SUMMARY OF COMMANDS                                                VII - 36


 If SCRATCH  is  specified,  WYLBUR  will  prompt  with  the  word
 "SCRATCH?"  and  require  a  response  after  every data set name
 listed which belongs to you.   A  yes  response  will  cause  the
 listed data set to be scratched.

 The command SHOW DSNAMES LIKE LIB SPACE will show how much  space
 has been used in the WYLBUR library.


 SHOW JOBNO

 This command produces the numeric portion of the  default  WYLBUR
 jobname to be assigned to the NEXT job submitted from your WYLBUR
 ID.

      COMMAND? SHOW JOBNO (CR)
      664 - NEXT JOBNO

 Note that this is different from the  preprocessor  command  SHOW
 VALUE  JOBNO.  The value of the preprocessor variable is a string
 whose value is the numeric portion (JOBNO)  of  the  default  job
 name  of the last job submitted from your WYLBUR ID, whereas SHOW
 JOBNO displays the default JOBNO for the next job submitted  from
 your  WYLBUR  ID.  The preprocessor value of JOBNO will always be
 one less than the other, they are incremented simultaneously when
 a command such as RUN, LIST OFFLINE, PUNCH, CONDENSE  or  SUGGEST
 is executed from your ID.


 SHOW LINES ÝALL¨, SHOW LINE

 SHOW LINE gives you the line number and terminal number  for  the
 terminal you are using.  SHOW LINES produces a list of the status
 of  all active remote terminals or all remote terminals if ALL is
 specified.  SHOW USERS is a shortened form of this command.   The
 TO command can be used to send messages to any active line.


 SHOW LINE n, SHOW LINE uuu, SHOW LINE id

 These commands tell the status of a given line.  n  is  the  line
 number assigned to a terminal in the identification message typed
 at  the start of the sign-on process.  uuu is the set of initials
 you signed on with.  id is the terminal identification number.



 SHOW MESSAGE

 This command will show the current broadcast message.
1SUMMARY OF COMMANDS                                                VII - 37


 SHOW FREE, SHOW MINFREE

 SHOW FREE gives a count of the free phone  lines  followed  by  a
 list of their WYLBUR line numbers.

 SHOW MINFREE also gives a count of the free phone lines and lists
 the current value of MINFREE.  MINFREE is a WYLBUR parameter  set
 by the operator.  It is the minimum number of free lines required
 before WYLBUR will honor the NOTIME option.

      COMMAND? SHOW MINFREE
      0 LINE(S) FREE, 5 MINFREE.  NOTIME NOT CURRENTLY HONORED.


 SHOW PAGES

 This command will print the number of <pages> in the active file.
 The size must be less than or equal to three if the  active  file
 is going to be used as an exec file.  The maximum number of pages
 is 294.


 SHOW RUN

 This command will show whether or not you are allowed  to  submit
 jobs at the present time.


 SHOW SIZE

 This command may be used to find the number of characters in each
 line of a specified range.  It can be helpful in finding lines to
 ALIGN.

 SHOW SIZE Ý<range>¨ ÝOVER n|LENGTH¨ ÝUNDER m|LENGTH¨ ÝNOCOUNT¨

 The default range is all.  The value of n may be any integer less
 than or equal to 133.  For example, SHOW SIZE OVER 72 would  list
 the  lines  with  over  72 characters in them, with the number of
 characters in each line.  m must be at least 2 greater than n  if
 both  are specified.  NOCOUNT is specified, only line numbers are
 printed.

      COMMAND? SHOW SIZE
          1.    -  45 CHARACTERS
          2.    -  14
          3.    -  45
      COMMAND? SHOW SIZE 1/2 10/12 UNDER 60
          1.    -  45 CHARACTERS
          2.    -  14
         10.    -  30
         11.    -  53
         12.    -  55
      COMMAND? SHOW SIZE OVER LENGTH
      NO LINES OVER 72
1SUMMARY OF COMMANDS                                                VII - 38


 SHOW SPACE

 SHOW »SPACE|TRACKSº ÝGROUP|USER uuu¨

 or

 SHOW  »SPACE|TRACKSº  ON    <volume>

 This command is used to show two distinct types  of  information.
 The  ON  <volume>  option  is  used to display the number of free
 tracks and <extents> available for all  users  on  the  specified
 volume.   Otherwise,  the  number  of tracks used by you, or your
 group if specified, will be displayed.  The  SHOW  SPACE  command
 does not show the size of any data sets.  The SHOW DSNAME command
 with the SPACE option must be used to show the size of individual
 data  sets  as well as the space used in a WYLBUR library.  SPACE
 and TRACKS are equivalent, and may be used interchangeably.


 SHOW <symbolic line numbers> ÝEXEC¨

 This command displays the <symbolic line  number>  of  an  active
 file  or  an  exec  file  if  EXEC  is specified.  <Symbolic line
 number> may be:

             FIRST      CURRENT or *
             LAST       PREVIOUS
             END        NEXT




 SHOW SYSTEMS

 This command shows the systems currently available under  MILTEN.
 Normally  WYLBUR, but only WYLBUR, will be available.  SHOW COUNT
 and SHOW LINES also show the systems as well as  how  many  users
 are on each.  See <SYSTEM?> and <recovery> in Section VIII.


 SHOW TIME

 This command will print out the date and time in  hours,  minutes
 and  seconds  and the current values for elapsed time and editing
 time.
1SUMMARY OF COMMANDS                                                VII - 39


 SHOW USERS Ýuuu¨

 This  command  types  the  initials  of  all  signed  on   users.
 Specifying uuu will cause the list to begin with user uuu.

      COMMAND? SHOW USERS
      JCS CXL SXS JAG AXB PLR JZP RLS MUM - USERS
      COMMAND? SHOW USERS AXB
      AXB PLR JZP RLS MUM - USERS


 SUGGEST Command (Short Form:  SUG)

 SUGGEST Ý<range>¨ ÝEXEC¨ ÝACCOUNT aaaaaaa¨

 With this command you may submit a file of  your  suggestions  to
 the CUCC staff members who maintain WYLBUR.  This command submits
 a  job  to  list offline the <range> of the active file or of the
 exec file if you use the EXEC option.  The SUGGEST will submit up
 to the first 50 lines of the file.  If the ACCOUNT option is  not
 specified,  the  job  will  be charged to the project number with
 which you signed on to TPMON.


 TO Command

 TO n message, TO id message, TO uuu message, TO OPR message

 These commands are used to send a message  to  another  terminal.
 The  n and id are used as in the SHOW LINE command.  uuu is a set
 of user initials.  The  TO  command  should  be  used  only  when
 absolutely   necessary  since  it  interrupts  the  work  of  the
 receiver.  See also the SET MSGOFF command, and the CLEAN  option
 on the LIST command.


 UNCATLG Command (Short Form:  UNC)

 UNCATLG <dsname> ÝUSER uuu¨ ÝGROUP gg¨

 The  UNCATLG  command  causes  the  specified  data  set  to   be
 uncataloged.   Only  data sets belonging to you or your group may
 be uncataloged.  The USER and GROUP options may be used to  reset
 those fields to your own initials and account if necessary.
1SUMMARY OF COMMANDS                                                VII - 40


 USE Command (Short Form:  U)

 The USE command reads a copy of a direct  access  data  set  into
 your active file.  The general form for this command is:

 USE <dsname> ÝUSER uuu¨ ÝGROUP gg¨ ÝON <volume>¨
     ÝSET|NOSET¨ ÝCLEAR¨ ÝEDIT|LRECL=nnn|CARD|PRINT¨ ÝNOPOINT¨
+     ___                 ____
     ÝNUMBERED¨ ÝSKIP mmmm¨ ÝSEQFLD=(»END|posº Ý,len¨)¨

 The optional operands are all keyword operands and may appear  in
 any  sequence.   The <dsname> operand is positional and specifies
 the <dsname> of the data set to be read.  Names  of  WYLBUR  data
 sets  with  standard  WYLBUR  names  may  be  specified  in their
 entirety or in an abbreviated form using default  and/or  pre-set
 values.   The  full specification of this operand is discussed in
 Section VIII.

 The VOLUME operand tells WYLBUR the name  of  the  direct  access
 volume  on  which  the  data  set  resides.   If  the data set is
 cataloged in the system catalog, you may specify ON CATLG instead
 of the <volume> name.  When ON CATLG  is  specified,  the  system
 will tell you the <volume> name obtained from the catalog for the
 specified data set.  If the catalog is not used, "ON <volume>" is
 required  for  a  sequential  data set unless you have previously
 done a SET VOLUME command.  If "ON <volume>" is specified in  the
 command  it  overrides  any previously set <volume> name.  WYLBUR
 will prompt for the <volume> name if it is not  specified  for  a
 sequential data set.  For a WYLBUR <library>, ON CATLG is assumed
 if the <volume> is not specified.



 USE cannot be executed unless the active file is empty.  If there
 is an active file, the system will ask if it is ok to clear it in
 order to proceed with the USE.  You may pre-empt this dialogue by
 specifying CLEAR.  WYLBUR will then clear  the  active  file  and
 proceed.

 Normally, WYLBUR uses the  information  in  the  data  set  label
 (DSCB)  to determine how the data set was stored and how it is to
 be read.  However, if the DSCB has been altered, or if  you  wish
 to  read  the  data  set  in  a special way, you may override the
 information in the DSCB with the "format" operand.  If the record
 length (LRECL) of the data set is greater than 133 characters,the
 maximum record size for the working file, you must  override  the
 DSCB information with a number not greater than 133.  WYLBUR will
 read  fixed  length  records  (RECFM=F or FB) and variable length
 records (RECFM=V or VB) but not  "spanned"  records  (RECFM=VBS).
 Undefined  data  sets (RECFM=U) are assumed to be WYLBUR internal
 (EDIT) format data sets.  WYLBUR libraries and the WYLBUR  active
 file are always in EDIT format.
1SUMMARY OF COMMANDS                                                VII - 41


 The  "format"  operand  may  take  one  of  four  values:   EDIT,
 LRECL=nnn, CARD, or PRINT.  EDIT specifies that the data has been
 saved in WYLBUR internal format.  LRECL=nnn  specifies  that  the
 data  set  is not in EDIT format and that the record length to be
 used in reading it is "nnn".  WYLBUR then treats the data set  as
 "fixed blocked" (RECFM=FB).  If the actual physical block size is
 not  an  integral multiple of nnn, any characters remaining after
 all possible lines of nnn characters have been extracted will  be
 ignored.   CARD  is  an abbreviation for LRECL=80 and PRINT is an
 abbreviation for  LRECL=133.   All  provisions  for  LRECL  apply
 equally  to  CARD  and PRINT.  The values LRECL=, CARD, and PRINT
 may be specified for any data set, but the user should  be  aware
 that  the  use  of  these  operands  may  produce some rather odd
 looking data if the data set being read does not actually contain
 fixed length records.

 You may specify that some number of records at the  beginning  of
 the  data  set  are  to  be  skipped.   The  operand  "SKIP=mmmm"
 specifies that the first mmmm records are to be ignored.



 When data sets are saved in EDIT format, the WYLBUR line  numbers
 are stored with the data.  However, this is normally not true for
 data  saved  in other formats.  Such data sets will be renumbered
 by WYLBUR (from 1.000 by current DELTA) when they are read.   For
 non-EDIT  data sets, the NUMBERED option assumes that each record
 has a line number in  it.   WYLBUR  uses  that  line  number  and
 deletes from the record those columns containing the line number.
 Although  the  line  numbers  can  be  either decimal or integer,
 integer line numbers will be assumed to  have  an  implied  three
 decimal  places.  The SEQFLD option is used to notify WYLBUR that
 the line numbers are at some position or length  other  than  the
 default  SEQFLD=(END,8).   Any starting column pos and any length
 len less than 10 can be specified.  If the length is not changed,
 the parentheses around the position field can be omitted.  SEQFLD
 assumes NUMBERED and both use the default LRECL in the DSCB.

 After the full DSNAME has been constructed and the entire command
 line has been scanned for  valid  syntax,  WYLBUR  will  normally
 retain  information  on  that  DSNAME  so  that  it  need  not be
 respecified in subsequent commands such as SAVE.  The SET operand
 saves the prefix and member name but it doesn't change  the  user
 or  group  values.   If  you  don't want this to be done, specify
 NOSET.


1VIII.  DEFINITION OF TERMS                                       VIII - 1


 VIII.  Definition of Terms

 This section contains  the  definitions of  the  syntactic  types
 referred   to  in  Section  VII,  Summary  of  Commands,  plus  a
 definition of the special typewriter  keys.   All  terms  are  in
 alphabetical order.  Any terms enclosed in pointed brackets <...>
 are defined in this section.



 ACTIVE FILE

 An active file is a file which is being held in  core.   You  can
 make alterations and additions only to this file.  When it is not
 being  held  in  core  during  the actual execution of a command,
 parts of the active file are stored on a high-speed access drum.



 ASSOCIATIVE RANGE

 Associative range is a parameter in many of the commands.  It  is
 a  group  of  lines,  each  of which contains a certain series of
 characters (the <string>).  The range is specified  by  enclosing
 the  character string within quotation marks and indicating which
 lines (the <explicit range>) should be searched.  The form of  an
 associative range is:

 Ý¬¨<string> ÝmÝ/n¨¨ Ý(x,x,...,x/y)¨ ÝIN <explicit range>¨

 See Section III for a discussion on how to use associative range.

 The NOT character (¬)  is  optional  and  defines  a  range  that
 consists of all lines in the <explicit range> that do not contain
 the  <string>.   The  m/n  parameter specifies the columns within
 which the string must be contained in any given  line.   If  only
 the  first  one  of  the  two  column positions is specified, the
 string must start in that column.  If m/n is omitted, the  entire
 line will be searched for the string.

 The  next  set  of  parameters,  which  must   be   enclosed   in
 parentheses, can be of two forms.

                            X  or  X/Y

 These parameters restrict the  range  to  a  specific  subset  of
 lines,  namely,  those  whose ordinal positions in the set of all
 lines containing the string are given by x or x/y.  Thus (3)  and
 (3/7)  restrict  the  subset  to  the third and the third through
 seventh lines, respectively, of the <explicit range> in which the
 specified string occurs.

1DEFINITION OF TERMS                                              VIII - 2


 If no modifiers are given, all lines containing the string  which
 are  in  the  specified  <explicit  range>  are  included  in the
 <associative range>.

 The IN phrase gives an <explicit range> in which  to  search  for
 the lines containing the string.

 The correct <associative range> to retrieve blank  lines  is  the
 null  string--''  or  "".   Associative ranges consisting of more
 than one blank, such as ' ' or " ",  will  retrieve  lines  which
 have  the  specified  number of blanks and also have at least one
 non-blank character--blank lines will not be retrieved.



 ATTN Key

 When typed as other than the first  character  in  a  line,  this
 signals  that  WYLBUR  should  ignore the line.  However, see the
 MODIFY and EDIT commands in Section III for exceptions  to  this,
 as the ATTN key has extensive use in these commands.

 When typed as the first character in  a  response to  a  COMMAND?
 prompt, this key puts the user into COLLECT mode.

 Typed as the first character in an answer  to  any  prompt  other
 than  the  COMMAND?   prompt,  this  key  aborts  the command and
 returns to the command mode.

 If typed while WYLBUR is putting out  a  message  at  the  user's
 terminal, this suspends the printing of the rest of the message.

 The ATTN key causes an <exec break> if an <exec  file>  is  being
 used.



 Back-Space Key

 Back-spacing over any character typed by the user erases it  from
 the  computer's  memory.  This applies to command as well as text
 lines.

 An upper case backspace (a shift and a backspace)  will  enter  a
 backspace  into  the  file  and  will not erase material from the
 computer's memory if the SET BACK  command  is  in  effect.   For
 further  information,  see  Section I.D.
1DEFINITION OF TERMS                                              VIII - 3


 Carriage Return

 This is the final entry of every line  that  does  not  end  with
 ATTN.   It  is the signal for WYLBUR to look at the line and take
 appropriate action.

 When given as the only response to a prompt  in  the  MODIFY  and
 EDIT  commands,  it signals that all modifications have been made
 to the line.



 COLLECT Mode

 This is the mode in which lines are entered into the active file.
 WYLBUR calculates and prompts successive line numbers.



 COMMAND Mode

 This is the mode in which WYLBUR accepts and executes commands.



 Comments on Command Lines

 The semicolon is used in WYLBUR to indicate the end of a command.
 Everything typed after  a  semicolon is ignored and may  be  used
 for  comments.   A  command  line that begins with a semicolon is
 accepted by WYLBUR as  a  comment  line.   <Exec  files>  can  be
 documented using the semicolon.  The COMMENT command is also used
 for  comments  and  should  not  be  confused  with this feature.
 COMMENT command lines in exec files appear in NOLOG mode  whereas
 comments following semicolons do not.  See the COMMENT command in
 Section VII.


 CURRENT LINE POINTER

 The <current line pointer> is a symbolic line number whose  value
 is  the  number of the last line edited (active file) or executed
 (exec file).  The <current line pointers> for the active file and
 exec file are distinct.

 The following commands will set the value of  the  <current  line
 pointer>:

             CHANGE          JUSTIFY
             COLLECT         MODIFY
             COPY            MOVE
             EDIT            POINT
             SHOW SIZE

1DEFINITION OF TERMS                                              VIII - 4


 Fetching a file with a USE command does not set the pointer.  Nor
 does an attempt to edit a void range.  The symbols *  or  CURRENT
 refer  to  the <current line pointer>.  Either symbol may be used
 in designating a <range> or a line.

 Sometimes the value of the <current line  pointer>  will  not  be
 set.  For example, if there is no active or exec file, there will
 be  no  current line pointer.  Two other <symbolic line numbers>,
 PREVIOUS and NEXT, are dependent  on  CURRENT  and  some  obvious
 restrictions  apply.   For instance, if the value of the <current
 line pointer> is the last line of a file, there is no NEXT.

 * may be used in place of CURRENT when used in a range, but  when
 used  in specifying a <dsname>, * means the currently set PREFIX,
 as in the command SAVE * REPLACE.

 The value of * is assumed to refer to the active file except when
 the EXEC option is specified in the command.  In that  case,  the
 exec file is assumed.

 The commands SET *, SHOW *, and POINT  are  associated  with  the
 <current  line  pointer> and may be used to display or change the
 value of it.



 DSNAME

 In general, all WYLBUR data set names have the form:

                         WYL.gg.uuu.name

 where gg is a group identification, uuu  are  the  user  initials
 (WYLBUR  or  user  ID), and name is a name specified by the user.
 If the designated data set is a pre-allocated PDS  or  <library>,
 the assigned DSNAME is:

                         WYL.gg.uuu.LIB

 Each member of this data set has the name WYL.gg.uuu.LIB(member).

 Data sets allocated from the group space pool  have  a  data  set
 name  with user ID of PUB.  Thus, data sets in this category have
 names of the form:

                         WYL.gg.PUB.dsname

 and the group <library> is

                         WYL.gg.PUB.LIB
1DEFINITION OF TERMS                                              VIII - 5


 It is seldom necessary  to  specify  the  entire  DSNAME  in  the
 commands  since WYLBUR will construct all or part of the name for
 you from default or preset values.  However, the  dsname  operand
 may  never  be  omitted  and  it may not contain imbedded blanks.
 Normally you may specify SAVE * REPLACE to replace the  <external
 file> most recently accessed through a USE command.

 The system maintains four values to be used in constructing  data
 set  names.   These  are:  a group ID (not necessarily the user's
 group or the group to which he logged on), a user ID  (likewise),
 a  prefix  (a  dsname),  and a PDS member name.  Hereafter, these
 fields will be referred  to  as  the  SAVED  GROUP,  SAVED  USER,
 PREFIX, and SAVED MEMBER fields.

 The values in the four fields may be set individually by the user
 with the following commands:

                         SET GROUP Ýgg¨
                         SET USER Ýuuu¨
                         SET PREFIX Ýprefix¨
                         SET MEMBER Ýmember¨

 and  the  current  value  may  be  displayed  with  similar  SHOW
 commands.  These commands are  described  in  Section  VII.   The
 GROUP  and USER values are set with the group and initials in the
 sign on procedure.  The prefix and member fields are set with the
 USE command.

 The USE, SAVE, SCRATCH,  and  utility  commands  always  use  the
 current  values  of  the  SAVED  GROUP  and  SAVED USER fields to
 construct a standard WYLBUR dsname unless you  override  them  in
 the  command.   You  may  take  advantage  of the PREFIX field by
 specifying * in the dsname operand.  Additionally, you may add on
 to the current PREFIX value by specifying *string as  the  dsname
 operand.   This  will  result in "string" being concatenated with
 the current PREFIX.  The PREFIX and MEMBER fields have  been  set
 up so that you normally need type only SAVE * to save the <active
 file> as the same name used with the USE command.

 The SAVED MEMBER field is used by WYLBUR  when  accessing  a  PDS
 unless  a  member  name  is  specified  in  the  command operand.
 Specifying (member) at the end of the  dsname  operand  overrides
 the  value in SAVED MEMBER.  Specifying a member name of () alone
 overrides SAVED MEMBER with a  null  value.   Thus,  to  use  the
 current  PREFIX,  but  ignore the current SAVED MEMBER, you would
 specify:

                         command *()

1DEFINITION OF TERMS                                              VIII - 6


 You may always override the SAVED GROUP or SAVED  USER  field  in
 the command without having to use the current PREFIX.  Do this by
 specifying the keyword operands:

                      ÝGROUP gg¨ ÝUSER uuu¨

 somewhere in the command line after the dsname operand.

 To access a non-WYLBUR data set, specify  the  entire  DSNAME  by
 enclosing the name in quotes.

                         'dsname'

 The  SAVED  GROUP  and  SAVED  USER  fields  are  not  used   for
 constructing  a  data  set  name  enclosed in quotes.  The quoted
 dsname is also valid in PREFIX.

 The dsname operand itself may contain certain special  characters
 as  abbreviations.   The special characters used for this purpose
 are:

     $dsname  used instead of 'dsname' unless the dsname contains
              delimiter characters (blank,comma,=,and parens);
     #member  used instead of (member);
     @gg.     used instead of "GROUP gg";
     &uuu.    used instead of "USER uuu".

 When @ or & occur alone followed immediately by their  delimiting
 period, the default value is used.

 Thus, the general  short  form  of  the  dsname  operand  in  the
 commands is:

     Ý$string|Ý@Ýgg¨.¨Ý&Ýuuu¨.¨Ý*¨Ýstring¨¨Ý#Ýmember¨¨

     Examples:
           $SYSMSG.ABCUR001
           @UA.&.DATA1
           &DEF#TEXT
           $WYL.UR.ABC.MYTEXT

 The PREFIX and SAVED MEMBER may be set by specifying the optional
 command operand SET.  When SET is specified  in  a  command  that
 accesses  an external data set, the DSNAME is constructed and the
 entire command line is scanned for  syntactical  and  conflicting
 specification  errors.  Then the two fields are set to the values
 contained in the constructed DSNAME.  The PREFIX field takes  the
 value  of  the  part  of  the  DSNAME  following  the user ID but
 excluding any member name.  That is, for a constructed DSNAME of:

                         WYL.SF.ESR.XYZ(A1)

 the PREFIX field is set to XYZ and the SAVED MEMBER  becomes  A1.
 If  the  member  name  is null (for a sequential data set), SAVED
 MEMBER is set to null.  The SAVED USER and SAVED GROUP fields are
 not changed by the SET option.  These fields can only be  changed
 by SET NAME/GROUP/USER commands.
1DEFINITION OF TERMS                                              VIII - 7


 END

 END is a <symbolic line number> which points to  the  line  after
 the LAST line of a file.  Its line number value is LAST+DELTA, so
 if  the  last  line is 10 and DELTA is 1, the value of END is 11.
 That does not mean that line 11 exists, but rather that the  line
 number  of  the  next line to be added at the end of a file would
 default to 11.


 EXEC BREAK

 When a command that is being executed from  the  <exec  file>  is
 aborted,  an  <exec break> occurs and the user returns to COMMAND
 mode.  The command EXEC RETRY will re-attempt  execution  of  the
 aborted  command  while  EXEC  will  start  at  the command which
 follows the aborted command.



 EXEC FILE

 The <exec file> is a file that is separate and distinct from  the
 <active  file>.   It  may  contain a list of commands that can be
 executed at any time by using the EXEC command.  Any command  can
 be  in the file but the file can contain a maximum of three pages
 of commands (See SHOW PAGES in Section VII).   The  file  can  be
 loaded  from  either  the  <active  file> or from any EDIT format
 <external file>.



 EXPLICIT RANGE

 Explicit range refers to a group of lines  designated  by
 the  upper  and  lower limits of the line numbers such as X/Y.  X
 must be less than or equal to  Y.   If  X=Y,  the  range  may  be
 specified  by  giving only a single number.  See <line number> in
 this section for a description of line number limits.  Range  may
 be  expressed  as  a  line number and a count.  12(5) means the 5
 lines starting at line 12.

 The first and last lines of the <active file> may be referred  to
 simply  by  FIRST and LAST.  The explicit range ALL is equivalent
 to FIRST/LAST.

 An alternate form of an explicit range is a list  of  up  to  ten
 line  numbers.   The list can contain single lines or groups, and
 the ranges can overlap, but each  group  counts  as  two  of  the
 numbers  allowed.   For  example,  10,21,20,12/L,125.2 is a valid
 range.

1DEFINITION OF TERMS                                              VIII - 8


 In any command  that  has  <range>  as  a  valid  option,  an  an
 <explicit  range>  must  either  be specified or implied.  It may
 only be implied by omission in those commands that use a  default
 range of ALL:

              CHANGE         LOAD           PUNCH
              COPY           MODIFY         RUN
              EDIT           NUMBER         SUGGEST
              LIST           POINT




 EXTERNAL FILE

 All files other than the current <active file>  and  <exec  file>
 are  external  files.  These external files are either sequential
 data sets or members of partitioned data sets.  See also <dsname>
 in this section.


 FIRST

 FIRST is a <symbolic line number> which has the value of the line
 number of the first line in the <active file>.


 FILE

 A file is a collection of lines of text which may include  WYLBUR
 commands as well as system control statements (JCL) or other text
 such  as  a  program, a set of data, a letter, or a dissertation.
 See <exec file>, <external file> and <active file>.


 FORMAT

 The format of a data set may be shown using the  TYPE  option  of
 the  SHOW  DSNAMES  command.   There are some restrictions on the
 format that a WYLBUR  data  set  may  have.   If  these  are  not
 followed,  the  following  message  will  be  displayed  when you
 attempt to use the data set:

    <dsname> DSORG OR RECFM NOT VALID FOR WYLBUR.

 See  Section  VI.D  and  Section  VII  (SAVE  command)  for  more
 information on WYLBUR formats.


 LAST

 LAST is a <symbolic line number> which has the value of the  line
 number  of the last line in the <active file>.
1DEFINITION OF TERMS                                              VIII - 9




 LIBRARY

 Each user has one PDS library that can be used to  contain  small
 <external  files> as members.  More than one member can reside on
 a single disk track whereas, only one sequential data set is on a
 track, regardless of the size of the data set.  There is also one
 group library for each group that can be used by  any  member  of
 the group.



 LINE NUMBER

 A line number must be between 0.  and 99999.999.   Any  <symbolic
 line  number>  is  allowed.   Leading  and terminal blanks may be
 dropped.  The decimal point may be dropped when the number is  an
 integer.

        0065.000 = 65.000 = 65. = 65 = 63+2 =70-5



 LIST OPTIONS

 The UNNUMBERED option produces a listing containing only the text
 of the lines in the <range>.  The  NONUMBERED  and  TEXT  options
 function  similarly  to  UNNUMBERED  except  that the text is not
 moved to the left into the place usually  occupied  by  the  line
 numbers.   The  NOTEXT option suppresses printing of the text and
 produces a listing of only the line numbers of the lines  in  the
 specified  <range>.  The INTEGER option replaces the regular line
 numbers with eight digit integers.  The NOLIST option  suppresses
 listing when LIST is the default for the command.



 PROCESSING BREAK

 This  message  indicates  that  the  user  has  interrupted   the
 execution  of  a SHOW DSNAMES/DIRECTORY/CATALOG command before it
 was completed.  The results found before interruption are  listed
 but the list is not guaranteed to be complete.


 RANGE

 This is either an <explicit range> or an <associative range>.



1DEFINITION OF TERMS                                              VIII - 10



 RECOVERY

 Recovery  is  attempted  whenever  WYLBUR  crashes,  the   system
 crashes,  the  telephone  connection  is  broken, or a session is
 ended with SIGNON without clearing the <active file>  (See  CLEAR
 command.).   The <active file> is saved and cataloged as the data
 set ACTIVE.  The next time you sign on WYLBUR, do a  "USE  ACTIVE
 ON  CATLG"  to  recover your file.  User's are warned not to save
 any data set with the name ACTIVE since the system might use this
 name at any time and replace the old  data  set.   (See  SYSTEM?,
 DSNAME, and the USE command.)

 There may be several files named  ACTIVE,  each  on  a  different
 volume,  but  only the most recently saved will be cataloged.  If
 some of your space allocation cannot be accounted for, do a

                   SHOW  DSNAMES  LIKE  ACTIVE

 for different volumes until you find all of them.


 NEXT

 NEXT is a  <symbolic  line  number>  which  refers  to  the  line
 immediately   following  the  <current  line  pointer>.   If  the
 <current line pointer> has not been set or if the  <current  line
 pointer> points to the last line in a file, NEXT does not exist.



 PREVIOUS

 PREVIOUS is the <symbolic line number> of  the  line  immediately
 preceding the <current line pointer>.  PREVIOUS is not set if the
 <current  line  pointer>  is  not  set,  or  if the <current line
 pointer> points to the first line in a file.



 Sign-On Procedure

 This is the dialogue between the user and  the  system  which  is
 used to determine the project number to which the session will be
 charged,  as well as the user and group of the person signing on.
 (See Section I.E for a detailed example.)



 STRING

 A set of characters within  quotes  which  may  include  imbedded
 blanks.   The  quotes may be either single (') or double ("), but
 must be consistant within a single string; for example, 'THIS' or
 "THIS" but not 'THIS".

1DEFINITION OF TERMS                                              VIII - 11



 SYMBOLIC LINE NUMBER

 There are 6 symbolic line numbers:

                FIRST        PREVIOUS
                LAST         CURRENT
                END          NEXT

 Symbolic line numbers are changing pointers to lines in  a  file.
 FIRST  and LAST are the first and last lines in a file and always
 exist even if the file consists of one line.  END points  to  the
 line number which would be added after the last line.  CURRENT is
 the  last  line edited, executed, or POINTed to; NEXT is the line
 immediately after CURRENT, and PREVIOUS is the  line  immediately
 before it.  Unless editing, collecting or executing has been done
 on the file, these three entities do not exist.



 SYSTEM?

 This is a  prompt  by  the  MILTEN  portion  of  the  CUCC/MILTEN
 terminal  processor.   Users should receive this prompt only when
 WYLBUR is down.  SHOW SYSTEMS  can  be  used  to  determine  when
 WYLBUR  is  available  again  which  will  probably be only a few
 minutes.  Once WYLBUR is available, you must type WYLBUR to enter
 it.  See <recovery> for a description of how to  recover  from  a
 WYLBUR or system crash.

 No WYLBUR commands (i.e.  USE, LIST, LOCATE, etc.) are  valid  in
 MILTEN.    However,   such   commands  as  TO,  SHOW  TIME,  SHOW
 LINE|LINES, SHOW  COUNT,  LOGON,  and  LOGOFF  are  valid  MILTEN
 commands.

 This prompt may also be given by TPMON.  You may type any of  the
 following in response to this SYSTEM? prompt:

    1. The name of a TPMON system
       For WYLBUR you may type either WYLBUR or MILTEN.

    2. ? (CR)
       TPMON replies with the name of available systems.

    3. # (CR)
       This will terminate the session.




 VOLUME

 The term volume refers to the name of the storage devices used to
 hold both WYLBUR data sets and  other  system  data  sets.   SHOW
 VOLUMES  can  always  be  used  to obtain the valid names for the
 current session.  CATLG may be used to  reference  any  cataloged
 data set in most commands.
1APPENDIX A  SHORT FORMS                                          APP.A - 1


 Appendix A    SHORT FORMS OF WYLBUR COMMAND WORDS


 Most words used in WYLBUR can be abbreviated by typing  three  or
 more characters of the word.  Thus, UNC, UNCA, UNCAT, UNCATL, and
 UNCATLG are all recognized by WYLBUR as the keyword UNCATLG.  All
 characters  typed  (up  to  the  first eight) are checked so that
 UNCATLL or UNCATLGG  would  not  be  recognized  as  the  keyword
 UNCATLG.   In  addition, some words in WYLBUR commands have short
 forms  or  alternate  forms  that  do  not   obey   the   general
 abbreviation rule.

 The following list gives all the words used  in  WYLBUR  commands
 along  with  any  alternate  forms allowed for them.  Those words
 marked with an asterisk (*) cannot be abbreviated using the first
 three letters.  Those words marked with a  number  sign  (#)  may
 only  be abbreviated by their alternative when used as a command,
 not as an option.  If there is no asterisk or  number  sign,  the
 general abbreviation rule applies.



  WORD    ALTERNATE     WORD     ALTERNATE     WORD     ALTERNATE



 ACCOUNT               COPY                   HELP
 ACTIVE                COUNT      *           ID
 ADD                   CURRENT        *       IN
 ALIAS      *          CRT                    INDENT
 ALIGN                 DARKLIST               INSERT         I
 ALL                   DATE                   INTEGER
 AT                    DATED                  JOBNO
 BACK                  DECIDE                 JUSTIFY
 BIN            B      DELETE         D       KEYWORD
 BREAK                 DELTA                  LAST           L
 BY                    DIRECTORY              LENGTH
 CANCEL                DITTO                  LIKE
 CARD                  DOUBLE                 LINE
 CASE                  DSNAMES                LINES      #   LINS
 CATLG                 EDIT           E       LIST       #   L
 CC                    END                    LOAD
 CENTER                ESCAPE                 LOCATE
 CHANGE         CH     EVEN                   LOG
 CLEAN                 EXCLUDE                LOGOFF     *   SIGNOFF,LOGOUT
 CLEAR          CLR    EXEC       #   X       LOGON      *   SIGNON,LOGIN
 COLLECT        C      FASTLIST               LRECL
 COLUMNS               FIRST          F       MARKER
 COMBINE               FOR                    MC
 COMMENT    *   COMM   FORMS                  MEMBER
 COMPARE               FROM                   MERGE
 CONDENSE              GIVE                   MESSAGE        MSG
 COPIES                GROUP                  MODIFY         M
1SHORT FORMS                                                      APP.A - 2



  WORD    ALTERNATE     WORD     ALTERNATE     WORD     ALTERNATE



 MOVE                  PREFIX                 SUGGEST
 MSGOFF                PREVIOUS               SYSOUT
 MSGON                 PRINT                  SYSTEMS
 NAME                  PROMPT                 TABS
 NEXT                  PUNCH      *           TERMINAL       TERM
 NOBACK     *          PUT                    TERSE
 NOBREAK    *          READ                   TEXT
 NOCOUNT               RECATLG                THROUGH        THRU
 NODITTO               RELEASE                TIME
 NOEJECT               RENAME                 TIMEOUT    *
 NOLIST         N      REPLACE    #   R       TIMES
 NOLOG                 RESTORE                TO
 NONUMBER              RETRY                  TRACKS
 NOPOINT               RUN                    TRIPLE
 NOSET                 SAVE           S       TYPE
 NOTEXT                SC                     UNCATLG
 NOTIME                SCRATCH                UNDER
 NOTYPE                SEQFLD                 UNNUMBERED
 NOVERIFY              SET                    UPLOW
 NUMBER                SHOW                   UPPER
 NUMBERED              SINGLE         S       USE            U
 OFFLINE               SIZE                   USER
 ON                    SKIP                   USERS
 OVER                  SLOWLIST               USING
 PAGES                 SPACE                  VALUE
 PAUSE                 SQUASHED               VERBOSE
 PDS                   START                  VERIFY
 POINT          P      STRING                 VOLUME
                                              VOLUMES    *   VOLS


 You may use any of the valid forms of a word in a command.  There
 no periods after abbreviations or short forms.
1APPENDIX B  EDITING HINTS                                        APP.B - 1


 Appendix B   Editing Hints


    1. Making a Skeleton for a Utility Job or Form Letter

       The CHANGE command can be used to insert a name,  location,
       etc.,  at  predetermined places in a file.  For example, if
       $$ is put in each place in  the  text  where  the  changing
       information is to go, the following commands can be used to
       produce a form letter which contains personal references.

       COMMAND? CHANGE '$$' TO 'MR. ROBERT SMITH' IN ALL NOLIST (CR)

       In order to produce a clean copy of  the  letter,  place  a
       marker  character  at  the  end  of  each page, call for an
       UNNUMBERED listing, and change the  paper  before  striking
       carriage  return.   In this example the character ¢ is used
       for a marker.

       COMMAND? LIST UNN MARKER=¢ CLEAN(CR)

    2. Duplicating Lines

       The COPY command can be used to duplicate single  lines  or
       groups of lines if the range being copied into is contained
       within  the  range  being copied.  Starting with the sample
       file

          1.  THIS IS THE LINE TO BE COPIED.

       The command

       COMMAND? COPY 1 (3) TO 2


       will produce the following:

          1.  THIS IS THE LINE TO BE COPIED.
          2.  THIS IS THE LINE TO BE COPIED.
          3.  THIS IS THE LINE TO BE COPIED.
          4.  THIS IS THE LINE TO BE COPIED.

1EDITING HINTS                                                    APP.B - 2


    3. Using Printer Control Characters.

       Certain symbols are recognized by  the  system  as  printer
       control  characters  if  they  occur  in  column one.  They
       control line-spacing  and  page  ejects.   Normally  WYLBUR
       inserts these characters for you when you do a LIST OFFLINE
       but  you  may  do this yourself.  Use the CC parameter with
       the LIST OFFLINE command to tell WYLBUR you  have  inserted
       these  control  characters.   Anything  in column 1 will be
       assumed to be a carriage control character,  and  column  1
       will  not  be  printed in the listing.  The listing will be
       numbered  unless  you  specify  UNNUMBERED  or  UNN.    The
       following  command  will give you a listing when you supply
       the printer control characters.

       COMMAND? LIST OFFLINE CC (CR)

       Some of the common printer  control  characters  and  their
       functions are:

          blank          single space - skip to next line
            1            page eject - skip to top of next page
            0            double space - skip to next line + 1
            -            triple space - skip to next line + 2
            +            no skip - used for underlining


       Page Boundaries

       WYLBUR will give you 60 lines per page.  If you want  fewer
       lines  on  a  page  or if you want a new page to start at a
       certain place, such as at the beginning of a paragraph, you
       must have a 1 in column 1 of the first line of  each  page.
       Every  other  line  must  also  have  a  control character,
       perhaps a blank for single spacing, in  column  1.   Rather
       than  space over to column 2 when typing each line, you can
       insert the blanks this way.

       COMMAND? CH 1 TO ' ' IN ¬'1' 1 NOLIST (CR)

       This command inserts a blank in column 1 of every line that
       does not have a  1  (¬'1')  in  column  1.   The  blank  is
       actually  inserted  and  the  text is moved over one column
       rather than replacing column 1 with a  blank.   The  blanks
       will  produce  single spaced lines in the printed copy.  To
       list this active file:

       COMMAND? LIST OFFLINE CC (CR)

       Double and Triple Spacing

       If you want your file to  have  double  or  triple  spacing
       throughout, use the DOUBLE or TRIPLE option.

       COMMAND? LIST OFF TRIPLE (CR)

1EDITING HINTS                                                    APP.B - 3


       You might want a combination  of  spacing  such  as  single
       spaced  text  and triple spaces between paragraphs.  To get
       this, insert a 1 in column 1 wherever you want a new  page;
       insert  a - in column 1 wherever you start a new paragraph.
       Then follow this procedure.

          COMMAND? CH 1 TO ' ' NOLIST (CR)
          COMMAND? CH ' 1' 1 TO '1' NOLIST (CR)
          COMMAND? CH ' -' 1 TO '-' NOLIST (CR)
          COMMAND? LIST OFFLINE CC (CR)

       The first command inserts a blank  in  column  1  of  every
       line.   Thus all lines which had a 1 in column 1 now have a
       blank and a 1 in columns  1  and  2.   The  second  command
       changes  each  line with a blank and a 1 in columns 1 and 2
       to a 1 column 1 (deleting the new column  2).   The  second
       command  does a similar switch for lines with a blank and a
       - in columns 1 and 2.

       Underlining

       To do underlining with printer control characters takes two
       lines for each line that has underlined text in it.

           This is an example of underlining
          +           _______

       The + in column 1 of the second line means not  to  skip  a
       line so it overprints and produces a line in which the word
       example is underlined.  To get a listing with underlining,

          COMMAND? CH 1 TO ' ' NOLIST (CR)
          COMMAND? CH ' +' 1 TO '+' NOLIST (CR)
          COMMAND? LIST OFFLINE CC (CR)

    4. How to Insert Page Numbers.

       You may insert lines containing a 1 in column 1 and a  page
       number  near the right margin throughout the text.  Or, you
       may insert lines containing only a 1 in column  1  wherever
       you want a new page.  Then you may insert page numbers this
       way.

          COMMAND? CH 68 TO 'PAGE' IN '1' 1 NOL (CR)
          COMMAND? CH 73 TO 1+1 IN '1' 1 NOL (CR)
1EDITING HINTS                                                    APP.B - 4


       The first command will insert the character  string  'PAGE'
       into  columns  68/71  of every line which contains a '1' in
       column 1.  The second command will insert a '1'  in  column
       73 of the first line which contains a '1' in column 1.  The
       replacement value is incremented by one so that WYLBUR will
       insert  a  '2'  in  the second line which contains a '1' in
       column 1 and so on.   Notice  that  page  number  10  would
       occuppy columns 73 and 74.  Page number 100 would be placed
       in   columns  73, 74,  and  75.   Therefore,  if  you  were
       renumbering the pages of  an  already  existing  file,  you
       would use the following command:

              COMMAND? CH 73/75 TO 1+1 IN '1' 1 NOL (CR)

    5. Creating Columns of Information

       The USING parameter on the CHANGE command  is  very  useful
       for  creating  tables  or  columns  of information.  Let us
       assume that the following lines exist in a file:

          1.  ABC
          2.  DEF
          3.  $1100
          4.  $ 620

       COMMAND? CH 30 IN 1/2 USING 3/4  NOL (CR)
       COMMAND? DEL 3/4 (CR)
       COMMAND? LIST
          1.  ABC                      $1100
          2.  DEF                      $ 620

       You  may  subsequently  make  modifications  to  the  first
       columns without destroying the later columns by  using  the
       fill column of the CHANGE command.

       COMMAND? CH 'ABC' //30 TO 'JONES' (CR)
       COMMAND? CH 'DEF' //30 TO 'SMYTHE' NOL (CR)
       COMMAND? LIST (CR)
          1.  JONES                    $1100
          2.  SMYTHE                   $ 620
1APPENDIX C - USER/SYSTEM NEWS                                    APP.C - 1


 APPENDIX C - User/System News

 1.  User Suggestions

 You may register a suggestion or complaint by creating an  active
 file with your suggestion and then giving the command SUGGEST.  A
 range  of up to 50 lines may be specified in the command.  If the
 active file contains more than  50  lines  and  a  range  is  not
 specified  in the command, the first 50 lines of the file will be
 submitted as the suggestion.


       COMMAND? CLEAR TEXT (CR)
       COMMAND? COL (CR)
         1.   ? WYLBUR Editing time should be more expensive. (CR)
         2.   ?  John Doe Comp Group (CR)
         3.   ? (ATTN)***
       COMMAND? SUGGEST (CR)

       JOB 8193,ABCEB500 SUBMITTED

 The last line is printed because an off-line listing will be done.


 2.  News from WYLBUR

 The file WYL.CU.CTR.LIB(NEWS) is  a  PDS  member  which  contains
 information  on  changes  and  additions  that  have been made to
 WYLBUR subsequent to the printing of this manual, as well as news
 of general interest concerning the Computer Center.

 To look at it, use the following command:

       COMMAND? EXE FRO WYL.CU.CTR.LIB(NEWS) CLR (CR)

 You should consult the NEWS file often in order  to  keep  up  to
 date on modifications to the system.

1INDEX                                                             INDEX - 1
-BOLDFACE type indicates a primary reference for the command.
+BOLDFACE
+BOLDFACE

0µ                   µ                     µ                     µ
1INDEX                                                             INDEX - 2
0µ                   µ                     µ                     µ
1INDEX                                                             INDEX - 3
0µ                   µ                     µ                     µ
1INDEX                                                             INDEX - 4
0µ                   µ                     µ                     µ
1INDEX                                                             INDEX - 5
0µ                   µ                     µ                     µ
1INDEX                                                             INDEX - 6
0µ                   µ                     µ                     µ
1INDEX                                                             INDEX - 7
0µ                   µ                     µ                     µ
1
-
0ACCOUNT-> IV.D-8,
+ACCOUNT
+ACCOUNT
     VI.A-2, 4, B-1,
     VII.-7, 13, 18,
     27, 39, APP.A-1
0ACTIVE-> I.E-1, G-2,
+ACTIVE
+ACTIVE
     IV.A-1, C-1,
     D-9, 10, VI.A-1,
     VII.-5, 6, 10,
     15, 16, VIII.-1,
     10, APP.A-1
0ALIAS-> VII.-20,
+ALIAS
+ALIAS
     APP.A-1
0ALIGN-> III.A-1,
+ALIGN
+ALIGN
     E-1, 2, 3, 4,
+            3
+            3
     5, VII.-2, 12,
+       VII.-2
+       VII.-2
     37, APP.A-1
0ALL-> II.D-4, 5,
+ALL
+ALL
     III.A-1, 2, 3,
     4, B-1, C-1, 2,
     3, 5, 6, 7, 8,
     9, 10, D-5, 6,
     E-1, 2, 3, 4, 5,
     G-2, IV.D-6,
     VII.-9, 33, 34,
     36, VIII.-7, 8 ,
     APP.A-1, B-1
0ASSOCIATIVE->
+ASSOCIATIVE
+ASSOCIATIVE
     III.A-3, 4, B-1,
     4, D-4, 8,
     VIII.-1, 2
0AT-> II.A-3, 4,
+AT
+AT
     III.G-1, VI.C-2,
     VII.-19, APP.A-1
0
-
0BACK-> I.D-1, 2,
+BACK
+BACK
     VII.-24,
     VIII.-2, APP.A-1
0BIN-> VI.A-1, 3, 4,
+BIN
+BIN
     B-1, VII.-7, 13,
     18, APP.A-1
0BREAK-> I.F-2,
+BREAK
+BREAK
     VII.-25,
     VIII.-7, 9,
     APP.A-1
0BY-> II.A-5, B-2,
+BY
+BY
     E-1, III.D-3, 4,
     5, 6, 8, VI.A-2,
     C-2, VII.-6, 8,
     17, 19, APP.A-1
0
-
0CANCEL-> VI.C-2,
+CANCEL
+CANCEL
     E-1, F-2,
     VII.-3, 11, 15,
+    VII.-3
+    VII.-3
     20, APP.A-1
0CARD-> IV.A-3,
+CARD
+CARD
     VI.C-2, G-1,
     VII.-22, 35, 40,
     41, APP.A-1
0CASE-> II.A-1, 2,
+CASE
+CASE
     VII.-31, APP.A-1
0CATALOG-> VIII.-9
+CATALOG
+CATALOG
0CATLG-> I.G-2,
+CATLG
+CATLG
     IV.A-3, 4, 5,
     B-1, 2, C-1,
     D-4, 7, 9,
     VII.-1, 3, 15,
+            3
+            3
     20, 22, 23, 24,
     32, 33, 34, 40,
     VIII.-10, 11,
     APP.A-1
0CENTER-> III.A-1,
+CENTER
+CENTER
     F-1, VII.-3,
+    F-1  VII.-3
+    F-1  VII.-3
     APP.A-1
0CC-> III.C-3, 4,
+CC
+CC
     VI.A-2, 4,
     VII.-13, 14,
     APP.A-1, B-2, 3
0CHANGE-> II.D-3,
+CHANGE
+CHANGE
     III.A-1, C-1,
+             C-1
+             C-1
     2, 3, 4, 5, 6,
     7, 8, 9, 10,
     G-6, VII.-4, 5,
+         VII.-4
+         VII.-4
     VIII.-3, 8,
     APP.A-1, B-1, 4
0CLEAN-> II.D-3,
+CLEAN
+CLEAN
     VII.-13, 25, 39,
     APP.A-1, B-1
0CLEAR-> I.G-2,
+CLEAR
+CLEAR
     II.A-2, 5, B-2,
     IV.A-1, C-1,
     D-3, VII.-5, 6,
+         VII.-5
+         VII.-5
     10, 15, 16, 19,
     21, 22, 40,
     VIII.-10,
     APP.A-1, C-1
0COLLECT-> I.C-1, 2,
+COLLECT
+COLLECT
     3, D-1, 2, 3,
     E-1, II.A-1, 5,
+                 5
+                 5
     6, B-1, 2, C-1,
     D-3, III.B-2, 3,
     D-6, E-1,
     IV.A-1, VII.-6,
+            VII.-6
+            VII.-6
     12, VIII.-2, 3,
     APP.  A-1
0COLUMNS-> III.C-10,
+COLUMNS
+COLUMNS
     D-5, VI.A-4,
     VII.-5, 7, 13,
     33, APP.A-1
0COMBINE-> III.D-7,
+COMBINE
+COMBINE
     VII.-8, 9,
     APP.A-1
0COMMENT-> VII.-1,
+COMMENT
+COMMENT
     6, VIII.-3,
+    6
+    6
     APP.A-1
0COMPARE-> VII.-1,
+COMPARE
+COMPARE
     7, APP.A-1
+    7
+    7
0CONDENSE-> IV.A-5,
+CONDENSE
+CONDENSE
     D-8, 9, VI.D-1,
     VII.-7, 8, 36,
+    VII.-7
+    VII.-7
     APP.A-1
0COPIES-> VI.A-3, 4,
+COPIES
+COPIES
     B-1, VII.-13,
     14, APP.A-1
0COPY-> III.A-1, D-1,
+COPY
+COPY
     2, 3, 4, 5, 6,
     7, 8, VII.-8,
+          VII.-8
+          VII.-8
     17, 32, VIII.-3,
     8, APP.A-1, B-1
0COUNT-> VII.-33, 38,
+COUNT
+COUNT
     VIII.-11,
     APP.A-1
0CRT-> I.-1, C-3,
+CRT
+CRT
     F-1, 3, II.A-4,
     VI.A-1, VII.-16,
     25, 26, APP.A-1
0CURRENT-> II.C-1, 2,
+CURRENT
+CURRENT
     III.A-2,
     VII.-26, 38,
     VIII.-3, 4, 11,
     APP.A-1
0
-
0DARKLIST-> VI.A-3,
+DARKLIST
+DARKLIST
     4, VII.-13, 14,
     APP.A-1
0DATE-> VII.-33,
+DATE
+DATE
     APP.A-1
0DATED-> IV.D-10,
+DATED
+DATED
     VII.-34, 35,
     APP.A-1
0DECIDE-> VII.-1, 9,
+DECIDE
+DECIDE
     APP.A-1
0DELETE-> II.C-2,
+DELETE
+DELETE
     D-3, III.A-1, 4,
     B-1, 2, 5,
     VII.-9, 16, 17,
+    VII.-9
+    VII.-9
     19, APP.A-1
0DELTA-> II.A-5, B-1,
+DELTA
+DELTA
     C-1, 2, E-1, 2,
     III.B-3, D-1, 3,
     4, 6, 7, 8, E-2,
     3, VII.-6, 8,
     17, 19, 26, 41,
     VIII.-7, APP.A-1
0DEST-> VI.A-4, B-1,
+DEST
+DEST
     VII.-13, 14, 18,
     21
0DIRECTORY-> IV.D-5,
+DIRECTORY
+DIRECTORY
     VII.-19, 24, 32,
     33, 34, VIII.-9,
     APP.A-1
0DITTO-> III.B-2, 5,
+DITTO
+DITTO
     VII.-12, 20, 21,
     APP.A-1
0DOUBLE-> VII.-13,
+DOUBLE
+DOUBLE
     14, APP.A-1, B-2
0DSNAMES-> IV.B-1,
+DSNAMES
+DSNAMES
     C-1, D-5, 6, 7,
     9, 10, VII.-8,
     19, 24, 32, 33,
     34, 35, 36,
     VIII.-8, 9, 10,
     APP.A-1
0DSORG-> IV.D-10,
+DSORG
+DSORG
     VII.-35, VIII.-8
0
-
0EDIT-> I.D-2,
+EDIT
+EDIT
     III.A-1, G-1,
+    III.A-1
+    III.A-1
     2, 3, 4, 5, 6,
+       3  4
+       3  4
     9, 10, IV.A-3,
     4, VII.-8, 9,
+               9
+               9
     10, 22, 23, 35,
     40, 41, VIII.-2,
     3, 7, 8, APP.A-1
0END-> I.G-1, II.B-1,
+END
+END
     C-1, 2, III.D-1,
     2, 6, 8, VI.F-1,
     VII.-6, 8, 16,
     17, 19, 22, 23,
     38, 40, 41,
     VIII.-7, 11,
     APP.A-1
0ESCAPE-> VII.-26,
+ESCAPE
+ESCAPE
     APP.A-1
0EVEN-> III.E-4, 5,
+EVEN
+EVEN
     VII.-2, 12,
     APP.A-1
0EXCLUDE-> VII.-32,
+EXCLUDE
+EXCLUDE
     33, 34, 35,
     APP.A-1
0EXEC-> I.E-1,
+EXEC
+EXEC
     VI.A-4, B-1,
     C-2, F-1, 2,
     G-1, VII.-5, 6,
     8, 10, 13, 15,
+       10
+       10
     18, 19, 21, 26,
     27, 38, 39,
     VIII.-4, 7,
     APP.A-1
0EXPLICIT-> III.A-2,
+EXPLICIT
+EXPLICIT
     B-1, 2, 4, D-2,
     8, E-2, F-1,
     VIII.-7
0EXTERNAL-> III.D-6,
+EXTERNAL
+EXTERNAL
     7
0
-
0FASTLIST-> II.A-4,
+FASTLIST
+FASTLIST
     VII.-30, APP.A-1
0FILE-> II.A-1,
+FILE
+FILE
     III.B-2, D-1, 2,
     3, 4, 5, 7, 8,
     E-1, 3, 5,
     IV.B-1, D-1, 2,
     3, 5, 6, 9, 10,
     VII.-7, 34,
     VIII.-1, 7, 8
0FIRST-> II.C-1, 2,
+FIRST
+FIRST
     III.A-2, F-1,
     VII.-38,
     VIII.-7, 8, 11,
     APP.A-1
0FOR-> VII.-32,
+FOR
+FOR
     VIII.-8, APP.A-1
0FORMS-> VI.A-4,
+FORMS
+FORMS
     VII.-13, 14,
     APP.A-1
0FROM-> III.D-6, 7,
+FROM
+FROM
     IV.B-2, VI.E-1,
     F-2, VII.-8, 10,
     15, 32, 33, 34,
     35, APP.A-1
0
-
0GIVE-> VII.-1, 11,
+GIVE
+GIVE
     APP.A-1
0GROUP-> I.F-2, 3, 4,
+GROUP
+GROUP
     IV.A-2, D-3, 6,
     VI.F-2, VII.-3,
     5, 7, 8, 10, 14,
     19, 20, 22, 24,
     27, 28, 32, 33,
     34, 35, 38, 39,
     40, VIII.-5, 6,
     AP P.A-1
0
-
0HELP-> VII.-1, 11,
+HELP
+HELP
     APP.A-1
0
-
0ID-> I.A-1, F-3,
+ID
+ID
     IV.A-1, 2, D-1,
     2, 3, 5, 6,
     VI.A-4, B-1,
     C-1, D-1, E-1,
     VII.-3, 7, 13,
     14, 18, 21, 31,
     36, VIII.-4, 5,
     6, APP.A-1
0IN-> I.D-2, II.A-1,
+IN
+IN
     D-5, III.A-3, 4,
     B-1, 2, C-1, 2,
     3, 5, 6, 7, 8,
     9, 10, D-4, 5,
     8, E-1, 2, 3, 5,
     G-8, IV.A-5,
     D-6, 7, VI.D-1,
     G-1, VII .-4, 5,
     7, 9, 33, 34,
     VIII.-1, 2,
     APP.A-1, B-1, 2,
     3, 4
0INDENT-> III.E-2, 4,
+INDENT
+INDENT
     5, F-1, VII.-2,
     3, 12, APP.A-1
0INSERT-> II.C-2,
+INSERT
+INSERT
     D-3, III.A-1,
     B-1, 2, 3, 4, 5,
     D-6, VII.-12,
+         VII.-12
+         VII.-12
     16, APP.A-1
0INTEGER-> III.A-4,
+INTEGER
+INTEGER
     IV.A-4, VI.B-1,
     VII.-6, 18, 21,
     22, VIII.-9,
     APP.A-1
0
-
0JOBNO-> VI.C-1,
+JOBNO
+JOBNO
     VII.-3, 14, 32,
     36, APP.A-1
0JUSTIFY-> III.A-1,
+JUSTIFY
+JUSTIFY
     E-1, 2, 4, 5,
     VII.-12,
+    VII.-12
+    VII.-12
     VIII.-3, APP.A-1
0
-
0KEYWORD-> I.F-2, 3,
+KEYWORD
+KEYWORD
     VII.-27, APP.A-1
0
-
0LAST-> II.C-1, 2,
+LAST
+LAST
     E-1, 2, III.A-2,
     B-1, 4, C-6,
     D-1, 2, 3, 4, 5,
     6, 7, 8, E-2,
     VII.-17, 21, 38,
     VIII.-7, 8, 11,
     APP.A-1
0LENGTH-> II.A-6,
+LENGTH
+LENGTH
     III.E-1, 2, 3,
     4, 5, F-1,
     VII.-2, 3, 12,
     28, 37, APP.A-1
0LIKE-> IV.D-5, 6, 7,
+LIKE
+LIKE
     9, VII.-8, 34,
     35, 36,
     VIII.-10,
     APP.A-1
0LINE-> I.D-2, F-2,
+LINE
+LINE
     II.A-6, B-1,
     C-2, E-1, 2,
     III.B-2, 4, C-3,
     5, 9, 10, D-1,
     2, 3, 4, 5, 6,
     7, 8, G-1, 2, 3,
     5, 6, 7, 8, 9,
     10, VI.C-2, VII
     .-4, 5, 7, 36,
     37, 39, VIII.-3,
     9, 11, APP.A-1,
     B-1
0LINES-> VII.-22, 36,
+LINES
+LINES
     37, 38,
     VIII.-11,
     APP.A-1
0LIST-> I.C-1, 2,
+LIST
+LIST
     II.A-1, B-1,
     C-2, D-1, 2, 3,
+         D-1
+         D-1
     4, 5, III.A-1,
     2, 4, B-1, 2, 4,
     5, D-1, 2, 3, 4,
     5, 7, 8, E-1, 2,
     3, 5, F-1,
     VI.A-1, 2, 3, 4,
     B-1, C-2, D-1,
     F-1, VII.-4, 6,
     9, 12, 13, 17,
+           13
+           13
     18, 21, 25, 31,
     33, 36, 39,
     VIII.-8, 9, 11,
     APP.A-1, B-1, 2,
     3, 4
0LOAD-> III.A-1,
+LOAD
+LOAD
     VII.-15,
+    VII.-15
+    VII.-15
     VIII.-8, APP.A-1
0LOCATE-> VI.A-1,
+LOCATE
+LOCATE
     D-1, VII.-15,
+         VII.-15
+         VII.-15
     VIII.-11,
     APP.A-1
0LOG-> VII.-6, 10,
+LOG
+LOG
     11, 15, 26, 27,
     APP.A-1
0LOGOFF-> I.G-1,
+LOGOFF
+LOGOFF
     VII.-15,
+    VII.-15
+    VII.-15
     VIII.-11,
     APP.A-1
0LOGON-> I.F-1, 2, 3,
+LOGON
+LOGON
     4, VII.-16, 31,
+       VII.-16
+       VII.-16
     VIII.-11,
     APP.A-1
0LRECL-> IV.A-3, 4,
+LRECL
+LRECL
     D-4, 10, VI.F-1,
     VII.-22, 23, 35,
     40, 41, APP.A-1
0
-
0MARKER-> II.D-2, 3,
+MARKER
+MARKER
     III.E-1, 2, 3,
     5, VII.-2, 12,
     13, APP.A-1, B-1
0MC-> VI.A-2, 4,
+MC
+MC
     VII.-13, 14,
     APP.A-1
0MEMBER-> IV.A-5,
+MEMBER
+MEMBER
     B-2, 3, D-4,
     VI.G-1, VII.-5,
     8, 10, 28, 34,
     35, VIII.-5, 6,
     APP.A-1
0MERGE-> II.B-2,
+MERGE
+MERGE
     III.D-4, 7, 8,
     VII.-6, 8, 9,
     17, APP.A-1
0MESSAGE-> VII.-36,
+MESSAGE
+MESSAGE
     APP.A-1
0MILTEN-> VII.-38,
+MILTEN
+MILTEN
     VIII.-11
0MODIFY-> I.D-2,
+MODIFY
+MODIFY
     III.A-1, G-1, 4,
     5, 6, 7, 8, 9,
+    5
+    5
     10, VII.-16,
+    10  VII.-16
+    10  VII.-16
     VIII.-2, 3, 8,
     APP.A-1
0MOVE-> III.A-1, D-1,
+MOVE
+MOVE
     7, 8, VII.-17,
+          VII.-17
+          VII.-17
     VIII.-3, APP.A-2
0MSGOFF-> VII.-28,
+MSGOFF
+MSGOFF
     39, APP.A-2
0MSGON-> VII.-28,
+MSGON
+MSGON
     APP.A-2
0
-
0NAME-> IV.D-3,
+NAME
+NAME
     VI.D-1, G-1,
     VII.-5, 27, 28,
     29, VIII.-6,
     APP.A-2
0NEXT-> II.A-6, C-1,
+NEXT
+NEXT
     2, III.A-2, G-3,
     VI.C-1, VII.-36,
     38, VIII.-4, 10,
     11, APP.A-2
0NOBACK-> VII.-24,
+NOBACK
+NOBACK
     APP.A-2
0NOBREAK-> I.G-1,
+NOBREAK
+NOBREAK
     VII.-25, APP.A-2
0NOCOUNT-> VII.-37,
+NOCOUNT
+NOCOUNT
     APP.A-2
0NODITTO-> VII.-12,
+NODITTO
+NODITTO
     APP.A-2
0NOEJECT-> VI.A-3, 4,
+NOEJECT
+NOEJECT
     VII.-13, 14,
     APP.A-2
0NOLIST-> II.D-3,
+NOLIST
+NOLIST
     III.C-1, G-2, 3,
     9, VII.-7, 9,
     16, 18, VIII.-9,
     APP.A-2, B-1, 2,
     3
0NOLOG-> VII.-6, 10,
+NOLOG
+NOLOG
     11, 15, 26, 27,
     VIII.-3, APP.A-2
0NONUMBER-> APP.A-2
+NONUMBER
+NONUMBER
0NOPOINT-> VII.-22,
+NOPOINT
+NOPOINT
     23, 40, APP.A-2
0NOSET-> VII.-3, 8,
+NOSET
+NOSET
     10, 15, 22, 24,
     32, 33, 34, 40,
     41, APP.A-2
0NOTEXT-> II.D-3, 5,
+NOTEXT
+NOTEXT
     VII.-6, 21,
     VIII.-9, APP.A-2
0NOTIME-> I.G-1,
+NOTIME
+NOTIME
     VII.-29, 37,
     APP.A-2
0NOTYPE-> VII.-32,
+NOTYPE
+NOTYPE
     33, APP.A-2
0NOVERIFY-> II.A-4,
+NOVERIFY
+NOVERIFY
     VII.-30, APP.A-2
0NUMBER-> I.F-1,
+NUMBER
+NUMBER
     II.C-2, E-1, 2,
+            E-1
+            E-1
     III.A-1, E-3,
     VII.-2, 12, 17,
+                17
+                17
     VIII.-8, 9, 11,
     APP.A-2
0NUMBERED-> IV.A-4,
+NUMBERED
+NUMBERED
     VI.B-1, C-2,
     VII.-18, 21, 22,
     23, 40, 41,
     APP.A-2
0
-
0OFFLINE-> VI.A-1, 2,
+OFFLINE
+OFFLINE
     3, 4, B-1, D-1,
     VII.-13, 14, 18,
     21, 36, APP.A-2,
     B-2, 3
0ON-> I.G-2, III.D-6,
+ON
+ON
     7, IV.A-1, 2, 3,
     4, 5, B-1, 2, 3,
     C-1, D-1, 2, 3,
     4, 5, 6, 7, 8,
     9, 10, VI.F-1,
     2, G-1, VII.-3,
     7, 8, 10, 15,
     19, 20, 2 2, 23,
     24, 32, 33, 34,
     38, 40,
     VIII.-10,
     APP.A-2
0OVER-> VII.-37,
+OVER
+OVER
     APP.A-2
0
-
0PAGES-> VII.-37,
+PAGES
+PAGES
     VIII.-7, APP.A-2
0PAUSE-> VII.-10, 11,
+PAUSE
+PAUSE
     15, 19, APP.A-2
0PDS-> IV.A-1, 5,
+PDS
+PDS
     B-1, 2, 3, C-1,
     D-1, 2, 3, 4, 5,
     6, 7, 8, 9,
     VII.-7, 20, 22,
     23, 24, 33, 34,
     VIII.-4, 5, 9,
     APP.A-2, C-1
0POINT-> III.A-1,
+POINT
+POINT
     VII.-1, 18,
+            18
+            18
     VIII.-3, 4, 8,
     APP.A-2
0PREFIX-> IV.D-7,
+PREFIX
+PREFIX
     VII.-5, 8, 10,
     28, 29, 34, 35,
     VIII.-4, 5, 6,
     APP.A-2
0PREVIOUS-> II.C-1,
+PREVIOUS
+PREVIOUS
     2, III.A-2,
     VII.-38,
     VIII.-4, 10, 11,
     APP.A-2
0PRINT-> IV.A-3,
+PRINT
+PRINT
     VI.D-1, E-1,
     VII.-3, 20, 22,
     35, 40, 41,
     APP.A-2
0PROMPT-> VII.-19,
+PROMPT
+PROMPT
     APP.A-2
0PUNCH-> III.A-1,
+PUNCH
+PUNCH
     VI.A-1, B-1,
     D-1, VII.-18,
+         VII.-18
+         VII.-18
     36, VIII.-8,
     APP.A-2
0PUT-> I.D-2, VII.-1,
+PUT
+PUT
     19, APP.A-2
+    19
+    19
0
-
0READ-> VI.F-1,
+READ
+READ
     VII.-19,
+    VII.-19
+    VII.-19
     APP.A-2
0RECATLG-> IV.A-5,
+RECATLG
+RECATLG
     VII.-1, 19, 20,
+            19
+            19
     22, 23, APP.A-2
0RECOVERY-> VIII.-10
+RECOVERY
+RECOVERY
0RECFM-> IV.D-4, 10,
+RECFM
+RECFM
     VI.F-1, G-1,
     VII.-23, 35, 40,
     41, VIII.-8
0RELEASE-> VI.E-1,
+RELEASE
+RELEASE
     F-2, VII.-11,
     20, APP.A-2
+    20
+    20
0RENAME-> VII.-1,
+RENAME
+RENAME
     20, APP.A-2
+    20
+    20
0REPLACE-> II.A-6,
+REPLACE
+REPLACE
     D-3, III.A-1, 2,
     B-1, 3, 4, 5,
     D-5, G-1, 6,
     IV.A-3, 4, 5,
     D-9, 10,
     VII.-16, 20,
+             20
+             20
     21, 22, 23,
     VIII.-4, 5,
     APP.A-2
0RESTORE-> VII.-1,
+RESTORE
+RESTORE
     21, APP.A-2
+    21
+    21
0RETRY-> VII.-10, 27,
+RETRY
+RETRY
     VIII.-7, APP.A-2
0RUN-> III.A-1,
+RUN
+RUN
     VI.A-1, C-1, 2,
     D-1, VII.-3,
     21, 36, 37,
+    21
+    21
     VIII.-8, APP.A-2
0
-
0SAVE-> IV.A-1, 2, 3,
+SAVE
+SAVE
     4, 5, D-1, 2, 5,
     9, 10, VI.G-1,
     VII.-1, 7, 19,
     22, 23, 32, 41,
+    22
+    22
     VIII.-4, 5, 8,
     APP.A-2
0SC-> VI.A-3, 4, B-1,
+SC
+SC
     VII.-7, 13, 18,
     APP.A-2
0SCRATCH-> IV.A-1, 2,
+SCRATCH
+SCRATCH
     3, B-1, 2, 3,
     D-1, 2, VI.F-2,
     VII.-22, 23,
     24, 32, 33, 34,
+    24
+    24
     36, VIII.-5,
     APP.A-2
0SEQFLD-> VII.-22,
+SEQFLD
+SEQFLD
     23, 40, 41,
     APP.A-2
0SET-> I.C-3, D-1, 2,
+SET
+SET
     3, F-3, G-1,
     II.A-1, 2, 3, 4,
     5, 6, D-4,
+    5
+    5
     III.E-1, 2, 3,
     F-1, IV.A-3,
     B-1, 2, D-1, 2,
     3, 7, 10,
     VI.C-2, VII.-1,
     3, 5, 8, 10, 11,
     15, 19, 20, 22,
     24, 25, 26, 27,
     28, 29, 30, 31,
     32, 33, 34, 35,
     39, 40, 41,
     VIII.-2, 4, 5,
     6, APP.A-2
0SHOW-> I.F-2,
+SHOW
+SHOW
     II.A-1, 2, 4, 5,
     III.D-1, 2, 3,
     4, 5, 7, 8, E-1,
     3, 5, IV.A-2,
     B-1, 2, C-1,
     D-5, 6, 7, 8, 9,
     10, VI.C-1,
     VII.-1, 8, 10,
     19, 24, 25, 26,
     27, 28, 29, 30,
     31, 32, 33, 34,
     35, 36, 37, 38,
     39, VIII.-3, 4,
     5, 7, 8, 9, 10,
     11, APP.A-2
0SINGLE-> III.G-2, 3,
+SINGLE
+SINGLE
     4, 10, VI.G-1,
     VII.-9, 16,
     APP.A-2
0SIZE-> VII.-34, 37,
+SIZE
+SIZE
     VIII.-3, APP.A-2
0SKIP-> VII.-27, 30,
+SKIP
+SKIP
     34, 40, 41,
     APP.A-2
0SLOWLIST-> II.A-2,
+SLOWLIST
+SLOWLIST
     4, 5, VII.-30,
     APP.A-2
0SPACE-> III.E-4,
+SPACE
+SPACE
     IV.D-8, 9, 10,
     VI.F-1, VII.-2,
     8, 12, 19, 34,
     35, 36, 38,
     APP.A-2
0SQUASHED-> VI.A-4,
+SQUASHED
+SQUASHED
     VII.-13, APP.A-2
0START-> II.A-3, 4,
+START
+START
     VI.D-1, E-1,
     VII.-10, 15,
     APP.A-2
0STRING-> III.A-3,
+STRING
+STRING
     VIII.-10,
     APP.A-2
0SUGGEST-> III.A-1,
+SUGGEST
+SUGGEST
     VI.D-1, VII.-36,
     39, VIII.-8,
+    39
+    39
     APP.A-2, C-1
0SYSOUT-> APP.A-2
+SYSOUT
+SYSOUT
0SYSTEMS-> VII.-38,
+SYSTEMS
+SYSTEMS
     VIII.-11,
     APP.A-2
0
-
0TABS-> II.A-2, 3, 4,
+TABS
+TABS
     5, VII.-5, 30,
     APP.A-2
0TERMINAL-> I.F-2, 3,
+TERMINAL
+TERMINAL
     4, VII.-31,
     APP.A-2
0TERSE-> II.A-6,
+TERSE
+TERSE
     VII.-10, 15, 26,
     27, 31, APP.A-2
0TEXT-> III.B-5,
+TEXT
+TEXT
     IV.C-1, VII.-5,
     6, VIII.-6, 9,
     APP.A-2, C-1
0THROUGH-> APP.A-2
+THROUGH
+THROUGH
0TIME-> I.G-1,
+TIME
+TIME
     VII.-16, 38,
     VIII.-11,
     APP.A-2
0TIMEOUT-> VII.-29,
+TIMEOUT
+TIMEOUT
     APP.A-2
0TIMES-> II.E-2,
+TIMES
+TIMES
     VII.-17, APP.A-2
0TO-> I.D-2, F-2,
+TO
+TO
     II.A-1, III.C-1,
     2, 3, 4, 5, 6,
     7, 8, 9, D-1, 2,
     3, 4, 5, 6, 7,
     8, E-1, 2, 3, 5,
     G-1, 2, 3, 6, 7,
     9, 10, IV.B-3,
     D-8, VII.-4 , 5,
     8, 11, 16, 17,
     20, 25, 28, 32,
     33, 34, 36, 39,
+                39
+                39
     VIII.-11,
     APP.A-2, B-1, 2,
     3, 4
0TPMON-> I.F-1, 2, 4,
+TPMON
+TPMON
     G-1, VI.A-1, 2,
     VII.-13, 39,
     VIII.-11
0TRACKS-> VII.-34,
+TRACKS
+TRACKS
     38, APP.A-2
0TRIPLE-> VII.-13,
+TRIPLE
+TRIPLE
     14, APP.A-2, B-2
0TYPE-> II.A-1, 3, 4,
+TYPE
+TYPE
     IV.D-10,
     VII.-34, 35,
     VIII.-8, APP.A-2
0
-
0UNCATLG-> IV.A-5,
+UNCATLG
+UNCATLG
     B-2, 3, VII.-1,
     20, 22, 23, 24,
     32, 33, 39,
+            39
+            39
     APP.A-1, 2
0UNDER-> VII.-37,
+UNDER
+UNDER
     APP.A-2
0UNNUMBERED-> II.D-1,
+UNNUMBERED
+UNNUMBERED
     2, 3, 5, VI.A-2,
     B-1, VII.-6, 14,
     33, VIII.-9,
     APP.A-2, B-1, 2
0UPLOW-> I.C-3, D-3,
+UPLOW
+UPLOW
     II.A-1, 2, D-4,
     III.E-2, VI.A-3,
     4, C-2, VII.-13,
     14, 31, APP.A-2
0UPPER-> I.D-3,
+UPPER
+UPPER
     II.A-1, 2,
     VII.-31, APP.A-2
0USE-> I.G-2,
+USE
+USE
     III.E-1, 2, 3,
     5, IV.A-1, 2, 3,
     4, 5, B-2, C-1,
     D-1, 2, 3, 4, 5,
     6, 7, 9, 10,
     VI.F-1, 2, G-1,
     VII.-22, 28, 32,
     40, VIII.-4 ,
+    40
+    40
     5, 9, 10, 11,
     APP.A-2
0USER-> IV.B-2, 3,
+USER
+USER
     D-2, 3, 6,
     VI.C-2, D-1,
     E-1, F-2,
     VII.-3, 5, 7, 8,
     10, 14, 19, 20,
     22, 24, 28, 31,
     32, 33, 34, 35,
     38, 39, 40,
     VIII.-5 , 6,
     APP.A-2
0USERS-> VII.-36, 39,
+USERS
+USERS
     APP.A-2
0USING-> III.C-1, 9,
+USING
+USING
     10, VII.-5,
     APP.A-2, B-4
0
-
0VALUE-> VII.-32, 36,
+VALUE
+VALUE
     APP.A-2
0VERBOSE-> II.A-6,
+VERBOSE
+VERBOSE
     VII.-10, 15, 26,
     27, 31, APP.A-2
0VERIFY-> II.A-3, 4,
+VERIFY
+VERIFY
     VII.-30, APP.A-2
0VOLUME-> IV.A-2, 3,
+VOLUME
+VOLUME
     5, B-1, C-1,
     D-1, 3, 4,
     VII.-20, 22, 24,
     32, 34, 40,
     VIII.-11,
     APP.A-2
0VOLUMES-> IV.A-2,
+VOLUMES
+VOLUMES
     D-5, VII.-32,
     VIII.-11,
     APP.A-2
1











            YOUR COMMENTS PLEASE.....


            CUCC/WYLBUR Manual

            Your comments and  constructive  criticism  regarding
            this  manual  will  help us to improve it so that you
            may be better served.  Each comment will be  reviewed
            carefully.





            Thank you for your cooperation.

            Comments:
1











































./ ADD NAME=NEWS001
1
 WYLBUR Changes:

 The MODIFY command when requested with the
 UNNUMBER option will  no  longer  set  the
 NOLIST option.

 The  CHANGE  command  with  the  increment
 option is now fixed for starting  patterns
 that  contain alpahbetic characters before
 digits when  the  digit  characters  don't
 start  with  a  zero;  Blanks  embedded in
 digit patterns are no longer assumed to be
 zero  but  they are taken as the character
 ' '  --  only heading blanks before digits
 are taken as zero when necessary.

 The 'HELP ALL' command will give a listing
 of all available  WYLBUR  commands.   Note
 that  some  commands  that  are listed are
 only available to systems programmers.

 The 'DISPLAY' command is  a  variation  on
 the  'COMMENT'  command but unlike COMMENT
 the line displayed will not be  terminated
 with  a  CR/LF  sequence, i.e.  the cursor
 (or the print ball) will remain at the end
 of the printed line.

 COMMAND RETRY feature  is  now  available.
 The  last command that was typed to WYLBUR
 can be modified and reissued by  typing  a
 '$'  followed  by  a  CARRIAGE  RETURN, or
 ending a command line with a '$'  followed
 by an ATTENTION.  Since the new COMTEN was
 installed    WYLBUR   features   involving
 ATTENTION have not worked properly.  (e.g.
 Switching between EDIT and  MODIFY  modes,
 exiting from EDIT or MODIFY modes.) Please
 use  the CONTROL-Q sequence if you need to
 use ATTENTION for such uses,  as  well  as
 the   COMMAND  RETRY  feature.   When  you
 request COMMAND RETRY you will be prompted
 for changes on the command  you  had  last
 typed.    After   the   command  has  been
 modified when a CARRIAGE RETURN is hit the
 command will be reissued.  If an ATTENTION
 is hit the COMMAND RETRY request  will  be
 aborted.

./ ADD NAME=PREPROC
1           Specification of WYLBUR Pre-Processor Features


 The pre-processor features described below have been added to WYLBUR
 to enhance EXEC file processing  and  general  WYLBUR  capabilities.
 *** NOTE :  THESE FEATURES MAY BE REMOVED AT ANY TIME WITHOUT NOTICE
 IF IT IS FOUND THAT SYSTEM PERFORMANCE IS DEGRADED.


 I.  Extensions

     A.  SET and SHOW VALUE commands

         1.  SET VALUE <variable>=<EXP>

             a.  Expression syntax
                 <INTEGER>::= <1 to 9 digits>
                 <LINENO>::= <0 to 5 digits>.<1 to 3 digits> |
                             <1 to 5 digits>.
                 <STRING>::= '<0 to 255 characters>' |
                             "<0 to 255 characters>"
                 <CONSTANT>::= <STRING> | <LINENO> | <INTEGER>
                 <nVARIABLE>::= N<one digit>
                 <wVARIABLE>::= W<one digit>
                 <sVARIABLE>::= S<one digit>
                 <VARIABLE>::= <nVARIABLE> | <wVARIABLE> | <sVARIABLE>
                 <KEYWORD VAR>::= DELTA | FIRST | LAST | END | NEXT |
                                  PREVIOUS | CURRENT | * | LENGTH |
                                  PREFIX | USER | GROUP | MEMBER |
                                  VOLUME | DATE | ESCAPE | SKIP |
                                  PAGES | LINES | RANDOM | TERMINAL |
                                  CP | PROJECT
                 <PRIMARY>::= <VARIABLE> | <CONSTANT> | (<EXP>) |
                              <KEYWORD VAR> | -<PRIMARY> | +<PRIMARY>
                              <1 var function>(<EXP>) |
                              <2 var function>(<EXP>,<EXP>) |
                              <3 var function>(<EXP>,<EXP>,<EXP>)
                 <1 var function>::= SIZE | TDUMP | CORE | EXPAND |
                                     SCONVERT | NCONVERT | WCONVERT |
                                     SHEX | NHEX | WHEX | DISPLAY |
                                     REVERSE | TRIM | LTRIM | RTRIM |
                                     NEGATE
                 <2 var function>::= INDEX | RINDEX | LINDEX | TDUMP |
                                     XLATE | SUBSTR | LSUBSTR |
                                     RSUBSTR | VERIFY | LVERIFY |
                                     RVERIFY | PAD | RPAD | LPAD |
                                     TRIM | LTRIM | RTRIM | DUPL |
                                     XOR | AND | OR
                 <3 var function>::= XLATE | SUBSTR | RSUBSTR |
                                     LSUBSTR | PAD | RPAD | LPAD
                 <TERM>::= <PRIMARY> | <TERM> * <PRIMARY> |
                           <TERM>/<PRIMARY>
                 <AEXPR>::= <TERM> | <AEXPR>+<TERM> | <AEXPR>-<TERM>
                 <EXP>::= <AEXPR> | <EXP>||<AEXPR>
1                                            (2)

             b.  The expression syntax is given in a fairly  standard
                 BNF  grammar  format.   Expressions  have five basic
                 operators   and   three    levels    of    priority.
                 Multiplication (*) and division (/) have the highest
                 priority  and are performed first.  Addition (+) and
                 subtraction (-) have the next priority,  and  string
                 catenation  (||) is performed last.  Parentheses can
                 be  used  to  cause  any  other  desired  order   of
                 evaluation.

             c.  There are  only  30  variables  and  they  all  have
                 pre-declared  names  (N0-N9,  W0-W9  and S0-S9).  An
                 <nVARIABLE> can be set to any  <INTEGER>  value.   A
                 <wVARIABLE>  can  be  set to any <LINENO> value.  An
                 <sVARIABLE> can be set to any <STRING>  value.   The
                 syntax for <LINENO>, <INTEGER> and <STRING> is given
                 just  to show the range of values allowed.  <LINENO>
                 and <INTEGER> expressions can have results that  are
                 any  value representable by a full word.  The length
                 of a <STRING> must  be  less  than  256  characters.
                 Initially,  N0-N9  and W0-W9 are set to 0; S0-S9 are
                 set to NULL.

             d.  One or more blanks, commas, and/or equal  signs  can
                 be  used  between  arguments,  around operators, and
                 before and after parentheses.  They are normally not
                 required if the separation is  clear  without  them.
                 However,  a  restriction  on the use of multiply (*)
                 now requires one or more blanks,  commas,  or  equal
                 signs  on both sides of the * to be properly scanned
                 if the two arguments are constants or variables.

             e.  If CURRENT, NEXT, and/or PREVIOUS are  used  in  any
                 <EXP>  and  they are not set, they will be given the
                 value -1.000 instead of causing an EXEC break.

             f.  Mixed  types  are  always  converted   automatically
                 before the operation is done.  For mixed integer and
                 line  number operations, the integer is converted to
                 a  line  number.   For  arithmetic   operations   on
                 strings,  the string(s) are converted to integers or
                 line numbers first, and then normal integer to  line
                 number  conversion is done if needed.  The functions
                 SCONVERT, WCONVERT, and NCONVERT  are  available  to
                 force different conversion.  Each of these functions
                 takes  any  type  of  <EXP> as its argument and does
                 any  conversion  necessary  to   output   a   string
                 (SCONVERT),   line  number  (WCONVERT),  or  integer
                 (NCONVERT) value.
1                                            (3)

             g.  Whenever a line number  is  converted  to  a  string
                 (including  pre-processor substitutions), the string
                 is made to always contain a 3-digit fractional  part
                 even if the fractional part is '.000'.

             h.  SUBSTR performs a substring operation on the  string
                 specified   as   the  first  argument.   The  second
                 argument specifies  the  starting  position  of  the
                 substring,  and  the  third  argument  specifies the
                 length.  If the third argument is omitted, the  rest
                 of  the  string after the starting position is used.
                 The starting position and length need not be  within
                 the  string  operand  boundaries, but they cannot be
                 negative nor sum to more than 256.  The result  will
                 be a null string if the length operand is zero or if
                 the  length  is omitted and the starting position is
                 beyond the string operand.  The result will be blank
                 filled on the right to give a result that  is  equal
                 in  length  to the specified length operand whenever
                 the  string  operand  is  not  long enough.  LSUBSTR
                 function  is  identical to SUBSTR.  RSUBSTR function
                 does the same function as SUBSTR with the difference
                 that  the start position is specified from the right
                 hand side of the first argument.

             i.  VERIFY examines the two operand  strings  to  verify
                 that   each   character   in  the  first  string  is
                 represented in the second string.  If  this  is  the
                 case,  a  value  of  0 is the result; otherwise, the
                 value returned is the index of the  first  character
                 in  the  first string that is not represented in the
                 second  string.   LVERIFY  is  synonymous to VERIFY.
                 RVERIFY  performs  the  same  function as VERIFY but
                 the verification starts from the right hand side.

             j.  SIZE simply has a value equal to the length  of  the
                 argument string.

             k.  INDEX finds the  starting  position  of  the  string
                 specified  as  the second argument within the string
                 specified as the  first  argument.   If  the  second
                 string  is  not  in the first string, the value 0 is
                 returned.  LINDEX  is  synonymous  to INDEX.  RINDEX
                 returns the starting position of the first occurence
                 of the string specified as the second argument  from
                 scanning from the right hand side of the string.
1                                            (4)

             l.  DISPLAY converts the  argument  to  its  hexadecimal
                 representation.   If  the  argument is a string, the
                 result is a string of twice the length,  since  each
                 character  of the argument string is now represented
                 as   two   characters   which   are    its    EBCDIC
                 representation  in hex (e.g.  DISPLAY('A1')='C1F1').
                 If the argument is a line  number  or  integer,  the
                 result  is  an  eight character string consisting of
                 the hex digits for the  internal  representation  of
                 the     line     number     or     integer     (e.g.
                 DISPLAY(1.)=DISPLAY(1000)='000003E8').

             m.  SHEX  is  the  inverse  of  DISPLAY  with  a  string
                 argument.  The hex digits of the string argument are
                 packed to form the characters.  The resultant string
                 is half the length  of  the  argument  string  (e.g.
                 SHEX('C1F1')='A1').   This  function  can be used to
                 directly create any of the  256  possible  character
                 codes.   Most  of  these  codes  will  type  on  the
                 terminal  as  a  '%'  to  show  that  they  are  not
                 printable.   As an extension, the SHEX function also
                 allows integer arguments.  The result  is  a  string
                 that   strips  off  leading  X'00'  bytes  from  the
                 internal  representation  of   the   integer   (e.g.
                 SHEX(241)=SHEX('F1')='1').

             n.  NHEX is the  inverse  of  DISPLAY  with  an  integer
                 argument.   The  string of up to 8 hex characters is
                 packed to  form  an  internal  integer  value  (e.g.
                 NHEX('3E8')=1000).

             o.  WHEX is the inverse of DISPLAY with  a  line  number
                 argument.   The  string of up to 8 hex characters is
                 packed to form an internal line number  value  (e.g.
                 WHEX('3E8')=1.000).

             p.  The  PAD  function returns its first argument padded
                 to a length  specified  by the second argument.  The
                 fill character is specified with the third argument.
                 If there is no third argument the fill character  is
                 a space.  RPAD is synonymous to PAD.  LPAD pads  its
                 argument on the left hand side.

             q.  The  TRIM  and  RTRIM  functions  strip  their first
                 argument off of the trim character specified as  the
                 second argument on the left hand side. If the second
                 argument is omitted the trim character  is a  blank.
                 The LTRIM function does the same on the left side.

             r.  REVERSE function returns the reverse of its argument
1                                            (5)

             s.  DUPL function returns a string constructed by dupli-
                 cating its first argument as many times as specified
                 by its second argument.

             t.  XOR, AND, OR functions take two arguments and return
                 a string formed by the logical operation implied  by
                 the function name.  Shorter of the arguments is  ex-
                 panded on the right side by adding blanks.

             u.  NEGATE function returns a string formed by exclusive
                 or-ing its argument by X'FFFFFF...'.

             v.  TDUMP  function  returns the contents of main memory
                 in hex.   The  first  argument  specifies in hex the
                 the starting position of core dump.  The second  ar-
                 gument specifies the length of core dump. If  it  is
                 omitted 4 bytes of main memory is returned. The CORE
                 function takes only one integer argument which tells
                 the  start  address  of main memory, and returns the
                 contents of 4 bytes starting at that location as  an
                 integer.

             w.  XLATE function translates its first  argument  in  a
                 fashion specified by the second and third arguments.
                 The  characters  specified  in  the  second argument
                 are translated to the respective characters  in  the
                 third argument.  If  the  third  argument is shorter
                 than the second, the characters  specified  in   the
                 second one with no corresponding   translations  are
                 deleted.

             x.  The EXPAND function returns its argument expanded by
                 inserting blanks between each character.

             y.  Examples:  SET VALUE W0 FIRST+5 *(DELTA+W5)
                            SET VALUE S0 GROUP||'.'||USER||'.LIB'
                            SET VAL S0 EXPAND('HELLO')
                            SET VAL S5 XLATE('ABCDE','ABCD','XY')
                            SET VAL S0 TDUMP('000010',4)

         2.  SHOW VALUE <EXP>(s)

             a.  Print value(s) for EXP(s)

             b.  Multiple  expressions  are  always  separated  by  a
                 blank.    String   expressions   are   enclosed   in
                 apostrophes.

             c.  Examples:  SHOW VALUE W0+3,W4,S0||'ABC',N5-12
                            SHOW VALUE DISPLAY('ABCD')
1                                            (6)

     B.  READ command

         1.  READ VALUE <variable>(s)
             READ VALUE <variable>(s) PROMPT <string>

             a.  Prompt    for    value(s)     of     <sVARIABLE>(s),
                 <nVARIABLE>(s)   or   <wVARIABLE>(s).   Up  to  five
                 variables may be read by one READ VALUE command, and
                 the values are entered as <EXP>(s).

             b.  Strings must be entered with quotes.  The quotes are
                 stripped and any pairs of quotes within  the  string
                 will  become  a single quote.  Any needed conversion
                 of  the  <EXP>  to  the  type  of  the  variable  is
                 performed automatically.

             c.  If the input does not contain as many expressions as
                 variables  given  in  the  command,  the   remaining
                 <sVARIABLE>(s)  are  set  to  NULL and the remaining
                 <nVARIABLES>(s) or <wVARIABLE>(s) are set to 0.

             d.  If  the  PROMPT  option is used the string following
                 the keyword PROMPT is prompted, otherwise 'ENTER? '.

             e.  Examples:  READ VALUE W0,W2,S0
                            READ VALUE N8

         2.  READ STRING <sVARIABLE>
             READ STRING <sVARIABLE> PROMPT <string>

             a.  Prompt for value of sVARIABLE

             b.  The entire line entered is assigned to  the  string.
                 Quotes   become  simply  another  character  in  the
                 string.

             c.  If  the  PROMPT  option is used the string following
                 the keyword PROMPT is prompted, otherwise 'ENTER? '.

             d.  Example:  READ STRING S1

         3.  READ STRING <sVARIABLE> USING <lineno> COLUMNS <column(s)>

             a.  Set string variable to specified part of active file
                 line.

             b.  The USING and COLUMNS options are processed  in  the
                 same  way as these options are in the CHANGE command
                 except that only one line may be specified.

             c.  Examples:  READ STRING S1 USING LAST
                            READ STRING S3 USING 4 COLUMN 6
                            READ STRING S0 USING * COLUMNS 1/15
1                                            (7)

     C.  SET and SHOW ESCAPE commands

         1.  The pre-processor described in Section II below  uses  a
             character called the ESCAPE character in order to signal
             that  text substitution should be made in a command line
             before WYLBUR executes it.  If no ESCAPE  character  has
             been  set,  the  pre-processor  does not process command
             lines  before  execution.   The  ESCAPE   character   is
             initially  NULL so the pre-processor is never used until
             you set an ESCAPE character.

         2.  SET ESCAPE='<character>'

             a.  The pre-processor will use <character> as the ESCAPE
                 character.   Setting  the  ESCAPE  character  to  ''
                 (NULL) turns off the  pre-processor.   Normally  the
                 quotes  can  be  omitted.   However, some characters
                 such as (),;'"= blank and  the  lower  case  letters
                 must  be  typed  in quotes if they are to be used as
                 the ESCAPE character.

             b.  Examples: SET ESCAPE '%'
                           SET ESCAPE %
                           SET ESCAPE ''
                           SET ESCAPE

         3.  The  current  value  of  the  ESCAPE  character  can  be
             displayed at any time by using the command SHOW ESCAPE.

     D.  SET and SHOW SKIP commands

         1.  The pre-processor also uses a  second  character  called
             the  SKIP  character  in  order  to  allow  you to enter
             command lines that will have an ESCAPE or SKIP character
             in it after the  pre-processor  has  finished  any  text
             substitution.    The   character   following   the  SKIP
             character in a  command  line  is  always  left  in  the
             command line by the pre-processor.  The initial value of
             the SKIP character is NULL.

         2.  SET SKIP='<character>'

             a.  The pre-processor will use <character> as  the  SKIP
                 character.   If  the  ESCAPE  character is NULL, the
                 SKIP character is ignored.  Quotes  can  be  omitted
                 for  the  SKIP  character  just  as  for  the ESCAPE
                 character.

             b.  Examples:  SET SKIP $
                            SET SKIP

         3.  The current value of the SKIP character can be displayed
             at any time by using the command SHOW SKIP.
1                                            (8)

     E.  SET and SHOW RESCAN COMMANDS

         1.  The pre-processor can be directed  to  rescan  any  text
             that it substitutes.  This could lead to infinite rescan
             if an error is made.  Therefore, a RESCAN limit has been
             defined  to force a stop so that infinite rescans cannot
             occur.  The RESCAN count is initially set to 5.

         2.  Rescans occur only when  a  pair  of  ESCAPE  characters
             prevents   the   scan   pointer  from  moving  over  the
             substituted value.  The rescan is begun at the start  of
             the  substituted text, not at the start of the line (See
             II.A.1 below).

         3.  SET RESCAN=<integer>

             a.  This sets the number of rescan substitutions allowed
                 before the pre-processor terminates the scan.

             b.  Example:  SET RESCAN 10

         4.  The current RESCAN limit can be displayed at any time by
             using the command SHOW RESCAN.

 II. Additions

     A.  Pre-processor

         1.  The pre-processor scans all WYLBUR commands, looking for
             either (or  both)  of  two  significant  user-controlled
             characters, the ESCAPE character and the SKIP character.
             If  neither  of  these  two characters is present in the
             text given to the  pre-processor,  no  change  is  made;
             otherwise, there are five cases (described in the format
             <text  into  the  pre-processor>  ->  <text  out  of the
             pre-processor>, where '%' is assumed to  be  the  ESCAPE
             character,  '$'  is assumed to be the SKIP character and
             '|' denotes the scan pointer):

             a.  |%<variable><text> -> <value>|<text>

             b.  |%(<EXP>)<text> -> <value>|<text>

             c.  |%%<variable><text> -> |<value><text>

             d.  |%%(<EXP>)<text> -> |<value><text>

             e.  |$<character><text> -> <character>|<text>

         2.  Any substitutions or changes to a command are made  each
             time  the command is executed.  If the command came from
             a file, the file is not changed;  only  a  copy  of  the
             command is changed and then executed.
1                                            (9)

         3.  All substitutions are completed before  the  command  is
             executed.    No  substitutions  are  made  or  evaluated
             dynamically as the command is executed.

         4.  The  TERSE/VERBOSE  modes  of  typed  input   and   EXEC
             processing  control whether the changed command is typed
             before execution.  If the mode is TERSE for  the  source
             of the command, the changed command is not typed.  If it
             is VERBOSE, the changed command is typed.

         5.  There is no overhead before  command  execution  if  the
             ESCAPE  character  is  null.   If  there  is  an  ESCAPE
             character,  a  translate and test is done on the command
             line to locate and process  any  ESCAPE  characters  and
             skip  characters.  If the text after an ESCAPE character
             is not a  preprocessor  variable  or  an  expression  in
             parentheses,  there will be no substitution and the text
             (including the ESCAPE character) will not be changed.

     B.  IF command

         1.  Syntax:  IF ( <EXP> <RELOP> <EXP> ) <command>

         2.  The relational operators (<RELOP>) allowed are  EQ,  NE,
             LT,  LE, GT, and GE which correspond to tests for equal,
             not equal, less than, less than or equal, greater  than,
             and greater than or equal.

         3.  The IF command evaluates the  relational  expression  in
             parentheses.   If  the  result  is  true,  the <command>
             following the parentheses is executed.  If the result is
             false, the <command> is skipped without inspection.

         4.  If CURRENT, NEXT, and/or PREVIOUS are  used  in  the  IF
             expressions,  no  EXEC  break will occur if they are not
             set or do not exist.  Instead, they will  be  given  the
             value  -1.000 to allow you to test whether they exist or
             not.

         5.  If  the  <EXP>s are both line numbers or both  integers,
             the values are compared algebraically.  If one is a line
             number  and  one is an integer, the integer is converted
             to  a  line  number  and   the   values   are   compared
             algebraically.    Otherwise,   a   logical   compare  is
             performed  after  converting both <EXP>s to  strings  of
             the  same  length  and/or by adding blanks to the end of
             the shorter string.

         6.  Examples:  IF (W0 LT 0) COPY 'X' IN 1/20 TO 3000
                        IF (W1 EQ LAST-5) EXEC 35
1                                            (10)

 III.Sample Session Showing Use of ESCAPE Character and Arithmetic

     ? show escape
     NO ESCAPE CHAR
     ? set value s0 'wyl001'
     ? show value s0
     'WYL001'
     ? show space on &s0
     &S0   : INVALID VOLUME.
     ? set escape &
     ? show space on &s0
     WYL001
     1193 TRKS, 143 EXTENTS
     ? show escape
     & - ESCAPE CHAR
     ? set verbose
     COMMAND? show space on &s0
     SHOW SPACE ON WYL001
     WYL001
     1193 TRKS, 143 EXTENTS
     COMMAND? set escape
     COMMAND? show space on &s0
     &S0   : INVALID VOLUME
     COMMAND? show escape
     NO ESCAPE CHAR
     COMMAND? show value 10/3 10./3 nconvert(10./3)
     3 3.333 3
     COMMAND? show value 1 * 1, .01 * .01, 1/2, 1./2
     1 0.000 0 0.500
1                                            (11)

 IV. Exec File Examples

     A.  WYL.CU.CTR.LIB(CHNGESTR)

         1  ; SEE WYL.CU.CTR.LIB(PREPROC) FOR INFO AND CAUTIONS ABOUT
         2  ; USING SOME OF THE FEATURES IN THIS EXEC FILE.
         3  COMMENT CHANGE STRING S1 TO S2 IN LINE W0
         4  SET EXEC VERBOSE LOG; THIS LETS YOU SEE WHAT'S HAPPENING
         5  SET ESCAPE ''; TURN OFF ESCAPE CHARACTER
         6  READ VALUE S1,S2,W0
         7  IF (W0 EQ 0) EXEC 6 PAUSE
         8  SET ESCAPE %; TURN ESCAPE CHARACTER ON TO SUBSTITUTE
         9  CH '%S1' TO '%S2' IN %W0
        10  EXEC 5

     B.  WYL.CU.CTR.LIB(FINDCOL)

         1  SET EXEC NOLOG TERSE
         2  ; SEE WYL.CU.CTR.LIB(PREPROC) FOR INFO AND CAUTIONS ABOUT
         3  ; USING SOME OF THE FEATURES IN THIS EXEC FILE.
         4  COMMENT FIND COLUMNS OF A STRING IN A SPECIFIED LINE
         5  COMMENT WHERE S0 IS THE STRING, W0 THE LINE
         6  SET ESCAPE; TURN OFF ESCAPE CHAR.
         7  READ VALUE S0,W0
         8  IF (S0 EQ '') EXEC CLEAR; STOP IF NOTHING ENTERED
         9  SET ESCAPE %; SET THE ESCAPE CHAR TO DO SUBSTITUTIONS
        10  POINT %W0 NOLIST; SEE IF LINE W0 EXISTS
        11  IF (* LT 0) EXEC 19; NO LINE IF * WAS NOT SET
        12  READ STRING S1 USING *
        13  SET VALUE W1 INDEX(S1,S0)
        14  IF (W1 EQ 0) EXEC *+3
        15  SHO VALUE W1 W1+SIZE(S0)-1
        16  EXEC 6
        17  COMMENT '%S0' NOT IN LINE %W0
        18  EXEC 6
        19  COMMENT LINE %W0 NOT IN FILE
        20  EXEC 6
1                                            (12)

     C.  WYL.CU.CTR.LIB(ASMEXEC)

         1  SET EXEC NOLOG TERSE
         2  ; THIS EXEC FILE WILL REPLACE LABELS IN AN EXEC FILE
         3  ; WITH THE APPROPRIATE LINE NUMBER. LABELS MUST BE
         4  ; OF THE FORM LABELNN WHERE NN IS A 2-CHARACTER FIELD
         5  ;
         6  ; SEE WYL.CU.CTR.LIB(PREPROC) FOR INFO AND CAUTIONS ABOUT
         7  ; USING SOME OF THE FEATURES IN THIS EXEC FILE.
         8  IF(LAST NE 0)EXEC 12; BRANCH IF FILE TO ASSEMBLE
         9  COMMENT ** ENTER USE FOR ACTIVE FILE **
        10  READ
        11  EXEC 8; GO MAKE SURE FILE WAS ENTERED
        12  SET VALUE W0 0
        13  COMMENT ** BEGIN ASSEMBLY **
        14  COMMENT
        15  SET ESCAPE &
        16  SET LENGTH 132
        17  POINT 'LABEL' 1/5 (1) IN &W0/LAST NOL; FIND NEXT LABEL
        18  IF(* LT 0)EXEC 33; CHECK FOR END OF LABELS
        19  READ STRING S0 USING *;PUT THE LINE IN A STRING VARIABLE
        20  SET VALUE W0 *;SAVE CURRENT LINE NUMBER
        21  IF(SIZE(S0) LT 7)EXEC 31;CHECK FOR FUNNY LINE
        22  SET VALUE S1 SUBSTR(S0,1,7);PICK OFF LABEL FIELD
        23  CH 1/7 TO '' IN &W0 NOLIST; DELETE LABEL FIELD ON LINE
        24  CH ' '1 TO '' IN &W0 NOL; ALSO DELETE BLANK AFTER LABEL
        25  POINT '&S1' 1/7 (1) IN &W0/LAST NOL; SEE IF DUP LABEL
        26  IF(* GT 0)COMMENT &S1 IS DUPLICATELY DEFINED
        27  CH '&S1' TO '&W0' IN ALL NOL; REPLACE LABEL WITH LINENO
        28  IF(* LT 0)COMMENT &S1 IN LINE &W0 IS UNREFERENCED
        29  IF(* GE 0)COMMENT REPLACE &S1 WITH LINE NO. &W0
        30  EXEC 17;GO FIND NEXT LABEL
        31  SET VALUE W0 NEXT;SKIP PAST GARBAGE LINE
        32  IF(W0 GE 0)EXEC 17
        33  P 'LABEL' NOL; FIND UNDEFINED LABELS
        34  IF( * LT 0)EXEC 38
        35  COMMENT
        36  COMMENT LINES BELOW REFER TO UNDEFINED LABELS
        37  L 'LABEL';LIST MISSING LABELS
        38  COMMENT
        39  COMMENT ** END ASSEMBLY **
        40  SET ESCAPE
        41  EXEC CLEAR
./ ADD NAME=TSO001
1
                                                    August 4, 1977
 WYLTSO changes:


 1) New pre-processor variables added:

    a) 'PROJECT' returns the string 'USXXXXX' for users with
       TSO operator privilige, and 'XXXXXXX' for non-priviliged
       users.
    b) 'TERMINAL' returns the string 'TSO'.
    c) 'PAGES' returns the number of pages currently in use by
       your active file.
    d) 'LINES' returns the number of lines in your active file
       regardless of your DELTA or line numbering.
    e) 'CP' returns the address of WYLTSO's CP (Control Page)
       address in hex for those who know what to do with it.
       This is an invalid variable for non-priviliged users.


 2) Additional attention handling:

    If the input is terminated by the ATTN SEQUENCE during an
    input to any prompt (such as in COMMAND or COLLECT modes,
    or in response to a READ command with the PROMPT option),
    a real attention is simulated.  If you want the input to
    contain the ATTENTION SEQUENCE, just terminate the input
    with an additional blank (a space).

    'SET ATTN <string-up-to-8-characters>' command sets the
    ATTENTION SEQUENCE to the operand supplied.  'SET ATTN'
    command (with no operands) clears the ATTN SEQUENCE.
    'SHOW ATTN' command displays the attn sequence.  Default
    is no ATTENTION SEQUENCE.


 3) Disabling automatic COMMAND to COLLECT mode switch:

    'SET NOCOLLECT' command disables the facility to switch to
    COLLECT mode when an attention is encountered.  'SET COLLECT'
    command enables the facility back -- This is the default mode.
    'SHOW COLLECT' command displays the current mode.


 4) Screen paging:

    a) 'SET CRT' command enables screen paging -- The pause
       chatracter is a single dot.  'SET NOCRT' command disables
       screen paging -- NOCRT is the default mode.  'SHOW CRT'
       command displays the current CRT mode.
1
    b) 'SET PAGESIZE/PS <integer-between-1-and-255>' command sets
       the number of lines that can be printed without a pause on
       a screen.  'SHOW PAGESIZE/PS' command displays the current
       value of page-size -- Default is 25.

    c) 'SET LINESIZE/LS <integer-between-1-and-133>' command sets
       the screen width (i.e. characters per line) also to be used
       for paging to compensate for long text to be contiinued on
       a different line on the screen.  'SHOW LINESIZE/LS' command
       displays the curren size of the screen width -- Default is
       133.

    d) For terminals which don't have the automatic wrap-around
       feature, in WRAP mode a CR/LF (carriage-return line-feed
       sequence) will be inserted in the text to be displayed,
       if the text is longer than the screen width.  This mode
       can be set by the 'SET WRAP' command.  To dispable the
       insertion of CR/LF's you can use the 'SET NOWRAP' command.
       NOWRAP is the default mode.  'SHOW WRAP' displays the current
       mode.

    e) NonE of the screen paging features are in effect when a
       LIST/POINT is being done with the NOCR option.

    f) SET CRT/NOCRT/WRAP/NOWRAP/LS/PS commands as well as any
       input from the terminal initialize the number of lines
       printed on the screen to zero.


 5) More control over the NOCR option:

    'SET PAD' command sets the PAD mode, effective only for the
    LIST/POINT command with the NOCR option.  In PAD mode all
    lines listed will be padded on the right-hand-side with blanks
    to a length specified by the LENGTH variable.  If a line is
    longer than LENGTH no truncation is done.  'SET NOPAD' command
    disables padding -- NOPAD is the default mode.  'SHOW PAD'
    command displays the current mode.


 6) With the 'DISPLAY <any-string>' command (a variation of the
    'COMMENT' command) a line printed on the screen is not terminated
    with a CR/LF (i.e. the cursor will remain at the end of the
    line just displayed.)


 7) It is now possible to read datasets with block size up to
    13030 bytes.  Previously the limit was 3520.  You still cannot
    save datasets with BLKSIZE larger than 3520.
1
 8) The response to 'SHOW USERS' command is slightly modified.


 9) the response to 'SHOW DSNAMES' command when used with the
    DATE and/or TYPE options is also slightly modified.


 Until this version is insatlled as the floor system, you can use it
 by typing 'CALL WYL.CU.VVV.WYLTSO(WYLBUR)' under TSO insteAd of
 'WYLBUR' -- You will notice that no pagefile initialization is
 done.  Pages are initialized as they are needed in this version.


 Comments, suggestions are welcome!...  Problems are not, but will
 be taken care of...
./ ADD NAME=TSO002
1
                                                 September 9, 1977
 WYLTSO changes:


 1) Changes in Pre-Processor functions:

    a) EXPAND function added.  This function returns its argument
       with blanks inserted between each character.
       e.g. EXPAND('hello') will return 'h e l l o'.

    b) XLATE function added.  This function is a general trans-
       lator.  It takes three arguments.  The first one is the
       source string which is the xlatee.  The second argument
       is a string which lists the characters to be xlated or
       deleted.  The third string lists the characters to replace
       the respective characters in the second arg.  If the third
       argument is shorter than the second one the caharcters that
       don't have xlations in the second argument are deleted
       from the source.
       e.g. XLATE('abcd','abc','ef') will return 'efd'.

    c) CORE funtion added.  This is a variation on the TDUMP func-
       tion.  CORE function takes only one integer argument and
       returns the contents of that address (4 bytes) in integer.
       This is useful in chaining thru control blocks.

    d) DUPL function now accepts null argument or a zero duplica-
       tion factor.  In both cases it returns the null string.

    e) The SHEX function now returns a null string if the argument
       is a null string rather than returning the char X'00'.

 2) Changes in Editing features:

    a) The MODIFY command  when  requested  with  the  UNNUMBER
       option will no longer set the NOLIST option.

    b) The CHANGE command with  the  increment  option  is  now
       fixed  for  starting  patterns  that  contain alpahbetic
       characters before digits when the digit characters don't
       start with a zero; Blanks embedded in digit patterns are
       no longer assumed to be zero but they are taken  as  the
       character  ' '  -- only heading blanks before digits are
       taken as zero when necessary.


 3) New features:

    a) The 'HELP ALL'  command  will  give  a  listing  of  all
       available WYLBUR commands.  Note that some commands that
       are listed are only available to systems programmers.

1
    b) COMMAND  RETRY  feature  is  now  available.   The  last
       command that was typed to WYLBUR  can  be  modified  and
       reissued  by typing a '$' followed by a Carriage Return,
       or ending a command line  with  a  '$'  followed  by  an
       ATTENTION.   Since  the  way TCAM handles attentions is
       really poor features involving attention have not worked
       properly. (e.g.   Switching between edit and modify modes,
       exiting from edit or modify modes.)  Please use the ATTN
       SEQUENCE  if you need to use attention for such uses, as
       well as the COMMAND RETRY  feature.   When  you  request
       COMMAND  RETRY  you  will be prompted for changes on the
       command you had last typed.  After the command has  been
       modified  when a Carriage Return is hit the command will
       be reissued.  If an Attention is hit the  COMMAND  RETRY
       request will be aborted.

    c) 'PROFILE' command will display the current values set in
       the User Profile Table.  Refer to Tso Terminal Guide for
       individual fields.

    d) During WYLBUR initialization Page Size and Line Size will
       be initialized to the values that have been set by the
       TERMINAL command of TSO.  If LINES option is used then
       CRT will be set for WYLBUR also.   Changing Page Size and
       Line Size in WYLTSO will not effect TSO TERMINAL values.

    e) SUSPEND command will enable a user to "LOGOFF" without
       loosing his active WYLBUR environment, (i.e. ACTIVE and
       EXEC files, preprocessor variable values, ESCAPE charcter,
       CURRENT line values, etc.)  Thus when the user calls WYLBUR
       again the previous environment will be reconstructed.  It
       is possible to loose the active environment if you logoff
       from TSO, because the PAGE FILE that is used for ACTIVE
       files is defined by a temporary dataset.

    f) STACK command will allow a user to issue TSO commands
       which will be pushed on a stack until the WYLBUR session
       is terminated either with a LOGOFF or a SUSPEND command.
       Once Wylbur is ended TSO will accept commands from the
       command stack.  Note that the stack is LIFO.
       e.g. STACK ALLOC FI(DD1) DA('SYS2.MACLIB') SHR

    g) POP command will let you remove a command from the top of
       the stack.  'POP ALL' command will flush the whole stack.


 Until this version is insatlled as the floor system, you can use it
 by typing 'CALL WYL.CU.VVV.WYLTSO(WYLBUR)' under TSO instead of
 'WYLBUR' -- you will notice that no PAGEFILE initialization is
 done.  Pages are initialized as they are needed in this version.

./ ADD NAME=WYLABEND
1
 ABND(HEX)   MODULE          SAVEAREA  EXPLANATION
 ---------   -------------   --------  ----------------------------------
 ------------------------------------------------------------------------
  210(0D2)   WYLBUR(BORV)    CVNRJE    NO ORVYL INTERFACE
 ------------------------------------------------------------------------
  310(136)   WYLBUR(PCBS)    CVNRJE    INSUFFICIENT PAGES TO INITIALIZE
  320(140)   WYLBUR(PCBS)    CVNRJE    NO DIRECT ACCESS VOLUMES
 ------------------------------------------------------------------------
  410(19A)   WYLBUR(PCP)     CVNRJE    SPIE ROUTINE ENTERED, NO RESUME ADDRESS
  420(1A4)   WYLBUR(PCP)     CVNRJE    MCAN WYLBUR COMMAND ISSUED
  430(1AE)   WYLBUR(PCP)     CVNRJE    WORK AREA OVERFLOW
  450(1C2)   WYLBUR(PCP)     CVNRJE    ILLEGAL PAGE JUNK
  460(1CC)   WYLBUR(PCP)     CVNRJE    TIME'S UP, WYLBUR LOOPING...
 ------------------------------------------------------------------------
  510(1FE)   WYLBUR(PDIO)    CVNRJE    INVALID  FORMAT 1 DSCB DURING OPEN
  520(208)   WYLBUR(PDIO)    CVNRJE    READ REQUEST AND DCB NOT OPEN
  530(212)   WYLBUR(PDIO)    CVNRJE    WRITE REQUEST AND DCB NOT OPEN
  540(21C)   WYLBUR(PDIO)    CVNRJE    CLOSE REQUEST AND DCB NOT OPEN
  550(226)   WYLBUR(PDIO)    CVNRJE    I/O ERROR DURING SHO DSN/DIR
  560(230)   WYLBUR(PDIO)    CVNRJE    I/O SUBTASK ABENDED
 ------------------------------------------------------------------------
  610(262)   WYLBUR(PDOS)    CVNRJE    ORVYL NOT SUPPORTED
  620(26C)   WYLBUR(PDOS)    CVNRJE    ORVYL NOT SUPPORTED
 ------------------------------------------------------------------------
  710(2C6)   WYLBUR(PGOS)    CVNRJE    NO FIRST LINE -- LOGIC ERROR
 ------------------------------------------------------------------------
  810(32A)   WYLBURP(PGOP)   CVNRJE    INVALID CATALOG ENTRY FOR SHO COMMANDS
  820(334)   WYLBURP(PGOP)   CVNRJE    CVADDER RETURNED NONPOSITIVE VALUE
 ------------------------------------------------------------------------
  910(38E)   WYLBURP(PLOD)   CVNRJE    INSUFFICIENT PAGES TO LOAD PAGED CODE
  920(398)   WYLBURP(PLOD)   CVNRJE    ROUTABLE MUST BE UPDATED AND REASSEMBLED
  930(3A0)   WYLBURP(PLOD)   CVNRJE    PAGE FILE I/O ERROR DURING INITIALIZATION
  940(3AA)   WYLBURP(PLOD)   CVNRJE    PAGE FILE I/O ERROR (LAST PAGED CODE)
