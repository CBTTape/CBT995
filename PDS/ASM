./ ADD NAME=BEXE,SSI=00000169
BEXE     TITLE 'EXEC ROUTINES MODULE'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
BEXE     CSECT
         WIDENT 001
         USING CPAREA,R12
         SPACE
         XTRNS
         TITLE 'EXEC COMMAND PROCESSOR'
* ENTRY FOR LOAD COMMAND
         SPACE
GOLOAD   DENTER DSSIZ
         XCALL SCNEXFR             SEE IF RANGE FROM EXTERNAL
         OI    CPLFLG1,CPFALL      SET DEFAULT ALL
         XCALL DETRNG              GO GET RANGE IF SPECIFIED
         LA    R7,EXECBASE         RESET BASE REGISTER
         BR    R7                  GO JOIN EXEC COMMAND
         SPACE 3
* ENTRY FOR EXEC COMMAND
         SPACE
GOEXEC   DENTER DSSIZ
         OI    CPLFLG5,CPFSELEX    SET DEFAULT EXEC LINE NO. SEL
         XCALL SCNEXFR       SEE IF RANGE FROM EXTERNAL OR ACTIVE
         TM    CPLFLG5,CPFSELOC  IS IT EXEC ACTIVE
         BNZ   GOEXECA             BRANCH NO
         CLC   CPAGCT(2),=D'0'     IS THERE AN ACTIVE FILE
         BNZ   GOEXECA             YES, COMMAND IS OKAY
         XCALL ITSNIL              NO, GO REPORT ERROR
         SPACE
GOEXECA  MVI   CPSTAD,CPFEXPRG         SET EXPLICIT RANGE
         XC    CPFSLN(4),CPFSLN        SET FIRST LINE
         MVC   CPLSLN(4),=F'99999999'  SET LAST LINE
         GENTER ,
EXECBASE TM    CPGFLG2,CPFEXEC+CPFNOLOG LIST EXEC COMMAND
         BNO   GOEXEC1                 BRANCH NO
         TM    CPGFLG2,CPFEXTER    TERSE MODE
         BO    GOEXEC1             YES, DON'T LIST COMMAND NOW
         MVC   CPLCNO,CPEXLINE     RESET LINE NUMBER FOR WRITE
         BAL   R14,WRITECOM            WRITE OUT COMMAND
GOEXEC1  LA    R6,SCANLNO          SET ADDR FOR LINE NUMBER
         SCAN  EXECTBL1                SCAN EXEC PARMS
         TM    CPLFLG2,CPFEXPA     WAS EXEC PAUSE SPECIFIED
         BNO   GOEXNOPA            NO
         TM    CPGFLG2,CPFEXEC     DID COMMAND COME FROM EXEC
         BNO   GOEXNOPA            NO, NO NEED TO LIST COMMAND
         MVC   CPLCNO,CPEXLINE     RESET LINE NUMBER FOR WRITE
         BAL   R14,WRITECOM        WRITE OUT COMMAND
GOEXNOPA TM    CPLFLG2,CPFEXFR         WAS EXEC FROM SPECIFIED
         BO    GOEXECFR                YES
         TM    CPLFLG2,CPFEXACT        WAS EXEC ACTIVE SPECIFIED
         BO    GOEXECAC                YES
         CLI   CPCMNM,C'L'         IS IS LOAD
         BE    GOEXECAC            YES, GO EXEC ACTIVE
         TM    CPLFLG2,CPFCLEAR        WAS CLEAR SPECIFIED
         BO    GOEXECPA                YES, TREAT AS EXEC PAUSE
GOEXECCM TM    CPGFLG2,CPFEXEC    IS EXEC IN EFFECT NOW
         BO    GOEXECCA            YES, DON'T CLEAR IDLE ATTN
         OI    CPGFLG2,CPFEXEC         SET EXEC FLAG
         NI    JCBAFL,255-JCBAFIA      CLEAR IDLE ATTN
GOEXECCA TM    CPLFLG2,CPFEXLNE        WAS EXEC LINENO SPECIFIED
         BE    GOEXECC1                NO
         L     R2,CPEXLNET             GET EXEC LINENO
         BCTR  R2,0                    SET FOR ADDER
         ST    R2,CPEXLINE             SET EXEC LINENO
GOEXECC1 TM    CPLFLG2,CPFEXPA         PAUSE SPECIFIED
         BE    CVGETCOM                NO, GO GET COMMAND
GOEXECPA NI    CPGFLG2,255-CPFEXEC     TURN OFF EXEC FLAG TO PAUSE
         TM    CPLFLG2,CPFCLEAR        WAS CLEAR SPECIFIED
         BE    CVGETCOM                NO, GET NEXT COMMAND FROM
         CLC   CPEXCNT(2),=D'0'        IS THERE AN EXEC FILE
         BE    EXECNOFL                NO, GO ISSUE MESSAGE
         BAL   R14,DOCLREX             GO CLEAR EXEC FILE
         B     CVGETCOM                NOW GET NEXT COMMAND FROM
         SPACE 3
* EXEC ACTIVE WAS SPECIFIED
         SPACE
GOEXECAC BAL   R14,EXCLRCK             GO CLEAR OLD EXEC IF NEEDED
         NI    CPLFLG2,255-CPFCLEAR    TURN OFF CLEAR FLAG
         XC    CPEXLINE(4),CPEXLINE CLEAR EXEC LINE TO USE FIRST
         OI    CPLFLG5,CPFNCUR     SET TO NOT CHANGE * POINTER
         L     R15,GOLACAD         LOAD ADDRESS OF WORK
         CVCALL DESPOT             GO LOAD EXEC FILE
GOEXAC1  PFREE R9                  FREE ANY PAGE IN R9
         PFREE R11                 FREE ANY PAGE IN R11
         TM    CPLFLG2,CPFEXACT    WAS IT EXEC ACTIVE
         BNO   GOEXECCM            NO, DON'T CLEAR ACTIVE
         CVCALL DOCLEAR            YES, GO CLEAR ACTIVE
         B     GOEXECCM            GO TRY TO EXECUTE COMMANDS
         EJECT
GOEXECFR BAL   R14,EXCLRCK         CLEAR EXEC FILE IF NECESSARY
         NI    CPLFLG2,255-CPFCLEAR    TURN OFF CLEAR FLAG
         CVCALL VOLCHEK                MAKE SURE VOL SPECIFIED
         TM    CPLFLG3,CPFSET          WAS SET SPECIFIED
         BZ    GOFRM1                  NO
         CVCALL SETPFXNS               GO SET PREFIX
GOFRM1   DOPEN 0,,USE                  OPEN DATA SET
         BZ    GOFRM2                  OPEN OK
         CLI   CPCMSAV,C';'            LOGON EXEC FILE?
         BE    CVGETCOM                YES, NO ERROR
         CVCALL NTGDOPN                GO DO OPEN ERROR MESSAGE
         SPACE
GOFRM2   OI    CPGFLG,CPFOPN           SET DATA SET OPEN
         ST    R1,CPDRED               SAVE BUFFER ADDR
         XC    CPEXLINE(4),CPEXLINE CLEAR EXEC LINE TO USE FIRST
         OI    CPLFLG5,CPFNCUR     SET TO NOT CHANGE * POINTER
         L     R15,GOFRXAD             ADDR FOR DESPOT USING LXCATE
         CVCALL DESPOT                 GO DO WORK
         DCLOSE ,                      CLOSE DATA SET
         NI    CPGFLG,255-CPFOPN       SET DATA SET CLOSED
         B     GOEXAC1             GO TO COMMON ENDING FOR ACTIVE
         SPACE 3
* EXEC WORK ROUTINE FOR DESPOT
         SPACE
FROMWORK DS    0H
         XENTER 2,8,C32+SZR+12
         L     R7,=A(EXECBASE)         RELOAD BASE REGISTER
         USING EXECBASE,R7
         SR    R2,R2
         IC    R2,4(,R15)              GET PREST COUNT
         LA    R3,C32(,R8)         POINT TO PREST SAVE AREA
         LA    R6,4(,R2)           SET MVC COUNT
         EX    R6,MOVIT2           SAVE PREST LINE
         LH    R6,CPEXCNT              GET PAGE COUNT
         LTR   R5,R6                   FIRST LINE OF ALL
         BZ    FSTPAG                  YES
         MH    R5,=H'6'
         LA    R5,CPEXDIR-6(R5)        POINT TO LAST DIRECTORY ENTRY
         LTR   R9,R9                 PAGE IN R9
         BZ    TRY11                   NO, TRY R11
         PNUM  R9                      WHAT PAGE
         CH    R0,4(,R5)               WANTED ONE
         BE    GOTIT                   YES
TRY11    LTR   R11,R11                   PAGE IN R11
         BZ    DOGET                   NO
         PNUM  R11                       WHAT PAGE
         CH    R0,4(,R5)               WANTED ONE
         BNE   DOGET                   NO, GET ONE
         PFLIP R9,R11                    YES, MOVE TO R9
         B     GOTIT                   GO PROCESS
         SPACE
DOGET    LH    R0,4(,R5)               SET POINTER
         PGET  R9,(0)                  GET PAGE
GOTIT    EQU   *
         LH    R4,0(,R9)              COUNT ON PAGE
         LA    R14,5(R2,R4)        ROOM FOR THIS LINE ON PAGE?
         CH    R14,=Y(CPSIZE)      (COMPARE TO FULL SIZE )
*
         BH    NEWPAG                  NO
ALLSET   LA    R15,0(R4,R9)           NEXT SPOT ON PAGE
         LA    R4,5(R4,R2)             NEW COUNT
         STH   R4,0(,R9)              PUT BACK IN PAGE
         LA    R6,4(,R2)               SET MVC COUNT
         EX    R6,MOVIT1               MOVE LINE TO PAGE
         MVC   CPEXHIPS(4),0(R3)       SET HIGH LINE VALUE
         LH    R6,CPEXLNCT             GET LINE COUNT
         LA    R6,1(,R6)               ADD 1
         STH   R6,CPEXLNCT             STORE IT
         PMARK R9
         XEXIT 2,8                     RETURN FOR NEXT LINE
         SPACE 3
FSTPAG   LA    R5,CPEXDIR-6            POINT BEFORE FIRST DIR ENTRY
NEWPAG   CH    R6,=Y(CPEXECMX)         TOO MANY PAGES
         BNL   FRMTOBIG                YES
         PGET  R9                      GET NEW TEXT PAGE
         BZ    FRMOUT                  NO MORE PAGES
         LA    R6,1(,R6)               BUMP PAGE COUNT
         STH   R6,CPEXCNT              SAVE COUNT
         MVC   6(4,R5),0(R3)           PUT 1ST LINE NO IN DIRECTORY
         STH   R0,10(,R5)              PUT PAGE NO IN DIREC
         LA    R4,2                    SET NEW COUNT
         B     ALLSET                  GO MOVE LINE
         SPACE
FRMOUT   TSEG  'NO MORE PAGES -- NO EXEC'
FRMEND   NI    CPGFLG2,255-CPFEXEC TURN OFF EXEC MODE
         TM    CPLFLG1,CPFEXFR     EXEC OR LOAD FROM
         BNO   CVGETCOM            NO, NO DCLOSE
         DCLOSE ,                      CLOSE DATA SET
         NI    CPGFLG,255-CPFOPN       SET DATA SET CLOSES
         B     CVGETCOM                GO GET COMMAND
         SPACE
FRMTOBIG TSEG  'FILE TOO BIG -- NO EXEC'
         B     FRMEND
         SPACE
MOVIT2   MVC   0(0,R3),0(R15)
MOVIT1   MVC   0(0,R15),0(R3)
GOFRXAD  DC    0F'0',AL1(DESRTRN+LXCATRTN),AL3(FROMWORK)
GOLACAD  DC    0F'0',AL1(DESRTRN+LOCATRTN+DESMATCH),AL3(FROMWORK)
         TITLE 'EXEC SCAN TABLE AND SCAN ROUTINES'
EXECTBL1 SCKW  PAUSE,SCANPA,A
         SCKW  FROM,SCANFROM,A
         SCKW  ,IGDSNPRT,PUSH
         SCKW  ACTIVE,SCANACT,A
         SCKW  ,STEXEPRT,PUSH
         SCKW  START,SCANSTRT,A
         SCKW  ,CLRPRT,PUSH
         SCKW  RETRY,SCANRTRY,A
STRTBL   SCKW  ,LNENOPRT,PUSH
         SCKW  ,INVALID
         SPACE
RESTBL1  SCKW  ,CLRPRT,PUSH
         SCKW  ,INVALID
         SPACE
         ENTRY STEXEPRT
STEXEPRT SCKW  LOG,SCANLOG
         SCKW  TERSE,SCANTER,A
         SCKW  VERBOSE,SCANVER,A
         SCKW  NOLOG,SCANNLOG,A
         SCKW  ,,POP
         SPACE
SHOBTBL1 SCKW  RETRY,SCANRTRY,A
         SCKW  ,LNENOPRT,PUSH
         SCKW  LOG,SHLOG
         SCKW  NOLOG,SHLOG,A
         SCKW  TERSE,SHTERSE,A
         SCKW  VERBOSE,SHTERSE,A
         SCKW  ,INVALID
         SPACE 3
SCANPA   OI    CPLFLG2,CPFEXPA         SET EXEC PAUSE
         BR    R14                     SCAN ON
         SPACE
SCANACT  OI    CPLFLG2,CPFEXACT        SET EXEC ACTIVE
         CLI   CPCMNM,C'L'         IS IT LOAD COMMAND
         BE    CVNVALID            YES, ACTIVE IS INVALID
         TM    CPLFLG2,CPFEXFR         HAS EXCL OPER BEEN GIVEN
         BZR   R14                     NO, SCAN ON
         B     CVNVALID            CALL INVALID ROUTINE
         SPACE
SCANSTRT LA    R6,SCANLNOL         SET ADDR FOR LINE NO
         SCAN  STRTBL              SCAN FOR START LINE NUMBER
         B     CVNVALID
         SPACE
SCANLNO  CLI   CPCMNM,C'L'         IS IT LOAD COMMAND
         BE    CVNVALID            YES, LINE NUMBER INVALID
SCANLNOL ST    R0,CPEXLNET             SAVE SPECIFIED LINE NO.
SCANLNO1 OI    CPLFLG2,CPFEXLNE        SET LINE NO. SPECIFIED
         CLI   CPCMNM,C'S'         IS IT SHOW COMMAND
         BNE   GOEXEC1             BRANCH NO
         B     SHEXSCN             YES
         SPACE
SCANRTRY MVC   CPEXLNET(4),CPEXLINE  SET NORMAL RETRY LINE
         CLC   CPEXLNET(4),CPEXHIPS  IS IT BEYOND FILE
         BNH   SCANLNO1            NO, IT IS OKAY
         MVC   CPEXLNET(4),CPEXHIPS  YES, SET IT TO HIGH LINE
         B     SCANLNO1            GO FINISH
         SPACE
SHLOG    OI    0(R8),CPFNOLOG      SET TO SHOW OPTION
         BR    R14                 SCAN ON
         SPACE
SHTERSE  OI    0(R8),CPFEXTER      SET TO SHOW TERSE
         BR    R14
         SPACE
SCANFROM OI    CPLFLG2,CPFEXFR         SET FROM
         TM    CPLFLG2,CPFEXACT        HAS EXCL OPER BEEN GIVEN
         BO    CVNVALID            YES
         CVCALL DODSNM                 GET THEN
         B     GOEXEC1                 GO RESTART SCAN
         SPACE
         DROP  R7                  NO BASE FOR FOLLOWING
         SPACE
SCANTER  OI    CPGFLG2,CPFEXTER    SET EXEC TERSE FLAG
         BR    R14                 RETURN
         SPACE
SCANVER  NI    CPGFLG2,255-CPFEXTER TURN OF TERSE FLAG
         BR    R14                 RETURN
         SPACE
SCANLOG  NI    CPGFLG2,255-CPFNOLOG    RESET NOLOG FLAG (SET LOG)
         BR    R14                     SCAN ON
         SPACE
SCANNLOG OI    CPGFLG2,CPFNOLOG        SET NOLOG
         BR    R14                     SCAN ON
         TITLE 'SHOW EXEC ROUTINE'
* SHOW EXEC COMMAND
         SPACE
SHEXEC   GENTER SZR
         L     R7,=A(EXECBASE)         USE BASE FOR EXEC COMMAND
         USING EXECBASE,R7
         MVI   0(R8),0             RESET SHOW TERSE & LOG
         OI    CPLFLG5,CPFSELEX    SET TO USE EXEC LINE NUMBERS
SHEXSCN  LA    R6,SCANLNOL         SET ADDR FOR LINE NUMBER
         SCAN  SHOBTBL1                SCAN SHOW OPERANDS
         TM    0(R8),CPFNOLOG+CPFEXTER SHOW TERSE &/| LOG
         BZ    SHEXLNE             NO, GO SHOW EXEC LINE
         TSEG  'EXEC',,B           SET FIRST PART OF MESSAGE
         TM    0(R8),CPFNOLOG      TEST NOLOG
         BZ    SHEXTER             NO, GO SHOW TERSE
         SYSQS 1,0,'LOG'           ASSUME LOG IN EFFECT
         TM    CPGFLG2,CPFNOLOG    LOG OR NOLOG
         BZ    SHEXLOG             BRANCH IF LOG
         SYSQS 1,0,'NOLOG'         SET FOR NOLOG
SHEXLOG  TSEG  (1),(0),B           PUT IT IN MESSAGE
         TM    0(R8),CPFEXTER      ALSO DO TERSE?
         BZ    SHEXFIN             NO, GO FINISH MESSAGE
SHEXTER  SYSQS 1,0,'TERSE'         ASSUME TERSE
         TM    CPGFLG2,CPFEXTER    TERSE OR VERBOSE
         BO    SHEXTER2            BRANCH IF TERSE
         SYSQS 1,0,'VERBOSE'       SET FOR VERBOSE
SHEXTER2 TSEG  (1),(0),B           PUT IT IN MESSAGE
SHEXFIN  TSEG  'IS IN EFFECT',,W       FINISH & WRITE MESSAGE
         TM    CPLFLG2,CPFEXLNE    EXEC LINE ALSO SPECIFIED
         BZ    CVGETCOM            NO, GO GET NEXT COMMAND
SHEXLNE  TM    CPLFLG2,CPFEXLNE        WAS SPECIFIC LINE NO SPECIFIED
         BO    SHEXEC1                 YES
         L     R0,CPEXLINE             GET CURRENT EXEC LINE NO
         LA    R1,1
         CVCALL ADDER                GET NEXT POSSIBLE LINE NO
         BNP   NOSHOLNE                NO LINE IF BAD LINE NO
         ST    R0,CPEXLNET             SAVE AS IF SPECIFIED
SHEXEC1  LA    R1,CPEXLNET             LOCATE
         XCALL LOCATEEX                      EXEC LINE
         TM    CPDRPT,CPFNTYT+CPFHIGH  DOES LINE EXIST
         BNZ   NOSHOLNE                NO
         MVC   CPEXLNET,CPLCNO         SET ACTUAL LINE NO
         TM    CPDRPT,CPFPGHI          AFTER LAST ON PAGE
         BO    SHEXEC1                 YES, DO ANOTHER LOCATE
SHEXEC2  LA    R1,4(,R8)               POINT TO UNPRESS AREA
         CVCALL UNPRESS                UNPRESS LINE TO LIST IT
         XCALL LISTLINE            FORMAT LINE FOR LIST
         B     CVGETCOM                GO GET NEXT COMMAND
         SPACE
NOSHOLNE TSEG  'NO EXEC LINE'
         B     CVQTYPE
         TITLE 'GET NEXT COMMAND FROM EXEC FILE'
* UPDATE EXEC LINE NO AND GET NEXT COMMAND
         SPACE
GETEXCMD GENTER ,
         L     R7,=A(EXECBASE)         USE SAME BASE AS FOR EXEC
         USING EXECBASE,R7
         CLC   CPEXCNT(2),=D'0'    IS THERE AN EXEC FILE
         BE    EXECNOFL            BRANCH NO
         TM    JCBAFL,JCBAFIA          IDLE ATTN
         BO    EXECABRT                YES
         BAL   R14,EXLOOPCK        GO CHECK FOR EXECUTE LOOP
         TM    CPEXLINE,FNEGBT     IS EXEC LINE POINTER SET
         BO    EXECNOST            BRANCH NO
         L     R0,CPEXLINE             GET LAST LINE NO USED
         LA    R1,1
         CVCALL ADDER                GET NEXT POSSIBLE LINE NO
         BNP   EXECDONE                BRANCH IF DOESN'T EXIST
         ST    R0,CPEXLINE             SAVE LINE NO
GETEXLP  LA    R1,CPEXLINE             POINT TO LINE TO LOCATE
         XCALL LOCATEEX                LOCATE EXEC LINE
         TM    CPDRPT,CPFNTYT+CPFHIGH  DOES IT EXIST
         BNZ   EXECDONE                NO
         MVC   CPEXLINE,CPLCNO         SET EXEC LINE NO.
         TM    CPDRPT,CPFPGHI          AFTER LAST ON PAGE
         BO    GETEXLP                 YES, GO DO ANOTHER LOCATE
GETEXCM1 LA    R1,CPCMSAV              POINT TO UNPRESS AREA
         CVCALL UNPRESS                 UNPRESS THE COMMAND
         LR    R2,R0               SAVE THE COUNT IN R2
         ST    R2,CPCTSAV              SAVE THE COUNT
         PFREE R11                     FREE EXEC PAGE IN R11
         TM    CPGFLG2,CPFNOLOG        IS NOLOG IN EFFECT
         BO    GETEXCM2                YES
         BAL   R14,WRITECOM            WRITE OUT COMMAND
GETEXCM2 LA    R8,CPWA             SET R8 AND
         LR    R13,R8                  R13 FOR NEW COMMAND
         LR    R0,R2               RESTORE THE COUNT
         LA    R1,CPCMSAV          POINT TO THE COMMAND
         XCALL EDTCOM                  GO EXECUTE COMMAND
         SPACE 3
* END OF RANGE FOR EXEC
         SPACE
EXECNOFL TSEG  'NO EXEC FILE'
         B     EXECDNE1                GO FINISH
         SPACE
EXECDONE TSEG  'EXEC END'
EXECDNE1 NI    CPGFLG2,255-CPFEXEC     TURN OFF EXEC MODE
         B     CVGETCOM                GET NEXT COMMAND FROM USER
         SPACE
EXECNOST TSEG  'EXEC POINTER NOT SET'
         B     EXECDNE1            GO FINISH
         EJECT
* WRITE OUT COMMAND TO BE EXECUTED
         SPACE
WRITECOM XENTER R0,R8,*
         TM    CPCTSAV,FNEGBT      TEST IF LINE TO LIST
         BO    WTCOMEX             NO, EXIT FROM ROUTINE
         TSEG  '->',,B
         TM    CPGFLG2,CPFEXTER    EXEC TERSE MODE
         BO    WTCOM1              YES, DON'T LIST LINE NO.
         L     R0,CPLCNO               LINE NO OF COMMAND
         CVCALL CVEXNO              CONVERT TO EXTERNAL FORMAT
         TSEG  (1),(0),B           ADD TO BUFFER
WTCOM1   L     R0,CPCTSAV              LOAD COUNT OF COMMAND
         LA    R1,CPCMSAV              POINT TO COMMAND
         TSEG  (1),(0),W            ADD TO BUFFER
         BP    EXECABRT                ABORT EXEC IF ATTN
         MVI   CPCTSAV,FNEGBT      SET SO NO LIST AGAIN
WTCOMEX  XEXIT R0,R8                   RETURN
         TITLE 'CHECK FOR POSSIBLE EXEC OR READ LOOP'
* IF 500 COMMANDS HAVE BEEN EXECUTED WITHOUT TYPING THEN
* CAUSE AN EXEC BREAK SO USER CAN CHECK FOR POSSIBLE LOOP.
*
* IN ADDITION THIS ROUTINE FORCES A CALL OF THE DISPATCHER TO
* LET OTHER READY USERS RUN EVERY TIME THE COMMAND COUNT IS
* A MULTIPLE OF EIGHT.
         SPACE
EXLOOPCK SENTER R0,R7
         LH    R0,CPEXCMCT
         AH    R0,=H'1'
         STH   R0,CPEXCMCT
         CH    R0,=H'5000'          MORE THAN 5000
         BNH   GETEXOK             NO, OK
         TSEG  'NO TERMINAL OUTPUT AFTER 5000 COMMANDS EXECUTED-',,MARK
         SYSQS 1,0,'PROCEED'
         XCALL YESREQ
         SPACE
GETEXOK  SEXIT R0,R7
         TITLE 'ABORT EXECUTE MODE'
* ABORT EXEC AND GET NEXT COMMAND
         SPACE
EXECABRT GENTER ,
         NI    CPGFLG2,255-CPFEXEC     TURN OFF EXEC MODE
         TSEG  'EXEC BREAK',,W
         BP    CVGETCOM
         L     R0,CVEXTRAP
         LTR   R0,R0
         BZ    CVGETCOM                GET NEXT COMMAND FROM USER
EXTRAP   XC    CVEXTRAP(4),CVEXTRAP    CLEAR TRAP
         MVC   CPCMSAV(2),=C'X '
         MVC   CVTRAPLN(4),CPEXLINE
         CVCALL CVEXNO
         AH    R0,=H'2'
         MVC   CPCMSAV+2(10),0(R1)
         ST    R0,CPCTSAV
         LA    R1,CPCMSAV
         LA    R8,CPWA
         LR    R13,R8
         XCALL EDTCOM
         TITLE 'RESTORE COMMAND ROUTINE'
* RESTORE EXEC FILE TO ACTIVE FILE
         SPACE
GORESTOR GENTER ,
         L     R7,=A(EXECBASE)         USE SAME BASE AS FOR EXEC
         USING EXECBASE,R7
         LH    R2,CPEXCNT              GET EXEC FILE PAGE COUNT
         LTR   R2,R2                   IS THERE AN EXEC FILE
         BE    EXECNOFL                BRANCH NO
         SCAN  RESTBL1
         XCALL CLEARCK                 CLEAR ACTIVE FILE IF NECESSARY
         SPACE 3
* SINCE EXEC FILES ARE LOADED AND MARKED AS NOT ESSENTIAL TO
* RCVY, ONE OR MORE OF THE EXEC PAGES MIGHT NOT HAVE BEEN
* WRITTEN OUT.  NOW THAT A RESTORE IS BEING DONE WE MUST INSURE
         SPACE
* THAT ALL EXEC PAGES HAVE BEEN WRITTEN.
         LR    R3,R2               PUT COUNT IN R3
         LA    R4,CPEXDIR          POINT R4 TO DIRECTORY
RESTLOOP LH    R0,4(,R4)           GET EXEC PAGE NUMBER
         PGET  11,(0)              GET PAGE IN R11
         PMARK R11
         LA    R4,6(,R4)           STEP TO NEXT ENTRY
         BCT   R3,RESTLOOP         LOOP UNTIL DONE
         MH    R2,=H'6'                GET LENGTH
         BCTR  R2,0                        FOR EXECUTE
         EX    R2,MVEDIR2              MOVE EXEC DIRECTORY TO ACTIVE
         MVC   CPHIPS(8),CPEXHIPS    SET HIGH LINENO, LINE & PAGE CNTS
         MVC   CPEXHIPS(8),=D'0'       CLEAR EXEC FILE
         OI    CPGFLG,CPFDIRCH         SET DIR CHNGED FOR RCVY
         MVI   CPEXLINE,X'F0'      SET CURRENT EXEC LINE INVALID
         XC    CPEXDIR(4),CPEXDIR  CLEAR FIRST EXEC LINE
         NI    CPGFLG2,255-CPFEXEC     TURN OFF EXEC
         B     CVGETCOM                GET NEXT COMMAND FROM USER
         SPACE
MVEDIR2  MVC   CPDREC(1),CPEXDIR     EX MVC TO MOVE EXEC DIR TO ACTIVE
         TITLE 'COMMENT COMMAND ROUTINE'
* COMMENT COMMAND  --  LIST COMMENT IF FNEGBT IS NOT ON FOR CPCTSAV
         SPACE
GOCOMMNT GENTER ,
         TM    CPCTSAV,FNEGBT      DOES COMMENT NEED LISTING
         BO    CVGETCOM                NO, GET NEXT COMMAND
         SCTELL ,                      GET REST OF LINE
         TSEG  (1),(0)              WRITE OUT COMMENT
         CLI   CPCMNM,C'D'          WAS IT DISPLAY
         BNE   *+8                  IF NOT LEAVE NOCR ALONE
         OI    RTBMFL,RTBNOCR       ELSE TURN NOCR FLG ON
         TWRITE ,                   GO WRITE IT
         NI    RTBMFL,X'FF'-RTBNOCR TURN IT OF NOW
         B     CVGETCOM                GET NEXT COMMAND
         TITLE 'CLEAR CHECK ROUTINE FOR EXEC FILE'
* CHECK FOR CLEAR OF EXEC FILE IF NECESSARY
         SPACE
EXCLRCK  XENTER R7,R8,*
         CLC   CPEXCNT(2),=D'0'        IS THERE AN EXEC FILE
         BE    EXITCLR                 NO, EXIT
         TM    CPLFLG2,CPFCLEAR        WAS CLEAR SPECIFIED
         BO    FIXCLRCK                YES, GO DO CLEAR
         TSEG  'OK TO',,B          SET FIRST PART OF MESSAGE
         SYSQS 1,0,'CLEAR EXEC'    SET POSITIVE RESPONSE
         XCALL YESREQ              GO CHECK IF OKAY WITH USER
FIXCLRCK BAL   R14,DOCLREX             DO THE CLEAR
EXITCLR  XEXIT R7,R8                   RETURN
         TITLE 'CLEAR EXEC FILE ROUTINE'
* CLEAR EXEC FILE IF NECESSARY
         SPACE
DOCLREX  XENTER R2,R8,*
         LH    R6,CPEXCNT              GET PAGE COUNT
         LTR   R6,R6                   ANY PAGES
         BE    DOCLREXX                NO, EXIT
         LA    R5,CPEXDIR              POINT AT DIRECTORY
DOCLREXL LH    R0,4(,R5)               GET PAGE NO.
         PJUNK (0)                     JUNK IT
         LA    R5,6(,R5)               STEP TO NEXT PAGE
         BCT   R6,DOCLREXL             LOOP UNTIL DONE
         MVI   CPEXLINE,X'F0'      SET CURRENT EXEC LINE INVALID
         XC    CPEXDIR(4),CPEXDIR  CLEAR FIRST EXEC LINE
         MVC   CPEXHIPS(8),=D'0'   CLEAR HIGH LINENO, LINE & PAGE CNTS
DOCLREXX XEXIT R2,R8                   EXIT
         TITLE 'COMMON ROUTINES, CONSTANTS AND DSECTS'
         LTORG
         EJECT
         COPY  WYLCONST
         EJECT
PCB      DSECT
         COPY  PCBTSO
         EJECT
         COMMON
         SPACE
         END
./ ADD NAME=BLPR,SSI=00000171
BLPR     TITLE 'WYLTSO --- POINT/LIST ROUTINES'
         GBLC   &DCEC             SWITCH FOR DCEC MODS
&DCEC    SETC  '1'  CHANGE TO ANY OTHER NUM. TO DELETE DCEC MOD
* PROPERTY OF C. U. C. C. A.
         SPACE 3
BLPR     CSECT
         SPACE
         WIDENT 001
         SPACE
         XTRNS ,
         SPACE
         USING CPAREA,R12
         EJECT
         AIF   ('&DCEC' NE '1').LBL01
* MOD
*  IMPLEMENT DCEC VERSION OF THE RUN COMMAND.  ACKNOWLEDGMENT
*  HEREBY MADE TO JIM MCKAY OF CCI FOR THE IDEA. CHANGES
*  DENOTED BY OR  IN 66/71.
*
*
*
*  MOD
*   MOVED COMMAREA TO CVTSO MACRO FOR REENTERABILITY.
*
*
.LBL01   DS    0H
* GOPOINT IS THE PRIMARY ENTRY POINT FOR THE POINT COMMAND.
*        POINT IS THE SAME AS THE LIST COMMAND WITH THE
*        ADDITION THAT THE CURRENT LINE POINTER IS UPDATED
*        TO THE LAST LINE POINTED TO.
         SPACE
GOPOINT  GENTER ,
         MVI   CPCMNM,C'L'         MAKE IT THE LIST COMMAND
         B     COMMNPT
         SPACE 3
* GOLSPRN IS THE PRIMARY ENTRY FOR LIST,PUNCH, SUGGEST, AND RUN.
         SPACE
GOLSPRN  GENTER ,
         OI    CPLFLG5,CPFNCUR     SET TO NOT UPDATE CURRENT
COMMNPT  EQU   *                   POINT COMES IN HERE
         GENTER
         XCALL SCNEXFR             SEE IF SELECT FROM EXEC
         OI    CPLFLG1,CPFALL          SET DEFAULT ALL OKAY
         CVCALL DETRNG             GET RANGE (IF NOT DEFAULT)
         LA    R13,WASIZE(R8)      CREATE WORK SPACE
         USING BLPRWA,R8
         SR    R4,R4
         ST    R4,CPWK1            CLEAR COLUMN FIELDS.
         XC    BLPRWA(WASIZE),BLPRWA CLEAR ENTIRE WORK AREA
         XC    CPSPAC(4),CPSPAC     CLEAR BLANK COUNT
         ST    R8,CPWK2             SAVE BLPRWA POINTER
         MVI   WYLRDR+25,X'0'     NO MACHINE OR ASA CHAR
         MVI   CCHAR,C' '         END
RESCAN   SCAN  LSTPRT                   SCAN FOR OPTIONS
         AIF   ('&DCEC' NE '1').LBL02
         CLI   CPCMNM,C'R'          RUN COMMAND ??
         BE    GOTRUN               YES - SET FOR DESPOT
         TM    WAFLAG1,WAFOFF      LIST OFF LINE
         BO    GOTOFF               YES - SET FOR DESPOT
.LBL02   DS    0H
GOTLIST  L     R15,LSONLAD              ADDR WORK RTN
         TM    CPLFLG5,CPFSELOC    SELECT FROM EXEC OR ACTIVE
         BNM   *+8                 BRANCH IF ACTIVE
         O     R15,=AL1(LEXATRTN,0,0,0) SET FOR EXEC LOCATE
         CVCALL DESPOT             CALL DESPOT
         B     CVGETCOM                 NEXT COMMAND
GOTOFF   EQU   *
         MVC   DAIRWTR,=CL8' '      BLANK OUT INTRDR
         MVI   RPL+51,133          LRECL 133
         XC    WAOFFCNT,WAOFFCNT          CLEAR FOR COUNT
         B     PRTRUN               COMMON PRINT AND RUN
         AIF   ('&DCEC' NE '1').LBL03
GOTRUN   EQU   *
         MVI   WYLRDR+25,0         MUST BE ZERO
         MVI   CPCMNM,C'R'         FORCE RUN
         MVC   DAIRWTR,=CL8'INTRDR'           INTRDR
         MVI   RPL+51,80           LRECL 80
PRTRUN   STAX  ATTN,OBUF=(RUNINT,L'RUNINT),USADDR=(R8),REPLACE=NO
*             ALLOCATE  CODE FOR WYLRDR OR WYLPRINT
         L     R15,CVIOWA          ADDRESS OF DAIR ROUTINE
         LA    R1,WAUPT-WDWA(R15)  ADDR OF DAPL
         LA    R2,DAIR30           PARAMETER LIST
         ST    R2,WADAIR-WDWA(R15)
         L     R15,CVDAIR          ADDRESS OF DAIR ROUTINE
         BALR  R14,R15             CALL DAIR
         LTR   15,15               INTRDR AVAILABLE??
         BNZ   NORDR               NONE, GET OUT
*              OPEN    INTRDR
         OPEN (WYLRDR,OUTPUT)
         L     15,RUONLAD          ADDRESS OF WORK ROUTINE
         TM    CPLFLG5,CPFSELOC    SELECT FROM EXEC OR ACTIVE
         BNM   *+8                 BRANCH IF ACTIVE
         O     R15,=AL1(LEXATRTN,0,0,0) SET FOR EXEC LOCATE
         ST    15,SWITCH           STORE WHERE TO GO ADDR
        CVCALL DESPOT    CALL DESPOT - RETURN AT WORK RTN
EOF      DS    0H
         MVI   BUF,C' '        BLANK RTB
         MVC   BUF+1(254),BUF
*        PUT   RPL=RPL
         CLI   CPCMNM,C'R'       IS IT RUN COMMAND
         BNE   CLOSE             NO MUST BE PRINT
         MVC   BUF(5),=C'/*EOF   '   INSURE END OF JOB
         PUT   RPL=RPL
         ENDREQ  RPL=RPL         JOB SUBMITTED, GET JOB NUMBER
         MVC   JOBNUM,RPL+60        MOVE JOB ID
         TSEG  JOBNUM,8,B       MOVE JOB-ID
         TSEG  'SUBMITTED.'
         TWRITE ,                  WRITE IT
CLOSE    CLOSE (WYLRDR)
*              CLOSE AND FREE INTRDR
         L     R15,CVIOWA          ADDRESS OF DAIR ROUTINE
         LA    R1,WAUPT-WDWA(R15)  ADDR OF DAPL
         LA    R2,DAIR18           PARAMETER LIST
         ST    R2,WADAIR-WDWA(R15)
         L     R15,CVDAIR          ADDRESS OF DAIR ROUTINE
         BALR  R14,R15             CALL DAIR
         STAX
         TM    WAFLAG1,WAFOFF      IS IT OFFLINE
         BZ    CVGETCOM            NO GET NEXT COMMAND
         SLR   R15,R15
         ICM   R15,15,WAOFFCNT         GET LINE COUNT
         LA    R1,CPDOUB           WHERE TO PUT IT
         LA    R0,5                LENGTH OF 8
         CVCALL BTD
         TSEG  CPDOUB,5,B
         TSEG  'LINES PRINTED',,W
         B     CVGETCOM            DONE GET OUT
NORDR    TSEG  'DYNAMIC ALLOCATION FAILLED CODE='
         UNPK  REASON,DAIR30+4(3)   UNPK CODE
         TR   REASON,HEX-X'F0'     TRANSLATE TO HEX
         TSEG  REASON,4,B          DAIR FAILUE CODE
         TWRITE ,
         STAX
         B     CVGETCOM            DONE GET OUT
.LBL03   DS    0H
         EJECT
TRYMORE  CLI   0(R1),C'('          OFFSET COUNT?
         BNE   CVNVALID            ILLEGAL
         BCTR  R0,0                REDUCE LENGTH BY 1
         BCTR  R0,0                -1 FOR ')'
         LA    R1,1(,R1)           STEP PAST '('
         LR    R2,R14              SAVE EXIT ADDR
         XCALL DTB                 CONVERT
         LTR   R0,R0               INTEGER?
         BNZ   CVNVALID            NOPE.. NO GOOD
         CH    R15,=H'70'          LIMIT OF 70 FOR OFFSET
         BH    CVNVALID
         LTR   R15,R15             POSITIVE?
         BM    CVNVALID
         ST    R15,CPSPAC
         BPR   R2                  ITS > 0
         B     CVNVALID            0 IS NOT ALLOWED
         SPACE 3
         AIF   ('&DCEC' NE '1').LBL04
SQUASH   CLI   CPCMNM,C'R'         RUN COMMAND?
         BE    CVNVALID            ILLEGAL FOR RUN
         OI    WAFLAG1,WAFSQUSH    SET SQUASH OPTION GIVEN
         AGO   .LBL05
.LBL04   DS    0H
SQUASH   OI    WAFLAG1,WAFSQUSH    SET SQUASH   OPTION GIVEN
.LBL05   DS    0H
         BR    R14
         SPACE
PRCC     OI    WYLRDR+25,X'04'     SET ASA CHAR CONTROL
         BR    R14
         SPACE
PRMC     OI    WYLRDR+25,X'02'     SET MACHINE CONTROL
         BR    R14
         SPACE
PROFF    OI    WAFLAG1,WAFOFF      LIST OFF LINE
         BR    R14
         SPACE
TWLNSET  BCT   R0,CVNVALID               1 CHAR MAX
         MVC   WA2LNCH(1),0(R1)         SAVE IT
         OI    WAFLAG1,WAFTWLN          SET TWO-LINE MODE
         BR    R14                      MORE?
         SPACE
SETMRKR  BNPR  14
         AIF   ('&DCEC' NE '1').LBL06
         CLI   CPCMNM,C'R'         RUN COMMAND?
         BE    CVNVALID            ILLEGAL FOR RUN
.LBL06   DS    0H
         OI    WAFLAG1,WAFMRKN          SET MARKER MODE
         MVC   WAMRKCH(1),1(R1)
         CLI   0(R1),C''''             QUOTED?
         BER   R14                      BR IF SO
         CLI   0(R1),C'"'
         BER   R14
         MVC   WAMRKCH(1),0(R1)         SET MARKER
         BR    R14                      MORE?
         EJECT
COLM     SCANSAVE ,
         SCAN  COLT
COLTC    B     CVABSENT
         SPACE
COLTA    OI    WAFLAG1,WALOWCOL
         ST    R15,CPWK1
         B     COLTD
         SPACE
COLTF    OI    WAFLAG1,WAHICOL
         TM    WAFLAG1,WALOWCOL
         BZ    COLTH
         CL    R15,CPWK1
         BNL   COLTH
         TSEG  'BAD COLUMN RANGE'
         B     CVQTYPE
         SPACE
COLTH    STH   R15,CPWK1
         B     RESCAN
         SPACE
COLTD    SCANSAVE ,
         SCAN  COLTE
COLTG    SCANRSTR ,
         B     RESCAN
         SPACE
COLTS    SCANRSTR ,
         B     COLTD
         SPACE 3
COLT     SCKW  /,COLTS
         SCKW  ,COLTA,PI,133
         SCKW  ,INVALID
COLTE    SCKW  /,COLTF,(P,PI),133
         SCKW  ,COLTG
         SPACE 3
NOCR     OI    RTBMFL,RTBNOCR           NOCR OPTION SELECTED
         BR    R14                      RETURN FOR MORE SCANNING
         SPACE
         DS    0F
LSONLAD  DC    AL1(DESNRTN+LOCATRTN+DESMATCH+UNPRST),AL3(LSTWORK)
         SPACE 3
LSTPRT   SCKW  NOCR,NOCR
         SCKW  MARKER,SETMRKR,(P,A)
         SCKW  TWOLINES,TWLNSET,(P,A)
         SCKW  ,LTNPRT,PUSH
         SCKW  COLUMNS,COLM,A
         SCKW  SQUASHED,SQUASH,A
         SCKW  ,LISTPRT,PUSH
         SCKW  ,NUMPRT,PUSH
         SCKW  EXECUTE,,A
         SCKW  CC,PRCC             ASA CHAR CONTROL
         SCKW  MC,PRMC             MACHINE CHAR CONTROL
         SCKW  OFFLINE,PROFF,A           LIST OFFLINE
         SCKW  ,TRYMORE
         SPACE
         DROP  R8
         EJECT
LSTWORK  XENTER 2,8,C32+SZR             SAVE REGS & SPACE
         L     R3,CPWK2            GET WORK AREA ADDR
         USING BLPRWA,R3
         ST    R7,CVSPARES
         TM    CPLFLG5,CPFNLST     NOLIST
         BO    EXITNOW             YES, EXIT
         AIF   ('&DCEC' NE '1').LBL09
         CLI   CPCMNM,C'R'         RUN COMMAND?
         BE    NEXTEST             YES -- NO MARKER
         TM    WAFLAG1,WAFOFF      LIST OFF LINE
         BO    NEXTEST             YES -- NO MARKER
.LBL09   DS    0H
         TM    WAFLAG1,WAFMRKN          IS MARKER IN AND ON
         BZ    NEXTEST                  NO
         CLC   0(1,R1),WAMRKCH          IS THIS MARKED LINE
         BE    HAVEMRK                  YES
NEXTEST  L     R5,CPSPAC                NO. BLANKS TO INSERT
         MVI   C32(R8),C' '             BLANK 100 COLS
         MVC   C32+1(99,R8),C32(R8)
         LR    R2,R1                    SAVE POINTER TO UNPRESSED LINE
         LR    R4,R0               SAVE UNPRESS COUNT
         LA    R6,C32(R5,R8)            POINT PAST ANY INSERTED BLANKS
         TM    CPLFLG5,CPFNONUM    TEST IF NONUMBER
         BNO   LISTUNUM            NO, GO TEST FOR UNNUMBERED
         LA    R5,11(,R5)          STEP UP LINE COUNT
         LA    R6,11(,R6)          POINT PAST BLANKS
         B     DOTEXT              GO PUT OUT TEXT
         SPACE
LISTUNUM TM    CPLFLG5,CPFUNUM     TEST UNUMBERED
         BO    DOTEXT              BRANCH YES
         L     R0,CPLCNO                LINE NO.
         CVCALL CVEXNO                  CONVERT
         MVC   0(9,R6),0(R1)           INTO LINE IMAGE
         LA    R5,11(,R5)              KICK CHAR COUNT
         LA    R6,11(,R6)              KICK POINTER
         TM    CPLFLG5,CPFNTEX          TEXT?
         BNZ   ALLTHER                  NO
DOTEXT   LTR   R4,R4                    ANY NON-BLANKS?
         BZ    ALLTHER                  NO
         LA    R0,0(R4,R5)              TOTAL COUNT
         CH    R0,=Y(MXPRTSZ+11)        UP TO 144 OK
         BNH   COUNTOK
         LH    R4,=Y(MXPRTSZ+11)        TRUNCATE
         SR    R4,R5                    AT 144 CHARS
COUNTOK  SR    R0,R0
         TM    WAFLAG1,WALOWCOL
         BZ    HICOL             NO
         LH    R0,CPWK1+2
         BCTR  R0,R0
         CR    R4,R0
         BH    HICOL
         LR    R0,R4
HICOL    TM    WAFLAG1,WAHICOL   IS UPPER
         BZ    NOCOL             NO
         LH    R1,CPWK1
         CR    R4,R1             IS UPPER GT LIM
         BNH   NOCOL             YES
         LR    R4,R1
NOCOL    SR    R4,R0             SET LEN
         AR    R2,R0             SET START PNT
         ST    R5,CPWK5
         ST    R3,CPWK3
         BAL   R14,SQUASHIT             SQUASH
         L     R3,CPWK3
         L     R5,CPWK5
         LA    R5,0(R4,R5)              TOTAL COUNT
         EX    R4,MVCTEXT               MOVE TEXT CHARS
ALLTHER  LR    R0,R5                    COUNT
         LA    R1,C32(,R8)              LOCATION
         TM    CPLFLG5,CPFUNUM          NEED UNNUMB + TWLNS
         BZ    OUTPNOW             DON'T HAVE UNUM
         TM    WAFLAG1,WAFTWLN
         BO    SPECHAN                  HAVE THEM
         AIF   ('&DCEC' NE '1').LBL10
OUTPNOW  EQU   *
         CLI   CPCMNM,C'R'         RUN COMMAND??
         BE    SUBONE              YES - GO SUBMIT IT
         TM    WAFLAG1,WAFOFF      LIST OFF LINE
         BO    SUBONE              YES - GO SUBMIT IT
         TSEG  (1),(0),W           TO MESSAGE
         AGO   .LBL11
.LBL10   DS    0H
OUTPNOW  TSEG  (1),(0),W                TO MESSAGE
.LBL11   DS    0H
         BNP   EXITNOW                  SCRAM
         B     CVGETCOM                 CALL COMMAND PROCESSOR
         AIF   ('&DCEC' NE '1').LBL12
SUBONE   EQU   *                   SUBMIT TO HASP RTN
         TM    CPLFLG5,CPFUNUM     UNNUMBERED SPEC??
         BO    OKASIS              YES - DON'T NUMBER
         TM    WAFLAG1,WAFOFF      LIST OFF LINE
         BO    OKASIS             ALLOW RUN
         CLC   83(8,1),=C' '       NUMBER IN 73-80
         BNE   *+10                YES LEAVE ALONE
         MVC   83(8,1),1(1)        MOVE WYL # TO 73-80
         LA    1,11(1)             POINT TO TEXT
OKASIS   EQU   *
         L     R7,CVSPARES          RESTORE ADDRESSABILITY
         MVI   BUF,C' '       CLEAR LINE
         MVC   BUF+1(254),BUF
         LR    R2,R0            FOR EXECUTE
         BCTR  R2,R0
         EX    R2,MVLINE0       MOVE DEFAULT TO RUN
         TM    WAFLAG1,WAFOFF  IS IT LIST OFF
         BZ    OKPUTIT         OK PUT IT AS IS
         TM    WYLRDR+25,6     MC OR CC
         BZ    OKPUTIT         NO LEAVE ALONE
         EX    R2,MVLINE1      MOVE LINE WITHOUT CC
         MVC   CCHAR,0(R1)        MOVE CONTROL CHAR
OKPUTIT  PUT   RPL=RPL            PUT OUT RECORD
         L     R15,WAOFFCNT         GET COUNT
         LA    R15,1(,R15)       ADD 1
         ST    R15,WAOFFCNT         SAVE IT
         TM    WAFLAG1,WAFCAN   TEST FOR CANCEL
         BO    CANCEL           YES CANCEL
         L     15,SWITCH           RELOAD R15 FOR DESPOT
         L     R15,0(R15)
         B     EXITNOW             GO BACK TO DESPOT UNTIL DONE
MVLINE0  MVC   BUF(0),0(R1)     MOVE FOR RUN
MVLINE1  MVC   BUF(0),1(R1)     MOVE FOR LISTOFF
.LBL12   DS    0H
         SPACE 3
* THE FOLLOWING SUBROUTINE SQUASHES MULTIPLE BLANKS IN THE
* LINE PASSED TO IT IN R0-R1 IF THE SQUASH OPTION WAS GIVEN
*        NOTE THAT THE ROUTINE DESTROYS R2,R4,R5, AND R6
         SPACE
SQUASHIT TM    WAFLAG1,WAFSQUSH    WAS SQUASH   OPTION GIVEN
         BER   R14                 NO, RETURN
         LTR   R5,R4               SET OLD LENGTH IN R5 AND TEST
         BZR   R14                 NO SQUASH  NEEDED IF NULL LINE
         LR    R1,R2               SET START POSITION
FNDBLK   LA    R3,1(,R1)           SET POSSIBLE SQUSH MOVE POINT
FNDNBLKL CLI   0(R1),C' '          LOOP FOR END OF BLANKS
         BNE   FNDNBLK             BR IF NOT BLANK
         LA    R1,1(,R1)           STEP TO NEXT POSITION
         BCT   R5,FNDNBLKL         DECR COUNT AND LOOP
         SR    R1,R3               BLANKS ENDED TEXT - LEAVE
         BNPR  R14                    1 BLANK AT END AND
         SR    R4,R1                  EXIT SQUASH
         BR    R14
         SPACE
FNDNBLK  LR    R0,R1               GET NO OF BLANKS
         SR    R0,R3                   TO SQUASH
         BNP   FNDBLKL             NONE, SKIP MVC AND ADJUSTMENT
         EX    R5,MVCTEXX          MOVE TEXT LEFT
         SR    R4,R0               UPDATE SQUASHED   COUNT
         LR    R1,R3               RESET R2 TO REST OF LINE
FNDBLKL  CLI   0(R1),C' '          FIND START OF NEXT BLANK FIELD
         BE    FNDBLK              GOT IT, GO TRY TO SQUASH
         LA    R1,1(,R1)           STEP TO NEXT CHAR
         BCT   R5,FNDBLKL          DECR COUNT AND LOOP
         BR    R14                 DONE WITH SQUASH, RETURN
         SPACE 3
EXITNOW  XEXIT 2,8                      SCRAM
         EJECT
SPECHAN  TM    WAFLAG1,WAF2LNS          2ND OF TWO LINES INTO ON
         BZ    CCKLN1                   NO, SEE IF FIRST
         NI    WAFLAG1,255-WAF2LNS      RESET FLAG
         B     OUTPNOW                  AND PUT OUT JOINED LINE
         SPACE
CCKLN1   CLC   0(1,R1),WA2LNCH          IS IT INDICATOR FOR TWOL
         BNE   OUTPNOW                  NO, SINGLE LINE
         LA    R1,1(,R1)                MOVE POINTER
         BCTR  R0,0                     DECREMENT COUNTER
         OI    WAFLAG1,WAF2LNS          SET SECOND PART OF LINE
         TSEG  (1),(0)                  INTO OUTPUTTER
         B     EXITNOW                  GO GET REST
         SPACE
HAVEMRK  TREDE                         WAIT FOR CARRIAGE RET (O
         BP    CVGETCOM                 WANTS TO STOP
         B     EXITNOW                  CONTINUE
         SPACE 3
MVCTEXT  MVC   0(0,R6),0(R2)            MOVE TEXT TO ASSEMBLY AREA
MVCTEXX  MVC   0(0,R3),0(R1)            SQUISH TEXT MOVE
         AIF   ('&DCEC' NE '1').LBL07
         USING *,R15               TEMP ADDRESSABILITY
ATTN     LR    R7,R15
         DROP  R15
         USING ATTN,R7             PICK UP REAL ADDRESSABILITY
         L     R3,8(R1)           POINT TO CP
         OI    WAFLAG1,WAFCAN      TURN ON CANCEL FLAG
         LA    R15,8
         BR    R14
CANCEL   DS    0H
         BALR  R7,R0
         USING *,R7
         TM    WAFLAG1,WAFOFF      LIST OFF LINE
         BO    CLOSEIT               YES - SET FOR DESPOT
         MVI   BUF,C' '        BLANK RTB
         MVC   BUF+1(254),BUF
         MVC   BUF,=C'/*DEL'   INSURE DELETE
         PUT   RPL=RPL          WRITE TRAILOR RECORD
CLOSEIT  CLOSE (WYLRDR,FREE)         CLOSE AND FREE IT
         STAX
         B     CVGETCOM            DONE GET OUT
         DS    0F
*SWITCH   DC   A(RUONLAD)
RUNINT   DC    C'RUN/LIST OFF INTERRUPTED'
         DS    0F
RUONLAD  DC  AL1(DESRTRN+LOCATRTN+DESMATCH+UNPRST),AL3(LSTWORK)
         COPY  DAIRINT
HEX      DC   C'0123456789ABCDEF'
*COMMAREA DC   F'0'               INTRDR COMMUNICATIONS AREA
*  ABOVE AREA MOVED TO CVTSO FOR REENTERABILITY
.LBL07   DS    0H
         SPACE
         DROP  R3
         SPACE 3
         LTORG
         EJECT
         COPY  WYLCONST
         EJECT
         COMMON ,
         EJECT
         BLPRWA
         EJECT
WDWA     WDIOWA DSECT
         SPACE
         END
./ ADD NAME=CR,SSI=00000002
CR       TITLE 'WYLTSO CONVERSION ROUTINES'
* PROPERTY OF C. U. C. C. A.
         SPACE
CR       CSECT
         SPACE
* REGISTER USAGE
         SPACE
WAR      EQU   8
DR       EQU   6
RR       EQU   4
TR       EQU   3
SR       EQU   2
         SPACE
         USING WA,WAR
         USING DEC,DR
         EJECT
* DECIMAL TO BINARY CONVERSION
* R1 POINTS TO A DECIMAL STRING, R0 CONTAINS THE LENGTH
* R15 WILL CONTAIN THE RESULTING INTEGER
         SPACE
DTB      XENTER 2,8
         SR    15,15                   CLEAR RESULT
DTBL     LTR   0,0                     DONE?
         BNP   DTBX
         CLI   0(1),C'0'               DIGIT?
         BL    DTBX                    BR IF TOO LOW
         CLI   0(1),C'9'
         BH    DTBX                    BR IF TOO HIGH
         SR    SR,SR                   GET VALUE
         IC    SR,0(,1)
         SL    SR,=A(C'0')
         MH    15,=H'10'               BUILD RESULT
         ALR   15,SR
         LA    1,1(,1)
         BCTR  0,0
         B     DTBL
         SPACE
DTBX     XEXIT 2,8
         EJECT
* HEXADECIMAL TO BINARY CONVERSION
* R1 POINTS TO A HEX STRING, R0 CONTAINS THE LENGTH
* R15 WILL CONTAIN THE RESULTING INTEGER
         SPACE
XTB      XENTER 2,8
         SR    15,15
XTBL     LTR   0,0                     DONE?
         BNP   XTBX                    BR IF SO
         SR    SR,SR
         IC    SR,0(,1)                PICK UP DIGIT
         CLI   0(1),C'A'
         BL    XTBN
         CLI   0(1),C'F'
         BH    XTBN
         SL    SR,=A(C'A'-10)
         B     XTBB
         SPACE
XTBN     CLI   0(1),C'0'
         BL    XTBX
         CLI   0(1),C'9'
         BH    XTBX
         SL    SR,=A(C'0')
XTBB     SLL   15,4                    ADD NEW DIGIT IN
         OR    15,SR
         LA    1,1(,1)                 NEXT DIGIT
         BCTR  0,0
         B     XTBL
         SPACE
XTBX     XEXIT 2,8
         EJECT
* BINARY TO DECIMAL CONVERSION
* R15 CONTAINS AN INTEGER, R1 POINTS TO A AREA FOR THE RESULT
* IF R0 IS 0 MINIMUM LENGTH NECESSARY IS USED
* IF R0 IS POSITIVE THE RESULT IS RIGHT JUSTIFIED IN THE
* AREA WITH THAT LENGTH
         SPACE
BTD      XENTER 2,8
         LA    DR,DW                   GET A DOUBLE WORD
         N     DR,=XL4'FFFFF8'
         CVD   15,DEC                  CONVERT NUMBER TO PACKED
         MVC   HEXS(16),ED15           EDIT MASK
         LR    RR,1                    SAVE RESULT LOC.
         LA    1,HEXS+15
         EDMK  HEXS(16),DEC
         LTR   15,15                   NEGATIVE?
         BNM   *+10                    BR IF NOT
         BCTR  1,0                     PUT IN A SIGN
         MVI   0(1),C'-'
         LA    TR,HEXS+16              COMPUTE ACTUAL LENGTH
         SR    TR,1
         LR    1,RR                    RESTORE RESULT POINTER
         LTR   0,0                     FIELD SIZE GIVEN?
         BP    *+8                     BR IF SO
         LCR   0,0
         AR    0,TR                    COMPUTE FIELD SIZE
         LR    TR,0                    FIELD LENGTH
         LA    SR,HEXS+16              COMPUTE STARTING ADDR
         SR    SR,TR
         BCTR  TR,0                    FOR MVC
         EX    TR,BTDMV                MOVE TO RESULT LOC.
         XEXIT 2,8
         SPACE
BTDMV    MVC   0(0,1),0(SR)
         SPACE
ED15     DC    C' ',13X'20',X'2120'
         EJECT
* BINARY TO HEXADECIMAL CONVERSION
* R15 CONTAINS AN INTEGER, R1 POINTS TO AN AREA FOR THE RESULT
* R0 CONTAINS THE REQUESTED LENGTH OF THE RESULT
         SPACE
BTX      XENTER 2,8
         ST    15,HEXW                 WORD TO BE CONVERTED
         UNPK  HEXS(9),HEXW(5)         TO ZONED FORMAT
         TR    HEXS(8),HEXTBL-C'0'     TO HEX FORMAT
         LR    TR,0                    LENGTH
         LA    SR,HEXS+8               COMPUTE ADDR TO MOVE FROM
         SR    SR,TR
         BCTR  TR,0
         EX    TR,HEXMV                MOVE TO USERS AREA
         XEXIT 2,8
         SPACE
HEXMV    MVC   0(0,1),0(SR)
         EJECT
* CONVERT DATE TO PRINTABLE FORMAT
* R0 CONTAINS THE DATE IN 00YYDDDS FORM
* THE RESULT IS PUT INTO AN AREA POINTED BY R1
         SPACE
DATE     XENTER 2,8
         LA    DR,DW                   FIND DOUBLE WORD
         N     DR,=XL4'FFFFF8'
         ST    0,DEC+4                 PLANT DATE
         UNPK  DEC(3),DEC+5(2)         CONVERT YEAR
         MVC   6(2,1),DEC              PUT INTO AREA
         PACK  DEC(8),6(2,1)           REPACK IT
         CVB   TR,DEC                  CONVERT TO BINARY
         ST    0,DEC+4                 STORE ORIG VALUE AGAIN
         XC    DEC(6),DEC              CLEAR FOR CVB
         NI    DEC+7,X'F0'             SET SIGN
         OI    DEC+7,X'0C'
         CVB   SR,DEC                  DAY OF YEAR
         CL    SR,=A(31+28)            BEFORE FEB 28?
         BNH   LEAP                    BR IF SO
         N     TR,=F'3'                    FOR
         BZ    LEAP                    BR IF SO
         LA    SR,1(,SR)               ALLOW FOR FEB 29
LEAP     LA    RR,10                   SET MONTH TO JAN
         LA    TR,MONTHS
ML       CH    SR,0(,TR)               THIS MONTH?
         BNH   MF                      BR IF SO
         SH    SR,0(,TR)               TRY NEXT MONTH
         LA    RR,10(,RR)
         LA    TR,2(,TR)
         B     ML
         SPACE
MF       CVD   RR,DEC                  CONVERT MONTH
         UNPK  0(3,1),DEC+6(2)
         MH    SR,=H'10'
         CVD   SR,DEC                  CONVERT DAY
         UNPK  3(3,1),DEC+6(2)
         MVI   2(1),C'/'
         MVI   5(1),C'/'
         XEXIT 2,8
         EJECT
* CONVERT TIME TO PRINTABLE FORMAT
* R0 CONTAINS THE TIME IN BINARY IN 100THS OF SECONDS
* R1 POINTS TO AN AREA TO PUT THE RESULTING TIME IN CHARS
         SPACE
TIME     XENTER 2,8
         LA    DR,DW                   FIND DOUBLE WORD
         N     DR,=XL4'FFFFF8'
         LR    TR,0
         SR    SR,SR
         D     SR,=F'100'              DISPOSE OF 100THS
         SR    SR,SR
         D     SR,=F'60'               GET SECONDS
         MH    SR,=H'10'
         CVD   SR,DEC
         UNPK  DEC(3),DEC+6(2)
         MVC   6(2,1),DEC
         SR    SR,SR
         D     SR,=F'60'               GET MINUTES
         MH    SR,=H'10'
         CVD   SR,DEC
         UNPK  3(3,1),DEC+6(2)
         MH    TR,=H'10'
         CVD   TR,DEC                  HOURS
         UNPK  0(3,1),DEC+6(2)
         MVI   2(1),C':'
         MVI   5(1),C':'
         XEXIT 2,8
         EJECT
* CONSTANTS
         SPACE
MONTHS   DC    H'31,29,31,30,31,30,31,31,30,31,30,31,999'
         SPACE
HEXTBL   DC    C'0123456789ABCDEF'
         SPACE 3
         LTORG
         EJECT
* WORK AREA
         SPACE
WA       DSECT
         XSA   2,8
         DS    F                       INSURANCE
DW       DS    2F                      DOUBLE WORD
HEXW     DS    F
HEXS     DS    CL16
         SPACE 3
DEC      DSECT
         DS    D
         SPACE
         END
./ ADD NAME=CVREAL,SSI=00000002
CVRL     TITLE 'WYLTSO COMMUNICATION VECTOR TABLE'
* PROPERTY OF C. U. C. C. A.
         SPACE
CVREAL   CSECT
         SPACE
*        USING CVSTART-X'C60',R12
         USING CVSTART,R12
         SPACE 3
         COPY  CVTSO
         EJECT
         COPY  CVUSER
         SPACE 3
JCB      DS    0F
         COPY  JCBTSO
         SPACE 3
         ROUTBLE ,
         EJECT
         COPY  WYLCONST
         SPACE
         END
./ ADD NAME=FSCR
         TITLE 'WYLBUR FULL SCREEN HANDLER'
*        WYLBUR FULL SCREEN INTERFACE FOR WYLTSO
*
*        WRITTEN FOR GHI
*
*
WYLFSCR  CSECT
         LA    R2,SIZESCR
         TPUT  SCREEN,(2),FULLSCR  ,     SEND 3270 SCREEN
         LTR   R15,R15
         BZ    SKIPRET
         B     RETURN
SKIPRET  EQU   *
         L     R2,AREAADD
BL       LA    R3,2048             2048
         XR    R4,R4
         L     R5,=XL4'40000000'
         MVCL  R2,R4
         LA    R3,2048             LOAD BACK LENGTH OF TGET
         L     R7,AREAADD
*
*  THE TGET MACRO WILL READ ALL MODIFIED FIELDS FROM THE
*    OUTPUTTED SCREEN. THE SEQUENCE OF INPUT FIELDS ARE :
*    KEY PRESSED,CURSER ADDRESS,BUFFER ADDRESS,DATA,
*    BUFFER ADDRESS,DATA.......
READSCR  EQU   *
         TGET  (R7),(R3),ASIS
         LR    R5,R15
         LTR   R5,R5
         BZ    SKIPZZZZ
         B     RETURN
SKIPZZZZ LR    R3,R7
         MVC   KEY(1),0(R3)        SAVE PFKEY
         CLI   KEY,X'6E'           RE-SHOW KEY
         BE    SENDSCRN            YES JUST RE-SEND SCREEN
         LR    R3,R7               SAVE ADDRESS OF GETMAINED DATA
         LA    R4,8                BCT COUNT FOR TRANSLATE
TRLOOP   TR    0(256,R3),HEXTABLE
         LA    R3,256(R3)          TR THE NEXT 256 BYTES
         BCT   R4,TRLOOP           DO IT FOR 2048 BYTES
         B     LINECHAN            #### SCAN LINE CHANGES ####
KEYS     L     R7,AREAADD          #### BEFORE COMMAND    ####
         CLI   KEY,X'7D'           ENTER KEY PRESSED?
         BE    TEST3270            YES, GO SCAN BUFFER
         LR    R1,R7               NO, MUST BE PFKEY...
         LA    R0,0                R0=0 IS PFKEY...R0=1 IS KEY COMMAND
         CALL  FSSPFK              GO SEE WHAT IT IS
*
TEST3270 EQU   *
         MVC   CURRADD(4),SAVECURR  COME HERE AFTER CHANGING LINES
*   R7 HAS ADDRESS OF INPUT AREA
*   R3 HAS LENGTH OF SCAN
*
         L     R7,AREAADD
         LA    R3,2048
INLOOP   CLC   0(3,R7),=XL3'11C1D5'  SCAN FOR COMMAND BUFFER
         BNE   SKIPCO
         B     HERECOMM
SKIPCO   LA    R7,1(R7)
         BCT   R3,INLOOP
         CLI   LINEFLAG,X'00'
         BE    DIRECRTN
         MVI   LINEFLAG,X'00'
         B     TPUTLOOP
*  IF NO COMMAND ENTERED, SCAN FOR CHANGED LINES
*
LINECHAN EQU   *
         MVC   FAKEIN(4),=C'0000'
         MVC   SAVECURR(4),CURRADD
         MVC   FAKELIN2(14),BLANKS
CHANGE01 L     R7,AREAADD
         MVI   LINEFLAG,X'00'
         LA    R3,2048
CHANGELO CLC   0(3,R7),=X'11C261'
         BE    CHANGE02
         CLC   0(3,R7),=X'11C5C1'
         BE    CHANGE02
         CLC   0(3,R7),=X'11C6D1'
         BE    CHANGE02
         CLC   0(3,R7),=X'11C761'
         BE    CHANGE02
         CLC   0(3,R7),=X'11C8F1'
         BE    CHANGE02
         CLC   0(3,R7),=X'114AC1'
         BE    CHANGE02
         CLC   0(3,R7),=X'114BD1'
         BE    CHANGE02
         CLC   0(3,R7),=X'114C61'
         BE    CHANGE02
         CLC   0(3,R7),=X'114DF1'
         BE    CHANGE02
         CLC   0(3,R7),=X'114FC1'
         BE    CHANGE02
         CLC   0(3,R7),=X'1150D1'
         BE    CHANGE02
         CLC   0(3,R7),=X'11D161'
         BE    CHANGE02
         CLC   0(3,R7),=X'11D2F1'
         BE    CHANGE02
         CLC   0(3,R7),=X'11D4C1'
         BE    CHANGE02
         CLC   0(3,R7),=X'11D5D1'
         BE    CHANGE02
         CLC   0(3,R7),=X'11D661'
         BE    CHANGE02
         CLC   0(3,R7),=X'11D7F1'
         BE    CHANGE02
         CLC   0(3,R7),=X'11D9C1'
         BE    CHANGE02
         CLC   0(3,R7),=X'115AD1'
         BE    CHANGE02
         CLC   0(3,R7),=X'115B61'
         BE    CHANGE02
         CLC   0(3,R7),=X'115CF1'
         BE    CHANGE02
CHANGE10 LA    R7,1(R7)
         BCT   R3,CHANGELO
         MVC   RESPONSE(50),BLANKS
         CLI   FAKELIN2,C' '
         BE    KEYS
         CLI   FAKELIN2+7,C' '
         BE    KEYS
GOODRANG ST    R7,SAVE7
         ST    R3,SAVE3
         LA    R7,FAKEBLK
         BAL   R14,SKIPLA14
         L     R7,SAVE7
         L     R3,SAVE3
*
         B     KEYS
CHANGE02 MVI   MODFLAG,X'01'
         L     R6,SAVES#
         LA    R6,1(R6)
         ST    R6,SAVES#
*        MVC  0(3,R7),=C'XXX'
         LA    R7,3(R7)
         END
./ ADD NAME=HELPLIST,SSI=00000159
         TITLE '    H E L P L I S T   -   V E R S I O N   1 . 2   '
************************************************************
*                                                          *
*              'HELPLIST' PROGRAM AT FPC                   *
*                                                          *
************************************************************
         REGS
         SPACE
*        PROGRAM. HELPLIST.
*        AUTHOR. UNKNOWN - FROM TOM GEE.
*        MODIFIOR. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. FEDERAL POWER COMMISSION.
*        DATE-UPDATED IN SOURCE LIBRARY. JANUARY 8 1974.
*        REMARKS.
*            DATE ADDED TO HEADING.
*            SUBCOMMAND NAMES PREFIXED WITH 'SUBCOMMAND - '.
*            INDENTATION CHANGED. CHECK FOR )X SYNTAX ADDED.
*            USER MACROS - EASYCOME,GEHEN,REGISTER
*
*        MODIFIOR. JERRY PITTENGER, PLANNING RESEARCH CORPORATION.
*        INSTALLATION. OFFICE OF MANAGEMENT AND BUDGET (OMB).
*        DATE-UPDATED IN SOURCE LIBRARY. AUGUST 17 1977.
*        REMARKS:
*            DATE REMOVED FROM HEADING. MULTIPLE HEADING LINES.
*            CHANGE FROM )O OR )X OR )F HIGHLIGHTED BETTER.
*            ALLOW NO ALIAS TO PRINT BY USING BLDL AGAINST
*            THE SYSUT1 LIBRARY/LIBRARIES DIRECTORY. INSERTED
*            SUBCOMMANDS ON SEPARATE PAGES WITH THE SUBCOMMAND
*            NAME IN THE HEADER BLOCK.
         EJECT
*            CURRENT REGISTER USAGE:
*
*            R0 = SYSTEM PARM REG
*            R1 = SYSTEM PARM REG
*            R2 = PROGRAM PARM REG + WORK REG
*            R3 = WORK REG
*            R4 = RECORD LENGTH
*            R5 = BLOCKSIZE
*            R6 = SPARE
*            R7 = SPARE
*            R8 = OFFSET INTO MEMBER DSECT
*            R9 = WORK REG
*           R10 = ADDRESS OF 'LINE'
*           R11 = I/O AREA BASE
*           R12 = PROGRAM BASE
*           R13 = SAVE AREA POINTER
*           R14 = SYSTEM RETURN ADDR
*           R15 = PROGRAM RETURN ADDR
*
*        NON-STANDARD MACROS USED: KOMMEN AND GEHEN
*
         EJECT
HELPLIST CSECT
         STM   14,12,12(13)
         LR    12,15
         USING HELPLIST,12
         LA    11,SAVEEM
         ST    13,4(11)
         ST    11,8(13)
         LR    13,11
         L     2,0(,1)             REG 2 --> PARM
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1
         LA    R10,LINE                POINT R10 TO 'LINE'
         MVI   HEAD-1,C' '
         OPEN  (IN,,HELP,,OUT,OUTPUT)
         TM    IN+48,X'10'             OPEN OK?
         BO    PARMCHK                 YES....SYSIN SPECIFIED
         BZ    OPENERR                 NO....CAN'T OPEN
PARMCHK  CLI   1(2),0              PARM?
         BE    NOPARM
         LH    3,0(,2)             R3  =  LENGTH OF PARM
         CLI   1(2),9              PARM LENGTH GREATER THAN 9?
         BNH   *+8                 NO - BRANCH
         LA    3,9                 YES - REDUCE TO 9
         BCTR  3,0                 LENGTH MINUS 1 FOR EX
NOPARM   EQU   *
         LH    R0,HELP+62               BLOCKSIZE
         GETMAIN R,LV=(0)
         LR    R11,R1                   SAVE POINTER TO I/O AREA
CNTRL    EQU   *
         GET   IN,REC                   READ A CONTROL CARD
         MVC   MEM1(8),REC              MOVE TO BLDL AREA
         MVC   MEMNAME,REC              SAVE DESIRED MEMBER NAME
         LA    R1,HELP                  POINT TO DCB FOR BLDL
         LA    R0,LSTSTRT               POINT TO BLDL LIST
         BLDL  (R1),(R0)                GO GET IT
         B     *+4(R15)                 TEST RETURN CODE
         B     MOVE                     GOOD MEMBER
         B     BADONE                   ALIAS OR INVALID MEMBER
         B     BLDLERR                  GO ISSUE ABEND..PERM I/O ERROR
BADONE   EQU   *
         MVC   MEM1+8(6),=X'000000000000' ZERO OUT BLDL TTR FIELD
         B     CNTRL                    GO GET THE NEXT MEMBER
MOVE     TM    MEM1+13,X'80'            IS IT AN ALIAS???
         BO    INDICATE                 ALIAS GO INDICATE SO
         OR    R7,R7                    ZERO OUT R7
         OR    R6,R6                    ZERO OUT R6
         LA    R6,8                     LOAD A CONSTANT
         LA    R14,REC                  LOAD ADDRESS TO CHECK
         LA    R6,0(R6,R14)             COMBINE THE TWO
COMPR    CLI   0(R6),X'40'              CHECK FOR A BLANK
         BNE   COMPDONE                 IF NOT...FINISHED
         CR    R6,R14                   FINISHED YET???
         BE    COMPDONE                 YES
         BCT   R6,COMPR                 DOWN 1 AND CHECK AGAIN
COMPDONE EQU   *                        R6 ALREADY -1 FOR EXECUTE
         SR    R6,R14                   LEAVE THE NUMBER OF CHARS
         STC   R6,MEMLEN                SAVE MEMBER LENGTH FOR EXEC
         LA    R7,8                     LOAD A CONSTANT
         LA    R6,1(R6)                 PUT R6 BACK UP
         SR    R7,R6                    GET NUMBER OF BLANKS
         STC   R7,OFFSET                OFFSET FOR CENTERING ON HDR
         SRL   R7,1                     DIVIDE BY 2
         STC   R7,MEMOFFST              SAVE FOR OFFSETTING
         NI    OP,255-STILLSC           TELL EM NOT SUBCOMMAND ANYMORE
         NI    OP,255-SCSAVED           SUBCOMMAND NOT SAVED ANY MORE
         FIND  HELP,MEMNAME,D           FIND MEMBER
         B     *+4(R15)                 TEST RETURN CODE
         B     *+12                     GOOD RETURN
         B     BADNAME                  INVALID NAME
         B     IOERROR                  I/O ERROR
RDSETUP  NI    OP,255-OPINDENT-OPCMDS   TURN OFF INDENTION & CMDS
         CLC   MEMNAME,=CL8'COMMANDS'   COMMANDS?
         BNE   *+8                      NO, ....
         OI    OP,OPCMDS                YES, INDICATE SUCH
         TM    OP,ALIAS                 ALIAS ALREADY CAUSED TOF???
         BO    READEM                   YES, NO HEADER
         ZAP   CTRLIN,=P'0'        FORCE HEADING
READEM   EQU   *
          NI    OP,255-ALIAS             TURN OFF ALIAS FLAG
         READ  DECB,SF,HELP,(R11),'S'
         CHECK DECB
         LH    R5,HELP+62               BLOCK SIZE
         L     R1,DECB+16               A(IOB)
         SH    R5,14(R1)                MINUS RESIDUAL CCW COUNT
         BCTR  R5,0                     DOWN ONE
         LR    R3,R11                   REC START
         LA    R4,80                    REC LENGTH
         LA    R5,0(R3,R5)              REC END
PROCESS  TM    OP,OPCMDS                CMDS?
         BZ    PROCESSA                 NO, CONTINUE
         MVC   LINEPL(72),0(R3)         YES, COPY IN RECORD
         B     LISTER                   GO LIST IT
PROCESSA CLC   0(2,R3),=C')F'           FUNCTION
         BE    MAJOR
         CLC   0(2,R3),=C')S'           SUBCOMMANDS
         BE    MAJOR
         CLC   0(2,R3),=C')X'           SYNTAX
         BE    MAJOR
         CLC   0(2,R3),=C')O'           OPERANDS
         BE    INDENT
         CLI   0(R3),C'='               SUB COMMAND
         BNE   CHEKOP                   NO
         OI    OP,SUBCOMD               TELL EM SUBCOMD
         NI    OP,255-SCSAVED           TELL EM NEW SUBCOMMAND
         NI    OP,255-STILLSC           NOT CONTINUED SUBCMD
         B     SUBCMD                   GO SEPARATE
CHEKOP   CLC   0(2,R3),=C'))'           YES - OPERAND?
         BE    NOTDUMB                  YES - BRANCH
         CLC   0(2,R3),=C'  '           NO, CHECK FOR LACK OF NEATNESS
         BE    NOTDUMB                  VERY GOOD - BRANCH
         MVC   LINEIND(72),0(R3)  SOME DUMMY DIDN'T LEAVE 1ST 2 BLANK
         B     LISTER
NOTDUMB  MVC   LINEIND(70),2(R3)        YES, SET LINE WITH INDENTION
         B     LISTER
NORMAL   TM    OP,MAJ                   MAJOR SEPARATION???
         BNO   LISTER1                  NO....LIST IT
         MVC   LINEMAJ(70),2(R3)        MOVE IN DATA
         MVC   3(3,R10),=C'***'          INSERT HIGHLIGHTER
         MVC   18(3,R10),=C'***'         INSERT HIGHLIGHTER
         NI    OP,255-MAJ               TURN OFF SWITCH
         B     LISTER
LISTER1  MVC   LINEPL(70),2(R3)
LISTER   CP    CTRLIN,CTRMAX
         BNH   *+10
         ZAP   CTRLIN,=P'0'
         TM    OP,CMDSEP                NEED COMMAND NAME???
         BO    HEADALI                  YES...GO DO IT
         CP    CTRLIN,=P'0'
         BE    HEADING1                 GO SEE IF STILL SUBCOMMAND
REPORTD  AP    CTRLIN,=P'1'
         CLI   LINE,C'0'           DOUBLE SPACING?
         BNE   *+10                NO - BRANCH AROUND AP
         AP    CTRLIN,=P'1'
         TM    OP,SUBCOMD                IS IT SUBCOMMANDS???
         BNO   PUTIT                     NO....LIST ASIS
         NI    OP,255-SUBCOMD            TURN OFF SWITCH
         MVC   3(3,R10),=C'***'          INSERT HIGHLIGHTER
PUTIT    PUT   OUT,LINE
         MVC   LINE,LINE-1         CLEAR LINE
BXLE     BXLE  R3,R4,PROCESS       SCAN ENTIRE BLOCK
         B     READEM                   READ ANOTHER BLOCK
HEADING1 TM    OP,STILLSC               IS IT STILL SUBCOMMAND????
         BO    SUBCMD                   YES.....GO DO IT THAT WAY
HEADING  MVC   HEAD,HEAD-1              CLEAR IT
         NI    OP,255-STILLSC           NOT SUBCOMMAND ANYMORE
         MVI   HEAD,C'1'                SET TO EJECT
         MVC   HEAD+2(60),ITELID         TOP OF PAGE ID
         PUT   OUT,HEAD                 WRITE IT
HEADALI  AP    CTRLIN,=P'5'             1 EA. FOR HDR + HIGHLIGHTERS
         NI    OP,255-CMDSEP            TURN OFF COMMAND PRINT SW
* THE OTHERS ARE ALREADY TAKEN INTO ACCOUNT
         MVC   HEAD,HEAD-1              CLEAR LINE
         MVI   HEAD,C'0'                DOUBLE SPACE
         MVC   HEAD+35(10),=C'----------' COMMAND HIGHLIGHTER
         PUT   OUT,HEAD                 PUT IT
         MVI   HEAD,C' '                SET TO SINGLE SPACE
         MVC   HEAD+35(10),=C'          ' BLANK OUT HEADER
         OR    R6,R6                    ZERO OUT R6
         IC    R6,MEMOFFST              GET THE OFFSET FOR MOVE
         LA    R7,HEAD+36               PICK UP MOVE LOCATION
         LA    R7,0(R7,R6)              LOAD R7 W/LOCATION + OFFSET
         IC    R6,MEMLEN                PICK UP LENGTH TO MOVE
MOVEMEM  MVC   0(0,R7),MEMNAME          EXECUTED BELOW
         EX    R6,*-6                   MOVE IN THE MEMBER NAME
         PUT   OUT,HEAD                 PUT OUT CENTERED NAME
         MVC   HEAD+35(10),=C'----------' COMMAND HIGHLIGHTER
         PUT   OUT,HEAD                 PUT IT
         MVC   HEAD,HEAD-1              BLANK OUT HEAD
         MVI   HEAD,C'-'                SET TO TRIPLE SPACE
         PUT   OUT,HEAD                 WRITE BLANK HEADS
         B     REPORTD
MAJOR    NI    OP,255-OPINDENT          TURN OFF INDENTION
         MVI   CC,C'0'                  DOUBLE SPACE
         OI    OP,MAJ                   TURN ON SWITCH
         B     NORMAL
SUBCMD   TM    OP,STILLSC               IS IT STILL SUBCOMMAND???
         BO    SUBCMD1                  YES, LONG MEMBER
         CP    CTRLIN,=P'60'            ENOUGH ROOM FOR NEW ONE??
         BL    ADD5                     YES, GO GETEM
SUBCMD1  MVC   HEAD,HEAD-1              CLEAR IT
NEWPG    ZAP   CTRLIN,=P'0'             REINITIALIZE LINE COUNT
         MVI   HEAD,C'1'                SET TO EJECT
         MVC   HEAD+2(59),ITELID         TOP OF PAGE ID
         PUT   OUT,HEAD                 WRITE IT
ADD5     AP    CTRLIN,=P'5'             1 EA. FOR HDR + HIGHLIGHTERS
* THE OTHERS ARE ALREADY TAKEN INTO ACCOUNT
         MVC   HEAD,HEAD-1              CLEAR LINE
         MVI   HEAD,C'0'                DOUBLE SPACE
         MVC   HEAD+27(27),DASHES       COMMAND HIGHLIGHTER
         PUT   OUT,HEAD                 PUT IT
         MVC   HEAD,HEAD-1              CLEAR THE DASHES
         MVI   HEAD,C' '                SET TO SINGLE SPACE
         OR    R6,R6                    CLEAR IT
         MVI   HEAD+41,C'-'             PUT IN THE SEPARATOR
         LA    R7,HEAD+28               PICK UP LOCATION
         IC    R6,OFFSET                PICK UP THE OFFSET
         LA    R7,0(R6,R7)              POINT R7 TO LOCATION + OFFSET
         IC    R6,MEMLEN                PICK UP LENGTH TO MOVE
MEMMVC   MVC   0(0,R7),MEMNAME          EXECUTED BELOW
         EX    R6,*-6                   MOVE IN MEMNAME
* PRESUPPOSES THAT SUBCOMMAND HAS AN '=' SIGN IN FRONT OF IT
         TM    OP,SCSAVED               HAS SUBCOMMAND BEEN SAVED???
         BNO   R3MOVE                   IF NOT GET OFF OF R3
         MVC   HEAD+44(8),SCSAVE        HAS BEEN SAVED....GET IT
         B     DONEMOVE                 GO AROUND R3 MOVE
R3MOVE   MVC   HEAD+44(8),1(R3)         MOVE IN SUBCOMMAND NAME
         MVC   SCSAVE(8),1(R3)          SAVE THE SUBCOMMAND NAME
         OI    OP,SCSAVED               AND TURN ON THE FLAG
DONEMOVE LA    R14,HEAD+44              SET UP FOR '=' CHECK
         LA    R15,8                    LENGTH TO CHECK
SUBCX    CLI   0(R14),C'='              IS IT AN '=' SIGN
         BE    SUBCX1                   YES....GO BLANK IT
         LA    R14,1(R14)               BUMP TO NEXT CHAR
         BCT   R15,SUBCX                GO CHECK FURTHER
SUBCX1   MVC   0(9,R14),=C'         '   MOVE IN BLANKS
         PUT   OUT,HEAD                 WRITE IT
         MVC   HEAD+27(27),DASHES       HIGHLIGHT IT
         PUT   OUT,HEAD                 WRITE EM
         MVC   HEAD,HEAD-1              BLANK IT
         MVI   LINE,C'-'                SET FOR TRIPLE SPACE
         OI    OP,STILLSC               SET SUBCOMMAND HEADER SWITCH
         TM    OP,SUBCOMD               LONG MEMBER OR NEW SUBCOMMAND?
         BNO   REPORTD                  LONG MEMBER...LINE PRESENT
         NI    OP,255-SUBCOMD           TURN OFF THE SWITCH
         B     BXLE                     GO GET SOME MORE
INDENT   OI    OP,OPINDENT              TURN ON INDENTION
         MVI   CC,C'0'                  DOUBLE SPACE
         OI    OP,MAJ                   TURN ON SWITCH
         B     NORMAL
FINI     DS    0H
         CLOSE (OUT,,HELP,,IN)
         L     13,4(13)
         LM    14,12,12(13)
         SR    R15,R15
         BR    R14
         SPACE 2
BADNAME  DS    0H
         MVC   LINE+10(L'ENAME),ENAME   INVALID MEMBER NAME
         B     MSGOUT
IOERROR  DS    0H
         MVC   LINE+10(L'EIO),EIO       I/O ERROR
MSGOUT   MVC   LINE+1(8),MEMNAME        PUT IN MEMBER NAME
         MVI   CC,C'1'                  EJECT A PAGE
         PUT   OUT,LINE                 PRINT ERROR MSG
         MVC   LINE,LINE-1              CLEAR OUT LINE
         B     CNTRL
INDICATE EQU   *                        ALIAS PROCESSING
         MVC   HEAD,HEAD-1              CLEAR LINE
         TM    OP,ALIAS                 BEEN HERE BEFORE???
         BNO   INDIC1                   NO, FORCE HEADING
         MVI   HEAD,C'0'                DOUBLE SPACE
         B     INDIC2                   NO HEADING
INDIC1   MVI   HEAD,C'1'                FORCE HEADING
         NI    OP,255-STILLSC           NOT SUBCMD ANYMORE
         MVC   HEAD+2(59),ITELID        INSTALLATION CODE
         PUT   OUT,HEAD
         MVC   HEAD,HEAD-1
         MVI   HEAD,C'0'                DOUBLE SPACE
         ZAP   CTRLIN,=P'0'             RESET LINE COUNT
         AP    CTRLIN,=P'1'
INDIC2   MVC   HEAD+27(27),DASHES       HIGHLITE
         PUT   OUT,HEAD
         MVC   HEAD,HEAD-1              CLEAR LINE
         MVI   HEAD,C' '                SINGLE SPACE
         MVC   HEAD+30(8),MEMNAME       MOVE IN MEMBER NAME
         MVC   HEAD+38(12),=C' IS AN ALIAS'
         PUT   OUT,HEAD
         MVC   HEAD,HEAD-1              CLEAR LINE
         MVC   HEAD+27(27),DASHES       HIGHLITE
         PUT   OUT,HEAD
         MVC   HEAD,HEAD-1              CLEAR LINE
         MVI   HEAD,C' '                SPACE
         PUT   OUT,HEAD
         AP    CTRLIN,=P'5'             MAKE LINECT CORRECT
         OI    OP,ALIAS                 SAY WE HAVE BEEN HERE
         OI    OP,CMDSEP                PRINT COMMAND NAME ALSO
         B     CNTRL                    GO GET NEXT MEMBER
         EJECT
         DS    0D
MEMNAME  DC    CL8'0'
REC      DC    CL80'0'
         DC    C'0'
LINE     DS    0CL133
CC       DC    CL1'0'
         DC    CL132'0'
LINEMAJ  EQU   LINE+6
LINEPL   EQU   LINE+8
LINEIND  EQU   LINEPL
         DC    CL1'0'
HEAD     DC    CL133'0'
ENAME    DC    C'- INVALID AS SPECIFIED'
EIO      DC    C'- I/O ERROR OCCURRED WHILE LOCATING NAME'
H9       DC    H'9'
DASHES   DC    27C'-'       SUBCOMMAND HIGHLIGHTER
MEMLEN   DC    B'0'
OFFSET   DC    B'0'
MEMOFFST DC    B'0'
OP       DC    B'0'
OPINDENT EQU   B'10000000'
OPCMDS   EQU   B'01000000'
STILLSC  EQU   B'00100000'  SUBCOMMAND HEADER FLAG
SCSAVED  EQU   B'00010000'  SUBCOMMAND HAS BEEN SAVED FLAG
ALIAS    EQU   B'00001000'  SPARE FLAG
MAJ      EQU   B'00000100'  MAJOR SEPARATION
SUBCOMD  EQU   B'00000010'  SUBCOMMAND SEPARATION
CMDSEP   EQU   B'00000001'  PRINT COMMAND NAME FLAG
SCSAVE   DC    D'0'         SUBCOMMAND SAVE AREA
BLKADDR  DC    F'0'
CTRMAX   DC    P'076'
CTRLIN   DC    P'000'
         SPACE
         SPACE
         PRINT NOGEN
         LTORG
         SPACE
         DS    0D
LSTSTRT  DC    X'0001000E'   TELL BLDL MAX NUMBER AND LENGTH
MEM1     DC    2F'0'
DUMMYFW  DC    F'0'
DUMMYHW  DC    H'0'
BLDLERR  ABEND 2222,DUMP     BLDL ERROR
OPENERR  ABEND 1111,DUMP     CAN'T OPEN
ITELID  DC C'                    ITEL - TSO COMMAND LANGUAGE REFERENCE'
SAVEEM   DC    18F'0'        SAVE AREA
IN       DCB   DSORG=PS,MACRF=GM,EODAD=FINI,DDNAME=SYSIN
         SPACE
OUT      DCB DSORG=PS,MACRF=PM,RECFM=FA,BLKSIZE=133,DDNAME=SYSPRINT
         SPACE
HELP     DCB   DSORG=PO,MACRF=R,EODAD=CNTRL,DDNAME=SYSUT1
         END
./ ADD NAME=INIT     0103-80189-80234-0730-01014-00949-01014-$SYS13  00
INIT     TITLE 'WYLTSO INITIALIZATION ROUTINE'
*  WYLBUR MVS/TSO VERSION 1.1
         SPACE
         COPY  PMAC
         SPACE
         USING CPAREA,R12
         SPACE 3
         ENTRY INITWYL
INITWYL  CSECT
         DC    24XL256'00'         DUMMY MODULE
         ORG   INITWYL
         LR    R7,R15              GET ADDRESSABILITY
         LR    R4,R1               ADDRESS OF REAL CV
         LR    R8,R14              RETURN ADDRESS
         SPACE
*** WARNING *** R8 MUST NOT BE ALTERED *** WARNING ***
         SPACE
         USING INITWYL,R7
         L     R0,=A(CVCPSIZE)     DETERMINE GETMAIN SIZE
         A     R0,=F'1024'         FOR TRACE AREA
         A     R0,=A(PIOBSIZE)     FOR RECOVERY IOB
         GETMAIN R,LV=(0),PAGE       GO GET 'EM
         SPACE
* WE GOT IT IF WE SURVIVE TO GET HERE
         LR    R12,R1              POINT TO THE AREA
         LA    R13,CPWA
         SPACE
* CLEAR THE 'CP' PART OF THE AREA
         SLR   R0,R0               CLEAR FOR MVCL
         LR    R2,R1             AREA TO CLEAR
         LA    R1,0              FILL CHAR INTO REG 1
         LA    R3,CPSIZE          SIZE OF AREA TO CLEAR
         MVCL  R2,R0             CLEAR THE AREA
* COPY THE REAL CV INTO OUR AREA. R4 POINTS TO IT.
         LA    R3,CVSIZE            SIZE TO MOVE
         LR    R5,R3                ALSO IN REG 5
         LA    R2,CVSTART           AREA TO MOVE TO
         MVCL  R2,R4                MOVE IT
         SPACE
* CLEAR JCB FIELDS
         XC    JCBSTART(JCBSIZE),JCBSTART
         SPACE
*
COPYWA   LOAD  EP=WYLWA
         ST    R0,CVIOWA           SAVE ADDR OF WORK AREA
         ST    R11,CVRETURN        SAVE OS RETURN ADDR
         SPACE
* INITIALIZE THE TRACE AREA
         OFFSET R1,CVCPEND
         ST    R1,CVTRSTRT         START OF TABLE
         ST    R1,CVTRACE          CURRENT ENTRY
         LA    R2,1024-16(,R1)
         ST    R2,CVTREND          END OF TABLE POINTER
         SPACE
* NOW CLEAR THE AREA
         LR    R2,R1               SET REG FOR MOVE AREA
         LA    R3,1024             LENGTH TO MOVE
         LA    R0,0                FOR CLEAR AREA
         LA    R1,0                FILL LENGTH
         SPACE
* CLEAR RECOVERY IOB AND SAVE ITS ADDRESS IN CV
         ST    R2,CVPIOB
         XC    0(PIOBSIZE,R2),0(R2)
         SPACE
* INITIALIZE ALL THE CONTROL BLOCKS
INIT2    LA    R1,&NUMPAGE         NUMBER OF PAGES IN SYS
         OFFSET R2,CVPAGE1         POINT TO FIRST PAGE
         USING PCB,R2
PAGEINIT XC    PCBPT(PCBSIZE-PCBPSIZE),PCBPT
         MVI   PCBFLG1,X'42'
         LA    R3,PCBECB
         ST    R3,PCBECBP-1        SAVE POINTER TO ECB
         LA    R3,PCBCCWS          ADDR OF CHAN PROG
         ST    R3,PCBCCWP-1        SAVE IN IOB
         OFFSET R3,PFCB1+PFCBDCB-PFCB
         ST    R3,PCBDCB-1         SAVE IN IOB
         SPACE
* NOW INITIALIZE THE CHANNEL PROG
         LA    R3,PCBSEEK+3
         ST    R3,PCBCCWS
         MVI   PCBCCWS,X'31'       MOVE IN OP-CODE
         MVI   PCBCCWS+4,X'40'     COMMAND CHAIN
         MVI   PCBCCWS+7,X'05'     LENGTH OF 5
         LA    R3,PCBCCWS
         ST    R3,PCBCCWS+8        SAVE TIC ADDRESS
         MVI   PCBCCWS+8,X'08'     TIC OP-CODE
         LA    R3,PCBBUF           ADDRESS OF BUFFER
         ST    R3,PCBRWCCW         SAVE INTO CCW
         MVI   PCBRWCCW,X'06'      OP-CODE
         MVC   PCBRWCCW+6(2),=AL2(PCBPSIZE)
         SPACE
* ALL DONE FOR THIS PAGE
         LA    R2,PCBSIZE(,R2)     NEXT
         BCT   R1,PAGEINIT         GET REMAINDER OF PAGES
         DROP  R2
         OFFSET R3,CVDDLIST
         ST    R3,CVDDNAMS
         OFFSET R3,PCBTABLE
         ST    R3,CVPADDRS
         LA    R0,&NUMPAGE
         OFFSET R1,CVPAGE1         FIRST PAGE
PCBLOOP  ST    R1,0(,R3)
         LA    R3,4(,R3)
         LA    R1,PCBSIZE(,R1)
         BCT   R0,PCBLOOP
         SPACE
* GET TIOT POINTER
         LA    R2,CPSTART          USE AREA AS BUFFER FOR EXTRACT
         EXTRACT (R2),FIELDS=(TIOT,TSO,PSB),MF=(E,(R2))
         L     R3,CPSTART+8        GET PSCB ADDR
         L     R10,CVIOWA          WORK AREA
         USING WDIOWA,R10
         ST    R3,WAPSCB           SAVE PSCB ADDR IN WORK AREA
         L     R4,CPSTART+4        TSO FIELD IN THE TCB
         TM    0(R4),X'80'         ARE WE TSO BOUND?
         BZ    NONTSO
         OI    JCBAFL,JCBTSO       WE ARE UNDER TSO
         TM    16(R3),X'80'        PRIV?
         BZ    *+8
         OI    JCBAFL,JCBSYSPR
         LOAD  EP=IKJEFD00         NAME OF MODULE
         ST    R0,CVDAIR
         SPACE
* INITIALIZE USER ID
*
*
*
NONTSO   EQU    *
         L     R2,CPSTART        TIOT POINTER
         MVC   CPUSER(8),0(R2)    MOVE IN USER ID
         B     LETNOV                                  ITEL
         TM    JCBAFL,JCBSYSPR    PRIV
         BZ    *+18               NO
         CLC   CPUSER(4),=CL4'TECH'  IS IT ALSO TECH
         BE    *+8                YES, CONT
         NI    JCBAFL,255-JCBSYSPR  TURN OFF PRIV
LETNOV   OI    JCBAFL,JCBSYSPR     TURN ON PRIV         ITEL
         LA    R2,24(,R2)          SKIP JOB,PROC,STEP NAMES
         ST    R2,CVTIOT           SAVE
         TM    JCBAFL,JCBTSO       ARE WE UNDER TSO?
         L     R2,WAPSCB           PICK UP PSCB ADDRESS
         LA    R2,7(R2)            POINT TO USER ID LEN
         IC    R2,0(R2)            PICK UP LENGTH
         STC   R2,CVUSRFLD         SAVE LENGTH FOR POSTERITY
         SPACE
* INITIALIZE PFCB & PAGE POINTERS
         OFFSET R2,FRSTPAGE
         ST    R2,CVFPAGE          SAVE IT
         OFFSET R2,LASTPAGE
         ST    R2,CVLPAGE
         OFFSET R2,FRSTPFCB
         ST    R2,CVFPFCB
         USING FRSTPFCB,R2
         LA    R2,LASTPFCB
         DROP  R2
         ST    R2,CVLPFCB
         OFFSET R3,WAFORRTB
         ST    R3,RTBWAPTR
         XC    0(L'WAFORRTB,R3),0(R3) CLEAR IT TOO
         MVI   RTBLSZ+1(R3),133
         MVI   RTBPSZ+1(R3),25
         L     R4,544              PICK UP ASCB  FROM PSAANEW
         L     R4,60(R4)           PICK UP TSB ADDRESS          J
         SLR   R1,R1               CLEAR FOR SVC
*        SVC   254                       KEY 0
         MODESET KEY=ZERO
         TM    0(R4),X'20'         ASSUME DISP SCREEN IS 3277
         BZ    NOT3277             NOT US...GO AROUND FLAG SET
IS3277   OI    LFLG1,CPF3277       SET 3277 FLAG
NOT3277  EQU    *                 CONTINUE
         MVC   CPDOUB+5,=CL3' '
         MVC   CPDOUB(5),CPUSER  USER ID
         SLR   R2,R2
         IC    R2,8(,R4)         GET TSBLNSZ
         LH    R4,36(,R4)        GET TSBATNLC
         LA    R1,4                CLEAR FOR SVC
         MODESET KEY=NZERO
*        SVC   254                       PROBLEM KEY
         LR    R0,R4
         LR    R1,R2
         LTR   R0,R0
         BNP   NOCRT
         C     R0,=F'255'
         BH    NOCRT
         STH   R0,RTBPSZ(,R3)
         OI    RTBMFL,RTBCRT
NOCRT    LTR   R1,R1
         BNP   NOLIN
         C     R1,=F'133'
         BH    NOLIN
         LA    R1,133              TEMP UNIL TSB IS FOUND
         STH   R1,RTBLSZ(,R3)
NOLIN    L     R1,WAPSCB           GET PSCB
         L     R1,52(,R1)          GET UPT FROM PSCB
         ST    R1,WAUPT            SAVE UPT
         SPACE
         L     R1,16               CVT @
         L     R1,0(,R1)           CURRENT TCB POINTER
         L     R1,0(,R1)           CURRENT TCB @
         L     R1,132(,R1)         MOTHER TCB @
         L     R1,112(,R1)         MOTHER TCB'S S.A. PTR
         L     R1,8(,R1)           CALLER'S S.A. PTR
         L     R1,24(,R1)          CALLER'S R1 = IOPL FOR CALL
         L     R1,4(,R1)           CALLER'S ECT
         ST    R1,WAECT            WOW...
         SPACE
         OFFSET R3,WORKAREA
         ST    R3,JCBWAPTR         SAVE POINTER TO IT
         TM    JCBAFL,JCBTSO       ARE WE A TSO TASK?
         BZ    NOTCP               NO.. SO DONT LOOK
         L     R11,8(,R9)          GET A POSSIBLE PSCB ADDR
         C     R11,WAPSCB          ARE WE A 'CP' ?
         BNE   NOTCP               NO.. MUST BE VIA A CALL
         L     R11,4(,R9)          UPT ENTRY
         ST    R11,WAUPT
         L     R11,12(,R9)         ENVIRON. CTL TAB
         ST    R11,WAECT
         L     R1,0(,R9)           POINTER TO COMMAND BUFFER
         LH    R2,0(,R1)
         SH    R2,=H'11'           4 + SIZE('WYLBUR ')
         LA    R1,4+7(,R1)         TEXT IS FOLLOWING 'WYLBUR '
         B     GOTPARM             GO PROCESS PARM
         SPACE
NOTCP    L     R1,0(,R9)           POINTER TO PARMS
         LH    R2,0(,R1)           GET LENGTH
         LA    R1,2(,R1)           POINT TO TEXT
GOTPARM  LTR   R2,R2               ANYTHING?
         BNP   NOPARMS
         ST    R1,CVPARM           SAVE PARM POINTER
         STC   R2,CVPARM           AND LENGTH
         SPACE
* INITIALIZE THE PFCB
NOPARMS  OFFSET R2,PFCB1
         USING PFCB,R2
         MVC   PFCBDCB(PFCBDSZ1),DUMMYDCB
         MVC   PFCBPDCB(PFCBDSZ2),PDCB
         OFFSET R3,PT1
         ST    R3,PFCBPTST         SAVE PAGE TABLE POINTER
         LA    R3,&PAGE0
         ST    R3,PFCBNP           SAVE IN PFCB
         XC    PFCBCP(4),PFCBCP    0 PAGES CURRENTLY IN USE
DODEVTYP DEVTYPE PFCBDCB+(DCBDDNAM-IHADCB),CPWA,DEVTAB
         LTR   R15,R15             FILE SUPPLIED?
         BZ    TESTDASD
*
* THE FOLLOWING CODE WAS ADDED BY BOB WENZEL OF ITEL
* IT WILL TRY TO ALLOC DATASET WYLPAGE0 TO FILE PAGE0
*
         CALL  INITITEL
         B     *+4(R15)
         B     GOITEL1                 FOUND DSN WYLPAGE0
         B     NOPAGE0   SOMEONE ELSE HAS USERID.WYLPAGE0
         B     GOITEL2          DID NOT FIND DSN WYLPAGE0
GOITEL1  MVC   DAIRPAGE(4),=CL4'DONE'   SHO AS ALLOCATED
         B     DODEVTYP            DO DEVTYP AGAIN
GOITEL2  EQU   *
*
* END OF CODE ADDED BY BOB WENZEL OF ITEL
*
         CLC   DAIRPAGE(4),=C'DONE'  DYNAMIC PERFORMED
         BE    NOPAGE0      YES BYPASS ALLOC A 2ND TIME
*             ALLOCATE  CODE FOR WYLRDR OR WYLPRINT
         L     R15,CVIOWA          ADDRESS OF DAIR ROUTINE
         LA    R1,WAUPT-WDIOWA(R15)  ADDR OF DAPL
         LA    R14,DAIRPAGE           PARAMETER LIST
         ST    R14,WADAIR-WDIOWA(R15)
         L     R15,CVDAIR          ADDRESS OF DAIR ROUTINE
         BALR  R14,R15             CALL DAIR
         LTR   15,15               INTRDR AVAILABLE??
         BNZ   NOPAGE0                   NO PAGE
         MVC   DAIRPAGE(4),=CL4'DONE'   SHO AS ALLOCATED
         B     DODEVTYP            DO DEVTYP AGAIN
TESTDASD CLI   CPWA+2,X'20'        DIRECT ACCESS?
         BNE   NODASD              NOPE
         LA    R6,CPWA             SET BASE
         USING DVTAREA,R6              FOR DEVTABLE
         LA    R0,CPSIZE           SET R0 TO BLKSIZE ALSO
         LR    R3,R0               SET R3 ALSO
         MH    R3,DVTTOL           MULT BY TOLERANCE
         SRA   R3,9                DIVIDE BY 512
         SR    R1,R1               SET FOR IC
         IC    R1,DVTKEYO          GET KEY OVERHEAD
         SR    R0,R1               ADJUST BLKSIZES SINCE NO KEYS
         SR    R3,R1
         TM    DVTFLAG,DVTFOHD     IS IT HALF WORD OVERHEAD
         BO    CALCTRK1            BR YES
         IC    R1,DVTBLKO          GET NORMAL BLOCK OVERHEAD
         AR    R3,R1               ADJUST NORMAL VALUE
         IC    R1,DVTLBLKO         GET LAST BLOCK OVERHEAD
         AR    R0,R1               ADJUST LAST BLOCK VALUE
         B     CALCTRK2            NOW GO ON
         SPACE
CALCTRK1 LH    R1,DVTBLKO          GET BLOCK OVERHEAD
         AR    R0,R1               ADJUST BOTH FOR
         AR    R3,R1                   BLOCK OVERHEAD
CALCTRK2 LH    R1,DVTTRKSZ         GET TRACK SIZE
         SR    R1,R0               ADJUST FOR LAST BLOCK
         AR    R1,R3               ADD TO INCR COUNT BY 1
         SR    R0,R0               SET FOR DIVIDE
         DR    R0,R3               CALCULATE VALUE IN R1
         ST    R1,PFCBRPT          SAVE NUMBER OF RECORDS/TRK
         DROP  R6
         SPACE
* OPEN THE FILE
         LA    R3,PFCBDCB          GET DCB ADDR
         LA    R4,PFCBPDCB         GET SECOND DCB
         L     R1,CVPSYNAD         GET SYNAD ADDRESS
         ST    R1,56(,R4)          SAVE SYNAD ADDRESS
         L     R1,JCBWAPTR         POINT TO A WORK AREA FOR OPEN
         OI    4(R1),X'80'     SET LAST DCB BIT
         OPEN  ((3),(OUTPUT),(4),(OUTPUT)),MF=(E,(1))
         TM    PFCBDCB+(DCBOFLGS-IHADCB),X'10'  OPEN OK?
         BZ    BADOPEN
         TM    PFCBPDCB+(DCBOFLGS-IHADCB),X'10'  OPEN OK?
         BZ    BADOPEN
         L     R4,PFCBDCB+(DCBDEBAD-IHADCB)  DEB ADDR
         USING DEBBASIC,R4
         SR    R5,R5               CLEAR WORK REG
         IC    R5,DEBNMEXT         NUMBER OF EXTENTS
         LA    R4,DEBDDEP          DEVICE DEPENDENT PORTION
         USING DEBDDEP,R4
         SR    R1,R1
COUNTRKS AH    R1,DEBNMTRK         NUMBER OF TRKS IN THIS EXTENT
         LA    R4,DEBDSZDA(,R4)    SKIP EXTENT AREA
         BCT   R5,COUNTRKS         ADD IN REMNDR
         M     R0,PFCBRPT          TIMES RECORDS/TRK
         CL    R1,PFCBNP           COMPARE AGAINST MAX DEFINED
         BNH   *+8                 BR IF OK
         L     R1,PFCBNP
         ST    R1,PFCBNP           SAVE MAX
         LR    R4,R1
         AL    R1,PFCBPTST         END OF PAGE TABLE
         BCTR  R1,R0               POINT TO LAST BYTE IN TABLE
         ST    R1,PFCBPTND
         L     R3,PFCBNP           LENGTH
         L     R2,PFCBPTST         BEGINING OF TABLE
         LA    R5,254              FILL CHAR
         SLL   R5,24               MOVE TO HIGH ORDER BYTE
         LR    R4,R2               SAME AREA
         MVCL  R2,R4               OVERLAY WITH FF
SETCP    DS    0H
         L     R3,CVFPFCB          POINT TO PFCB
         USING PFCB,R3
         L     R2,CVFPAGE          POINT TO A PCB
         USING PCB,R2
         LA    R13,CPWA            SAVE AREA
         SR    R1,R1               TO GET PAGE 0
         ST    R3,PCBPFCB
         MVI   PCBRWCCW,PIOREAD    TO READ IT
         CVCALL PIO                GET 1ST PAGE
         TM    JCBBFL,JCBBFPER     IO ERROR?
         BO    NORMAL              YEP, NO REVCOVERY
         LA    R4,PCBBUF           POINT TO READ MATERIAL
         CLC   0(8,R4),=CL8'SUSPEND' IS IT A SUSPENDED SESSION
         BE    CHKUSER             CHK IF SAME USER
         CLC   0(8,R4),=CL8'RECOVER' IS IT CRASHED SESSION?
         BNE   NORMAL
         MVI   CPCMNM,C'Z'         REMEMBER IT IS RECOVERED.
CHKUSER  ST    R6,CVSPARES        SAVE PAST COMPARE
         SR    R6,R6
         IC    R6,CVUSRFLD        PICK UP ID LENGTH
         CLC   CPUSER(0),274(R4)  IS THIS THE ONE??             JJG001
         EX    R6,*-6             EXEC ABOVE COMPARE
         L     R6,CVSPARES
         BNE   NORMAL              NOPE
         MVI   0(R4),X'00'         MAKE IT NO SUSPEND
         MVI   PCBRWCCW,PIOWRITE   TO WRITE IT BACK
         CVCALL PIO                GO WRITE IT BACK
         TM    JCBBFL,JCBBFPER     IO ERROR?
         BO    NORMAL
         MVC   PFCBCP(4),8(R4)     CURRENT PAGES
         MVC   CPRSCNVL(4),12(R4)  RESCAN ESC & SKIP
         MVC   CPEXLNET(4),16(R4)
         MVC   CVEXTRAP(12),20(R4)
         LA    R4,32(,R4)
         L     R5,RTBWAPTR
         MVC   RTBSTART(RTBSIZE-RTBNTEXT),0(R4)
         ST    R5,RTBWAPTR
         LA    R4,RTBSIZE-RTBNTEXT(,R4)
         MVC   CPGLDL(CPRCVSZ1),0(R4)
         LA    R4,CPRCVSZ1(,R4)
         MVC   CPDRPT(CPRCVSZ2),0(R4)
         LA    R4,CPRCVSZ2(,R4)
         LR    R0,R2                         SAVE ACROSS MVCL
         LR    R1,R3                         SAVE ACROSS MVCL
         LA    R2,CPDREC                     SET FOR MVCL
         LA    R3,CPRCVSZ3                   LENGTH
         LR    R14,R4                        FROM
         LR    R15,R3                        SAME LENGTH
         MVCL  R2,R14                        MOVE IT
*        MVC   CPDREC(CPRCVSZ3),0(R4)
         LA    R4,CPRCVSZ3(,R4)
         MVC   CPCHECK(4),=X'6913723F'
         LA    R2,ROUTBLE                    SET FOR MVCL
         LA    R3,ROUTBLEN                   LENGTH
         LR    R14,R4                        FROM
         LR    R15,R3                        SAME LENGTH
         MVCL  R2,R14                        MOVE IT
         LR    R2,R0                         RESTORE
         LR    R3,R1                         RESTORE
*        MVC   ROUTBLE(256),0(R4)
*        MVC   ROUTBLE+256(ROUTBLEN-256),256(R4)
         LA    R4,ROUTBLEN(,R4)
         MVC   0(256,R5),0(R4)
         LA    R4,256(,R4)
         L     R3,CVFPFCB            POINT TO PFCB
         L     R2,CVFPAGE            FIRST PCB
         LA    R2,PCBSIZE(,R2)        2ND PCB
         MVI   PCBRWCCW,PIOREAD       GO READ 2ND CP IN
         LA    R1,1
         ST    R3,PCBPFCB
         CVCALL PIO
         TM    JCBBFL,JCBBFPER        IO ERROR
         BO    SIGHSIGH               TOO BAD
         LR    R0,R2                  SAVE
         LR    R1,R3                      ACROSS MVCL
         LA    R14,PCBBUF             MOVE FROM
         L     R2,PFCBPTST            BEGINNING OF PAGE TABLE
         LA    R3,&PAGE0              MAX NUMBER OF PAGES
         LR    R15,R3                 SAME LENGTH
         MVCL  R2,R14                 MOVE IT
         LR    R2,R0                         RESTORE
         LR    R3,R1                         RESTORE
         L     R5,PFCBPTST
         CLI   CPCMNM,C'Z'            RECOVERY?
         BNE   REWRITE
PTLP     CLI   0(R5),INCORE
         BNE   *+8
         MVI   0(R5),0
         CLI   0(R5),X'FE'
         LA    R5,1(,R5)
         BNE   PTLP
         XC    RTBWC(6),RTBWC
         SPACE
REWRITE  LA    R5,CPAREA+CPSIZE       POINT TO AREA
         ST    R5,PCBRWCCW
         MVI   PCBRWCCW,PIOREAD       GO READ 2ND CP IN
         LA    R1,2
         CVCALL PIO
         TM    JCBBFL,JCBBFPER        IO ERROR
         BO    SIGHSIGH               TOO BAD
         OFFSET R5,VCPAGE
         ST    R5,CVCPADDR
         ST    R5,PCBRWCCW
         MVI   PCBRWCCW,PIOREAD       GO READ VCP IN
         LA    R1,3
         CVCALL PIO
         TM    JCBBFL,JCBBFPER        IO ERROR?
         BO    SIGHSIGH               TOO BAD
         LA    R5,PCBBUF
         ST    R5,PCBRWCCW
         SPACE
         L     R5,PFCBPTST            START OF PT
         L     R4,PFCBRPT             # BLOCKS PER TRACK
         SR    R1,R1                  0 TRACKS
PTLOOP   AR    R5,R4                  START FROM TRK 1
         LA    R1,1(,R1)              1 MORE TRACK
         CLI   0(R5),X'FE'            A VIRGIN PAGE
         BNE   PTLOOP
         STH   R1,CPWK1
         MVC   CPWK1+2,=X'0100'       1ST RECORD ON NEW TRK
         LA    R0,CPWK1
         LA    R1,PFCBPDCB            DCB ADDRESS
         POINT (1),(0)
         OI    CPGFLG,CPFDIRCH
         CLI   CPCMNM,C'Z'         WAS IT RECOVERED?
         BE    RECOVERD
         SYSQS 1,0,'SUSPENDED SESSION RESTORED'
TPUTRET  TPUT  (1),(0),EDIT,WAIT
         B     LOADEXIT
         SPACE
RECOVERD TM    CPGFLG2,CPFEXEC
         BZ    RECVNOEX
         OI    JCBAFL,JCBAFIA      SET IDLE ATTENTION
         XC    CVEXTRAP,CVEXTRAP   GET RID OF EXEC TRAP
RECVNOEX SYSQS 1,0,'PREVIOUS SESSION RECOVERED SUCCESSFULLY'
         B     TPUTRET
         EJECT
NORMAL   LA    R3,3                GET 3 PAGES
         NI    JCBBFL,255-JCBBFPER TURN OF I/O ERROR FLAG
PGETLP   SR    R1,R1               CLEAR FOR NEW PAGE
         PGET  R1
         TM    JCBBFL,JCBBFPER
         BO    NOPAGES
         LR    R5,R1               DON'T USE R1 FOR PFREE CALL
         PFREE R5                  FREE THE PAGE WE JUST GOT
         BCT   R3,PGETLP
         SPACE
* NOTE THAT THE PAGE IS JUST FREED.. NOT JUNKED
* THAT MEANS PAGE WILL NOT BE IN CORE BUT REMAIN ALLOCATED.
* THE PGET ROUTINE WILL WRITE OUT A TRACKFUL OF DUMMY PAGES
* BECAUSE THE PAGE THAT WAS JUST GOTTEN WAS A BRAND NEW PAGE .
         SPACE 3
         MVC   CPUSERSV(8),CPUSER  FOR SAVE
*        OI    CPGFLG,CPFVOLM      SET DEFAULT VOL FLAG    ITEL
         OI    CPGFLG,CPFVOLM+CPFCMOFF TER & VOL FLAG      ITEL
         OI    RTBMFL,RTBWRAP      SET WRAP AS DEFAULT
         OI    RTBUFL,RTBUNCOL         NOCOLLECT FLAG      ITEL
         MVC   CPVOLSV,=C'CATLG '  SET DEFAULT VOL = CATLG
         MVC   CPCHECK(4),=X'6913723F'
         MVC   CPGLDL(4),=F'1000'       DELTA=1.000
         MVC   CPLNGTH(2),=H'72'        LEN=72
         MVC   CPDREC(4),=D'0'          ZERO 1ST LINE NO.
         MVI   CPLSTCOL,FNEGBT          SET NO COLLECT YET
         MVI   CPCURRL,FNEGBT      SET CURRENT LINE POINTER INV
         MVI   CPEXLINE,FNEGBT     SET EXEC LINE POINTER INV
         MVI   CPMEMBSV,X'40'      CLEAR MEMBER
         MVC   CPMEMBSV+1(L'CPMEMBSV-1),CPMEMBSV
         OFFSET VCPR,VCPAGE
         ST    VCPR,CVCPADDR
         USING DVCP,VCPR
         XC    VCPWVAR,VCPWVAR    ZERO LINE # VARIABLES
         XC    VCPNVAR,VCPNVAR    ZERO INTEGER VARIABLES
         MVC   VCPSVAR(L'SVARINIT),SVARINIT  INIT STRING VARS
         LA    R2,24      LOOP
         LA    R1,PVARINIT
         LA    R6,VCPPVAR
VCPVLOOP MVC   0(2,R6),0(R1)     MOVE PFK'S
         MVC   2(23,R6),=CL23' ' SET DUMMY PFK'S
         LA    R6,25(,R6)        NEXT AREA
         LA    R1,2(,R1)         NEXT PFK DEF
         BCT   R2,VCPVLOOP       LOOP THRU IT
         DROP  VCPR
         LA    0,5
         STH   0,CPRSCNVL         INITIALIZE RESCAN LIMIT
         OI    CPGFLG2,CPESNULL   SET ESCAPE CHARACTER NULL
         OI    CPGFLG2,CPSKNULL   SET SKIP CHARACTER NULL
         LA    R13,CPWA            SAVE AREA
         MVC   CPCMSAV(L'LOGCMND),LOGCMND
         LA    R0,L'LOGCMND-1
         ST    R0,CPCTSAV
         EJECT
* LOAD IN THE PAGED ROUTINES
         SPACE
         LA    R10,ROUTBLE
         USING ROUTBLE,R10
         LA    R6,PAGTBLE-4        SET FOR START OF LOOP
         SR    R5,R5               CLEAR REG FOR PFREE
         USING PCB,R5
         SPACE
* LOOP THROUGH PAGTBLE AND LOAD EACH OVERLAY SEGMENT
* AFTER LOADING THE SEGMENT, GET A PAGE FROM THE ACTIVE
* FILE AND WRITE OUT THE OVERLAY SEGMENT.  THEN FILL IN
* ROUTBLE FOR ANY ROUTINES FOUND.
         SPACE
LOADLOOP LA    R6,4(,R6)           STEP UP TO NEXT ENTRY
         C     R6,=A(PAGTBLED)     END OF PAGETABLE?
         BNL   LOADDONE            YES..GO FINISH
         L     R1,0(,R6)           LOAD VCON
         LTR   R1,R1               DOES IT EXIST?
         BZ    LOADLOOP            NO..GO ON TO NEXT PAGE
         LA    R0,1                SET R0 FOR SEGWT
         SVC   37                  GO GET EM
         PGET  R5                  GET A PAGE
         BZ    NOPAGES
         STH   R0,PCBPN            SAVE PAGE NUMBER IN PCB
         LR    R4,R0               PRESERVE PAGE NUMBER
         L     R11,=A(P001)
         LH    R1,0(,R11)          GET ADDR OF INIT CODE
         BAL   R14,0(R11,R1)       GO DO INIT CODE
         STM   R2,R5,CVSPARES      TEMP SAVE
         LR    R4,R11              SET R2 TO MOVE CODE
         LR    R2,R5               SET R1 TO BUFFER ADDRESS
         LA    R3,CPSIZE
         LA    R5,CPSIZE           MOVE-A-CHUNK
         MVCL  R2,R4
         LM    R2,R5,CVSPARES      RESTORE REGS
         PMARK R5                  MARK THE BUFFER
         LA    R11,2(,R11)         SET R11 TO FIRST TABLE ENTRY
LOADLP2  LH    R1,0(,R11)           GET NEXT ENTRY
         LTR   R1,R1               IS THIS END OR DEFAULT
         BM    LOADLP5             BR IF EITHER
         C     R1,=A(ROUTBLEN)     CHECK THAT ITS IN RANGE
         BL    LOADLP3             BR IF OK
         WTO   '**WYLTSO** INCOMPATIBLE PAGED CODE..REASSEMBLE IT'
         B     RETURN16
*
LOADLP3  STH   R4,ROUTBLE(R1)      PUT PAGE NO. IN ROUTBLE
         LH    R0,2(,R11)           GET DISPLACEMENT TO START
         STH   R0,ROUTBLE+2(R1)    PUT IT IN ROUTBLE
LOADLP4  LA    R11,4(,R11)           STEP TO NEXT ENTRY
         B     LOADLP2             GO CHECK THIS ENTRY
*
LOADLP5  CH    R1,=H'-1'   IS THIS DEFAULT ROUTINE FOR MISSING
         BNE   LOADLOOP           NO, GO DO NEXT OVERLAY
         STH   R4,LOADEFLT         YES, SAVE PAGE NUMBER
         MVC   LOADEFLT+2(2),2(R11)   AND ALSO DISPLACEMENT
         B     LOADLP4             GO DO NEXT ON THIS PAGE
         DROP  R10
LOADDONE PFREE R5                  FREE THE LAST GOTTEN PCB
         CLC   LOADEFLT,=A(0)      IS THERE A DEFAULT MISSING ROUTINE
         BE    LOADEXIT            NO, RETURN
         L     R2,=A(ROUTBLEN)     LOAD LENGTH OF ROUTBLE
         AR    R2,R10              NOW POINT TO END OF TABLE
LOADEFLP CR    R10,R2              ARE WE DONE
         BNL   LOADEXIT            BR YES
         CLC   0(4,R10),=A(0)      WAS THIS ENTRY INITIALIZED
         BNE   *+10                YES, DON'T PUT IN DEFAULT
         MVC   0(4,R10),LOADEFLT   NO, SET ENTRY TO DEFAULT
         LA    R10,4(,R10)         STEP TO NEXT ENTRY
         B     LOADEFLP            GO DO IT
         SPACE
LOADEXIT DELETE EP=IEWSZOVR        DELETE REMDR
         SPACE
* INITIALIZE RECOVERY IOB AND CCW'S TO WRITE OUT SNAPSHOT
         SPACE
         L     R4,CVPIOB           GET RECOVERY IOB ADDRESS
         USING PIOB,R4
         MVI   PIOBFLG1,X'42'      COMMAND CHAINING
         LA    R1,PECB             ECB ADDRESS
         ST    R1,PIOBECB-1
         LA    R1,PCCWS            START OF CCWS
         ST    R1,PIOBCCW-1
         L     R1,CVFPFCB          POINT TO THE PFCB
         LA    R1,PFCBDCB-PFCBSTRT(,R1) DCB ADDRESS
         ST    R1,PIOBDCB-1
         L     R1,DCBDEBAD-IHADCB(,R1) POINT TO DEB
         LR    R3,R1               REMEMBER DEB ADDRESS
         LR    R6,R12              REMEMBER CP ADDRESS
         L     R15,16              CVT ADDRESS
         LA    R2,PSEEK1           RESULT ADDRESS OF CONV
         L     R15,28(,R15)        TTR CONVERSION ROUTINE
         L     R0,=X'00000100'     1ST RECORD, 1ST TRACK
         LR    R5,R15              REMEMBER TTR CONV ROUTINE
         BALR  R14,R15
         LA    R2,PSEEK2           RESULT ADDRESS OF CONV
         LR    R15,R5              TTR CONV ROUTINE
         LR    R1,R3               DEB ADDRESS
         L     R0,=X'00000200'     2ND RECORD
         BALR  R14,R15
         LA    R2,PSEEK3           RESULT ADDRESS OF CONV
         LR    R15,R5              CONV ROUTINE ADDRESS
         LR    R1,R3               DEB ADDRESS
         L     R0,=X'00000300'     3RD RECORD
         BALR  R14,R15
        LA    R2,PSEEK4           RESULT ADDRESS OF CONV
         LR    R15,R5              CONV ROUTINE ADDRESS
         LR    R1,R3               DEB ADDRESS
        L     R0,=X'00000400'     4TH RECORD
         BALR  R14,R15
         LR    R12,R6              RESTORE CP ADDRESS
         LA    R13,CPWA            RESTORE SAVE AREA ADDRESS
         LA    R2,PSEEK1+3
         ST    R2,PCCWSID1
         MVI   PCCWSID1,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID1+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID1+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID1
         ST    R2,PCCWTIC1
         MVI   PCCWTIC1,X'08'
         L     R2,JCBWAPTR
         ST    R2,PCCWWRT1
         MVI   PCCWWRT1,X'05'
         LA    R5,PCBPSIZE
         ST    R5,PCCWWRT1+4
         MVI   PCCWWRT1+4,X'40'
         LA    R2,PSEEK2+3
         ST    R2,PCCWSID2
         MVI   PCCWSID2,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID2+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID2+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID2
         ST    R2,PCCWTIC2
         MVI   PCCWTIC2,X'08'
         L     R2,JCBWAPTR
         AH    R2,=AL2(CPSIZE)
         ST    R2,PCCWWRT2
         MVI   PCCWWRT2,X'05'
         ST    R5,PCCWWRT2+4
         MVI   PCCWWRT2+4,X'40'
         LA    R2,PSEEK3+3
         ST    R2,PCCWSID3
         MVI   PCCWSID3,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID3+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID3+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID3
         ST    R2,PCCWTIC3
         MVI   PCCWTIC3,X'08'
         LA    R2,CPAREA+CPSIZE
         ST    R2,PCCWWRT3
         MVI   PCCWWRT3,X'05'
         ST    R5,PCCWWRT3+4
         LA    R2,PSEEK4+4
         ST    R2,PCCWSID4
          MVI   PCCWSID4,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID4+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID4+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID4
         ST    R2,PCCWTIC4
         MVI   PCCWTIC4,X'08'
         L     R2,CVCPADDR
         ST    R2,PCCWWRT4
         MVI   PCCWWRT4,X'05'
         ST    R5,PCCWWRT4+4
         MVC   CVPROMPT,CVPRMLIM
         SPACE
         L     R14,CVIOWA          WORK AREA ADDRESS
         USING WDIOWA,R14
         LA    R1,WASTAX           STAX PARAMETER AREA
         XC    WASTAX(20),WASTAX   CLEAR IT
         DROP  R14
         L     R14,CVATNRTN        ATTENTION EXIT ADDRESS
         STAX  (14),REPLACE=NO,DEFER=NO,USADDR=((12)),MF=(E,(1))
         OI    JCBAFL,JCBSTAX
         BR    R8                  RETURN TO WYLBUR
         EJECT
* ERROR MESSAGES:
         SPACE
NODASD   SYSQS 1,0,'PAGEFILE NOT ON DIRECT ACCESS DEVICE'
         B     RETURN16                  EXIT
SIGHSIGH SYSQS 1,0,'UNABLE TO RECOVER FROM SUSPENDED SESSION'
         B     RETURN16
NOPAGE0  SYSQS 1,0,'PAGEFILE NOT SUPPLIED'
         B     RETURN16
BADOPEN  SYSQS 1,0,'PAGEFILE CANNOT BE OPENED'
         B     RETURN16
NOPAGES  SYSQS 1,0,'INSUFFICIENT PAGES TO INITIALIZE'
         SPACE
RETURN16 TPUT  (1),(0),,WAIT,,BREAKIN
         L     R13,CVRETURN
         LM    R14,R12,12(R13)     RESTORE REGS
         LA    R15,16
         BR    R14                 RETURN TO CALLER
         EJECT
* VCON ENTRIES FOR EACH OVERLAY PAGE
         SPACE
PAGTBLE  DS    0F
         DC    V(P001)
         DC    V(P002)
         DC    V(P003)
         DC    V(P004)
         DC    V(P005)
         DC    V(P006)
         DC    V(P007)
         DC    V(P008)
         DC    V(P009)
         DC    V(P010)
         DC    V(P011)
         DC    V(P012)
         DC    V(P013)
         DC    V(P014)
         DC    V(P015)
         DC    V(P016)
         DC    V(P017)
         DC    V(P018)
         DC    V(P019)
         DC    V(P020)
         DC    V(P021)
         DC    V(P022)
         DC    V(P023)
         DC    V(P024)
         DC    V(P025)
         DC    V(P026)
         DC    V(P027)
         DC    V(P028)
         DC    V(P029)
         DC    V(P030)
         DC    V(P031)
         DC    V(P032)
         DC    V(P033)
         DC    V(P034)
         DC    V(P035)
         DC    V(P036)
         DC    V(P037)
         DC    V(P038)
         DC    V(P039)
         DC    V(P040)
         DC    V(P041)
PAGTBLED EQU   *                   END OF PAGTBLE
         SPACE
LOADEFLT DC    F'0'                DEFAULT ROUTINE FOR MISSING
         SPACE
LOGCMND  DC    C';X FRO #LOGON NOL '
         SPACE 3
         LTORG
         SPACE
         DROP  R5
         DROP  R7
         EJECT
         DS    0H
SVARINIT DS    0CL34
         DC    H'32'
         DC    C'0',X'00'
         DC    C'1',X'00'
         DC    C'2',X'00'
         DC    C'3',X'00'
         DC    C'4',X'00'
         DC    C'5',X'00'
         DC    C'6',X'00'
         DC    C'7',X'00'
         DC    C'8',X'00'
         DC    C'9',X'00'
         DC    C'A',X'00'
         DC    C'B',X'00'
         DC    C'C',X'00'
         DC    C'D',X'00'
         DC    C'E',X'00'
         DC    C'F',X'00'
         SPACE
PVARINIT DS    0CL48
         DC   X'F1',X'00'                   PFK01
         DC   X'F2',X'00'                   PFK02
         DC   X'F3',X'00'                   PFK04
         DC   X'F4',X'00'                   PFK03
         DC   X'F5',X'00'                   PFK05
         DC   X'F6',X'00'                   PFK06
         DC   X'F7',X'00'                   PFK07
         DC   X'F8',X'00'                   PFK08
         DC   X'F9',X'00'                   PFK09
         DC   X'7A',X'00'                   PFK10
         DC   X'7B',X'00'                   PFK11
         DC   X'7C',X'00'                   PFK12
         DC   X'C1',X'00'                   PFK13
         DC   X'C2',X'00'                   PFK14
         DC   X'C3',X'00'                   PFK15
         DC   X'C4',X'00'                   PFK16
         DC   X'C5',X'00'                   PFK00
         DC   X'C6',X'00'                   PFK18
         DC   X'C7',X'00'                   PFK00
         DC   X'C8',X'00'                   PFK20
         DC   X'C9',X'00'                   PFK21
         DC   X'4A',X'00'                   PFK22
         DC   X'4B',X'00'                   PFK23
         DC   X'4C',X'00'                    PFK24
          PRINT NOGEN
DUMMYDCB DCB   DDNAME=PAGE0,MACRF=(E),DEVD=DA,DSORG=DA
         SPACE
PDCB     DCB   DDNAME=PAGE0,DSORG=PS,MACRF=WP,BLKSIZE=PCBPSIZE,        *
               RECFM=F,OPTCD=C,SYNAD=0
         PRINT GEN
         TITLE  'DYNAMIC ALLOCATION PARMS FOR PAGE0'
DAIRPAGE DS    0F
         DC    X'0008'
         DC    X'0000'
         DC    X'00000000'
         DC    AL4(PAGEDSN)
         DC    CL8'PAGE0'
         DC    CL8'VIO'
         DC    CL8' '
         DC    AL4(CPSIZE)              SIZE OF PAGE
         DC    AL4(&PAGE0)             NUMBER OF PAGES
         DC    F'0'
         DC    F'0'
         DC    CL8' '
         DC    CL8' '
         DC    XL3'040000'
         DC    X'48'              BLOCK ALLOCATION/PERM ATTR
         DC    F'0'
         DC    CL8' '
PAGEDSN  DC    XL2'002C',CL44' '
         TITLE 'START OF PAGED CODE -- PAGE 1'
P001     PAGECDE MISSING
         WIDENT 001
         USING CPAREA,R12
         TITLE 'DEFAULT MISSING ROUTINE -- PAGE 1'
PMISSING GENTER
         TSEG  'CODE FOR ROUTINE NOT IN PAGEFILE'
         B     CVQTYPE
         TITLE 'END OF PAGE CODE -- PAGE 1'
         PINIT                     DEFINE START OF INIT ROUTINE
         PEND                      DEFINE END ON INIT CODE
         TITLE 'CONSTANTS AND CONTROL BLOCKS'
         COPY  WYLCONST
         EJECT
         COPY  VCPTSO
         EJECT
PCB      DSECT
         COPY  PCBTSO
         EJECT
PFCB     DSECT
         COPY  PFCBTSO
         EJECT
PIOB     DSECT
         COPY  PIOB
         EJECT
         COMMON
         EJECT
         LTORG
         ORG   ,
FRSTPAGE DS    0D
         PAGES &NUMPAGE
LASTPAGE DS    0D
         EJECT
FRSTPFCB DS    0D
         PAGEFILE &PAGE0           DEFINE ONE DRUM FILE
LASTPFCB DS    0F
         EJECT
         PT
VCPAGE   DS    0F
         DS    XL(CPSIZE)         VARIABLE COMMAND PAGE
         DS    0D
WORKAREA DS    XL(CPSIZE*2)
WAFORRTB DS    CL256
         SPACE
PCBTABLE DS    &NUMPAGE.A
         SPACE
CVDDLIST DS    &MAXDDS.CL8
         SPACE
CVCPEND  DS    0D                  ROUND OFF TO DBL-WRD
         SPACE
CVCPSIZE EQU   *-CPSTART
         EJECT
DEB      DSECT
         COPY  DEB
         SPACE 3
         DCBD
         EJECT
WDIOWA   WDIOWA DSECT
         SPACE
INITITEL CSECT
         SAVE  (14,12)
         LR    R12,R15                    SET UP PROGRAM BASE
         USING INITITEL,R12
BEGIN    LR    R10,R9        SAVE R1
         GETMAIN R,LV=LDYNAMIC          GET CORE
         LR    R11,R1
         USING WORKAREB,R11             SET UP ADDRESSABILITY
         LA    R9,SAVEAREB              CHAIN
         ST    R13,SAVEAREB+4             SAVE
         ST    R9,8(R13)                    AREAS
         LR    R13,R9
         LR    R1,R10
*
         MVC   DAPLUPT,4(R1)
         MVC   DAPLECT,12(R1)
         MVC   DAPLPSCB,8(R1)
         LA    R1,DAPL       ADDRESS OF DAIR PARAMETER LIST
LINK     LINK  EP=IKJEFD00   LINK TO DAIR
TEST     LTR   R15,R15      TEST FOR ERROR
         BNZ   DAIRERR      JUMP TO TEST DAIR RETURN CODE
*
RETURN0  LR    R1,R13                   DYNAMIC AREA ADDRESS IN R1
         LA    R0,LDYNAMIC              SIZE OF AREA
         L     R13,4(R13)               PREVIOUS SAVE AREA
         LA    R1,0(R1)                 CLEAR TOP BYTE
         SVC   10                       FREEMAIN
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
*
RETURN4  LR    R1,R13                   DYNAMIC AREA ADDRESS IN R1
         LA    R0,LDYNAMIC              SIZE OF AREA
         L     R13,4(R13)               PREVIOUS SAVE AREA
         LA    R1,0(R1)                 CLEAR TOP BYTE
         SVC   10                       FREEMAIN
         LM    R14,R12,12(R13)
         LA    R15,4
         BR    R14
*
RETURN8  LR    R1,R13                   DYNAMIC AREA ADDRESS IN R1
         LA    R0,LDYNAMIC              SIZE OF AREA
         L     R13,4(R13)               PREVIOUS SAVE AREA
         LA    R1,0(R1)                 CLEAR TOP BYTE
         SVC   10                       FREEMAIN
         LM    R14,R12,12(R13)
         LA    R15,8
         BR    R14
*
*              DAIR ERROR DETERMINATION SECTION
*
DAIRERR  EQU   *       DAIR ERROR RETURN
         CH    R15,=H'12'
         BNE   RETURN8
INUSEDSN L     R2,16(R1)              DAPL
         LH    R3,4(R2)               DAPBDARC
         CH    R3,=X'0210'            DSN IN USE ERROR
         BNE   DARCERR                NO, SHOW DARC ERROR CODE
*
         TPUT  DSNINUSE,50            DSN IN USE MESSAGE
         B     RETURN4
DSNINUSE DC    CL50'PREFIXED WYLPAGE0 IS IN USE BY ANOTHER USER OR JOB'
*
DARCERR  ABEND 111,DUMP
*        L     R2,16(R1)
*        LH    R3,4(R2)
*
         DS    0D
ALLOCATE DS    0CL84
ALOCCD   DC    X'0008'
         DC    H'0'
         DC    H'0'
         DC    H'0'
ALOCDSN  DC    A(PAGE0LNG)
ALOCDDN  DC    CL8'PAGE0'
         DC    CL8' '
ALOCSER  DC    CL8' '
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
ALOCMNM  DC    CL8' '
         DC    CL8' '
ALOCDPS1 DC    X'01'    OLD
ALOCDPS2 DC    X'08'    KEEP
ALOCDPS3 DC    X'08'    KEEP
ALOCCTL  DC    X'20'    ADD USER ID
         DC    F'0'
         DC    2F'0'
*
PAGE0LNG DC    H'8',CL8'WYLPAGE0'
ECB      DC    F'0'
         DS    0D
DAPL     DS    0CL20
DAPLUPT  DS    F
DAPLECT  DS    F
DAPLECB  DC    A(ECB)
DAPLPSCB DS    F
DAPLDAPB DC    A(ALLOCATE)
         LTORG
*
WORKAREB DSECT
SAVEAREB DS    18F
LDYNAMIC EQU   *-WORKAREB
         END
./ ADD NAME=INIT8,SSI=00000228
INIT     TITLE 'WYLTSO INITIALIZATION ROUTINE'
*  WYLBUR MVS/TSO VERSION 1.1
         SPACE
         COPY  PMAC
         SPACE
         USING CPAREA,R12
         SPACE 3
         ENTRY INITWYL
INITWYL  CSECT
         DC    24XL256'00'         DUMMY MODULE
         ORG   INITWYL
         LR    R7,R15              GET ADDRESSABILITY
         LR    R4,R1               ADDRESS OF REAL CV
         LR    R8,R14              RETURN ADDRESS
         SPACE
*** WARNING *** R8 MUST NOT BE ALTERED *** WARNING ***
         SPACE
         USING INITWYL,R7
         L     R0,=A(CVCPSIZE)     DETERMINE GETMAIN SIZE
         A     R0,=F'1024'         FOR TRACE AREA
         A     R0,=A(PIOBSIZE)     FOR RECOVERY IOB
         GETMAIN R,LV=(0),PAGE       GO GET 'EM
         SPACE
* WE GOT IT IF WE SURVIVE TO GET HERE
         LR    R12,R1              POINT TO THE AREA
         LA    R13,CPWA
         SPACE
* CLEAR THE 'CP' PART OF THE AREA
         SLR   R0,R0               CLEAR FOR MVCL
         LR    R2,R1             AREA TO CLEAR
         LA    R1,0              FILL CHAR INTO REG 1
         LA    R3,CPSIZE          SIZE OF AREA TO CLEAR
         MVCL  R2,R0             CLEAR THE AREA
* COPY THE REAL CV INTO OUR AREA. R4 POINTS TO IT.
         LA    R3,CVSIZE            SIZE TO MOVE
         LR    R5,R3                ALSO IN REG 5
         LA    R2,CVSTART           AREA TO MOVE TO
         MVCL  R2,R4                MOVE IT
         SPACE
* CLEAR JCB FIELDS
         XC    JCBSTART(JCBSIZE),JCBSTART
         SPACE
*
COPYWA   LOAD  EP=WYLWA
         ST    R0,CVIOWA           SAVE ADDR OF WORK AREA
         ST    R11,CVRETURN        SAVE OS RETURN ADDR
         SPACE
* INITIALIZE THE TRACE AREA
         OFFSET R1,CVCPEND
         ST    R1,CVTRSTRT         START OF TABLE
         ST    R1,CVTRACE          CURRENT ENTRY
         LA    R2,1024-16(,R1)
         ST    R2,CVTREND          END OF TABLE POINTER
         SPACE
* NOW CLEAR THE AREA
         LR    R2,R1               SET REG FOR MOVE AREA
         LA    R3,1024             LENGTH TO MOVE
         LA    R0,0                FOR CLEAR AREA
         LA    R1,0                FILL LENGTH
         SPACE
* CLEAR RECOVERY IOB AND SAVE ITS ADDRESS IN CV
         ST    R2,CVPIOB
         XC    0(PIOBSIZE,R2),0(R2)
         SPACE
* INITIALIZE ALL THE CONTROL BLOCKS
INIT2    LA    R1,&NUMPAGE         NUMBER OF PAGES IN SYS
         OFFSET R2,CVPAGE1         POINT TO FIRST PAGE
         USING PCB,R2
PAGEINIT XC    PCBPT(PCBSIZE-PCBPSIZE),PCBPT
         MVI   PCBFLG1,X'42'
         LA    R3,PCBECB
         ST    R3,PCBECBP-1        SAVE POINTER TO ECB
         LA    R3,PCBCCWS          ADDR OF CHAN PROG
         ST    R3,PCBCCWP-1        SAVE IN IOB
         OFFSET R3,PFCB1+PFCBDCB-PFCB
         ST    R3,PCBDCB-1         SAVE IN IOB
         SPACE
* NOW INITIALIZE THE CHANNEL PROG
         LA    R3,PCBSEEK+3
         ST    R3,PCBCCWS
         MVI   PCBCCWS,X'31'       MOVE IN OP-CODE
         MVI   PCBCCWS+4,X'40'     COMMAND CHAIN
         MVI   PCBCCWS+7,X'05'     LENGTH OF 5
         LA    R3,PCBCCWS
         ST    R3,PCBCCWS+8        SAVE TIC ADDRESS
         MVI   PCBCCWS+8,X'08'     TIC OP-CODE
         LA    R3,PCBBUF           ADDRESS OF BUFFER
         ST    R3,PCBRWCCW         SAVE INTO CCW
         MVI   PCBRWCCW,X'06'      OP-CODE
         MVC   PCBRWCCW+6(2),=AL2(PCBPSIZE)
         SPACE
* ALL DONE FOR THIS PAGE
         LA    R2,PCBSIZE(,R2)     NEXT
         BCT   R1,PAGEINIT         GET REMAINDER OF PAGES
         DROP  R2
         OFFSET R3,CVDDLIST
         ST    R3,CVDDNAMS
         OFFSET R3,PCBTABLE
         ST    R3,CVPADDRS
         LA    R0,&NUMPAGE
         OFFSET R1,CVPAGE1         FIRST PAGE
PCBLOOP  ST    R1,0(,R3)
         LA    R3,4(,R3)
         LA    R1,PCBSIZE(,R1)
         BCT   R0,PCBLOOP
         SPACE
* GET TIOT POINTER
         LA    R2,CPSTART          USE AREA AS BUFFER FOR EXTRACT
         EXTRACT (R2),FIELDS=(TIOT,TSO,PSB),MF=(E,(R2))
         L     R3,CPSTART+8        GET PSCB ADDR
         L     R10,CVIOWA          WORK AREA
         USING WDIOWA,R10
         ST    R3,WAPSCB           SAVE PSCB ADDR IN WORK AREA
         L     R4,CPSTART+4        TSO FIELD IN THE TCB
         TM    0(R4),X'80'         ARE WE TSO BOUND?
         BZ    NONTSO
         OI    JCBAFL,JCBTSO       WE ARE UNDER TSO
         TM    16(R3),X'80'        PRIV?
         BZ    *+8
         OI    JCBAFL,JCBSYSPR
         LOAD  EP=IKJEFD00         NAME OF MODULE
         ST    R0,CVDAIR
         SPACE
* INITIALIZE USER ID
*
*
*
NONTSO   EQU    *
         L     R2,CPSTART        TIOT POINTER
         MVC   CPUSER(8),0(R2)    MOVE IN USER ID
         TM    JCBAFL,JCBSYSPR    PRIV
         BZ    *+18               NO
         CLC   CPUSER(4),=CL4'TECH'  IS IT ALSO TECH
         BE    *+8                YES, CONT
         NI    JCBAFL,255-JCBSYSPR  TURN OFF PRIV
         LA    R2,24(,R2)          SKIP JOB,PROC,STEP NAMES
         ST    R2,CVTIOT           SAVE
         TM    JCBAFL,JCBTSO       ARE WE UNDER TSO?
         L     R2,WAPSCB           PICK UP PSCB ADDRESS
         LA    R2,7(R2)            POINT TO USER ID LEN
         IC    R2,0(R2)            PICK UP LENGTH
         STC   R2,CVUSRFLD         SAVE LENGTH FOR POSTERITY
         SPACE
* INITIALIZE PFCB & PAGE POINTERS
         OFFSET R2,FRSTPAGE
         ST    R2,CVFPAGE          SAVE IT
         OFFSET R2,LASTPAGE
         ST    R2,CVLPAGE
         OFFSET R2,FRSTPFCB
         ST    R2,CVFPFCB
         USING FRSTPFCB,R2
         LA    R2,LASTPFCB
         DROP  R2
         ST    R2,CVLPFCB
         OFFSET R3,WAFORRTB
         ST    R3,RTBWAPTR
         XC    0(L'WAFORRTB,R3),0(R3) CLEAR IT TOO
         MVI   RTBLSZ+1(R3),133
         MVI   RTBPSZ+1(R3),25
         L     R4,544              PICK UP ASCB  FROM PSAANEW
         L     R4,60(R4)           PICK UP TSB ADDRESS          J
         SLR   R1,R1               CLEAR FOR SVC
*        SVC   254                       KEY 0
         MODESET KEY=ZERO
         TM    0(R4),X'20'         ASSUME DISP SCREEN IS 3277
         BZ    NOT3277             NOT US...GO AROUND FLAG SET
IS3277   OI    LFLG1,CPF3277       SET 3277 FLAG
NOT3277  EQU    *                 CONTINUE
         MVC   CPDOUB+5,=CL3' '
         MVC   CPDOUB(5),CPUSER  USER ID
         SLR   R2,R2
         IC    R2,8(,R4)         GET TSBLNSZ
         LH    R4,36(,R4)        GET TSBATNLC
         LA    R1,4                CLEAR FOR SVC
         MODESET KEY=NZERO
*        SVC   254                       PROBLEM KEY
         LR    R0,R4
         LR    R1,R2
         LTR   R0,R0
         BNP   NOCRT
         C     R0,=F'255'
         BH    NOCRT
         STH   R0,RTBPSZ(,R3)
         OI    RTBMFL,RTBCRT
NOCRT    LTR   R1,R1
         BNP   NOLIN
         C     R1,=F'133'
         BH    NOLIN
         LA    R1,133              TEMP UNIL TSB IS FOUND
         STH   R1,RTBLSZ(,R3)
NOLIN    L     R1,WAPSCB           GET PSCB
         L     R1,52(,R1)          GET UPT FROM PSCB
         ST    R1,WAUPT            SAVE UPT
         SPACE
         L     R1,16               CVT @
         L     R1,0(,R1)           CURRENT TCB POINTER
         L     R1,0(,R1)           CURRENT TCB @
         L     R1,132(,R1)         MOTHER TCB @
         L     R1,112(,R1)         MOTHER TCB'S S.A. PTR
         L     R1,8(,R1)           CALLER'S S.A. PTR
         L     R1,24(,R1)          CALLER'S R1 = IOPL FOR CALL
         L     R1,4(,R1)           CALLER'S ECT
         ST    R1,WAECT            WOW...
         SPACE
         OFFSET R3,WORKAREA
         ST    R3,JCBWAPTR         SAVE POINTER TO IT
         TM    JCBAFL,JCBTSO       ARE WE A TSO TASK?
         BZ    NOTCP               NO.. SO DONT LOOK
         L     R11,8(,R9)          GET A POSSIBLE PSCB ADDR
         C     R11,WAPSCB          ARE WE A 'CP' ?
         BNE   NOTCP               NO.. MUST BE VIA A CALL
         L     R11,4(,R9)          UPT ENTRY
         ST    R11,WAUPT
         L     R11,12(,R9)         ENVIRON. CTL TAB
         ST    R11,WAECT
         L     R1,0(,R9)           POINTER TO COMMAND BUFFER
         LH    R2,0(,R1)
         SH    R2,=H'11'           4 + SIZE('WYLBUR ')
         LA    R1,4+7(,R1)         TEXT IS FOLLOWING 'WYLBUR '
         B     GOTPARM             GO PROCESS PARM
         SPACE
NOTCP    L     R1,0(,R9)           POINTER TO PARMS
         LH    R2,0(,R1)           GET LENGTH
         LA    R1,2(,R1)           POINT TO TEXT
GOTPARM  LTR   R2,R2               ANYTHING?
         BNP   NOPARMS
         ST    R1,CVPARM           SAVE PARM POINTER
         STC   R2,CVPARM           AND LENGTH
         SPACE
* INITIALIZE THE PFCB
NOPARMS  OFFSET R2,PFCB1
         USING PFCB,R2
         MVC   PFCBDCB(PFCBDSZ1),DUMMYDCB
         MVC   PFCBPDCB(PFCBDSZ2),PDCB
         OFFSET R3,PT1
         ST    R3,PFCBPTST         SAVE PAGE TABLE POINTER
         LA    R3,&PAGE0
         ST    R3,PFCBNP           SAVE IN PFCB
         XC    PFCBCP(4),PFCBCP    0 PAGES CURRENTLY IN USE
DODEVTYP DEVTYPE PFCBDCB+(DCBDDNAM-IHADCB),CPWA,DEVTAB
         LTR   R15,R15             FILE SUPPLIED?
         BZ    TESTDASD
         CLC   DAIRPAGE(4),=C'DONE'  DYNAMIC PERFORMED
         BE    NOPAGE0      YES BYPASS ALLOC A 2ND TIME
*             ALLOCATE  CODE FOR WYLRDR OR WYLPRINT
         L     R15,CVIOWA          ADDRESS OF DAIR ROUTINE
         LA    R1,WAUPT-WDIOWA(R15)  ADDR OF DAPL
         LA    R14,DAIRPAGE           PARAMETER LIST
         ST    R14,WADAIR-WDIOWA(R15)
         L     R15,CVDAIR          ADDRESS OF DAIR ROUTINE
         BALR  R14,R15             CALL DAIR
         LTR   15,15               INTRDR AVAILABLE??
         BNZ   NOPAGE0                   NO PAGE
         MVC   DAIRPAGE(4),=CL4'DONE'   SHO AS ALLOCATED
         B     DODEVTYP            DO DEVTYP AGAIN
TESTDASD CLI   CPWA+2,X'20'        DIRECT ACCESS?
         BNE   NODASD              NOPE
         LA    R6,CPWA             SET BASE
         USING DVTAREA,R6              FOR DEVTABLE
         LA    R0,CPSIZE           SET R0 TO BLKSIZE ALSO
         LR    R3,R0               SET R3 ALSO
         MH    R3,DVTTOL           MULT BY TOLERANCE
         SRA   R3,9                DIVIDE BY 512
         SR    R1,R1               SET FOR IC
         IC    R1,DVTKEYO          GET KEY OVERHEAD
         SR    R0,R1               ADJUST BLKSIZES SINCE NO KEYS
         SR    R3,R1
         TM    DVTFLAG,DVTFOHD     IS IT HALF WORD OVERHEAD
         BO    CALCTRK1            BR YES
         IC    R1,DVTBLKO          GET NORMAL BLOCK OVERHEAD
         AR    R3,R1               ADJUST NORMAL VALUE
         IC    R1,DVTLBLKO         GET LAST BLOCK OVERHEAD
         AR    R0,R1               ADJUST LAST BLOCK VALUE
         B     CALCTRK2            NOW GO ON
         SPACE
CALCTRK1 LH    R1,DVTBLKO          GET BLOCK OVERHEAD
         AR    R0,R1               ADJUST BOTH FOR
         AR    R3,R1                   BLOCK OVERHEAD
CALCTRK2 LH    R1,DVTTRKSZ         GET TRACK SIZE
         SR    R1,R0               ADJUST FOR LAST BLOCK
         AR    R1,R3               ADD TO INCR COUNT BY 1
         SR    R0,R0               SET FOR DIVIDE
         DR    R0,R3               CALCULATE VALUE IN R1
         ST    R1,PFCBRPT          SAVE NUMBER OF RECORDS/TRK
         DROP  R6
         SPACE
* OPEN THE FILE
         LA    R3,PFCBDCB          GET DCB ADDR
         LA    R4,PFCBPDCB         GET SECOND DCB
         L     R1,CVPSYNAD         GET SYNAD ADDRESS
         ST    R1,56(,R4)          SAVE SYNAD ADDRESS
         L     R1,JCBWAPTR         POINT TO A WORK AREA FOR OPEN
         OI    4(R1),X'80'     SET LAST DCB BIT
         OPEN  ((3),(OUTPUT),(4),(OUTPUT)),MF=(E,(1))
         TM    PFCBDCB+(DCBOFLGS-IHADCB),X'10'  OPEN OK?
         BZ    BADOPEN
         TM    PFCBPDCB+(DCBOFLGS-IHADCB),X'10'  OPEN OK?
         BZ    BADOPEN
         L     R4,PFCBDCB+(DCBDEBAD-IHADCB)  DEB ADDR
         USING DEBBASIC,R4
         SR    R5,R5               CLEAR WORK REG
         IC    R5,DEBNMEXT         NUMBER OF EXTENTS
         LA    R4,DEBDDEP          DEVICE DEPENDENT PORTION
         USING DEBDDEP,R4
         SR    R1,R1
COUNTRKS AH    R1,DEBNMTRK         NUMBER OF TRKS IN THIS EXTENT
         LA    R4,DEBDSZDA(,R4)    SKIP EXTENT AREA
         BCT   R5,COUNTRKS         ADD IN REMNDR
         M     R0,PFCBRPT          TIMES RECORDS/TRK
         CL    R1,PFCBNP           COMPARE AGAINST MAX DEFINED
         BNH   *+8                 BR IF OK
         L     R1,PFCBNP
         ST    R1,PFCBNP           SAVE MAX
         LR    R4,R1
         AL    R1,PFCBPTST         END OF PAGE TABLE
         BCTR  R1,R0               POINT TO LAST BYTE IN TABLE
         ST    R1,PFCBPTND
         L     R3,PFCBNP           LENGTH
         L     R2,PFCBPTST         BEGINING OF TABLE
         LA    R5,254              FILL CHAR
         SLL   R5,24               MOVE TO HIGH ORDER BYTE
         LR    R4,R2               SAME AREA
         MVCL  R2,R4               OVERLAY WITH FF
SETCP    DS    0H
         L     R3,CVFPFCB          POINT TO PFCB
         USING PFCB,R3
         L     R2,CVFPAGE          POINT TO A PCB
         USING PCB,R2
         LA    R13,CPWA            SAVE AREA
         SR    R1,R1               TO GET PAGE 0
         ST    R3,PCBPFCB
         MVI   PCBRWCCW,PIOREAD    TO READ IT
         CVCALL PIO                GET 1ST PAGE
         TM    JCBBFL,JCBBFPER     IO ERROR?
         BO    NORMAL              YEP, NO REVCOVERY
         LA    R4,PCBBUF           POINT TO READ MATERIAL
         CLC   0(8,R4),=CL8'SUSPEND' IS IT A SUSPENDED SESSION
         BE    CHKUSER             CHK IF SAME USER
         CLC   0(8,R4),=CL8'RECOVER' IS IT CRASHED SESSION?
         BNE   NORMAL
         MVI   CPCMNM,C'Z'         REMEMBER IT IS RECOVERED.
CHKUSER  ST    R6,CVSPARES        SAVE PAST COMPARE
         SR    R6,R6
         IC    R6,CVUSRFLD        PICK UP ID LENGTH
         CLC   CPUSER(0),274(R4)  IS THIS THE ONE??             JJG001
         EX    R6,*-6             EXEC ABOVE COMPARE
         L     R6,CVSPARES
         BNE   NORMAL              NOPE
         MVI   0(R4),X'00'         MAKE IT NO SUSPEND
         MVI   PCBRWCCW,PIOWRITE   TO WRITE IT BACK
         CVCALL PIO                GO WRITE IT BACK
         TM    JCBBFL,JCBBFPER     IO ERROR?
         BO    NORMAL
         MVC   PFCBCP(4),8(R4)     CURRENT PAGES
         MVC   CPRSCNVL(4),12(R4)  RESCAN ESC & SKIP
         MVC   CPEXLNET(4),16(R4)
         MVC   CVEXTRAP(12),20(R4)
         LA    R4,32(,R4)
         L     R5,RTBWAPTR
         MVC   RTBSTART(RTBSIZE-RTBNTEXT),0(R4)
         ST    R5,RTBWAPTR
         LA    R4,RTBSIZE-RTBNTEXT(,R4)
         MVC   CPGLDL(CPRCVSZ1),0(R4)
         LA    R4,CPRCVSZ1(,R4)
         MVC   CPDRPT(CPRCVSZ2),0(R4)
         LA    R4,CPRCVSZ2(,R4)
         LR    R0,R2                         SAVE ACROSS MVCL
         LR    R1,R3                         SAVE ACROSS MVCL
         LA    R2,CPDREC                     SET FOR MVCL
         LA    R3,CPRCVSZ3                   LENGTH
         LR    R14,R4                        FROM
         LR    R15,R3                        SAME LENGTH
         MVCL  R2,R14                        MOVE IT
*        MVC   CPDREC(CPRCVSZ3),0(R4)
         LA    R4,CPRCVSZ3(,R4)
         MVC   CPCHECK(4),=X'6913723F'
         LA    R2,ROUTBLE                    SET FOR MVCL
         LA    R3,ROUTBLEN                   LENGTH
         LR    R14,R4                        FROM
         LR    R15,R3                        SAME LENGTH
         MVCL  R2,R14                        MOVE IT
         LR    R2,R0                         RESTORE
         LR    R3,R1                         RESTORE
*        MVC   ROUTBLE(256),0(R4)
*        MVC   ROUTBLE+256(ROUTBLEN-256),256(R4)
         LA    R4,ROUTBLEN(,R4)
         MVC   0(256,R5),0(R4)
         LA    R4,256(,R4)
         L     R3,CVFPFCB            POINT TO PFCB
         L     R2,CVFPAGE            FIRST PCB
         LA    R2,PCBSIZE(,R2)        2ND PCB
         MVI   PCBRWCCW,PIOREAD       GO READ 2ND CP IN
         LA    R1,1
         ST    R3,PCBPFCB
         CVCALL PIO
         TM    JCBBFL,JCBBFPER        IO ERROR
         BO    SIGHSIGH               TOO BAD
         LR    R0,R2                  SAVE
         LR    R1,R3                      ACROSS MVCL
         LA    R14,PCBBUF             MOVE FROM
         L     R2,PFCBPTST            BEGINNING OF PAGE TABLE
         LA    R3,&PAGE0              MAX NUMBER OF PAGES
         LR    R15,R3                 SAME LENGTH
         MVCL  R2,R14                 MOVE IT
         LR    R2,R0                         RESTORE
         LR    R3,R1                         RESTORE
         L     R5,PFCBPTST
         CLI   CPCMNM,C'Z'            RECOVERY?
         BNE   REWRITE
PTLP     CLI   0(R5),INCORE
         BNE   *+8
         MVI   0(R5),0
         CLI   0(R5),X'FE'
         LA    R5,1(,R5)
         BNE   PTLP
         XC    RTBWC(6),RTBWC
         SPACE
REWRITE  LA    R5,CPAREA+CPSIZE       POINT TO AREA
         ST    R5,PCBRWCCW
         MVI   PCBRWCCW,PIOREAD       GO READ 2ND CP IN
         LA    R1,2
         CVCALL PIO
         TM    JCBBFL,JCBBFPER        IO ERROR
         BO    SIGHSIGH               TOO BAD
         OFFSET R5,VCPAGE
         ST    R5,CVCPADDR
         ST    R5,PCBRWCCW
         MVI   PCBRWCCW,PIOREAD       GO READ VCP IN
         LA    R1,3
         CVCALL PIO
         TM    JCBBFL,JCBBFPER        IO ERROR?
         BO    SIGHSIGH               TOO BAD
         LA    R5,PCBBUF
         ST    R5,PCBRWCCW
         SPACE
         L     R5,PFCBPTST            START OF PT
         L     R4,PFCBRPT             # BLOCKS PER TRACK
         SR    R1,R1                  0 TRACKS
PTLOOP   AR    R5,R4                  START FROM TRK 1
         LA    R1,1(,R1)              1 MORE TRACK
         CLI   0(R5),X'FE'            A VIRGIN PAGE
         BNE   PTLOOP
         STH   R1,CPWK1
         MVC   CPWK1+2,=X'0100'       1ST RECORD ON NEW TRK
         LA    R0,CPWK1
         LA    R1,PFCBPDCB            DCB ADDRESS
         POINT (1),(0)
         OI    CPGFLG,CPFDIRCH
         CLI   CPCMNM,C'Z'         WAS IT RECOVERED?
         BE    RECOVERD
         SYSQS 1,0,'SUSPENDED SESSION RESTORED'
TPUTRET  TPUT  (1),(0),EDIT,WAIT
         B     LOADEXIT
         SPACE
RECOVERD TM    CPGFLG2,CPFEXEC
         BZ    RECVNOEX
         OI    JCBAFL,JCBAFIA      SET IDLE ATTENTION
         XC    CVEXTRAP,CVEXTRAP   GET RID OF EXEC TRAP
RECVNOEX SYSQS 1,0,'PREVIOUS SESSION RECOVERED SUCCESSFULLY'
         B     TPUTRET
         EJECT
NORMAL   LA    R3,3                GET 3 PAGES
         NI    JCBBFL,255-JCBBFPER TURN OF I/O ERROR FLAG
PGETLP   SR    R1,R1               CLEAR FOR NEW PAGE
         PGET  R1
         TM    JCBBFL,JCBBFPER
         BO    NOPAGES
         LR    R5,R1               DON'T USE R1 FOR PFREE CALL
         PFREE R5                  FREE THE PAGE WE JUST GOT
         BCT   R3,PGETLP
         SPACE
* NOTE THAT THE PAGE IS JUST FREED.. NOT JUNKED
* THAT MEANS PAGE WILL NOT BE IN CORE BUT REMAIN ALLOCATED.
* THE PGET ROUTINE WILL WRITE OUT A TRACKFUL OF DUMMY PAGES
* BECAUSE THE PAGE THAT WAS JUST GOTTEN WAS A BRAND NEW PAGE .
         SPACE 3
         MVC   CPUSERSV(8),CPUSER  FOR SAVE
*        OI    CPGFLG,CPFVOLM      SET DEFAULT VOL FLAG    ITEL
         OI    CPGFLG,CPFVOLM+CPFCMOFF TER & VOL FLAG      ITEL
         OI    RTBMFL,RTBWRAP      SET WRAP AS DEFAULT
         OI    RTBUFL,RTBUNCOL         NOCOLLECT FLAG      ITEL
         MVC   CPVOLSV,=C'CATLG '  SET DEFAULT VOL = CATLG
         MVC   CPCHECK(4),=X'6913723F'
         MVC   CPGLDL(4),=F'1000'       DELTA=1.000
         MVC   CPLNGTH(2),=H'72'        LEN=72
         MVC   CPDREC(4),=D'0'          ZERO 1ST LINE NO.
         MVI   CPLSTCOL,FNEGBT          SET NO COLLECT YET
         MVI   CPCURRL,FNEGBT      SET CURRENT LINE POINTER INV
         MVI   CPEXLINE,FNEGBT     SET EXEC LINE POINTER INV
         MVI   CPMEMBSV,X'40'      CLEAR MEMBER
         MVC   CPMEMBSV+1(L'CPMEMBSV-1),CPMEMBSV
         OFFSET VCPR,VCPAGE
         ST    VCPR,CVCPADDR
         USING DVCP,VCPR
         XC    VCPWVAR,VCPWVAR    ZERO LINE # VARIABLES
         XC    VCPNVAR,VCPNVAR    ZERO INTEGER VARIABLES
         MVC   VCPSVAR(L'SVARINIT),SVARINIT  INIT STRING VARS
         LA    R2,24      LOOP
         LA    R1,PVARINIT
         LA    R6,VCPPVAR
VCPVLOOP MVC   0(2,R6),0(R1)     MOVE PFK'S
         MVC   2(23,R6),=CL23' ' SET DUMMY PFK'S
         LA    R6,25(,R6)        NEXT AREA
         LA    R1,2(,R1)         NEXT PFK DEF
         BCT   R2,VCPVLOOP       LOOP THRU IT
         DROP  VCPR
         LA    0,5
         STH   0,CPRSCNVL         INITIALIZE RESCAN LIMIT
         OI    CPGFLG2,CPESNULL   SET ESCAPE CHARACTER NULL
         OI    CPGFLG2,CPSKNULL   SET SKIP CHARACTER NULL
         LA    R13,CPWA            SAVE AREA
         MVC   CPCMSAV(L'LOGCMND),LOGCMND
         LA    R0,L'LOGCMND-1
         ST    R0,CPCTSAV
         EJECT
* LOAD IN THE PAGED ROUTINES
         SPACE
         LA    R10,ROUTBLE
         USING ROUTBLE,R10
         LA    R6,PAGTBLE-4        SET FOR START OF LOOP
         SR    R5,R5               CLEAR REG FOR PFREE
         USING PCB,R5
         SPACE
* LOOP THROUGH PAGTBLE AND LOAD EACH OVERLAY SEGMENT
* AFTER LOADING THE SEGMENT, GET A PAGE FROM THE ACTIVE
* FILE AND WRITE OUT THE OVERLAY SEGMENT.  THEN FILL IN
* ROUTBLE FOR ANY ROUTINES FOUND.
         SPACE
LOADLOOP LA    R6,4(,R6)           STEP UP TO NEXT ENTRY
         C     R6,=A(PAGTBLED)     END OF PAGETABLE?
         BNL   LOADDONE            YES..GO FINISH
         L     R1,0(,R6)           LOAD VCON
         LTR   R1,R1               DOES IT EXIST?
         BZ    LOADLOOP            NO..GO ON TO NEXT PAGE
         LA    R0,1                SET R0 FOR SEGWT
         SVC   37                  GO GET EM
         PGET  R5                  GET A PAGE
         BZ    NOPAGES
         STH   R0,PCBPN            SAVE PAGE NUMBER IN PCB
         LR    R4,R0               PRESERVE PAGE NUMBER
         L     R11,=A(P001)
         LH    R1,0(,R11)          GET ADDR OF INIT CODE
         BAL   R14,0(R11,R1)       GO DO INIT CODE
         STM   R2,R5,CVSPARES      TEMP SAVE
         LR    R4,R11              SET R2 TO MOVE CODE
         LR    R2,R5               SET R1 TO BUFFER ADDRESS
         LA    R3,CPSIZE
         LA    R5,CPSIZE           MOVE-A-CHUNK
         MVCL  R2,R4
         LM    R2,R5,CVSPARES      RESTORE REGS
         PMARK R5                  MARK THE BUFFER
         LA    R11,2(,R11)         SET R11 TO FIRST TABLE ENTRY
LOADLP2  LH    R1,0(,R11)           GET NEXT ENTRY
         LTR   R1,R1               IS THIS END OR DEFAULT
         BM    LOADLP5             BR IF EITHER
         C     R1,=A(ROUTBLEN)     CHECK THAT ITS IN RANGE
         BL    LOADLP3             BR IF OK
         WTO   '**WYLTSO** INCOMPATIBLE PAGED CODE..REASSEMBLE IT'
         B     RETURN16
*
LOADLP3  STH   R4,ROUTBLE(R1)      PUT PAGE NO. IN ROUTBLE
         LH    R0,2(,R11)           GET DISPLACEMENT TO START
         STH   R0,ROUTBLE+2(R1)    PUT IT IN ROUTBLE
LOADLP4  LA    R11,4(,R11)           STEP TO NEXT ENTRY
         B     LOADLP2             GO CHECK THIS ENTRY
*
LOADLP5  CH    R1,=H'-1'   IS THIS DEFAULT ROUTINE FOR MISSING
         BNE   LOADLOOP           NO, GO DO NEXT OVERLAY
         STH   R4,LOADEFLT         YES, SAVE PAGE NUMBER
         MVC   LOADEFLT+2(2),2(R11)   AND ALSO DISPLACEMENT
         B     LOADLP4             GO DO NEXT ON THIS PAGE
         DROP  R10
LOADDONE PFREE R5                  FREE THE LAST GOTTEN PCB
         CLC   LOADEFLT,=A(0)      IS THERE A DEFAULT MISSING ROUTINE
         BE    LOADEXIT            NO, RETURN
         L     R2,=A(ROUTBLEN)     LOAD LENGTH OF ROUTBLE
         AR    R2,R10              NOW POINT TO END OF TABLE
LOADEFLP CR    R10,R2              ARE WE DONE
         BNL   LOADEXIT            BR YES
         CLC   0(4,R10),=A(0)      WAS THIS ENTRY INITIALIZED
         BNE   *+10                YES, DON'T PUT IN DEFAULT
         MVC   0(4,R10),LOADEFLT   NO, SET ENTRY TO DEFAULT
         LA    R10,4(,R10)         STEP TO NEXT ENTRY
         B     LOADEFLP            GO DO IT
         SPACE
LOADEXIT DELETE EP=IEWSZOVR        DELETE REMDR
         SPACE
* INITIALIZE RECOVERY IOB AND CCW'S TO WRITE OUT SNAPSHOT
         SPACE
         L     R4,CVPIOB           GET RECOVERY IOB ADDRESS
         USING PIOB,R4
         MVI   PIOBFLG1,X'42'      COMMAND CHAINING
         LA    R1,PECB             ECB ADDRESS
         ST    R1,PIOBECB-1
         LA    R1,PCCWS            START OF CCWS
         ST    R1,PIOBCCW-1
         L     R1,CVFPFCB          POINT TO THE PFCB
         LA    R1,PFCBDCB-PFCBSTRT(,R1) DCB ADDRESS
         ST    R1,PIOBDCB-1
         L     R1,DCBDEBAD-IHADCB(,R1) POINT TO DEB
         LR    R3,R1               REMEMBER DEB ADDRESS
         LR    R6,R12              REMEMBER CP ADDRESS
         L     R15,16              CVT ADDRESS
         LA    R2,PSEEK1           RESULT ADDRESS OF CONV
         L     R15,28(,R15)        TTR CONVERSION ROUTINE
         L     R0,=X'00000100'     1ST RECORD, 1ST TRACK
         LR    R5,R15              REMEMBER TTR CONV ROUTINE
         BALR  R14,R15
         LA    R2,PSEEK2           RESULT ADDRESS OF CONV
         LR    R15,R5              TTR CONV ROUTINE
         LR    R1,R3               DEB ADDRESS
         L     R0,=X'00000200'     2ND RECORD
         BALR  R14,R15
         LA    R2,PSEEK3           RESULT ADDRESS OF CONV
         LR    R15,R5              CONV ROUTINE ADDRESS
         LR    R1,R3               DEB ADDRESS
         L     R0,=X'00000300'     3RD RECORD
         BALR  R14,R15
        LA    R2,PSEEK4           RESULT ADDRESS OF CONV
         LR    R15,R5              CONV ROUTINE ADDRESS
         LR    R1,R3               DEB ADDRESS
        L     R0,=X'00000400'     4TH RECORD
         BALR  R14,R15
         LR    R12,R6              RESTORE CP ADDRESS
         LA    R13,CPWA            RESTORE SAVE AREA ADDRESS
         LA    R2,PSEEK1+3
         ST    R2,PCCWSID1
         MVI   PCCWSID1,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID1+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID1+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID1
         ST    R2,PCCWTIC1
         MVI   PCCWTIC1,X'08'
         L     R2,JCBWAPTR
         ST    R2,PCCWWRT1
         MVI   PCCWWRT1,X'05'
         LA    R5,PCBPSIZE
         ST    R5,PCCWWRT1+4
         MVI   PCCWWRT1+4,X'40'
         LA    R2,PSEEK2+3
         ST    R2,PCCWSID2
         MVI   PCCWSID2,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID2+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID2+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID2
         ST    R2,PCCWTIC2
         MVI   PCCWTIC2,X'08'
         L     R2,JCBWAPTR
         AH    R2,=AL2(CPSIZE)
         ST    R2,PCCWWRT2
         MVI   PCCWWRT2,X'05'
         ST    R5,PCCWWRT2+4
         MVI   PCCWWRT2+4,X'40'
         LA    R2,PSEEK3+3
         ST    R2,PCCWSID3
         MVI   PCCWSID3,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID3+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID3+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID3
         ST    R2,PCCWTIC3
         MVI   PCCWTIC3,X'08'
         LA    R2,CPAREA+CPSIZE
         ST    R2,PCCWWRT3
         MVI   PCCWWRT3,X'05'
         ST    R5,PCCWWRT3+4
         LA    R2,PSEEK4+4
         ST    R2,PCCWSID4
          MVI   PCCWSID4,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID4+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID4+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID4
         ST    R2,PCCWTIC4
         MVI   PCCWTIC4,X'08'
         L     R2,CVCPADDR
         ST    R2,PCCWWRT4
         MVI   PCCWWRT4,X'05'
         ST    R5,PCCWWRT4+4
         MVC   CVPROMPT,CVPRMLIM
         SPACE
         L     R14,CVIOWA          WORK AREA ADDRESS
         USING WDIOWA,R14
         LA    R1,WASTAX           STAX PARAMETER AREA
         XC    WASTAX(20),WASTAX   CLEAR IT
         DROP  R14
         L     R14,CVATNRTN        ATTENTION EXIT ADDRESS
         STAX  (14),REPLACE=NO,DEFER=NO,USADDR=((12)),MF=(E,(1))
         OI    JCBAFL,JCBSTAX
         BR    R8                  RETURN TO WYLBUR
         EJECT
* ERROR MESSAGES:
         SPACE
NODASD   SYSQS 1,0,'PAGEFILE NOT ON DIRECT ACCESS DEVICE'
         B     RETURN16                  EXIT
SIGHSIGH SYSQS 1,0,'UNABLE TO RECOVER FROM SUSPENDED SESSION'
         B     RETURN16
NOPAGE0  SYSQS 1,0,'PAGEFILE NOT SUPPLIED'
         B     RETURN16
BADOPEN  SYSQS 1,0,'PAGEFILE CANNOT BE OPENED'
         B     RETURN16
NOPAGES  SYSQS 1,0,'INSUFFICIENT PAGES TO INITIALIZE'
         SPACE
RETURN16 TPUT  (1),(0),,WAIT,,BREAKIN
         L     R13,CVRETURN
         LM    R14,R12,12(R13)     RESTORE REGS
         LA    R15,16
         BR    R14                 RETURN TO CALLER
         EJECT
* VCON ENTRIES FOR EACH OVERLAY PAGE
         SPACE
PAGTBLE  DS    0F
         DC    V(P001)
         DC    V(P002)
         DC    V(P003)
         DC    V(P004)
         DC    V(P005)
         DC    V(P006)
         DC    V(P007)
         DC    V(P008)
         DC    V(P009)
         DC    V(P010)
         DC    V(P011)
         DC    V(P012)
         DC    V(P013)
         DC    V(P014)
         DC    V(P015)
         DC    V(P016)
         DC    V(P017)
         DC    V(P018)
         DC    V(P019)
         DC    V(P020)
         DC    V(P021)
         DC    V(P022)
         DC    V(P023)
         DC    V(P024)
         DC    V(P025)
         DC    V(P026)
         DC    V(P027)
         DC    V(P028)
         DC    V(P029)
         DC    V(P030)
         DC    V(P031)
         DC    V(P032)
         DC    V(P033)
         DC    V(P034)
         DC    V(P035)
         DC    V(P036)
         DC    V(P037)
         DC    V(P038)
         DC    V(P039)
         DC    V(P040)
         DC    V(P041)
PAGTBLED EQU   *                   END OF PAGTBLE
         SPACE
LOADEFLT DC    F'0'                DEFAULT ROUTINE FOR MISSING
         SPACE
LOGCMND  DC    C';X FRO #LOGON NOL '
         SPACE 3
         LTORG
         SPACE
         DROP  R5
         DROP  R7
         EJECT
         DS    0H
SVARINIT DS    0CL34
         DC    H'32'
         DC    C'0',X'00'
         DC    C'1',X'00'
         DC    C'2',X'00'
         DC    C'3',X'00'
         DC    C'4',X'00'
         DC    C'5',X'00'
         DC    C'6',X'00'
         DC    C'7',X'00'
         DC    C'8',X'00'
         DC    C'9',X'00'
         DC    C'A',X'00'
         DC    C'B',X'00'
         DC    C'C',X'00'
         DC    C'D',X'00'
         DC    C'E',X'00'
         DC    C'F',X'00'
         SPACE
PVARINIT DS    0CL48
         DC   X'F1',X'00'                   PFK01
         DC   X'F2',X'00'                   PFK02
         DC   X'F3',X'00'                   PFK04
         DC   X'F4',X'00'                   PFK03
         DC   X'F5',X'00'                   PFK05
         DC   X'F6',X'00'                   PFK06
         DC   X'F7',X'00'                   PFK07
         DC   X'F8',X'00'                   PFK08
         DC   X'F9',X'00'                   PFK09
         DC   X'7A',X'00'                   PFK10
         DC   X'7B',X'00'                   PFK11
         DC   X'7C',X'00'                   PFK12
         DC   X'C1',X'00'                   PFK13
         DC   X'C2',X'00'                   PFK14
         DC   X'C3',X'00'                   PFK15
         DC   X'C4',X'00'                   PFK16
         DC   X'C5',X'00'                   PFK00
         DC   X'C6',X'00'                   PFK18
         DC   X'C7',X'00'                   PFK00
         DC   X'C8',X'00'                   PFK20
         DC   X'C9',X'00'                   PFK21
         DC   X'4A',X'00'                   PFK22
         DC   X'4B',X'00'                   PFK23
         DC   X'4C',X'00'                    PFK24
          PRINT NOGEN
DUMMYDCB DCB   DDNAME=PAGE0,MACRF=(E),DEVD=DA,DSORG=DA
         SPACE
PDCB     DCB   DDNAME=PAGE0,DSORG=PS,MACRF=WP,BLKSIZE=PCBPSIZE,        *
               RECFM=F,OPTCD=C,SYNAD=0
         PRINT GEN
         TITLE  'DYNAMIC ALLOCATION PARMS FOR PAGE0'
DAIRPAGE DS    0F
         DC    X'0008'
         DC    X'0000'
         DC    X'00000000'
         DC    AL4(PAGEDSN)
         DC    CL8'PAGE0'
         DC    CL8'VIO'
         DC    CL8' '
         DC    AL4(CPSIZE)              SIZE OF PAGE
         DC    AL4(&PAGE0)             NUMBER OF PAGES
         DC    F'0'
         DC    F'0'
         DC    CL8' '
         DC    CL8' '
         DC    XL3'040000'
         DC    X'48'              BLOCK ALLOCATION/PERM ATTR
         DC    F'0'
         DC    CL8' '
PAGEDSN  DC    XL2'002C',CL44' '
         TITLE 'START OF PAGED CODE -- PAGE 1'
P001     PAGECDE MISSING
         WIDENT 001
         USING CPAREA,R12
         TITLE 'DEFAULT MISSING ROUTINE -- PAGE 1'
PMISSING GENTER
         TSEG  'CODE FOR ROUTINE NOT IN PAGEFILE'
         B     CVQTYPE
         TITLE 'END OF PAGE CODE -- PAGE 1'
         PINIT                     DEFINE START OF INIT ROUTINE
         PEND                      DEFINE END ON INIT CODE
         TITLE 'CONSTANTS AND CONTROL BLOCKS'
         COPY  WYLCONST
         EJECT
         COPY  VCPTSO
         EJECT
PCB      DSECT
         COPY  PCBTSO
         EJECT
PFCB     DSECT
         COPY  PFCBTSO
         EJECT
PIOB     DSECT
         COPY  PIOB
         EJECT
         COMMON
         EJECT
         LTORG
         ORG   ,
FRSTPAGE DS    0D
         PAGES &NUMPAGE
LASTPAGE DS    0D
         EJECT
FRSTPFCB DS    0D
         PAGEFILE &PAGE0           DEFINE ONE DRUM FILE
LASTPFCB DS    0F
         EJECT
         PT
VCPAGE   DS    0F
         DS    XL(CPSIZE)         VARIABLE COMMAND PAGE
         DS    0D
WORKAREA DS    XL(CPSIZE*2)
WAFORRTB DS    CL256
         SPACE
PCBTABLE DS    &NUMPAGE.A
         SPACE
CVDDLIST DS    &MAXDDS.CL8
         SPACE
CVCPEND  DS    0D                  ROUND OFF TO DBL-WRD
         SPACE
CVCPSIZE EQU   *-CPSTART
         EJECT
DEB      DSECT
         COPY  DEB
         SPACE 3
         DCBD
         EJECT
WDIOWA   WDIOWA DSECT
         SPACE
         END
./ ADD NAME=INIT9    0100-80228-80228-1339-00949-00949-00000-$SYS13  00
INIT     TITLE 'WYLTSO INITIALIZATION ROUTINE'
*  WYLBUR MVS/TSO VERSION 1.1
         SPACE
         COPY  PMAC
         SPACE
         USING CPAREA,R12
         SPACE 3
         ENTRY INITWYL
INITWYL  CSECT
         DC    24XL256'00'         DUMMY MODULE
         ORG   INITWYL
         LR    R7,R15              GET ADDRESSABILITY
         LR    R4,R1               ADDRESS OF REAL CV
         LR    R8,R14              RETURN ADDRESS
         SPACE
*** WARNING *** R8 MUST NOT BE ALTERED *** WARNING ***
         SPACE
         USING INITWYL,R7
         L     R0,=A(CVCPSIZE)     DETERMINE GETMAIN SIZE
         A     R0,=F'1024'         FOR TRACE AREA
         A     R0,=A(PIOBSIZE)     FOR RECOVERY IOB
         GETMAIN R,LV=(0),PAGE       GO GET 'EM
         SPACE
* WE GOT IT IF WE SURVIVE TO GET HERE
         LR    R12,R1              POINT TO THE AREA
         LA    R13,CPWA
         SPACE
* CLEAR THE 'CP' PART OF THE AREA
         SLR   R0,R0               CLEAR FOR MVCL
         LR    R2,R1             AREA TO CLEAR
         LA    R1,0              FILL CHAR INTO REG 1
         LA    R3,CPSIZE          SIZE OF AREA TO CLEAR
         MVCL  R2,R0             CLEAR THE AREA
* COPY THE REAL CV INTO OUR AREA. R4 POINTS TO IT.
         LA    R3,CVSIZE            SIZE TO MOVE
         LR    R5,R3                ALSO IN REG 5
         LA    R2,CVSTART           AREA TO MOVE TO
         MVCL  R2,R4                MOVE IT
         SPACE
* CLEAR JCB FIELDS
         XC    JCBSTART(JCBSIZE),JCBSTART
         SPACE
*
COPYWA   LOAD  EP=WYLWA
         ST    R0,CVIOWA           SAVE ADDR OF WORK AREA
         ST    R11,CVRETURN        SAVE OS RETURN ADDR
         SPACE
* INITIALIZE THE TRACE AREA
         OFFSET R1,CVCPEND
         ST    R1,CVTRSTRT         START OF TABLE
         ST    R1,CVTRACE          CURRENT ENTRY
         LA    R2,1024-16(,R1)
         ST    R2,CVTREND          END OF TABLE POINTER
         SPACE
* NOW CLEAR THE AREA
         LR    R2,R1               SET REG FOR MOVE AREA
         LA    R3,1024             LENGTH TO MOVE
         LA    R0,0                FOR CLEAR AREA
         LA    R1,0                FILL LENGTH
         SPACE
* CLEAR RECOVERY IOB AND SAVE ITS ADDRESS IN CV
         ST    R2,CVPIOB
         XC    0(PIOBSIZE,R2),0(R2)
         SPACE
* INITIALIZE ALL THE CONTROL BLOCKS
INIT2    LA    R1,&NUMPAGE         NUMBER OF PAGES IN SYS
         OFFSET R2,CVPAGE1         POINT TO FIRST PAGE
         USING PCB,R2
PAGEINIT XC    PCBPT(PCBSIZE-PCBPSIZE),PCBPT
         MVI   PCBFLG1,X'42'
         LA    R3,PCBECB
         ST    R3,PCBECBP-1        SAVE POINTER TO ECB
         LA    R3,PCBCCWS          ADDR OF CHAN PROG
         ST    R3,PCBCCWP-1        SAVE IN IOB
         OFFSET R3,PFCB1+PFCBDCB-PFCB
         ST    R3,PCBDCB-1         SAVE IN IOB
         SPACE
* NOW INITIALIZE THE CHANNEL PROG
         LA    R3,PCBSEEK+3
         ST    R3,PCBCCWS
         MVI   PCBCCWS,X'31'       MOVE IN OP-CODE
         MVI   PCBCCWS+4,X'40'     COMMAND CHAIN
         MVI   PCBCCWS+7,X'05'     LENGTH OF 5
         LA    R3,PCBCCWS
         ST    R3,PCBCCWS+8        SAVE TIC ADDRESS
         MVI   PCBCCWS+8,X'08'     TIC OP-CODE
         LA    R3,PCBBUF           ADDRESS OF BUFFER
         ST    R3,PCBRWCCW         SAVE INTO CCW
         MVI   PCBRWCCW,X'06'      OP-CODE
         MVC   PCBRWCCW+6(2),=AL2(PCBPSIZE)
         SPACE
* ALL DONE FOR THIS PAGE
         LA    R2,PCBSIZE(,R2)     NEXT
         BCT   R1,PAGEINIT         GET REMAINDER OF PAGES
         DROP  R2
         OFFSET R3,CVDDLIST
         ST    R3,CVDDNAMS
         OFFSET R3,PCBTABLE
         ST    R3,CVPADDRS
         LA    R0,&NUMPAGE
         OFFSET R1,CVPAGE1         FIRST PAGE
PCBLOOP  ST    R1,0(,R3)
         LA    R3,4(,R3)
         LA    R1,PCBSIZE(,R1)
         BCT   R0,PCBLOOP
         SPACE
* GET TIOT POINTER
         LA    R2,CPSTART          USE AREA AS BUFFER FOR EXTRACT
         EXTRACT (R2),FIELDS=(TIOT,TSO,PSB),MF=(E,(R2))
         L     R3,CPSTART+8        GET PSCB ADDR
         L     R10,CVIOWA          WORK AREA
         USING WDIOWA,R10
         ST    R3,WAPSCB           SAVE PSCB ADDR IN WORK AREA
         L     R4,CPSTART+4        TSO FIELD IN THE TCB
         TM    0(R4),X'80'         ARE WE TSO BOUND?
         BZ    NONTSO
         OI    JCBAFL,JCBTSO       WE ARE UNDER TSO
         TM    16(R3),X'80'        PRIV?
         BZ    *+8
         OI    JCBAFL,JCBSYSPR
         LOAD  EP=IKJEFD00         NAME OF MODULE
         ST    R0,CVDAIR
         SPACE
* INITIALIZE USER ID
*
*
*
NONTSO   EQU    *
         L     R2,CPSTART        TIOT POINTER
         MVC   CPUSER(8),0(R2)    MOVE IN USER ID
         TM    JCBAFL,JCBSYSPR    PRIV
         BZ    *+18               NO
         CLC   CPUSER(4),=CL4'$SYS'  IS IT ALSO TECH. SUPPORT
         BE    *+8                YES, CONT
         NI    JCBAFL,255-JCBSYSPR  TURN OFF PRIV
         LA    R2,24(,R2)          SKIP JOB,PROC,STEP NAMES
         ST    R2,CVTIOT           SAVE
         TM    JCBAFL,JCBTSO       ARE WE UNDER TSO?
         L     R2,WAPSCB           PICK UP PSCB ADDRESS
         LA    R2,7(R2)            POINT TO USER ID LEN
         IC    R2,0(R2)            PICK UP LENGTH
         STC   R2,CVUSRFLD         SAVE LENGTH FOR POSTERITY
         SPACE
* INITIALIZE PFCB & PAGE POINTERS
         OFFSET R2,FRSTPAGE
         ST    R2,CVFPAGE          SAVE IT
         OFFSET R2,LASTPAGE
         ST    R2,CVLPAGE
         OFFSET R2,FRSTPFCB
         ST    R2,CVFPFCB
         USING FRSTPFCB,R2
         LA    R2,LASTPFCB
         DROP  R2
         ST    R2,CVLPFCB
         OFFSET R3,WAFORRTB
         ST    R3,RTBWAPTR
         XC    0(L'WAFORRTB,R3),0(R3) CLEAR IT TOO
         MVI   RTBLSZ+1(R3),133
         MVI   RTBPSZ+1(R3),25
         L     R4,544              PICK UP ASCB  FROM PSAANEW
         L     R4,60(R4)           PICK UP TSB ADDRESS          J
         SLR   R1,R1               CLEAR FOR SVC
*        SVC   254                       KEY 0
         MODESET KEY=ZERO
         TM    0(R4),X'20'         ASSUME DISP SCREEN IS 3277
         BZ    NOT3277             NOT US...GO AROUND FLAG SET
IS3277   OI    LFLG1,CPF3277       SET 3277 FLAG
NOT3277  EQU    *                 CONTINUE
         MVC   CPDOUB+5,=CL3' '
         MVC   CPDOUB(5),CPUSER  USER ID
         SLR   R2,R2
         IC    R2,8(,R4)         GET TSBLNSZ
         LH    R4,36(,R4)        GET TSBATNLC
         LA    R1,4                CLEAR FOR SVC
         MODESET KEY=NZERO
*        SVC   254                       PROBLEM KEY
         LR    R0,R4
         LR    R1,R2
         LTR   R0,R0
         BNP   NOCRT
         C     R0,=F'255'
         BH    NOCRT
         STH   R0,RTBPSZ(,R3)
         OI    RTBMFL,RTBCRT
NOCRT    LTR   R1,R1
         BNP   NOLIN
         C     R1,=F'133'
         BH    NOLIN
         LA    R1,133              TEMP UNIL TSB IS FOUND
         STH   R1,RTBLSZ(,R3)
NOLIN    L     R1,WAPSCB           GET PSCB
         L     R1,52(,R1)          GET UPT FROM PSCB
         ST    R1,WAUPT            SAVE UPT
         SPACE
         L     R1,16               CVT @
         L     R1,0(,R1)           CURRENT TCB POINTER
         L     R1,0(,R1)           CURRENT TCB @
         L     R1,132(,R1)         MOTHER TCB @
         L     R1,112(,R1)         MOTHER TCB'S S.A. PTR
         L     R1,8(,R1)           CALLER'S S.A. PTR
         L     R1,24(,R1)          CALLER'S R1 = IOPL FOR CALL
         L     R1,4(,R1)           CALLER'S ECT
         ST    R1,WAECT            WOW...
         SPACE
         OFFSET R3,WORKAREA
         ST    R3,JCBWAPTR         SAVE POINTER TO IT
         TM    JCBAFL,JCBTSO       ARE WE A TSO TASK?
         BZ    NOTCP               NO.. SO DONT LOOK
         L     R11,8(,R9)          GET A POSSIBLE PSCB ADDR
         C     R11,WAPSCB          ARE WE A 'CP' ?
         BNE   NOTCP               NO.. MUST BE VIA A CALL
         L     R11,4(,R9)          UPT ENTRY
         ST    R11,WAUPT
         L     R11,12(,R9)         ENVIRON. CTL TAB
         ST    R11,WAECT
         L     R1,0(,R9)           POINTER TO COMMAND BUFFER
         LH    R2,0(,R1)
         SH    R2,=H'11'           4 + SIZE('WYLBUR ')
         LA    R1,4+7(,R1)         TEXT IS FOLLOWING 'WYLBUR '
         B     GOTPARM             GO PROCESS PARM
         SPACE
NOTCP    L     R1,0(,R9)           POINTER TO PARMS
         LH    R2,0(,R1)           GET LENGTH
         LA    R1,2(,R1)           POINT TO TEXT
GOTPARM  LTR   R2,R2               ANYTHING?
         BNP   NOPARMS
         ST    R1,CVPARM           SAVE PARM POINTER
         STC   R2,CVPARM           AND LENGTH
         SPACE
* INITIALIZE THE PFCB
NOPARMS  OFFSET R2,PFCB1
         USING PFCB,R2
         MVC   PFCBDCB(PFCBDSZ1),DUMMYDCB
         MVC   PFCBPDCB(PFCBDSZ2),PDCB
         OFFSET R3,PT1
         ST    R3,PFCBPTST         SAVE PAGE TABLE POINTER
         LA    R3,&PAGE0
         ST    R3,PFCBNP           SAVE IN PFCB
         XC    PFCBCP(4),PFCBCP    0 PAGES CURRENTLY IN USE
DODEVTYP DEVTYPE PFCBDCB+(DCBDDNAM-IHADCB),CPWA,DEVTAB
         LTR   R15,R15             FILE SUPPLIED?
         BZ    TESTDASD
*
* THE FOLLOWING CODE WAS ADDED BY BOB WENZEL OF ITEL
* IT WILL TRY TO ALLOC DATASET WYLPAGE0 TO FILE PAGE0
*
         L     R15,CVIOWA          ADDRESS OF DAIR ROUTINE
         LA    R1,WAUPT-WDIOWA(R15)  ADDR OF DAPL
         LA    R14,ALLOCATE           PARAMETER LIST
         ST    R14,WADAIR-WDIOWA(R15)
         L     R15,CVDAIR          ADDRESS OF DAIR ROUTINE
         BALR  R14,R15             CALL DAIR
         LTR   15,15               EVERYTHING OK?
         BZ    DODEVTYP     EVERYTHING IS NOT OK
*
*              DAIR ERROR DETERMINATION SECTION
*
DAIRERR  EQU   *       DAIR ERROR RETURN
         CH    R15,=H'12'
         BNE   GOWYL
INUSEDSN L     R2,16(R1)              DAPL
         LH    R3,4(R2)               DAPBDARC
         CH    R3,=X'0210'            DSN IN USE ERROR
         BNE   DARCERR                NO, SHOW DARC ERROR CODE
*
         TPUT  DSNINUSE,50            DSN IN USE MESSAGE
         B     NOPAGE0
DSNINUSE DC    CL50'PREFIXED WYLPAGE0 IS IN USE BY ANOTHER USER OR JOB'
*
DARCERR  ABEND 111,DUMP
*        L     R2,16(R1)
*        LH    R3,4(R2)
*
         DS    0D
ALLOCATE DS    0CL84
ALOCCD   DC    X'0008'
         DC    H'0'
         DC    H'0'
         DC    H'0'
ALOCDSN  DC    A(PAGE0LNG)
ALOCDDN  DC    CL8'PAGE0'
         DC    CL8' '
ALOCSER  DC    CL8' '
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
ALOCMNM  DC    CL8' '
         DC    CL8' '
ALOCDPS1 DC    X'01'    OLD
ALOCDPS2 DC    X'08'    KEEP
ALOCDPS3 DC    X'08'    KEEP
ALOCCTL  DC    X'20'    ADD USER ID
         DC    F'0'
         DC    2F'0'
*
PAGE0LNG DC    H'8',CL8'WYLPAGE0'
GOWYL    DS    0H
*
* END OF CODE ADDED BY BOB WENZEL OF ITEL
*
*             ALLOCATE  CODE FOR WYLRDR OR WYLPRINT
         L     R15,CVIOWA          ADDRESS OF DAIR ROUTINE
         LA    R1,WAUPT-WDIOWA(R15)  ADDR OF DAPL
         LA    R14,DAIRPAGE           PARAMETER LIST
         ST    R14,WADAIR-WDIOWA(R15)
         L     R15,CVDAIR          ADDRESS OF DAIR ROUTINE
         BALR  R14,R15             CALL DAIR
         LTR   15,15               INTRDR AVAILABLE??
         BNZ   NOPAGE0                   NO PAGE
         B     DODEVTYP            DO DEVTYP AGAIN
TESTDASD CLI   CPWA+2,X'20'        DIRECT ACCESS?
         BNE   NODASD              NOPE
         LA    R6,CPWA             SET BASE
         USING DVTAREA,R6              FOR DEVTABLE
         LA    R0,CPSIZE           SET R0 TO BLKSIZE ALSO
         LR    R3,R0               SET R3 ALSO
         MH    R3,DVTTOL           MULT BY TOLERANCE
         SRA   R3,9                DIVIDE BY 512
         SR    R1,R1               SET FOR IC
         IC    R1,DVTKEYO          GET KEY OVERHEAD
         SR    R0,R1               ADJUST BLKSIZES SINCE NO KEYS
         SR    R3,R1
         TM    DVTFLAG,DVTFOHD     IS IT HALF WORD OVERHEAD
         BO    CALCTRK1            BR YES
         IC    R1,DVTBLKO          GET NORMAL BLOCK OVERHEAD
         AR    R3,R1               ADJUST NORMAL VALUE
         IC    R1,DVTLBLKO         GET LAST BLOCK OVERHEAD
         AR    R0,R1               ADJUST LAST BLOCK VALUE
         B     CALCTRK2            NOW GO ON
         SPACE
CALCTRK1 LH    R1,DVTBLKO          GET BLOCK OVERHEAD
         AR    R0,R1               ADJUST BOTH FOR
         AR    R3,R1                   BLOCK OVERHEAD
CALCTRK2 LH    R1,DVTTRKSZ         GET TRACK SIZE
         SR    R1,R0               ADJUST FOR LAST BLOCK
         AR    R1,R3               ADD TO INCR COUNT BY 1
         SR    R0,R0               SET FOR DIVIDE
         DR    R0,R3               CALCULATE VALUE IN R1
         ST    R1,PFCBRPT          SAVE NUMBER OF RECORDS/TRK
         DROP  R6
         SPACE
* OPEN THE FILE
         LA    R3,PFCBDCB          GET DCB ADDR
         LA    R4,PFCBPDCB         GET SECOND DCB
         L     R1,CVPSYNAD         GET SYNAD ADDRESS
         ST    R1,56(,R4)          SAVE SYNAD ADDRESS
         L     R1,JCBWAPTR         POINT TO A WORK AREA FOR OPEN
         OI    4(R1),X'80'     SET LAST DCB BIT
         OPEN  ((3),(OUTPUT),(4),(OUTPUT)),MF=(E,(1))
         TM    PFCBDCB+(DCBOFLGS-IHADCB),X'10'  OPEN OK?
         BZ    BADOPEN
         TM    PFCBPDCB+(DCBOFLGS-IHADCB),X'10'  OPEN OK?
         BZ    BADOPEN
         L     R4,PFCBDCB+(DCBDEBAD-IHADCB)  DEB ADDR
         USING DEBBASIC,R4
         SR    R5,R5               CLEAR WORK REG
         IC    R5,DEBNMEXT         NUMBER OF EXTENTS
         LA    R4,DEBDDEP          DEVICE DEPENDENT PORTION
         USING DEBDDEP,R4
         SR    R1,R1
COUNTRKS AH    R1,DEBNMTRK         NUMBER OF TRKS IN THIS EXTENT
         LA    R4,DEBDSZDA(,R4)    SKIP EXTENT AREA
         BCT   R5,COUNTRKS         ADD IN REMNDR
         M     R0,PFCBRPT          TIMES RECORDS/TRK
         CL    R1,PFCBNP           COMPARE AGAINST MAX DEFINED
         BNH   *+8                 BR IF OK
         L     R1,PFCBNP
         ST    R1,PFCBNP           SAVE MAX
         LR    R4,R1
         AL    R1,PFCBPTST         END OF PAGE TABLE
         BCTR  R1,R0               POINT TO LAST BYTE IN TABLE
         ST    R1,PFCBPTND
         L     R3,PFCBNP           LENGTH
         L     R2,PFCBPTST         BEGINING OF TABLE
         LA    R5,254              FILL CHAR
         SLL   R5,24               MOVE TO HIGH ORDER BYTE
         LR    R4,R2               SAME AREA
         MVCL  R2,R4               OVERLAY WITH FF
SETCP    DS    0H
         L     R3,CVFPFCB          POINT TO PFCB
         USING PFCB,R3
         L     R2,CVFPAGE          POINT TO A PCB
         USING PCB,R2
         LA    R13,CPWA            SAVE AREA
         SR    R1,R1               TO GET PAGE 0
         ST    R3,PCBPFCB
         MVI   PCBRWCCW,PIOREAD    TO READ IT
         CVCALL PIO                GET 1ST PAGE
         TM    JCBBFL,JCBBFPER     IO ERROR?
         BO    NORMAL              YEP, NO REVCOVERY
         LA    R4,PCBBUF           POINT TO READ MATERIAL
         CLC   0(8,R4),=CL8'SUSPEND' IS IT A SUSPENDED SESSION
         BE    CHKUSER             CHK IF SAME USER
         CLC   0(8,R4),=CL8'RECOVER' IS IT CRASHED SESSION?
         BNE   NORMAL
         MVI   CPCMNM,C'Z'         REMEMBER IT IS RECOVERED.
CHKUSER  ST    R6,CVSPARES        SAVE PAST COMPARE
         SR    R6,R6
         IC    R6,CVUSRFLD        PICK UP ID LENGTH
         CLC   CPUSER(0),274(R4)  IS THIS THE ONE??             JJG001
         EX    R6,*-6             EXEC ABOVE COMPARE
         L     R6,CVSPARES
         BNE   NORMAL              NOPE
         MVI   0(R4),X'00'         MAKE IT NO SUSPEND
         MVI   PCBRWCCW,PIOWRITE   TO WRITE IT BACK
         CVCALL PIO                GO WRITE IT BACK
         TM    JCBBFL,JCBBFPER     IO ERROR?
         BO    NORMAL
         MVC   PFCBCP(4),8(R4)     CURRENT PAGES
         MVC   CPRSCNVL(4),12(R4)  RESCAN ESC & SKIP
         MVC   CPEXLNET(4),16(R4)
         MVC   CVEXTRAP(12),20(R4)
         LA    R4,32(,R4)
         L     R5,RTBWAPTR
         MVC   RTBSTART(RTBSIZE-RTBNTEXT),0(R4)
         ST    R5,RTBWAPTR
         LA    R4,RTBSIZE-RTBNTEXT(,R4)
         MVC   CPGLDL(CPRCVSZ1),0(R4)
         LA    R4,CPRCVSZ1(,R4)
         MVC   CPDRPT(CPRCVSZ2),0(R4)
         LA    R4,CPRCVSZ2(,R4)
         LR    R0,R2                         SAVE ACROSS MVCL
         LR    R1,R3                         SAVE ACROSS MVCL
         LA    R2,CPDREC                     SET FOR MVCL
         LA    R3,CPRCVSZ3                   LENGTH
         LR    R14,R4                        FROM
         LR    R15,R3                        SAME LENGTH
         MVCL  R2,R14                        MOVE IT
*        MVC   CPDREC(CPRCVSZ3),0(R4)
         LA    R4,CPRCVSZ3(,R4)
         MVC   CPCHECK(4),=X'6913723F'
         LA    R2,ROUTBLE                    SET FOR MVCL
         LA    R3,ROUTBLEN                   LENGTH
         LR    R14,R4                        FROM
         LR    R15,R3                        SAME LENGTH
         MVCL  R2,R14                        MOVE IT
         LR    R2,R0                         RESTORE
         LR    R3,R1                         RESTORE
*        MVC   ROUTBLE(256),0(R4)
*        MVC   ROUTBLE+256(ROUTBLEN-256),256(R4)
         LA    R4,ROUTBLEN(,R4)
         MVC   0(256,R5),0(R4)
         LA    R4,256(,R4)
         L     R3,CVFPFCB            POINT TO PFCB
         L     R2,CVFPAGE            FIRST PCB
         LA    R2,PCBSIZE(,R2)        2ND PCB
         MVI   PCBRWCCW,PIOREAD       GO READ 2ND CP IN
         LA    R1,1
         ST    R3,PCBPFCB
         CVCALL PIO
         TM    JCBBFL,JCBBFPER        IO ERROR
         BO    SIGHSIGH               TOO BAD
         LR    R0,R2                  SAVE
         LR    R1,R3                      ACROSS MVCL
         LA    R14,PCBBUF             MOVE FROM
         L     R2,PFCBPTST            BEGINNING OF PAGE TABLE
         LA    R3,&PAGE0              MAX NUMBER OF PAGES
         LR    R15,R3                 SAME LENGTH
         MVCL  R2,R14                 MOVE IT
         LR    R2,R0                         RESTORE
         LR    R3,R1                         RESTORE
         L     R5,PFCBPTST
         CLI   CPCMNM,C'Z'            RECOVERY?
         BNE   REWRITE
PTLP     CLI   0(R5),INCORE
         BNE   *+8
         MVI   0(R5),0
         CLI   0(R5),X'FE'
         LA    R5,1(,R5)
         BNE   PTLP
         XC    RTBWC(6),RTBWC
         SPACE
REWRITE  LA    R5,CPAREA+CPSIZE       POINT TO AREA
         ST    R5,PCBRWCCW
         MVI   PCBRWCCW,PIOREAD       GO READ 2ND CP IN
         LA    R1,2
         CVCALL PIO
         TM    JCBBFL,JCBBFPER        IO ERROR
         BO    SIGHSIGH               TOO BAD
         OFFSET R5,VCPAGE
         ST    R5,CVCPADDR
         ST    R5,PCBRWCCW
         MVI   PCBRWCCW,PIOREAD       GO READ VCP IN
         LA    R1,3
         CVCALL PIO
         TM    JCBBFL,JCBBFPER        IO ERROR?
         BO    SIGHSIGH               TOO BAD
         LA    R5,PCBBUF
         ST    R5,PCBRWCCW
         SPACE
         L     R5,PFCBPTST            START OF PT
         L     R4,PFCBRPT             # BLOCKS PER TRACK
         SR    R1,R1                  0 TRACKS
PTLOOP   AR    R5,R4                  START FROM TRK 1
         LA    R1,1(,R1)              1 MORE TRACK
         CLI   0(R5),X'FE'            A VIRGIN PAGE
         BNE   PTLOOP
         STH   R1,CPWK1
         MVC   CPWK1+2,=X'0100'       1ST RECORD ON NEW TRK
         LA    R0,CPWK1
         LA    R1,PFCBPDCB            DCB ADDRESS
         POINT (1),(0)
         OI    CPGFLG,CPFDIRCH
         CLI   CPCMNM,C'Z'         WAS IT RECOVERED?
         BE    RECOVERD
         SYSQS 1,0,'SUSPENDED SESSION RESTORED'
TPUTRET  TPUT  (1),(0),WAIT,EDIT
         B     LOADEXIT
         SPACE
RECOVERD TM    CPGFLG2,CPFEXEC
         BZ    RECVNOEX
         OI    JCBAFL,JCBAFIA      SET IDLE ATTENTION
         XC    CVEXTRAP,CVEXTRAP   GET RID OF EXEC TRAP
RECVNOEX SYSQS 1,0,'PREVIOUS SESSION RECOVERED SUCCESSFULLY'
         B     TPUTRET
         EJECT
NORMAL   LA    R3,3                GET 3 PAGES
         NI    JCBBFL,255-JCBBFPER TURN OF I/O ERROR FLAG
PGETLP   SR    R1,R1               CLEAR FOR NEW PAGE
         PGET  R1
         TM    JCBBFL,JCBBFPER
         BO    NOPAGES
         LR    R5,R1               DON'T USE R1 FOR PFREE CALL
         PFREE R5                  FREE THE PAGE WE JUST GOT
         BCT   R3,PGETLP
         SPACE
* NOTE THAT THE PAGE IS JUST FREED.. NOT JUNKED
* THAT MEANS PAGE WILL NOT BE IN CORE BUT REMAIN ALLOCATED.
* THE PGET ROUTINE WILL WRITE OUT A TRACKFUL OF DUMMY PAGES
* BECAUSE THE PAGE THAT WAS JUST GOTTEN WAS A BRAND NEW PAGE .
         SPACE 3
         MVC   CPUSERSV(8),CPUSER  FOR SAVE
*        OI    CPGFLG,CPFVOLM      SET DEFAULT VOL FLAG    ITEL
         OI    CPGFLG,CPFVOLM+CPFCMOFF TER & VOL FLAG      ITEL
         OI    RTBMFL,RTBWRAP      SET WRAP AS DEFAULT
         OI    RTBUFL,RTBUNCOL         NOCOLLECT FLAG      ITEL
         MVC   CPVOLSV,=C'CATLG '  SET DEFAULT VOL = CATLG
         MVC   CPCHECK(4),=X'6913723F'
         MVC   CPGLDL(4),=F'1000'       DELTA=1.000
         MVC   CPLNGTH(2),=H'72'        LEN=72
         MVC   CPDREC(4),=D'0'          ZERO 1ST LINE NO.
         MVI   CPLSTCOL,FNEGBT          SET NO COLLECT YET
         MVI   CPCURRL,FNEGBT      SET CURRENT LINE POINTER INV
         MVI   CPEXLINE,FNEGBT     SET EXEC LINE POINTER INV
         MVI   CPMEMBSV,X'40'      CLEAR MEMBER
         MVC   CPMEMBSV+1(L'CPMEMBSV-1),CPMEMBSV
         OFFSET VCPR,VCPAGE
         ST    VCPR,CVCPADDR
         USING DVCP,VCPR
         XC    VCPWVAR,VCPWVAR    ZERO LINE # VARIABLES
         XC    VCPNVAR,VCPNVAR    ZERO INTEGER VARIABLES
         MVC   VCPSVAR(L'SVARINIT),SVARINIT  INIT STRING VARS
         LA    R2,24      LOOP
         LA    R1,PVARINIT
         LA    R6,VCPPVAR
VCPVLOOP MVC   0(2,R6),0(R1)     MOVE PFK'S
         MVC   2(23,R6),=CL23' ' SET DUMMY PFK'S
         LA    R6,25(,R6)        NEXT AREA
         LA    R1,2(,R1)         NEXT PFK DEF
         BCT   R2,VCPVLOOP       LOOP THRU IT
         DROP  VCPR
         LA    0,5
         STH   0,CPRSCNVL         INITIALIZE RESCAN LIMIT
         OI    CPGFLG2,CPESNULL   SET ESCAPE CHARACTER NULL
         OI    CPGFLG2,CPSKNULL   SET SKIP CHARACTER NULL
         LA    R13,CPWA            SAVE AREA
         MVC   CPCMSAV(L'LOGCMND),LOGCMND
         LA    R0,L'LOGCMND-1
         ST    R0,CPCTSAV
         EJECT
* LOAD IN THE PAGED ROUTINES
         SPACE
         LA    R10,ROUTBLE
         USING ROUTBLE,R10
         LA    R6,PAGTBLE-4        SET FOR START OF LOOP
         SR    R5,R5               CLEAR REG FOR PFREE
         USING PCB,R5
         SPACE
* LOOP THROUGH PAGTBLE AND LOAD EACH OVERLAY SEGMENT
* AFTER LOADING THE SEGMENT, GET A PAGE FROM THE ACTIVE
* FILE AND WRITE OUT THE OVERLAY SEGMENT.  THEN FILL IN
* ROUTBLE FOR ANY ROUTINES FOUND.
         SPACE
LOADLOOP LA    R6,4(,R6)           STEP UP TO NEXT ENTRY
         C     R6,=A(PAGTBLED)     END OF PAGETABLE?
         BNL   LOADDONE            YES..GO FINISH
         L     R1,0(,R6)           LOAD VCON
         LTR   R1,R1               DOES IT EXIST?
         BZ    LOADLOOP            NO..GO ON TO NEXT PAGE
         LA    R0,1                SET R0 FOR SEGWT
         SVC   37                  GO GET EM
         PGET  R5                  GET A PAGE
         BZ    NOPAGES
         STH   R0,PCBPN            SAVE PAGE NUMBER IN PCB
         LR    R4,R0               PRESERVE PAGE NUMBER
         L     R11,=A(P001)
         LH    R1,0(,R11)          GET ADDR OF INIT CODE
         BAL   R14,0(R11,R1)       GO DO INIT CODE
         STM   R2,R5,CVSPARES      TEMP SAVE
         LR    R4,R11              SET R2 TO MOVE CODE
         LR    R2,R5               SET R1 TO BUFFER ADDRESS
         LA    R3,CPSIZE
         LA    R5,CPSIZE           MOVE-A-CHUNK
         MVCL  R2,R4
         LM    R2,R5,CVSPARES      RESTORE REGS
         PMARK R5                  MARK THE BUFFER
         LA    R11,2(,R11)         SET R11 TO FIRST TABLE ENTRY
LOADLP2  LH    R1,0(,R11)           GET NEXT ENTRY
         LTR   R1,R1               IS THIS END OR DEFAULT
         BM    LOADLP5             BR IF EITHER
         C     R1,=A(ROUTBLEN)     CHECK THAT ITS IN RANGE
         BL    LOADLP3             BR IF OK
         WTO   '**WYLTSO** INCOMPATIBLE PAGED CODE..REASSEMBLE IT'
         B     RETURN16
*
LOADLP3  STH   R4,ROUTBLE(R1)      PUT PAGE NO. IN ROUTBLE
         LH    R0,2(,R11)           GET DISPLACEMENT TO START
         STH   R0,ROUTBLE+2(R1)    PUT IT IN ROUTBLE
LOADLP4  LA    R11,4(,R11)           STEP TO NEXT ENTRY
         B     LOADLP2             GO CHECK THIS ENTRY
*
LOADLP5  CH    R1,=H'-1'   IS THIS DEFAULT ROUTINE FOR MISSING
         BNE   LOADLOOP           NO, GO DO NEXT OVERLAY
         STH   R4,LOADEFLT         YES, SAVE PAGE NUMBER
         MVC   LOADEFLT+2(2),2(R11)   AND ALSO DISPLACEMENT
         B     LOADLP4             GO DO NEXT ON THIS PAGE
         DROP  R10
LOADDONE PFREE R5                  FREE THE LAST GOTTEN PCB
         CLC   LOADEFLT,=A(0)      IS THERE A DEFAULT MISSING ROUTINE
         BE    LOADEXIT            NO, RETURN
         L     R2,=A(ROUTBLEN)     LOAD LENGTH OF ROUTBLE
         AR    R2,R10              NOW POINT TO END OF TABLE
LOADEFLP CR    R10,R2              ARE WE DONE
         BNL   LOADEXIT            BR YES
         CLC   0(4,R10),=A(0)      WAS THIS ENTRY INITIALIZED
         BNE   *+10                YES, DON'T PUT IN DEFAULT
         MVC   0(4,R10),LOADEFLT   NO, SET ENTRY TO DEFAULT
         LA    R10,4(,R10)         STEP TO NEXT ENTRY
         B     LOADEFLP            GO DO IT
         SPACE
LOADEXIT DELETE EP=IEWSZOVR        DELETE REMDR
         SPACE
* INITIALIZE RECOVERY IOB AND CCW'S TO WRITE OUT SNAPSHOT
         SPACE
         L     R4,CVPIOB           GET RECOVERY IOB ADDRESS
         USING PIOB,R4
         MVI   PIOBFLG1,X'42'      COMMAND CHAINING
         LA    R1,PECB             ECB ADDRESS
         ST    R1,PIOBECB-1
         LA    R1,PCCWS            START OF CCWS
         ST    R1,PIOBCCW-1
         L     R1,CVFPFCB          POINT TO THE PFCB
         LA    R1,PFCBDCB-PFCBSTRT(,R1) DCB ADDRESS
         ST    R1,PIOBDCB-1
         L     R1,DCBDEBAD-IHADCB(,R1) POINT TO DEB
         LR    R3,R1               REMEMBER DEB ADDRESS
         LR    R6,R12              REMEMBER CP ADDRESS
         L     R15,16              CVT ADDRESS
         LA    R2,PSEEK1           RESULT ADDRESS OF CONV
         L     R15,28(,R15)        TTR CONVERSION ROUTINE
         L     R0,=X'00000100'     1ST RECORD, 1ST TRACK
         LR    R5,R15              REMEMBER TTR CONV ROUTINE
         BALR  R14,R15
         LA    R2,PSEEK2           RESULT ADDRESS OF CONV
         LR    R15,R5              TTR CONV ROUTINE
         LR    R1,R3               DEB ADDRESS
         L     R0,=X'00000200'     2ND RECORD
         BALR  R14,R15
         LA    R2,PSEEK3           RESULT ADDRESS OF CONV
         LR    R15,R5              CONV ROUTINE ADDRESS
         LR    R1,R3               DEB ADDRESS
         L     R0,=X'00000300'     3RD RECORD
         BALR  R14,R15
        LA    R2,PSEEK4           RESULT ADDRESS OF CONV
         LR    R15,R5              CONV ROUTINE ADDRESS
         LR    R1,R3               DEB ADDRESS
        L     R0,=X'00000400'     4TH RECORD
         BALR  R14,R15
         LR    R12,R6              RESTORE CP ADDRESS
         LA    R13,CPWA            RESTORE SAVE AREA ADDRESS
         LA    R2,PSEEK1+3
         ST    R2,PCCWSID1
         MVI   PCCWSID1,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID1+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID1+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID1
         ST    R2,PCCWTIC1
         MVI   PCCWTIC1,X'08'
         L     R2,JCBWAPTR
         ST    R2,PCCWWRT1
         MVI   PCCWWRT1,X'05'
         LA    R5,PCBPSIZE
         ST    R5,PCCWWRT1+4
         MVI   PCCWWRT1+4,X'40'
         LA    R2,PSEEK2+3
         ST    R2,PCCWSID2
         MVI   PCCWSID2,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID2+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID2+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID2
         ST    R2,PCCWTIC2
         MVI   PCCWTIC2,X'08'
         L     R2,JCBWAPTR
         AH    R2,=AL2(CPSIZE)
         ST    R2,PCCWWRT2
         MVI   PCCWWRT2,X'05'
         ST    R5,PCCWWRT2+4
         MVI   PCCWWRT2+4,X'40'
         LA    R2,PSEEK3+3
         ST    R2,PCCWSID3
         MVI   PCCWSID3,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID3+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID3+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID3
         ST    R2,PCCWTIC3
         MVI   PCCWTIC3,X'08'
         LA    R2,CPAREA+CPSIZE
         ST    R2,PCCWWRT3
         MVI   PCCWWRT3,X'05'
         ST    R5,PCCWWRT3+4
         LA    R2,PSEEK4+4
         ST    R2,PCCWSID4
          MVI   PCCWSID4,X'31'      SEARCH ID EQUAL
         MVI   PCCWSID4+4,X'40'    COMMAND CHAINING
         MVI   PCCWSID4+7,X'05'    LENGTH OF 5
         LA    R2,PCCWSID4
         ST    R2,PCCWTIC4
         MVI   PCCWTIC4,X'08'
         L     R2,CVCPADDR
         ST    R2,PCCWWRT4
         MVI   PCCWWRT4,X'05'
         ST    R5,PCCWWRT4+4
         MVC   CVPROMPT,CVPRMLIM
         SPACE
         L     R14,CVIOWA          WORK AREA ADDRESS
         USING WDIOWA,R14
         LA    R1,WASTAX           STAX PARAMETER AREA
         XC    WASTAX(20),WASTAX   CLEAR IT
         DROP  R14
         L     R14,CVATNRTN        ATTENTION EXIT ADDRESS
         STAX  (14),REPLACE=NO,DEFER=NO,USADDR=((12)),MF=(E,(1))
         OI    JCBAFL,JCBSTAX
         BR    R8                  RETURN TO WYLBUR
         EJECT
* ERROR MESSAGES:
         SPACE
NODASD   SYSQS 1,0,'PAGEFILE NOT ON DIRECT ACCESS DEVICE'
         B     RETURN16                  EXIT
SIGHSIGH SYSQS 1,0,'UNABLE TO RECOVER FROM SUSPENDED SESSION'
         B     RETURN16
NOPAGE0  SYSQS 1,0,'PAGEFILE NOT SUPPLIED'
         B     RETURN16
BADOPEN  SYSQS 1,0,'PAGEFILE CANNOT BE OPENED'
         B     RETURN16
NOPAGES  SYSQS 1,0,'INSUFFICIENT PAGES TO INITIALIZE'
         SPACE
RETURN16 TPUT  (1),(0),WAIT,BREAKIN
         L     R13,CVRETURN
         LM    R14,R12,12(R13)     RESTORE REGS
         LA    R15,16
         BR    R14                 RETURN TO CALLER
         EJECT
* VCON ENTRIES FOR EACH OVERLAY PAGE
         SPACE
PAGTBLE  DS    0F
         DC    V(P001)
         DC    V(P002)
         DC    V(P003)
         DC    V(P004)
         DC    V(P005)
         DC    V(P006)
         DC    V(P007)
         DC    V(P008)
         DC    V(P009)
         DC    V(P010)
         DC    V(P011)
         DC    V(P012)
         DC    V(P013)
         DC    V(P014)
         DC    V(P015)
         DC    V(P016)
         DC    V(P017)
         DC    V(P018)
         DC    V(P019)
         DC    V(P020)
         DC    V(P021)
         DC    V(P022)
         DC    V(P023)
         DC    V(P024)
         DC    V(P025)
         DC    V(P026)
         DC    V(P027)
         DC    V(P028)
         DC    V(P029)
         DC    V(P030)
         DC    V(P031)
         DC    V(P032)
         DC    V(P033)
         DC    V(P034)
         DC    V(P035)
         DC    V(P036)
         DC    V(P037)
         DC    V(P038)
         DC    V(P039)
         DC    V(P040)
         DC    V(P041)
PAGTBLED EQU   *                   END OF PAGTBLE
         SPACE
LOADEFLT DC    F'0'                DEFAULT ROUTINE FOR MISSING
         SPACE
LOGCMND  DC    C';X FRO #LOGON NOL '
         SPACE 3
         LTORG
         SPACE
         DROP  R5
         DROP  R7
         EJECT
         DS    0H
SVARINIT DS    0CL34
         DC    H'32'
         DC    C'0',X'00'
         DC    C'1',X'00'
         DC    C'2',X'00'
         DC    C'3',X'00'
         DC    C'4',X'00'
         DC    C'5',X'00'
         DC    C'6',X'00'
         DC    C'7',X'00'
         DC    C'8',X'00'
         DC    C'9',X'00'
         DC    C'A',X'00'
         DC    C'B',X'00'
         DC    C'C',X'00'
         DC    C'D',X'00'
         DC    C'E',X'00'
         DC    C'F',X'00'
         SPACE
PVARINIT DS    0CL48
         DC   X'F1',X'00'                   PFK01
         DC   X'F2',X'00'                   PFK02
         DC   X'F3',X'00'                   PFK04
         DC   X'F4',X'00'                   PFK03
         DC   X'F5',X'00'                   PFK05
         DC   X'F6',X'00'                   PFK06
         DC   X'F7',X'00'                   PFK07
         DC   X'F8',X'00'                   PFK08
         DC   X'F9',X'00'                   PFK09
         DC   X'7A',X'00'                   PFK10
         DC   X'7B',X'00'                   PFK11
         DC   X'7C',X'00'                   PFK12
         DC   X'C1',X'00'                   PFK13
         DC   X'C2',X'00'                   PFK14
         DC   X'C3',X'00'                   PFK15
         DC   X'C4',X'00'                   PFK16
         DC   X'C5',X'00'                   PFK00
         DC   X'C6',X'00'                   PFK18
         DC   X'C7',X'00'                   PFK00
         DC   X'C8',X'00'                   PFK20
         DC   X'C9',X'00'                   PFK21
         DC   X'4A',X'00'                   PFK22
         DC   X'4B',X'00'                   PFK23
         DC   X'4C',X'00'                    PFK24
          PRINT NOGEN
DUMMYDCB DCB   DDNAME=PAGE0,MACRF=(E),DEVD=DA,DSORG=DA
         SPACE
PDCB     DCB   DDNAME=PAGE0,DSORG=PS,MACRF=WP,BLKSIZE=PCBPSIZE,        *
               RECFM=F,OPTCD=C,SYNAD=0
         PRINT GEN
         TITLE  'DYNAMIC ALLOCATION PARMS FOR PAGE0'
DAIRPAGE DS    0F
         DC    X'0008'
         DC    X'0000'
         DC    X'00000000'
         DC    AL4(PAGEDSN)
         DC    CL8'PAGE0'
         DC    CL8'SYSTS'
         DC    CL8' '
         DC    AL4(CPSIZE)              SIZE OF PAGE
         DC    AL4(&PAGE0)             NUMBER OF PAGES
         DC    F'0'
         DC    F'0'
         DC    CL8' '
         DC    CL8' '
         DC    XL3'040000'
         DC    X'48'              BLOCK ALLOCATION/PERM ATTR
         DC    F'0'
         DC    CL8' '
PAGEDSN  DC    XL2'002C',CL44' '
         TITLE 'START OF PAGED CODE -- PAGE 1'
P001     PAGECDE MISSING
         WIDENT 001
         USING CPAREA,R12
         TITLE 'DEFAULT MISSING ROUTINE -- PAGE 1'
PMISSING GENTER
         TSEG  'CODE FOR ROUTINE NOT IN PAGEFILE'
         B     CVQTYPE
         TITLE 'END OF PAGE CODE -- PAGE 1'
         PINIT                     DEFINE START OF INIT ROUTINE
         PEND                      DEFINE END ON INIT CODE
         TITLE 'CONSTANTS AND CONTROL BLOCKS'
         COPY  WYLCONST
         EJECT
         COPY  VCPTSO
         EJECT
PCB      DSECT
         COPY  PCBTSO
         EJECT
PFCB     DSECT
         COPY  PFCBTSO
         EJECT
PIOB     DSECT
         COPY  PIOB
         EJECT
         COMMON
         EJECT
         LTORG
         ORG   ,
FRSTPAGE DS    0D
         PAGES &NUMPAGE
LASTPAGE DS    0D
         EJECT
FRSTPFCB DS    0D
         PAGEFILE &PAGE0           DEFINE ONE DRUM FILE
LASTPFCB DS    0F
         EJECT
         PT
VCPAGE   DS    0F
         DS    XL(CPSIZE)         VARIABLE COMMAND PAGE
         DS    0D
WORKAREA DS    XL(CPSIZE*2)
WAFORRTB DS    CL256
         SPACE
PCBTABLE DS    &NUMPAGE.A
         SPACE
CVDDLIST DS    &MAXDDS.CL8
         SPACE
CVCPEND  DS    0D                  ROUND OFF TO DBL-WRD
         SPACE
CVCPSIZE EQU   *-CPSTART
         EJECT
DEB      DSECT
         COPY  DEB
         SPACE 3
         DCBD
         EJECT
WDIOWA   WDIOWA DSECT
         SPACE
         END
./ ADD NAME=PAGER,SSI=00000155
PAGR     TITLE 'WYLTSO PAGE HANDLING ROUTINES'
* PROPERTY OF C. U. C. C. A.
         SPACE
         COPY  PMAC
         GBLC  &PTRACE
&PTRACE  SETC  'NO'
         SPACE 3
PAGER    CSECT
         WIDENT 001
         EJECT
* PAGING SCHEME.
         SPACE
* A PAGE IS OBTAINED BY ISSUING A 'PGET'
*  THIS CAN BE A REQUEST FOR AN OLD PAGE OR A NEW ONE.
*  FOR A NEW PAGE, R0 = 0 ON INPUT
*  FOR AN OLD PAGE, R0 = PAGE NUMBER
*
*  ON RETURN, R1 WILL POINT TO A PCB TO HOUSE THAT PAGE
*  IF THE REQUEST WAS FOR AN OLD PAGE, IT WILL HAVE
*  BEEN READ IN.
         SPACE
* THE BITS IN PCBFL ARE SET AS FOLLOWS.
*
*   PCBFMARK ==> CONTENTS OF PAGE ALTERED.. PAGE
*                MUST BE REWRITTEN OUT BEFORE REUSIMG IT
*   PCBOWNED ==> PAGE IS CURRENTLY IN USE.. MAY NOT BE
*                RE-ALLOCATED UNTIL IT IS FREED.
*
* THE PAGE ALLOCATION SCHEME IS VERY SIMPLE.
* FIRST CHECK THE EMPTY LIST OF PCB'S.
* THEN THE MARKED ONES.
*
*  WHILE SEARCHING THE PCB'S, ANY PCB WITH THE OWNED BIT SET IS
*  IGNORED.  LIKEWISE FOR THE PCB POINTED TO BY 'CVPGRTN' WHICH
*  IF NONE-ZERO CONTAINS A POINTER TO THE PAGE (PCB) HOUSING
*  THE CURRENT PAGED ROUTINE.  IF THIS PCB IS TO BE RE-ALLOCATED
*  THE CODE MAY GET OVERLAYED AND BOMB THE WYLTSO SYSTEM.
         SPACE
* THE PAGES MAY BE FREED IN ONE OF TWO WAYS.
*  A) THE PCB IS RELEASED.  THAT MEANS THAT IF IT IS MARKED
*     THEN ITS CONTENTS MUST BE WRITTEN OUT BEFORE REUSING
*     THE PCB.
*  B) THE PCB AND THE PAGE ARE FREED.  IN THIS CASE THE
*     PCB IS FIRST MARKED EMPTY THEN THE PAGE ITSELF IS
*     FREED, SO THAT A SUBSEQUENT PAGE REQUEST CAN
*     REALLOCATE THAT PAGE.
*
*  IN CASE (A) ON INPUT R1 POINTS TO PCB
*          (B) R1 CONTAINS THE COMPLEMENT OF THE PCB PTR
         SPACE
* A PAGE WHICH IS NOT IN CORE MAY BE FREED BY A 'PJUNK' MACRO.
*  ON INPUT, R0 = PAGE NUMBER OF PAGE TO BE FREED.
*  THE INDICATED PAGE IS MARKED AVAILABLE (IN THE PAGE TABLE)
         SPACE 3
         AIF   ('&PTRACE' NE 'YES').NOTRC1
*
* TRACE TABLE ENTRIES:
*
* CODE MEANING              SAVED INFORMATION
* ---- -------------------- ---------------------------
*   1  ENTRY TO PGET        R14: RETURN ADDRESS
*                           R0 : PAGE NUMBER TO PGET
*                           R1 : PCB POINTER TO FREE
*
*   2  WRITE A MARKED PAGE  R1 : PAGE NUMBER TO WRITE
*                           R2 : PCB ADDRESS
*
*   3  READ AN OLD PAGE IN  R1 : PAGE NUMBER
*                           R2 : PCB ADDRESS
*
*   4  RETURN FROM PGET     R0 : PAGE NUMBER
*                           R1 : PCB POINTER
*
*   5  ENTRY TO PFREE       R14: RETURN ADDRESS
*                           R1 : PCB ADDRESS
*
*   6  ENTRY TO PMARK       R14: RETURN ADDRESS
*                           R1 : PCB ADDRESS
*
*   7  ENTRY TO PJUNK       R14: RETURN ADDRESS
*                           R0 : PAGE NUMBER TO PJUNK
*
*   8  FORMAT OUT A TRACK   R0 : CURRENT PAGE # TO PGET
.NOTRC1  ANOP
         EJECT
PGET     XENTER 2,8,*
         USING CPAREA,R12
         AIF   ('&PTRACE' NE 'YES').NOTRC2
         L     R6,CVTRACE          PTR TO TRACE TABLE
         STM   R0,R1,4(R6)         SAVE REQUEST REGS
         ST    R14,0(,R6)          RETURN ADDR
         MVI   0(R6),X'01'         PGET ENTRY
         LA    R6,16(,R6)          SKIP THIS ENTRY
         C     R6,CVTREND          END OF TABLE?
         BL    *+8
         L     R6,CVTRSTRT         POINT TO START OF TABLE
         ST    R6,CVTRACE          SAVE POINTER TO NEXT ENTRY
.NOTRC2  ANOP
         NI    JCBBFL,X'FF'-JCBPGRD CLEAR PAGE READ FLAG
         BAL   R14,PFREE           DO A PFREE IF NEEDED
         SPACE
* GET A PAGE
         LTR   R1,R0               REQUEST FOR A NEW PAGE?
         BZ    NEWPAGE             YES.
         SPACE
* HE WANTS AN OLD PAGE
* FIRST LETS CHECK IF PAGE IS IN CORE
* IF NOT IN CORE THEN DETERMINE IN WHICH
* PAGE FILE ITS IN (IF MORE THAN ONE PAGE FILE EXISTS)
* THEN PROCEED TO READ IT IN
         SPACE
GETOLD   L     R3,CVFPFCB          PFCB POINTER
         USING PFCB,R3
         L     R4,PFCBPTST         START OF PAGE TABLE
         AR    R4,R1               DISPLACE INTO TABLE
         CLI   0(R4),INCORE        IS IT IN CORE?
         BE    ITSHERE             YES.. IT IS
         SPACE
* PAGE ISNT IN CORE.. SO IT MUST BE READ IN.
* LOCATE A USEABLE PCB
*  IN ALL CASES, R2 POINTS TO PCB
* NOTE THAT R4 MUST NOT BE ALTERED, SINCE BY NOW IT
* CONTAINS A POINTER TO THE PAGE'S ENTRY IN THE PT.
         SPACE
         OI    JCBBFL,JCBPGRD      PAGE HAS TO BE READ IN
         USING PCB,R2
GETAPCB  L     R5,CVPADDRS         ADDRESS OF PCB TABLE
         L     R2,0(,R5)           GET TOP PCB
         MVC   0(4*&NUMPAGE-4,R5),4(R5)   TAKE PCB OUT OF TABLE
         TM    PCBFL,PCBOWNED
         BZ    *+6
         DC    H'0'                ERROR.. ALL PCBS IN USE
         TM    PCBFL,PCBFMARK      IS IT MARKED?
         BZ    REUSE               WE CAN REUSE WITH OUT REWRITE
         SPACE
* THE PCB IS MARKED, IE., IT HAS TO BE REWRITTEN
* BACK TO THE PAGEFILE BEFORE IT CAN BE REUSED
         MVI   PCBRWCCW,PIOWRITE   MOVE IN WRITE OPCODE
         LR    R5,R1               PRESERVE # OF WANTED PAGE
         LH    R1,PCBPN            PAGE # OF PAGE IN PCB
         NI    PCBFL,X'FF'-PCBFMARK      TURN BIT OFF
         AIF   ('&PTRACE' NE 'YES').NOTRC3
         L     R14,CVTRACE         ENTRY FOR NEXT TRACE
         STM   R1,R2,0(R14)        SAVE PARM REGS
         MVI   0(R14),X'02'        WRITE ID
         LA    R14,16(,R14)        NEXT SLOT
         C     R14,CVTREND         END OF TABLE?
         BL    *+8                 NO
         L     R14,CVTRSTRT        WRAP AROUND
         ST    R14,CVTRACE         NEXT AVAILABLE SLOT
.NOTRC3  ANOP
* RECALL THAT R2 POINTS TO PCB
         BAL   R14,PAGEIO          WRITE OUT THE PAGE
         LR    R1,R5               RESTORE WANTED PAGE#
REUSE    L     R5,PCBPT            POINTER TO PAGE ENTRY
         LTR   R5,R5               ANYTHING?
         BZ    *+8                 NO.. WAS AN EMPTY PAGE
         MVI   0(R5),X'00'         MARK AS NXO LONGER IN CORE
         SPACE
* AT THIS POINT:  R2 --> PCB (TO HOLD NEW PAGE)
*                 R3 --> PFCB
*                 R4 --> PAGETABLE ENTRY FOR NEW PAGE
         SPACE
         ST    R4,PCBPT            SAVE PTR TO PAGETABLE ENTRY
         ST    R3,PCBPFCB          PTR TO PFCB
         MVI   0(R4),INCORE        MARK PAGE AS IN CORE
         STH   R1,PCBPN            SAVE PAGE ID
         TM    JCBBFL,JCBPGRD      DO WE HAVE TO READ PAGE IN?
         BZ    SETR1               NO.. WAS A REQUEST FOR A NEW PAGE
* NOW SET UP TO ACTUALLY READ PAGE IN
         MVI   PCBRWCCW,PIOREAD    SET READ OPCODE
         AIF   ('&PTRACE' NE 'YES').NOTRC4
         L     R14,CVTRACE         TRACE TABLE CURRENT ENTRY
         STM   R1,R2,0(R14)        SAVE REGS
         MVI   0(R14),X'03'        READ  PAGE CODE
         LA    R14,16(,R14)
         C     R14,CVTREND
         BL    *+8
         L     R14,CVTRSTRT
         ST    R14,CVTRACE
.NOTRC4  ANOP
         BAL   R14,PAGEIO          READ IN THE PAGE
SETR1    LR    R1,R2               PAGE ADDRESS IN CORE
         OI    PCBFL,PCBOWNED      PAGE IN USE
         LH    R0,PCBPN            SET PAGE #
         L     R3,CVPADDRS         ADDRESS OF PCB TABLE
         ST    R1,4*&NUMPAGE-4(,R3) SAVE AT END OF TABLE
         SPACE
PDONE    EQU   *
         AIF   ('&PTRACE' NE 'YES').NOTRC5
         L     R14,CVTRACE         TRACE TABLE CURRENT ENTRY
         STM   R0,R1,0(R14)        SAVE REGS
         MVI   0(R14),X'04'        PGET RETURN CODE
         LA    R14,16(,R14)
         C     R14,CVTREND
         BL    *+8
         L     R14,CVTRSTRT
         ST    R14,CVTRACE
.NOTRC5  ANOP
         XEXIT 2,8                 RETURN TO CALLER
         EJECT
* USER WANTS A BRAND NEW PAGE
         SPACE
NEWPAGE  L     R3,CVFPFCB          PTR TO FIRST PFCB
         USING PFCB,R3
LOOP2    L     R4,PFCBCP           CURRENT # OF PGS IN USE
         C     R4,PFCBNP           COMPARE AGAINS TOTAL AVAIL
         BL    GOTCHA
         LA    R3,PFCBSIZE(,R3)    NEXT PFCB
         C     R3,CVLPFCB          LAST PFCB?
         BL    LOOP2               KEEP LOOKING
         SPACE
* WE'RE OUT OF PAGES
NOPAGES  SR    R1,R1               CLEAR PAGE PTR
         SR    R0,R0               NO PAGE AVAIL
         B     PDONE               EXIT
         SPACE
* WE HAVE AN AVAILABLE PAGE... SO LOOK
* FOR A PCB TO PUT IT IN
GOTCHA   NI    JCBBFL,X'FF'-JCBPGRD  NO PAGE READ NEEDED
         LA    R4,1(,R4)           INCR # OF PAGES IN USE
         ST    R4,PFCBCP
         SPACE
* STEP THROUGH THIS PAGETABLE TO FIND AN EMPTY SLOT
         L     R4,PFCBPTST         START OF TABLE
         L     R5,PFCBPTND         END OF TABLE
LOOP4    TM    0(R4),X'FE'         AVAILABLE? (EMPTY OR VIRGIN)
         BO    SETPAGE             YES
         LA    R4,1(,R4)           INCR
         CR    R4,R5               END YET?
         BNH   LOOP4               NO.. KEEP LOOKING
         SPACE
* IF WE GET HERE WE LOSE
         DIE   HERE COMES ANOTHER DUMP
         SPACE
SETPAGE  LR    R1,R4
         S     R1,PFCBPTST         OFFSET FORM START OF TABLE
         CLI   0(R4),X'FF'         IS IT AN OLD FREE PAGE
         BE    GETAPCB             YES... REUSE
         SPACE
* THE PAGE WE WANT TO GIVE IS A BRAND NEW PAGE. FIRST WE HAVE
* TO FORMAT THE VIRGIN TERRITORY.  TO DO THIS EXECUTE THE
* FOLLOWING CODE WHICH WILL WRITE OUT A TRACKFULL OF PAGES...
* A BAD TRICK BUT GETS AROUND THE PROBLEM OF WYLFMT.
         SPACE
         BAL   R14,WPAGES          GO WRITE A TRACK.
         TM    JCBBFL,JCBBFPER     I/O ERROR?
         BO    NOPAGES
         B     GETAPCB             GO ON
         DROP  R3
         EJECT
* THE PAGE IS IN CORE.. SO FIND ITS ADDRESS
ITSHERE  L     R2,CVFPAGE          POINTER TO FIRST PAGE
         LA    R0,&NUMPAGE
         USING PCB,R2
LOOP3    CH    R1,PCBPN            IS THIS THE PAGE?
         BE    REMOVE              YES... REMOVE FROM Q
         LA    R2,PCBSIZE(,R2)     NEXT PCB
         BCT   R0,LOOP3            KEEP LOOKING
* ITS BAD NEWS IF WE GET HERE
         DIE   ,
REMOVE   BAL   R14,REMOVEQ
         B     SETR1               GO ON
         EJECT
* WRITE A TRACKFULL OF PAGES.
* AT INPUT R3 POINTS TO A PFCB AND R4 POINTS TO AN ENTRY
* IN THE PAGE TABLE ASSOCIATED WITH THIS PFCB.
         SPACE
         USING PFCB,R3
WPAGES   XENTER 0,15,*
         LR    R9,R13          SAVE AREA FOR WRITE RETURN CODE
         LA    R13,4(,R13)     UPDATE THIS
         L     R5,PFCBRPT          GET RECORDS PER TRACK.
         L     R2,CVFPAGE          POINT TO THE FIRST PAGE.
         LA    R10,PFCBPDCB        POINT TO THE WRITE DCB
         AIF   ('&PTRACE' NE 'YES').NOTRC8
         L     R14,CVTRACE
         ST    R1,0(,R14)
         MVI   0(R14),X'08'
         LA    R14,16(,R14)
         C     R14,CVTREND
         BL    *+8
         L     R14,CVTRSTRT
         ST    R14,CVTRACE
.NOTRC8  ANOP
WLOOP    LA    R6,5                RETRY ONLY 5 TIMES
WRITE    WRITE PFCBDECB,SF,(10),(2),'S',MF=E
         STC   15,0(,R9)           KEEP RETURN CODE.
         CHECK PFCBDECB,ALL
         TM    JCBBFL,JCBBFPER     FROM SYNAD ROUTINE?
         BO    WEXIT               IF SO NO MORE WRITES.
         CLI   0(R9),X'0C'         NEED TO BE REWRITTEN?
         BNE   WRITEOK             IF YES ISSUE WRITE AGAIN.
         BCT   R5,WRITE
         OI    JCBBFL,JCBBFPER     INDICATE THAT'S IT.
         MVC   PFCBNP(4),PFCBCP    NO MORE PAGES.
         B     WEXIT
WRITEOK  OI    0(R4),X'FF'         INDICATE PAGE IS NO VIRGIN
         LA    R4,1(,R4)           INCREMENT PT ENTRY
         BCT   R5,WLOOP            DO PFCBRPT TIMES.
WEXIT    XEXIT 0,15
         DROP  R3
         EJECT
* ROUTINE TO HANDLE PAGE I/O
         SPACE
         USING PFCB,R3
         USING PCB,R2
PAGEIO   XENTER 0,15,*
         L     R3,PCBPFCB          POINTER TO PFCB
         SR    R0,R0               COMPUTE TTRN
         D     R0,PFCBRPT
         AL    R0,=F'1'
         LA    R5,PCBCCWS          ASSUME NO RPS                JJG
         TM    PFCBFL,PFCBFRPS     DOES FILE HAVE RPS           JJG
         BNO   PAGNORPS            BR NO                        JJG
         LR    R5,0                PUT RECORD NO. IN R5         JJG
         IC    R5,PFCBSECT-1(R5)   PICK UP SECTOR VALUE         JJG
         STC   R5,PCBSECT          SAVE IN PCB FOR SET SECTOR   JJG
         LA    R5,PCBCCWSC         START WITH SET SECTOR CCW    JJG
PAGNORPS STCM  R5,7,PCBCCWP        SET STARTING CCW ADDRESS     JJG
         SLL   R0,8
         SLL   R1,16
         OR    R0,R1
         LA    R1,PFCBDCB          POINTER TO DCB
         STCM  R1,7,PCBDCB         SAVE DCB ADDR IN IOB
         LR    R5,R2               PRESERVE R2
         L     R1,DCBDEBAD-IHADCB(,R1)  DEB ADDRESS
         LA    R2,PCBSEEK
         L     R15,16              CVT PTR
         L     R15,28(,15)         CONVERSION RTN
         BALR  R14,R15             GO CALL
         LR    R2,R5               RESTORE PCB PTR
         XC    PCBECB(4),PCBECB    CLEAR ECB
         EXCP  PCBIOB              READ IN PAGE
         WAIT  ECB=PCBECB          WAIT FOR I/O TO COMPLETE
         CLI   PCBECB,X'7F'        I/O OK?
         BNE   PIOERR              I/O ERR
IOEXIT   XEXIT 0,15
         SPACE
* I/O ERROR FOR THIS PAGE .. TSK TSK TSK
PIOERR   L     R12,4*12(R8)         RESTORE REG 12
         OI    JCBBFL,JCBBFPER
         B     IOEXIT
         DROP  R2
         EJECT
         ENTRY PFREE
PFREE    LTR   R1,R1               ANY PAGE TO FREE?
         BZR   R14                 NO.. IMMED RETURN
         XENTER 0,8,*
         AIF   ('&PTRACE' NE 'YES').NOTRC9
         L     R6,CVTRACE          TRACE TABLE CURRENT ENTRY
         ST    R14,0(,R6)          SAVE REGS
         ST    R1,4(,R6)
         MVI   0(R6),X'05'         PFREE PAGE CODE
         LA    R6,16(,R6)
         C     R6,CVTREND
         BL    *+8
         L     R6,CVTRSTRT
         ST    R6,CVTRACE
.NOTRC9  ANOP
         LTR   R1,R1
         BP    FREEPCB             GO FREE THE PCB
         LCR   R1,R1               PCB ADDR
         SPACE
         TESTPCB R1
* ON INPUT R1 HAS PCB ADDR OF BUFFER TO BE FREED
         USING PCB,R1
         LH    R0,PCBPN            GET PAGE ID
         L     R3,PCBPFCB          PFCB POINTER
         L     R4,PCBPT            POINTER TO PAGET TABLE POINTER
DOFREE   MVI   0(R4),X'FF'         MARK PAGE NOT IN USE
         SPACE
* JUNK THE PAGE
         MVI   PCBFL,X'00'         FREE PCB AND ...
         XC    PCBPT(11),PCBPT     ... JUNK THE PAGE
         LR    R2,R1
         BAL   R14,REMOVEQ
         USING PFCB,R3
         L     R4,PFCBCP           CURRENT NUMBER IN USE
         BCTR  R4,R0               DECREMENT BY ONE
         ST    R4,PFCBCP           SAVE UPDATED VALUE
         L     R5,CVPADDRS         ADDRESS OF PCB TABLE
         LA    R6,&NUMPAGE-1       # OF ENTRIES TO BE SHIFTED
         BAL   R14,SHIFTPCB        SHIFT THE PCB ADDR BY 1
         ST    R2,0(,R5)           SAVE ON TOP OF Q
PFEXIT   XEXIT 0,8
         SPACE
         DROP  R1,R3
         SPACE
         USING PCB,R1
FREEPCB  TESTPCB R1,EXIT=PFEXIT
         NI    PCBFL,X'FF'-PCBOWNED   PCB NOT IN USE
         LR    R2,R1
         BAL   R14,REMOVEQ         REMOVE FROM Q
         BAL   R14,PADDQ           ADD IT TO Q
         B     PFEXIT              SCRAM
         EJECT
         USING  PCB,R1
PMARK    XENTER 2,8,*
         AIF   ('&PTRACE' NE 'YES').NOTRCA
         L     R6,CVTRACE          TRACE TABLE CURRENT ENTRY
         ST    R14,0(,R6)          SAVE REGS
         ST    R1,4(,R6)
         MVI   0(R6),X'06'         PMARK PAGE CODE
         LA    R6,16(,R6)
         C     R6,CVTREND
         BL    *+8
         L     R6,CVTRSTRT
         ST    R6,CVTRACE
.NOTRCA  ANOP
         TESTPCB R1
         TM    PCBFL,PCBOWNED      MARKING AN OWNED PAGE?
         BO    MARKIT
         DIE   ,
MARKIT   OI     PCBFL,PCBFMARK     MARK IT
         LR     R2,R1
         BAL    R14,REMOVEQ
         BAL    R14,PADDQ          ADD IT TO Q
         XEXIT 2,8
         SPACE 3
         ENTRY PNUM
         USING PCB,R1
PNUM     LH    R0,PCBPN            GET PAGE NUMBER
         BR    R14                 RETURN
         SPACE 3
PJUNK    XENTER 2,8,*
         AIF   ('&PTRACE' NE 'YES').NOTRCB
         L     R6,CVTRACE          TRACE TABLE CURRENT ENTRY
         ST    R14,0(,R6)          SAVE REGS
         ST    R0,4(,R6)
         MVI   0(R6),X'07'         PJUNK PAGE CODE
         LA    R6,16(,R6)
         C     R6,CVTREND
         BL    *+8
         L     R6,CVTRSTRT
         ST    R6,CVTRACE
.NOTRCB  ANOP
         L     R3,CVFPFCB          PFCB POINTER
         USING PFCB,R3
         L     R4,PFCBPTST         START OF PAGE TABLE
         AR    R4,R0               ENTRY FOR THE PAGE
         CLI   0(R4),INCORE        IS IT IN A PCB?
         BNE   AVAILIT             NO
* ITS IN CORE SOMEPLACE.. MAKE THE PCB AVAILABLE
         L     R2,CVFPAGE          POINT TO FIRST PAGE
         LA    R5,&NUMPAGE
         USING PCB,R2
JUNKLOOP CH    R0,PCBPN
         BE    JUNKCLR
         LA    R2,PCBSIZE(,R2)     NEXT
         BCT   R5,JUNKLOOP
         DIE   ,                   SHOULD NOT GET HERE
JUNKCLR  BAL   R14,REMOVEQ         REMOVE FROM Q
         L     R5,CVPADDRS
         LA    R6,&NUMPAGE-1       # OF ENTRIES 2 B SHIFTED
         BAL   R14,SHIFTPCB
         ST    R2,0(,R5)           PUT AT TOP OF Q
         XC    PCBPT(11),PCBPT     CLEAR PAGE POINTER
AVAILIT  MVI   0(R4),X'FF'         MAKE PAGE AVAIL
         L     R4,PFCBCP           CURRENT COUNT OF PAGES
         BCTR  R4,R0               REDUCE BY ONE
         ST    R4,PFCBCP           UPDATE VALUE
         XEXIT 2,8
         EJECT
         USING PCB,R2
REMOVEQ  DS    0H
         XENTER 0,8,*
* R2 HAS ADDRESS OF PCB TO BE DELETED FROM TABLE
         L     R5,CVPADDRS         START OF TABLE
         LA    R6,&NUMPAGE
RMVLOOP  C     R2,0(,R5)           IS THIS THE PCB?
         BE    REMOVEIT            YES
         LA    R5,4(,R5)
         BCT   R6,RMVLOOP
         DIE   ,                   PCB NOT FOUND
REMOVEIT BCT   R6,*+8
         B     RMVDONE             IT WAS LAST IN Q
         SPACE
         SLL   R6,2                NUMBER OF BYTES TO SHIFT
         BCTR  R6,R0               -1 FOR EXECUTE
         EX    R6,SHIFT
RMVDONE  XEXIT 0,8
SHIFT    MVC   0(0,R5),4(R5)       SHIFT TABLE UP BY ONE ENTRY
         EJECT
PADDQ    DS    0H
         XENTER 0,8,*
*
* ADD A PCB POINTED TO BY R2 TO THE TABLE
*
         USING PCB,R2
         CLC   PCBPN(2),=H'0'      EMPTY PAGE?
         BE    ADDTOP              YES.. ADD AT THE TOP
         TM    PCBFL,PCBOWNED      IS IT OWNED
         BO    ADDEND              YES.. AT AT THE END
         TM    PCBFL,PCBFMARK      MARKED?
         BO    ADDMARK
*
* MUST BE A USED (BUT NOT ALTERED) BUFFER
* SO ADD IT AFTER THE EMPTIES (IF ANY).
*
         L     R5,CVPADDRS         ADDRESS OF PCB TABLE
         LA    R6,&NUMPAGE-1       # OF ENTRIES
         DROP  R2
         USING PCB,R4
ADDLOOP1 L     R4,0(,R5)           GET ADDRESS OF PCB
         CLC   PCBPN(2),=H'0'      IS THIS PAGE EMPTY?
         BNE   ADDHERE
         LA    R5,4(,R5)           GO TO NEXT ENTRY
         BCT   R6,ADDLOOP1
* ALL PCBS ARE EMPTY SO ADD AT END
         ST    R2,0(,R5)           SAVE AT END
         B     PADDONE             EXIT
         DROP  R4
         USING PCB,R2
         SPACE
ADDTOP   L     R5,CVPADDRS
         LA    R6,&NUMPAGE-1
         BAL   R14,SHIFTPCB
         ST    R2,0(,R5)           SAVE AT TOP OF Q
         B     PADDONE
         SPACE
ADDEND   L     R5,CVPADDRS
         ST    R2,4*&NUMPAGE-4(,R5)      SAVE AT END
         B     PADDONE
         SPACE
ADDMARK  L     R5,CVPADDRS         ADDRESS OF PCB TABLE
         LA    R6,&NUMPAGE-1       # OF ENTRIES
         DROP  R2
         USING PCB,R4
ADDLOOP2 L     R4,0(,R5)           GET ADDRESS OF PCB
         TM    PCBFL,PCBOWNED      IS IT OWNED?
         BO    ADDHERE
         LA    R5,4(,R5)           GO TO NEXT ENTRY
         BCT   R6,ADDLOOP2
* ALL PCBS ARE EITHER EMPTY OR MARKED.. NONE OWNED SO FAR
         ST    R2,0(,R5)           SAVE AT END
         B     PADDONE             EXIT
         DROP  R4
         SPACE
ADDHERE  BAL   R14,SHIFTPCB        SHIFT OVER BY 1 ENTRY
         ST    R2,0(,R5)           SAVE IN MIDDLE
         SPACE
PADDONE  XEXIT 0,8
         SPACE
SHIFTPCB DS    0H
         XENTER 0,8,*
         SPACE
* ON INPUT R5 POINTS TO START OF SHIFT AREA
*          R6 CONTAINS THE # OF ENTRIES TO SHIFT BY
         SPACE
         LR    R4,R6               NUMBER OF ENTRIES TO SHIFT
         BCTR  R4,0
         SLL   R4,2                MULT BY 4
         AR    R5,R4               POINT TO LAST ENTRY TO BE SHIFTED
         LA    R0,4
SHIFTL   L     R4,0(,R5)
         ST    R4,4(,R5)           SHIFT BY ONE
         SR    R5,R0               DECREMENT BY 4
         BCT   R6,SHIFTL
SHIFTED  XEXIT 0,8
         EJECT
         COPY  WYLCONST
         EJECT
         COMMON
         EJECT
PCB      DSECT
         COPY  PCBTSO
         EJECT
PFCB     DSECT
         COPY  PFCBTSO
         EJECT
         DCBD  ,
         SPACE
         END
./ ADD NAME=PDIO,SSI=00000178
PDIO     TITLE 'WYLTSO''S DISK I/O ROUTINES'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
         GBLA  &NCP       DEFINE GLOBAL ASSEMBLY VAR
         GBLC    &DCEC             SWITCH FOR DCEC MODS         JEP00X
         GBLC  &INSTALL   DEFINE INSTALLATION
         COPY  PMAC
&NCP     SETA  10
&DCEC    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE DCEC MODJEP00X
         AIF   ('&DCEC' EQ '1').LBLX1                           JEP00X
&INSTALL SETC  'CUCCA'             'CUCCA' FOR MIT PROTECT
         AGO   .LBLX2                                           JEP00X
.LBLX1   DS    0H                                               JEP00X
&INSTALL SETC  'DCEC'                                           JEP00X
.LBLX2   DS    0H                                               JEP00X
         TRACER OFF
         AIF   ('&DCEC' NE '1').LBL01                           JEP00X
*************                                                   JEP001
*                                                               JEP001
*                                                               JEP001
* MOD JEP001                                                    JEP001
*  IMPLEMENTED DCEC NAMING CONVENTIONS. DENOTED JEP001 66/71    JEP001
*  MODULES AFFECTED: PDIO, PEDS, PUTB,INIT   MACROS(DSNWA,CVTSO)JEP001
*                                                               JEP002
*                                                               JEP002
* MOD JEP002                                                    JEP002
*  FIXED BUG IN SPACE OPERAND. FORCES READ TO GET LENGTH FROM   JEP002
*  DCB.  DENOTED JEP002 IN 66/71.  JERRY E PITTENGER            JEP002
*  MODULES AFFECTED: PDIO                                       JEP002
*                                                               JEP011
*                                                               JEP011
* MOD JEP011                                                    JEP011
*  CHANGED DEFAULT DEVICE TYPE FROM 2314 TO 3330.               JEP011
*  DENOTED JEP011 IN 66/71. MODULES AFFECTED: PDIO              JEP011
*                                                               JEP011
*                                                               JEP011
.LBL01   DS    0H                                               JEP011
         SPACE 3
PDIO     CSECT
         WIDENT 001
         XTRNS
         SPACE 3
*  REGISTER USAGE
*
* RWA MUST BE GREATER THAN 2
         SPACE
RWA      EQU   6                   WORK AREA DSECT/CSECT REG
TR       EQU   4
SR       EQU   3
RR       EQU   2
         SPACE
         USING CPAREA,R12
         TITLE 'DISK OPEN (DOPEN) ROUTINE'
***  LINKAGE TO DISK OPEN ROUTINE AS FOLLOWS:
*
**  FOR USE, SAVE, COPY, AND SCR:
*
*        R0    INDICATES TYPE OF FILE TO BE PROCESSED
*                0 INDICATES EDIT FILE SPECIFIED
*                + INDICATES FIXED BLOCKED.  THE VALUE IN R0 IS
*                  LRECL FOR USE AND SAVE.
*                - INDICATES NOT SPECIFIED.  INFO OBTAINED FROM
*                  DSCB FOR ALL USES AND SAVES.
*
**  FOR SEQUENTIAL SAVES, THE DEFAULT TYPE OF SAVE IS FORCED
*        TO BE EDIT IF NO OPTION IS GIVEN OR LRECL=80 IF A
*        NUMBER OPTION WAS GIVEN EVEN IF A REPLACE OPTION WAS
*        SPECIFIED.  SEQUENTIAL SAVES CAN BE MADE THE SAME AS
*        PARTITIONED SAVES BY DELETING THOSE LINES WITH THE
*        IDENTIFIER *SEQ*
*
** FOR SAVE:
*
*        R15   ADDRESS OF ROUTINE TO CALCULATE SIZE OF SAVE
*              WHENEVER SEQUENTIAL SAVES ARE DONE.
*
*
**  FOR SHOW COMMANDS:
*
*        R15   ADDRESS OF ROUTINE TO GET PAGE.
*
**     FOR CATLG/UNCATLG/RECATLG COMMANDS THE FUNCTION IS
*        SPECIFIED IN THE FLAGS SET (SEE BELOW).
*
***  THE ACTUAL COMMAND FUNCTION IS SPECIFIED IN THE DSNAME
*        WORK AREA - FLAG BYTE 2 (DSNWAF2) AS FOLLOWS:
*
*        USE   NO FLAGS
*        SAVE  DSNFWRT
*        SCR   DSNFWRT+DSNFSCR
*        COPY  SAME AS USE
*        CATLG DSNFCAT
*        S/DSN DSNFSHOW
*        S/DIR DSNFSHOW+DSNFPDS
*        S/CAT DSNFSHOW+DSNFCAT
*
*     THE PDS FLAG (DSNFPDS) IS SET FOR USE/SAVE/SCR/COPY IF A
*        MEMBER OF A PDS WAS PROCESSED.
*
*
***  FOLLOWING FLAGS IN COMMAND PAGE DESERVE MENTION:
*
*    CPFUSCAT  INDICATES CATALOG TO BE USED TO FIND VOLUME NAME
*    CPFSCRTC  INDICATES THAT DATA SET OR MEMBER EXISTING WITH
*              THE SAME NAME MAY BE SCRATCHED.  IF THE DATA SET
*              OR MEMBER IS NOT FOUND, THE FLAG IS CLEARED TO
*              SO INDICATE.
*    CPFDSCLG  DATA SET IS TO BE CATALOGED
*    CPFUNCLG  DATA SET IS TO BE UNCATALOGED
*    CPFRECLG  DATA SET IS TO BE RECATALOGED
*
         SPACE 4
***  EXIT FROM OPEN PASSES FOLLOWING PARAMETERS BACK TO CALLER:
*
*        R1    POINTS TO BUFFER IF APPROPRIATE
*
*        R0    CONTAINS RECORD SIZE (LRECL) FOR CALLER:
*                = BLOCKSIZE FOR EDIT FORMAT DATA SETS;
*                = LRECL SPECIFIED OR FOUND IN DSCB FOR NON-EDIT
*                  DATA SETS.  + INDICATES FIXED LENGTH RECORDS,
*                  - INDICATES VARIABLE LENGTH RECORDS.
*
***     R15   CONTAINS ONE OF THE FOLLOWING RETURN CODES
*              (DEFINED BY 'RTNCODES' COPY ENTRY):
*
*        0     NORMAL EXECUTION - DATA SET IS OPEN AND READY OR
*                DATA SET/MEMBER HAS BEEN SCRATCHED.
*        4     DATA SET NOT FOUND ON VOLUME OR IN CATALOG; OR
*              MEMBER NOT FOUND IN PDS.
*        8     DATA SET/MEMBER WITH SAME NAME ALREADY EXISTS.
*        12    NO SPACE FOR DATA SET/MEMBER.
*        16    DATA SET ENQ FAILED - DATA SET IN USE.
*        20    INVALID BLOCK SIZE - TOO LARGE FOR BUFFER.
*        24    ILLEGAL DSNAME.
*        28    INVALID DSORG OR RECFM - ISAM,BDAM ETC. OR VBS.
*        32    TALO.
*        36    REQUEST ABORTED.
*        40    INVALID VOLUME NAME - NOT IN TIOT OR NOT VALID
*              FOR SPECIFIED COMMAND.
*        44    MEMBER NOT SPECIFIED OR NOT FOUND.
*        48    NO DIRECTORY SPACE REMAINING.
*        52    PDS SAVE SPECIFIED OTHER THAN EDIT FORMAT.
*        80    SHOW DSNAMES/DIRECTORY/CATALOG ERROR.
*        100   "CATASTROPHIC" ERROR - ERROR LOGGED ELSEWHERE.
*                LOG ENTRIES ARE IN FORMAT I00CC WHERE
*                I IDENTIFIES ROUTINE ISSUING ERROR AND
*                CC IS THE RETURN CODE FROM THE ROUTINE WHICH
*                CAUSED THE CATER IN THE FIRST PLACE.
*
***     R0    SOMETIMES USED TO RETURN ADDITIONAL INFORMATION
*              IF R15 .NE. 0 AS FOLLOWS:
*
*       R15   R0
*        4     LEVEL NUMBER OF LAST GOOD INDEX SEARCHED IF ERROR
*              WAS IN LOCATE.
*        16    VALUE INDICATES WHETHER ENQ FAILED ON DSN (0)
*              OR ACCOUNTING PROGRAM ENQ (NOT 0)
*        20    VALUE OF BLOCKSIZE CONSIDERED INVALID
*
*    CATASTROPHIC ERROR ROUTINE ID CODES ARE AS FOLLOWS:
*        1     ERROR IN ALLOCATE SVC.
*        2     ERROR IN OBTAIN.
*        3     ERROR IN LOCATE.
*        4     ERROR IN OPEN.
*        5     ERROR IN BLDL.
*        6     ERROR IN SCRATCH.
*        7     ERROR IN STOW.
*
*** FOR CATALOG OPERATIONS R15 CONTAINS THE CODE RETURNED FROM
* THE CATALOG FUNCTION.  HOWEVER, WHEN THE RETURN CODE IS 8,
* THE RETRUN CODE FROM LOCATE(WHICH WAS IN R1) IS SHIFTED
* LEFT 8 BITS AND OR'D INTO R15.
         EJECT
* OPEN
         SPACE
DOPEN    XENTER R15,R8,44
         XTRACE DOPEN
         L     RWA,CVIOWA          ADDRESS OF WORK AREA
         USING WDIOWA,RWA
         MVI   DFL,0               CLEAR WORK FLAGS
         OI    JCBAFL,JCBAFDO          SET DS OPEN
         MVC   DCB(DCBSZ),MODELDCB  GET BRAND NEW COPY OF DCB
         LA    SR,EXLST            ADDR OF EXLST
         ST    SR,DCB+DCBEXLST-IHADCB  ENTER INTO DCB
         MVI   RRECFM,UNDEFIND         SET UNDEFINED
         MVI   DCB+(DCBRECFM-IHADCB),UNDEFIND  SET UNDEFINED
         MVI   DCB+DCBDSORG-IHADCB,DSORGPS   INIT TO PS ORG
         MVC   DSNAME(44),DSNWADSN     SAVE DS NAME
         CLI   F2,DSNFSHOW         IS IT SHOW DSNAMES?
         BE    DCEC1               BR IF YES
         OC    DSNAME(44),BLANKS   ALLOW NO UPLOW AT DCEC       JEP001
         B     DCEC1               GET AROUND DC                JEP001
BLANKS   DC    44C' '              44 BLANKS FOR ORING          JEP001
DCEC1    EQU   *                                                JEP001
         MVC   DSVID(6),DSNWAVOL            VOLID
         MVC   MEMBER,DSNWAMBR              MEMBER NAME
         MVC   FLAGS,DSNWAF1                AND DSN FLAGS
         XC    EXLST,EXLST         CLEAR DCB EXIT ADDR
         TM    F2,X'02'             IS IT RENAME
         BNO   HAVEWA1              NO
         MVC   VTOCEND+4(44),SDSNQLB  SAVE SEC DSN IN WA
         CLI   DSNWAMBR,C' '       IS IT MEMBER
         BE    HAVEWA1              NO
         MVC   VTOCEND+4(44),SDSNQUB  SAVE ALIAS
HAVEWA1  CLI   F2,DSNFSHOW         IS IT SHOW DSNAMES?
         BE    NOCATSCH            BR IF YES
         TM    F1,DSNFQDSN         IS IT A QUOTED DSNAME?
         BO    DSOK                IF SO BYPASS CHAR CHECK
         CLI   DSNAME,C' '             MUST NOT BE BLANK
         BE    ILLDS
         LA    SR,DSNAME               CHECK FORMAT OF DS NAME
         LA    TR,44
         EJECT
DSCK     DS    0H
         CLI   0(SR),C' '
         BE    DSOK
         CLI   0(SR),C'.'
         BE    OKCH
         CLI   0(SR),C'_'
         BE    OKCH
         CLI   0(SR),C'*'
         BE    OKCH
         CLI   0(SR),C'$'                          ITEL
         BE    OKCH                                ITEL
         CLI   0(SR),C'A'
         BL    ILLDS
         CLI   0(SR),C'I'
         BNH   OKCH
         CLI   0(SR),C'J'
         BL    ILLDS
         CLI   0(SR),C'R'
         BNH   OKCH
         CLI   0(SR),C'S'
         BL    ILLDS
         CLI   0(SR),C'Z'
         BNH   OKCH
         CLI   0(SR),C'0'
         BL    ILLDS
         CLI   0(SR),C'9'
         BH    ILLDS
OKCH     LA    SR,1(,SR)               NEXT CHAR
         BCT   TR,DSCK
DSOK     LH    SR,DSNWANL          GET LENGTH OF DSNAME
         MVC   DSNWADSN(44),DSNAME    SAVE DATASET AFTER CHANGES
         EJECT
* MAIN OPEN PROCESSING
         SPACE
         CLI   F2,DSNFCAT          TEST CATLG FUNCTIONS
         BE    CALLCAT             BR IF YES
         ST    0,RECSIZE               SAVE PARMS
         ST    15,SPACE
         MVC   ENQDSN+2(1),ENQESU  EXCL/SYSTEM/USE
CHKCAT   TM    F2,DSNFWRT+DSNFSCR  TEST FUNCTION
         BNZ   NOTSHR              BR IF SAVE OR SCR
         MVC   ENQDSN+2(1),ENQSSU  SHR/SYSTEM/USE
NOTSHR   TM    F2,DSNFSHOW+DSNFCAT  IS IT SHOW CATLG?
         BO    DOLOCTE             BR IF YES
         TM    CPLFLG1,CPFUSCAT    ARE WE TO GET VOL ID FM CAT
         BZ    NOCATSCH            BR IF NO
         CLI   DSVID+5,X'40'       WAS LOCATE ALREADY DONE?
         BNE   NOCATSCH            BR IF YES
DOLOCTE  LTR   SR,SR               TEST DSNAME LENGTH
         BZ    CNOTDSN             DON'T DO LOCATE IF NULL
         NI    USCATL,X'7F'        TURN OFF CVOL FLAG
         LOCATE USCATL             GO GET CATALOG ENTRY
         LR    RR,R0               SAVE INDEX LEVEL NUMBER
         ST    R15,RETCOD          SAVE RETURN CODE FOR SHOW CAT
         LTR   R15,R15             TEST IF FOUND
*        BZ    HVCATVOL            BR IF YES
         BZ    TSTCVOLP            SEE IF CVOL
         ST    R15,ERROR           STORE ERROR
         CLI   ERROR+3,4           CVOL NOT MOUNTED?
         BE    CILLVOL             YES
         CLI   ERROR+3,12          INDEX NOT DSNAME?
         BE    CNOTDSN             YES
         CLI   ERROR+3,20
         BNH   ILLCAT
XCATER   MVI   ERROR+1,C'3'        ERROR ID
       XCALL   CATER
         B     ERR
         SPACE
CILLVOL  MVC   DSVID,CATVOLID      GET MISSING CVOL NAME
         SPACE
ILLVOLND LA    R15,RTNBDVOL        ILL VOLUME ERROR CODE
         B     ERR
TSTCVOLP DS    0H
         CLC   DSNAME(44),DSNWADSN     SAME DSN AS INPUT
         BE    HVCATVOL                YES CAN'T BE CVOL
         CLC   DSNAME(9),=C'SYSCTLG.V'  ALIAS POINTER
         BNE   HVCATVOL           NO CONTINUE
         MVC   CATVOLID(6),DSNAME+9  MOVE VOL SER
         MVC   DSNAME(44),DSNWADSN     RESTORE DSN
         OI    USCATL,X'80'        TURN ON CVOL FLAG
         LA    R0,CATVOLID        POINT TO CVOL
         ST    R0,USCATL+8        STORE IT
         LOCATE USCATL             LOCATE IT AGAIN
         LR    RR,R0
         ST    R15,RETCOD          SAVE RETURN CODE FOR SHOW CAT
         LTR   R15,R15             SEE IF OK
         BZ    HVCATVOL            OK CONTINUE
         CH    R15,=H'12'          IS IT OK
         BE    CNOTDSN
         B     CILLVOL             SEE VOL ILLEGAL
         SPACE
CNOTDSN  TM    F2,DSNFSHOW+DSNFCAT  IS IT SHOW CATLG?
         BNO   ILLCAT              NO - IT'S INVALID
         EJECT
HVCATVOL TM    F2,DSNFSHOW+DSNFCAT  IS IT SHOW CATLG?
         BO    CALLVTOC            BR IF YES - GO PROCESS CATLG
         MVC   DSVID(6),CATVOL     SAVE VOLUME ID
         MVC   DSNWAVOL,DSVID      RESET WORK AREA VOL ID
         TM    F2,DSNFWRT+DSNFSCR  TEST FUNCTION
         BNZ   NOCATSCH            BR IF SAVE OR SCR - NO TSEG
         TM    CPGFLG2,CPFEXEC+CPFEXTER EXEC AND EXEC TERSE?
         BO    NOCATSCH            YES, NO TSEG
         CLI   CPCMSAV,C';'        LOGON EXEC FILE?
         BE    NOCATSCH            YES, NO TSEG
         TSEG  'VOLUME IS',,B
         TSEG  DSVID,6,M
         SPACE 3
NOCATSCH L     R1,=A(DOUCBSR)
         BALR  SR,R1
         BNZ   ERR                 BR IF BAD VOLUME
         MVC   DCB+DCBDDNAM-IHADCB(8),DSDD  SET DCB DDNAME
         TM    F2,DSNFWRT+DSNFSCR  TEST FUNCTION
         BZ    SYSENQ              BR IF NOT SAVE OR SCR
* SCRATCH OR SAVE - CHECK FOR VALID DSNAME/VOLUME
*                                                               JEP001
**** FOLLOWING CODE INSERTED FOR DCEC NAMING CONVENTIONS********JEP001
*                                                               JEP001
         LA    R2,DSNWADSN         DOES DATA SET BELONG TO USER JEP001
         AGO   .LBL03                                           JEP00X
         TM    F1,DSNFMYDS         DOES DATA SET BELONG TO USER?
         BZ    ILLDS
.LBL03   DS    0H                                               JEP00X
         TM    F2,DSNFSCR          IS COMMAND SCRATCH?
         BO    SYSENQ              BR IF YES
* SAVE ONLY PERMITTED ON CERTAIN VOLUMES
         CLC   CVSTYPE,DSDD        IS VOLUME VALID FOR SAVE
         BE    SYSENQ              BRANCH YES
         CLC   CVTTYPE,DSDD        IS IT TEMPORARY VOLUME TYPE
         BE    SYSENQ              BR IF SO
         TM    JCBAFL,JCBSYSPR     CAN WE ALLOW IT?
         BZ    ILLVOLND            NO.. BAD VOLUME
         SPACE 3
SYSENQ   CLI   F2,DSNFSHOW         IS IT SHOW DSNAMES?
         BNE   SYSENQ2             BR IF NOT
         SPACE
* CALL SHOW DSNAMES/DIRECTORY
CALLVTOC L     R14,=A(DVTOC)       SHOW DSNAMES ROUTINE
         LR    R13,R8              RESTORE REGS
         LM    R15,R8,4(R13)
         BR    R14                 GO TO SHOW DSNAMES ROUTINE
         SPACE 3
SYSENQ2  LH    SR,DSNWANL          GET LENGTH OF DSNAME
         MODESET KEY=ZERO         KEY ZERO FOR ENQ              JJG
         ENQ   (SYSDSN,,,(SR)),MF=(E,ENQDSN)
         LTR   R15,R15
         BNZ   LOCKOUT
         MODESET KEY=NZERO        NOT ZERO                      JJG
NQOK     RDJFCB (DCB),MF=(E,OPENLIST)
         OBTAIN DSCB
         STC   R15,SCRRET          SAVE RETURN CODE FOR LATER
         AIF   ('&INSTALL' NE 'CUCCA').CANDO
         SPACE 3
* CHECK PROTECTION
         SPACE
         L     R1,16               GET CVT POINTER
         L     R1,CVTUSER-CVT(R1)  GET CUCCCVT
         TM    CVTVOLS-CUCCCVT(R1),X'F0' ANY BITS ON?
         BZ    CANDO               NO.. ALLOW ACCESS
         LTR   R15,R15             DATASET THERE?
         BNZ   CANDO               NO.. SO ALLOW
         SPACE
* DATASET EXISTS TEST
         LA    R1,DSNAME
         ST    R1,DBUF
         LA    R1,DSVID
         ST    R1,DBUF+8
         LA    R1,DS1FMTID
         ST    R1,DBUF+12
         SPACE
* DECIDE ON ACCESS TYPE
         LA    R1,=C'R'            ASSUME INPUT
         TM    F2,DSNFWRT+DSNFSCR+X'02'    OUTPUT?
         BZ    *+8
         LA    R1,=C'W'            OUTPUT
         ST    R1,DBUF+4
         LA    R1,DBUF
         LA    R0,4                INQUIRY CODE
         SVC   226                 TEST PROTECTIO
         LTR   R0,R0               TEST RETURN CODE
         BNZ   ACCERROR
         SPACE
.CANDO   ANOP
         SPACE
CANDO    XCALL CLRJFCB             GO CLEAN UP THE JFCB
         SPACE
* NOW CALCULATE CURRENT DATE AND SET CCREDT IN CASE SAVE/SCR
         BAL   R14,TMSET           SET CCREDT TO VTOC FORM DATE
         TM    F2,X'02'            IS IT RENAME
         BO    RENM                YES
         TM    F2,DSNFWRT+DSNFSCR  TEST FUNCTION
         BM    CREATE              BR IF SAVE
         BAL   RR,MUSTXST          GO MAKE SURE DATA SET EXISTS
         TM    F2,DSNFSCR          TEST SCRATCH OR USE
         BO    DELT                BR IF SCRATCH
         B     OLD
         EJECT
* CREATE DATA SET
         SPACE
* THE FIRST THING DONE AT CREATE IS TO CALCULATE A GOOD DEFAULT
* BLKSIZE FOR THE DEVICE BEING USED.  THE SCHEME USED IS TO
* CALCULATE THE MAXIMUM BLKSIZE >= 3000 AND <= MXRECSZ(3520)
* THAT CAN BE USED FOR THE DEVICE AND STILL HAVE THE SAME
* NUMBER OF RECORDS/TRACK AS BLKSIZE=3000 GIVES.  THE NORMAL
* SPACE CALCULATIONS HAVE BEEN SOLVED TO FIND THAT BLKSIZE.
* DIVISOR = (#REC-1)*TOL+512
* DIVIDEND = 512*(TRKSZ-(LBLKO-KEYO)-(#REC-1)*(BLKO-KEY0))
         SPACE
CREATE   LA    R0,3000             SET BLKSIZE
         LA    R1,DVTAREA          POINT TO DEVICE TABLE
         XCALL CALCTRK             CALCULATE RECORDS/TRACK
         BCTR  R1,0                SUBTRACT 1 FOR FORMULA
         LR    R15,R1              SAVE VALUE
         MH    R1,DVTTOL           MULTIPLY BY TOLERANCE
         AH    R1,=H'512'          ADD IN 512 TO GET DIVISOR
         LR    R4,R1               SAVE DIVISOR FOR LATER
         TM    DVTFLAG,DVTFOHD     IS OVERHEAD A HALFWORD
         BO    CREDEV1             BR YES
         SR    R2,R2               GET OVERHEAD
         IC    R2,DVTLBLKO             FOR LAST BLOCK
         SR    R3,R3               GET OVERHEAD
         IC    R3,DVTBLKO              FOR OTHER BLOCKS
         B     CREDEV2             NOW CONTINUE
         SPACE
CREDEV1  LH    R3,DVTBLKO          GET OVERHEAD FOR OTHER BLOCKS
         LR    R2,R3               LAST BLOCK OVERHEAD IS SAME
CREDEV2  SR    R0,R0               GET OVERHEAD
         IC    R0,DVTKEYO              FOR KEY REDUCTION
         SR    R2,R0               ADJUST BOTH
         SR    R3,R0                   OVERHEADS SINCE NO KEYS
         LH    R1,DVTTRKSZ         GET TRACK SIZE
         SR    R1,R2               ADJUST FOR LAST BLOCK
         MR    R2,R15              CALC ADJUST FOR OTHER BLOCKS
         SR    R1,R3               ADJUST FOR REMAINING BLOCKS
         SLA   R1,9                MULTIPLY BY 512
         SR    R0,R0               SET R0 FOR DIVIDE
         DR    R0,R4               CALCULATE BLKSIZE
         CH    R1,=AL2(MXRECSZ)    IS IT WITHIN BOUNDS
         BNH   *+8                 BR YES, OK
         LH    R1,=AL2(MXRECSZ)    NO, LOAD MAX SIZE ALLOWED
         ST    R1,DEVBLOCK         SAVE DEFAULT BLKSIZE
         CLI   SCRRET,8            WAS DSCB NOT FOUND?
         BE    CREATE2             BR IF YES - NOT FOUND
         CLI   SCRRET,0            WAS DSCB FOUND?
         BNE   MUSTXST             BR IF ERROR
         TM    DS1DSORG,DSORGPO    WAS OLD DATA SET A PDS?
         BZ    CREXI1              BR IF NO
         BAL   RR,DSISPDS          GO CHECK FOR MEMBER
         OI    F2,DSNFPDS          SET THIS IS PDS OPERATION
CREXI1   L     R0,RECSIZE          GET ORIG RECORD SIZE FLAG
         LTR   R0,R0               WAS A FORMAT GIVEN
         BM    CREXI2              NO, GO DECIDE FROM DSCB
         BE    CREXED              YES, IT WAS EDIT
         SPACE
* LRECL WAS GIVEN
CREXLR   MVI   RRECFM,FIXBLOCK     SET FIXED BLOCKED RECFM
         L     R15,CPNREC          GET RECORDS/BLOCK COUNT
         LTR   R15,R15             WAS IT GIVEN
         BNZ   CREXLR4             YES, GO USE IT
         CH    R0,DS1LRECL         IS LRECL SAME AS SPECIFIED
         BNE   CREXLR2             NO, USE DEFAULT BLOCKSIZE
         CLC   DS1RECFM,RRECFM     DO RECFMS AGREE
         BNE   CREXLR2             NO, USE DEFAULT BLOCKSIZE
*        TM    F2,DSNFPDS          IS IT A PDS OPERATION          *SEQ*
*        BNO   CREXLR2             NO, FORCE DEFAULT BLKSIZE      *SEQ*
CREXLR1  LH    R15,DS1BLKL         GET BLOCKSIZE FROM DSCB
         LTR   R15,R15             IS IT POSITIVE
         BNP   CREXLR2             NO, USE DEFAULT BLOCKSIZE
         CH    R15,=AL2(MXRECSZ)   IS IT WITHIN ALLOWED SIZE
         BNH   CREXLR3             YES, USE IT
CREXLR2  L     R15,DEVBLOCK        GET DEFAULT BLOCKSIZE
CREXLR3  SR    R14,R14             SET FOR DIVIDE
         DR    R14,R0              GET RECORDS/BLOCK
         ST    R15,CPNREC          SAVE VALUE
CREXLR4  MR    R14,R0              RECALCULATE ACTUAL BLOCKSIZE
         ST    R0,CPLRCL           MAKE SURE CPLRCL SET
         BAL   R14,CHKSQFLD        CHECK SEQFLD BOUNDS
         B     CREXTST             GO TEST RESULT
         SPACE
CREXED   L     R15,DEVBLOCK        USE DEFAULT BLKSIZE FOR EDIT
CREXED1  LR    R0,R15              SET R0 TO SAME SIZE
         XC    CPLRCL,CPLRCL       MAKE SURE EDIT IS SAVED
         B     CREXTST             NOW GO TEST RESULT
         SPACE
CREXI2   DS    0H
*        TM    F2,DSNFPDS          IS IT A PDS OPERATION          *SEQ*
*        BNO   CREXI21             NO, FORCE DEFAULTS             *SEQ*
         TM    DS1RECFM,UNDEFIND   IS DATA SET EDIT FORMAT
         BNO   CREXI3              BR NO TO CHECK FOR FIXED
         TM    CPLFLG5,CPFFOPT     WAS A NUMBERED OPTION GIVEN
         BO    CREXI22             YES, MAKE DATA SET FIXED
         LH    R15,DS1BLKL         GET EXISTING BLOCKSIZE
         LTR   R15,R15             IS IT POSITIVE
         BNP   CREXED              NO, USE DEFAULT
         CH    R15,=AL2(MXRECSZ)   IS IT WITHIN ALLOWED SIZE
         BNH   CREXED1             YES, USE THIS BLOCKSIZE
         B     CREXED              NO, USE DEFAULT BLOCKSIZE
         SPACE
CREXI21  TM    CPLFLG5,CPFFOPT     WAS A NUMBER OPTION GIVEN
         BNO   CREXED              NO, MAKE DATA SET EDIT
CREXI22  LA    R0,80               USE LRECL OF 80
         B     CREXLR              GO MAKE IT FIXED
         SPACE
CREXI3   TM    DS1RECFM,RECFMF     IS IT FIXED RECFM
         BNO   CREXI21             NO, MAKE EDIT UNLESS NUM OPT
         MVI   RRECFM,FIXBLOCK     SET FIXED BLOCKED RECFM
         LH    R0,DS1LRECL         GET LRECL VALUE
         LTR   R0,R0               IS IT POSITIVE
         BNP   CREXI22             NO, USE 80
         CH    R0,=H'133'          IS IT WITHIN BOUNDS
         BNH   CREXLR1             YES, USE IT
         B     CREXI22             NO, USE 80
         SPACE
CREXTST  ST    R15,RECSIZE         SAVE BLOCKSIZE
         ST    R0,LRECSIZE         SAVE LRECL
         TM    F3,DSNFCHT          IS IT OK TO CHANGE TYPE
         BO    CREXTST1            YES, GO ON
         CLC   DS1RECFM,RRECFM     DO RECFMS AGREE
         BNE   TYPECHNG            NO, GO ASK USER
         CH    R0,DS1LRECL         DOES LRECL AGREE
         BNE   TYPECHNG            NO, GO ASK USER
         CH    R15,DS1BLKL         DOES BLKSIZE AGREE
         BE    CREXTST1            EQUAL OK
         BH    TYPECHNG            IF HIGH CHECK CHANGE
         LH    R15,DS1BLKL         LOW LEAVE ALONE
CREXTST1 STH   R15,DCB+DCBBLKSI-IHADCB PUT BLKSIZE IN DCB
         STH   R0,DCB+DCBLRECL-IHADCB PUT LRECL IN DCB
         TM    F2,DSNFPDS          IS THIS PDS PROCESSING
         BO    OLDSTUP             YES, GO OPEN DATA SET
         TM    CPLFLG2,CPFSCRTC    CAN WE SCRATCH IT?
         BZ    EXISTS              BR IF NO
         L     R15,RECSIZE         SET R15 TO ACTUAL BLKSIZE
         L     R14,SPACE           GET ADDRESS OF SPACE ROUTINE
         BALR  R14,R14             GO CALC SIZE OF SAVE
         BZ    ABORTMS             BRANCH IF VOID RANGE
         XC    MEMBER+4(2),MEMBER+4  MAKE SPACE ADJ. ZERO
         BAL   RR,DELTALL          GO SCRATCH IT
         B     CREATE3
         SPACE 3
* DSCB NOT FOUND - ALLOCATE SPACE
CREATE2  TM    F1,DSNFWLIB         IS IT A WYLBUR LIBRARY?
         BO    NOSUCH              YES - PDS NOT FOUND ON VOL
         L     R0,RECSIZE          GET RECSIZE
         LTR   R0,R0               DID USER SPECIFY FORMAT
         BM    CREDITST            NO, MAKE IT EDIT IF NO NUM
         BZ    CREATE2E            MAKE EDIT IF EDIT SPEC        C068
CRELREC  L     R15,CPNREC          CREATE FIXED -- GET NREC
         LTR   R15,R15             WAS IT GIVEN
         BP    CRELREC1            YES, USE IT
         L     R15,DEVBLOCK        NO, GET DEFAULT
         SR    R14,R14
         DR    R14,R0              GET RECORDS/BLOCK
         ST    R15,CPNREC          SET NREC
CRELREC1 MR    R14,R0              CALCULATE ACTUAL BLKSIZE
         MVI   RRECFM,FIXBLOCK     SET FIXED-BLOCKED RECFM
         ST    R0,CPLRCL           MAKE SURE LRECL SET
         BAL   R14,CHKSQFLD        CHECK SEQFLD BOUNDS
         B     CREATE2A            GO ON
         SPACE
CREDITST TM    CPLFLG5,CPFFOPT     WAS A NUMBERED OPTION GIVEN
         LA    R0,80               SET R0 FOR CARD
         BO    CRELREC             YES, GO MAKE FIXED
         SR    R0,R0               NO, SET FOR EDIT
         ST    R0,CPLRCL           SET CPLRCL FOR EDIT
CREATE2E L     R15,DEVBLOCK        GET BLOCKSIZE FOR EDIT        C068
         LR    R0,R15              ALSO USE FOR LRECL
CREATE2A ST    R0,LRECSIZE         SAVE LRECL
         ST    R15,RECSIZE         SAVE BLOCKSIZE
CREATTMP XC    MEMBER+4(2),MEMBER+4  MAKE SPACE ADJ. ZERO
         NI    CPLFLG2,255-CPFSCRTC  INDICATE SCRATCH NOT DONE
         L     R15,RECSIZE         SET R15 TO ACTUAL BLKSIZE
         L     R14,SPACE           GET ADDRESS OF SPACE ROUTINE
         BALR  R14,R14             GO CALC SIZE OF SAVE
         BZ    ABORTMS             BRANCH IF VOID RANGE
CREATE3  L     R0,CPLRCL           GET LRECL
         LTR   R0,R0               IS IT EDIT OR FIXED
         BZ    SZEDIT              EDIT IF ZERO
         SPACE
* CALCULATE SPACE FOR FIXED BLOCK USING LINE COUNT
         LH    R15,DSAVCNT         GET LINE COUNT
         SR    R14,R14             SET R14 FOR DIVIDE
         D     R14,CPNREC          GET BLOCK COUNT
         LTR   R14,R14             IS THERE A REMAINDER
         BZ    SZSET               NO, DON'T ADD ONE
         LA    R15,1(,R15)         UP BLOCK COUNT BY 1
         B     SZSET               GO FINISH UP
         SPACE
* GET BLOCK COUNT FOR EDIT SAVE
SZEDIT   LH    R15,DSAVBLK         COUNT WAS CALC BY SPACE ROUT
SZSET    ST    R15,SPACE           SAVE BLOCK COUNT
         BAL   R14,TMSET           GET CREATE DATE IN PROPER FORM
         MVC   JFCBDSNM,DSNAME         MOVE IN DSNAME
         MVC   JFCBPQTY,SPACE+1        MOVE IN SPACE
         L     R1,SPACE            GET PRIMARY SPACE
         LA    R1,7(,R1)           CALCULATE VALUE
         SRA   R1,3                   FOR SECONDARY SPACE
         ST    R1,SPACE            SAVE SECONDARY SPACE
         MVC   JFCBSQTY,SPACE+1    SET SECONDARY SPACE VALUE
         MVC   JFCBDRLH,RECSIZE+1      MOVE IN AVG BLOCK SIZE
         MVI   JFCBCTRI,X'40'          FLAG
         MVC   JFCBLKSI,RECSIZE+2      MOVE IN BLOCKSIZE
         MVC   JFCLRECL,LRECSIZE+2     MOVE IN LRECL
         MVC   JFCRECFM,RRECFM         MOVE IN RECFM
         MVC   JFCBCRDT,CCREDT+1       MOVE IN CREATION DATE
         MVC   JFCBXPDT,CCREDT+1       MOVE IN EXPIRATION DATE
         MVI   JFCDSORG,DSORGPS    MOVE IN PS DSORG
         SPACE
* THE RELEASE OPTION CAN BE SKIPPED BECAUSE EXACT SIZES ARE
* NOW CALCULATED FOR BOTH EDIT AND FIXED SAVES.
         SPACE
* ALLOCATE SVC LINKAGE
         OI    F3,DSNFEXP   FIX A BUG              ITEL
         LA    0,JFCB                  POINT TO JFCB
         LA    1,UCB                   POINT TO UCB
         SVC   32                      ALLOCATE DATA SET
         LTR   15,15                   WERE THERE ERRORS
         BZ    OLDOPEN             NO, FINISH PROCESSING LIKE OLD DS
         ST    15,ERROR                SAVE FOR CATER
         MVI   ERROR+1,C'1'            PUT IN CODE
         CLI   ERROR+3,4               ANALYZE ERROR
         BE    EXISTS                  SORRY
         CLI   ERROR+3,8               IS THERE ROOM
         BE    NOROOM                  NO
         CLI   ERROR+3,X'14'           IS THERE ROOM
         BE    NOROOM                  NO
         XCALL CATER
         B     DEQERR
         SPACE 3
* CALCULATE DATE IN FORM NEEDED BY DATA SET LABEL
         SPACE
TMSET    TIME
         SR    0,0
         ST    0,CCREDT                SETUP FOR CVB
         SLDL  0,16                    YEAR TO R0
         SRL   1,16                    DAY BACK
         ST    1,CCREDT+4              STORE DAY
         SLL   1,28                    SIGN TO HIGH END
         SLDL  0,4                     SIGN ON THE YEAR TOO
         CVB   1,CCREDT                DAY IN BUNARY
         ST    0,CCREDT+4              STORE YEAR FOR CVB
         CVB   0,CCREDT                YEAR TO BINARY
         STH   1,CCREDT+2              STORE APPROPRIATELY
         STH   0,CCREDT
         BR    R14                 RETURN
         SPACE 3
         USING WDIOWA,R3
RENM     L     R3,CVIOWA
         CLI   DSNWAMBR,C' '        IS THIS A PDS OPER
         BNE   RENM2                YES
         MVI   MEMBER,X'FF'         SET TO STD NO PDS OPR
RENM2    BAL   RR,MUSTXST          WAS DSCB FOUND
         CLI   SCRRET,8            FOUND
         BE    NOSUCH              NO
         CLI   DSNWAMBR,C' '        IS THIS A PDS OPERATION
         BE    RENM1                NO
         TM    DS1DSORG,DSORGPO    IS DATA SET PDS
         BZ    ILLORG              NO
         MVC   RRECFM,DS1RECFM     SAVE RECFM
         B     OLDSTUP             OPEN PDS
RENM1    L     R15,DSREN        FUNCTION
         ST    R15,CATLST       SAVE IN CAMLIST
         LA    R15,VTOCEND+4    GET SEC DSN
         ST    R15,CATLST+8     SAVE IN CAMLIST
         SR    0,0
         RENAME CATLST
         LTR   15,15
         BNZ   EXISTS            DATA SET EXISTS
CHKUN    SR    R15,R15            CLEAR RETURN CODE FROM KWR
         XCALL RENCTG
         MVC   DSNAME(44),DSNWADSN  RESTORE RNAME
         B     DEQERR
DSREN    CAMLST RENAME,0,0,0
PREN     XCALL PRENA                 GO TO RTN
PREN3    LA    R1,DCB
         CVCALL DCLOSE               DO CLOSE
         B     RET                   RETURN
         DROP  R3
         EJECT
* OLD DATA SET PROCESSING
         SPACE
OLD      TM    F2,DSNFSHOW         IS COMMAND SHOW?
         BO    OLDEDIT             BR IF YES - NO BLKSIZE CHK
         LH    R0,DS1BLKL          GET BLOCK SIZE
         CL    R0,=A(DBUFSIZE)     IS IT UNDER MAXIMUM?      MVD
         BH    ILLBLKSZ               BR IF TOO BIG          MVD
         L     0,RECSIZE               GET RECSIZE
         LTR   0,0                     WAS IT SPECIFIED
         BNM   OLDSTUP                 YES (EDIT OR LRECL)
         SPACE
* OTHERWISE USE THE DSCB INFORMATION
         TM    DS1RECFM,UNDEFIND   IS IT RECFM=U?
         BO    OLDEDIT             ASSUME EDIT FOR RECFM=U
         TM    DS1RECFM,RECFMF     IS IT RECFM=F(X)?
         BO    USELRECL            USE LRECL IF SO
         TM    DS1RECFM,RECFMV     IS IT RECFM=V(X)?
         BZ    ILLORG              ERROR IF NOT
         TM    DS1RECFM,SPANNED    SPANNED RECORDS?
         BO    ILLORG              BR IF YES - CAN'T HACK THEM
USELRECL LH    R0,DS1LRECL         GET DSCB LRECL
         LTR   R0,R0               IS IT ZERO
         BNZ   HAVRECSZ            BR IF NOT
USEBS    LH    R0,DS1BLKL          GET BLOCKSIZE
         LTR   R0,R0               IS IT ZERO?
         BZ    ILLBLKSZ               BR IF YES - INVALID
HAVRECSZ TM    DS1RECFM,RECFMV     IS IT VARIABLE?
         BZ    *+6                 BR IF NO
         LNR   R0,R0               INDICATE VARIABLE
         ST    R0,RECSIZE          STORE RESULT
         B     OLDSTUP             GO ON
         SPACE
OLDEDIT  XC    RECSIZE,RECSIZE     INDICATE EDIT FORMAT
         SPACE
* ENTER HERE FROM SAVE/SCR MEMBER ALSO
OLDSTUP  MVC   JFCBDSNM,DSNAME         MOVE IN DSNAME
         TM    F2,DSNFSHOW+DSNFPDS  IS COMMAND SHOW DIRECTORY?
         BO    CALLVTOC            BR IF YES
         CLI   MEMBER,X'FF'        TO BE TREATED AS PS?
         BE    OLDOPEN             BR IF YES
         TM    DS1DSORG,DSORGPO    IS IT PDS?
         BZ    OLDOPEN             BR IF NO
         MVI   DCB+DCBDSORG-IHADCB,DSORGPO   SET DCB FOR PO
         OI    F2,DSNFPDS          INDICATE PDS PROCESSING
         SPACE
* ENTER HERE FROM CREATE ROUTINE ALSO
OLDOPEN  MVC   DCB+DCBRECFM-IHADCB(1),RRECFM  MOVE IN REQ RECFM
         TM    JCBAFL,JCBSYSPR     PRIV'D?
         BZ    CLRKEY
         CLC   CPDOUB(8),=CL8' '
         BE    CLRKEY
         MVC   CCREDT(8),CPDOUB
         STM   R0,R5,0(R13)
         L     R1,=A(TAB)
         USING TAB,R1
         TR    CCREDT(4),TAB
         TR    CCREDT+4(4),TAB2
         DROP  R1
         LA    R5,31
         SR    R2,R2
         SR    R3,R3
         LA    R4,1
LANC     LR    R0,R3
         SR    R1,R1
         SRDL  R0,2
         SRL   R1,27
         AR    R0,R1
         ST    R0,5*4(,R13)
         L     R0,CCREDT
         SR    R1,R1
         SRDL  R0,1
         ST    R0,CCREDT
         LR    R0,R1
         L     R1,5*4(,R13)
         SRL   R0,0(R1)
         OR    R2,R0
         BXLE  R3,R4,LANC
         ST    R2,CCREDT
         SR    R2,R2
         SR    R3,R3
LANC1    LR    R0,R3
         SR    R1,R1
         SRDL  R0,2
         SRL   R1,27
         AR    R0,R1
         ST    R0,4*5(,R13)
         L     R0,CCREDT+4
         SR    R1,R1
         SRDL  R0,1
         ST    R0,CCREDT+4
         LR    R0,R1
         L     R1,4*5(,R13)
         SRL   R0,0(R1)
         OR    R2,R0
         BXLE  R3,R4,LANC1
         ST    R2,CCREDT+4
         LM    R0,R5,0(R13)
         B     INOROUT
         SPACE
CLRKEY   MVC   CCREDT(8),=CL8' '
INOROUT  TM    F2,DSNFWRT          INPUT OR OUTPUT?
         BO    OPENOUT             BR IF OUTPUT
         SPACE 3
* OPEN DATA SET FOR INPUT
         OI    JFCBTSDM,X'08'      INHIBIT JFCB REWRITE
         OPEN  (,INPUT),TYPE=J,MF=(E,OPENLIST)
         B     OPEN1
         SPACE 3
* OPEN DATA SET FOR OUTPUT
OPENOUT  TM    F2,X'02'            RENAME
         BO    OPENOUT1            YES
         TM    F3,DSNFEXP          NEED CHECK FOR EXPDT
         BO    OPENOUT1            NO, GO DO OPEN
         LD    0,CCREDT            SAVE KEY
         BAL   R14,TMSET           GET TODAY'S DATE IN PROPER FMT
         CLC   DS1EXPDT,CCREDT+1   IS DATA SET DATE PROTECTED
         BH    EXPDATE             YES, ABORT THE OPERATION
         STD   0,CCREDT            RESTORE KEY
OPENOUT1 OI    JFCBTSDM,X'08'      INHIBIT JFCB REWRITE
         OPEN  (,OUTPUT),TYPE=J,MF=(E,OPENLIST)
         MVI   DCB+(DCBRECFM-IHADCB),UNDEFIND
OPEN1    DS    0H
         TM    DCB+(DCBOFLGS-IHADCB),X'10' IS IT OPENED OK
         BZ    OPNER               NO
OKOPN    DS    0H
         TM    DCB+DCBDSORG-IHADCB,DSORGPO   PDS?
         BZ    NOBLDL              BR IF NO
         TM    F2,X'02'            RENAME
         BO    PREN                YES
         BLDL  DCB,BLDL
         ST    R15,ERROR           STORE RETURN CODE
         CLI   ERROR+3,8           WAS IT I/O ERROR
         BE    BLDLERR             BR IF YES
         TM    F2,DSNFWRT+DSNFSCR  TEST FUNCTION
         BO    SCRMBR              GO SCRATCH MEMBER
         BZ    FINDMEMB            BR IF USE
         CLI   ERROR+3,4           WAS MEMBER FOUND?
         BE    SVNWMBR             BR IF NOT FOUND - NORMAL
         TM    CPLFLG2,CPFSCRTC    CAN WE SCRATCH OLD MEMBER?
         BO    OKREPL              BR IF YES
         LA    R14,EXISTS          MEMBER ALREADY EXISTS
         B     BLDLERR
         SPACE
OKREPL   OI    DFL,DFREPL          INDICATE REPL FOR STOW
SVNWMBR  TM    DFL,DFREPL          IS IT TO BE A REPL FUNCT?
         BO    NOBLDL              BR IF YES - NO SPACE CHECK
         CLI   DCB+DCBDIRCT+1-IHADCB,254-STOWSZ  CHECK ROOM
         BL    NOBLDL              BR IF DIRECTORY SPACE LEFT
         LA    R14,NODIRSPC        LOAD ERROR RTN ADDR
         BH    BLDLERR             BR IF NO -- NO ROOM LEFT
         TSEG  'LAST MEMBER',,M     WARN USER
         B     NOBLDL
         SPACE
FINDMEMB CLI   ERROR+3,4           WAS MEMBER FOUND FOR USE
         LA    R14,ILLMEMB         PRIME RETURN ADDR
         BE    BLDLERR             BR IF NOT
         FIND  DCB,BLDLTTR,C       FIND MEMBER
NOBLDL   SR    15,15                   INDICATE SUCCESS
         LA    1,DBUF                  POINT TO BUFFER
         BAL   RR,RESETWA          GO RESET DSNWA
RET      LR    R13,R8              RESTORE ORIG R13
         LM    R2,R8,16(R13)       RESTORE OTHER REGS
         L     14,0(,13)
         LTR   15,15
         BR    14
         SPACE
OPNER    XC    ERROR,ERROR
         MVI   ERROR+1,C'4'   SET OPEN ERROR CODE
         XCALL CATER
         B     DEQERR
         SPACE
BLDLERR  LR    SR,R14              SAVE ROUTINE ADDR
         CLOSE (,REREAD),MF=(E,OPENLIST)
         CLI   ERROR+3,8           WAS IT AN I/O ERROR
         BNER  SR                  BR TO PRE-DESIG RTN IF NOT
         LA    R15,RTNDIRIO        SET I/O ERROR RETURN CODE
         B     DEQERR
         SPACE 3
* RESET DSNWA IN CASE CHANGED VALUES
RESETWA  L     0,RECSIZE               RETURN SIZE
         MVC   DSNWAVOL,DSVID      RETURN ACTUAL VOLUME NAME
         MVC   DSNWAMBR,MEMBER        IN CASE MEMBER CHANGED
         MVC   DSNWAF1(L'FLAGS),F1  RESTORE FLAGS ALSO
         BR    RR                  RETURN
         EJECT
* CHAIN THRU THE DSE'S TO SEE IF WE ALREADY OWN THE DATASET
         SPACE 3
* DELETE PROCESSING
         SPACE
DELT     CLI   MEMBER,X'FF'       SCRATCH ENTIRE THING ANYWAY?
         BE    DELTALL             BR IF YES
         TM    DS1DSORG,DSORGPO    IS IT A PDS?
         BZ    DELTALL             BR IF NO
         MVC   RRECFM,DS1RECFM     SAVE ACTUAL RECFM
         B     OLDSTUP             THEN GO OPEN PDS
         SPACE
DELTALL  MVI   SCRRET,0                SET BEFORE DROP-THRU
         SR    0,0                     MUST BE ZERO ON ENTRY
         NI    SCRLST+2,255-X'10'      TAKE OVRD OFF
         TM    F3,DSNFEXP              EXPDT SPECIFIED?
         BZ    *+8                     NOPE
         OI    SCRLST+2,X'10'          SAY OVRD.
         SCRATCH SCRLST                KILL THE DATA SET
         SR    15,15                   FIX UP CODE
         CLI   SCRRET,0                WAS THERE AN ERROR
         BE    CHKUNCAT            NO.  ALL OK
         CLI   SCRRET,1                WAS DS NOT THERE
         BE    NOSUCH              DS NOT THERE
         CLI   SCRRET,3                EXPDT???
         BE    EXPDATE
         IC    15,SCRRET               GET INTO REG
         ST    15,ERROR                SAVE FOR CATER
         MVI   ERROR+1,C'6'            PUT IN CODE
         XCALL CATER
         B     DEQERR
         SPACE
CHKUNCAT TM    F2,DSNFSCR          SCRATCH COMMAND?
         BZR   RR                  BR IF NO
         TM    CPLFLG3,CPFUNCLG    WAS UNCATLG SPECIFIED?
         BO    UNCAT               BR IF YES
         TM    CPLFLG1,CPFUSCAT    WAS CATLG USED TO LOC VOL?
         BZ    DEQERR              BR IF NOT
         OI    CPLFLG3,CPFUNCLG    INDICATE UNCATLG ATTEMPTED
UNCAT    XCALL DCATLG              GO UNCATLG
         BZ    DEQERR              BR IF NORMAL RETURN
DELNOCAT LA    R15,C12             CATALOG STUFF NOT DONE RC
         B     DEQERR
         SPACE 4
* RETURN HERE FROM OPEN TO SCRATCH MEMBER
         SPACE
SCRMBR   LA    R14,ILLMEMB         LOAD IN CASE OF ERROR
         CLI   ERROR+3,4           WAS IT FOUND?
         BE    BLDLERR             BR IF NO
         BAL   RR,RESETWA          GO RESET DSNWA
         LR    SR,R0               SAVE R0 RETURN VALUE
         LA    R1,DCB
         LA    R0,MEMBER
         LCR   R0,R0               FLAG DELETE FOR STOW
         CVCALL DCLOSE             GO STOW, CLOSE, AND DEQ
         LR    R0,SR               RESTORE R0 RETURN VALUE
         B     RET
         EJECT
* CALL CATALOG FUNCTION AFTER ERROR CHECKING
         SPACE
CALLCAT  TM    CPLFLG3,CPFDSCLG    IS IT RECATLG OR CATLG
         BNO   CALLCAT1            BR NO,  NO VOL CHECK NEEDED
         L     R1,=A(DOUCBSR)
         BALR  SR,R1
         BZ    CALLCAT1            YES, USE DEVTYPE FOUND
         AIF   ('&DCEC' NE '1').LBL06                           JEP00X
         MVC   DEVCODE(4),=X'3050200B' NO, USE 3330 FOR CATLG   JEP011
         AGO   .LBL07                                           JEP00X
.LBL06   DS    0H                                               JEP00X
         MVC   DEVCODE(4),=X'30C02008' NO, USE 2314 FOR CATLG
.LBL07   DS    0H                                               JEP00X
CALLCAT1 XCALL DCATLG              GO DO IT
         B     ERR
         EJECT
* UTILITY ROUTINES
         SPACE
DEQERR   LR    SR,R15              SAVE RETURN CODE
         MODESET KEY=ZERO         KEY ZERO FOR ENQ              JJG
         DEQ   RET=HAVE,MF=(E,ENQDSN)
         MODESET KEY=NZERO        NOT ZERO                      JJG
DEQERR2  LR    R15,SR              RESTORE RETURN CODE
         B     ERR
         SPACE
ILLDS    LA    R15,RTNILDSN
         B     ERR
         SPACE
TYPECHNG TM    F2,DSNFPDS          IS IT A PDS OPERATION          *SEQ*
         BNO   CREXTST1            NO, ALLOW THE CHANGE           *SEQ*
         LNR   R15,R12             SET R15 NEGATIVE
         B     DEQERR
         SPACE
EXPDATE  LA    R15,RTNEXPDT
         B     DEQERR              ERROR DETECTED UNDER SUBTASK
         SPACE
ACCERROR LA    R15,RTNPROT         PROTECTION VIOLATION
         B     DEQERR
         SPACE
ABORTMS  LA    R15,ABRTCODE        SET REQUEST ABORTED CODE
         B     DEQERR
         SPACE
ILLMEMB  LA    R15,RTNBDMBR
         B     DEQERR
         SPACE
NODIRSPC LA    R15,RTNDIRFL
         B     DEQERR
         SPACE
NOSUCH   LA    R15,RTNNODS
         B     DEQERR
         SPACE
EXISTS   LA    R15,RTNDUPDS
         B     DEQERR
         SPACE
NOROOM   LA    R15,RTNNOSPC
         B     DEQERR
         SPACE
ILLORG   LA    R15,RTNILORG
         B     DEQERR
         SPACE
LOCKOUT  LA    SR,ENQDSN           ADDR OF ENQ LIST
         CLI   3(R15),0            IS FIRST ONE THE PROBLEM
         BNE   *+8                 BR IF YES
         LA    R15,12(R15)         LOAD ADDR OF SECOND
         SR    R15,SR              OFFSET OF RESOURCE NOT GOTTEN
         ST    R15,RECSIZE         SAVE FOR RETURN LATER
         LA    R15,RTNINUSE        INDICATE ENQ FAILED
         B     DEQERR     GO DEQ IN CASE ONE IN THE LIST GOTTEN
         SPACE
ILLBLKSZ ST    R0,RECSIZE          SAVE INVALID BLOCKSIZE
         LA    R15,RTNINVBS
         B     DEQERR
         SPACE
ILLCAT   ST    RR,RECSIZE          SAVE LEVEL NUMBER OF ERR
         LA    R15,RTNNODS
         MVC   DSVID,=C'CATLG '    IN CASE CMND IS SHOW CATLG
         SPACE
ERR      BAL   RR,RESETWA          GO RESET DSNWA
         NI    JCBAFL,255-JCBAFDO      SET DS CLOSED
         B     RET
         EJECT
* ROUTINE TO MAKE SURE DATA SET EXISTS AND MEMBER SPEC IF REQ
         SPACE
MUSTXST  SR    R15,R15
         IC    R15,SCRRET          GET RETURN CODE FROM OBTAIN
         LTR   R15,R15
         BZ    DSEXISTS            BR IF DSCB FOUND
         ST    R15,ERROR
         MVI   ERROR+1,C'2'
         CLI   ERROR+3,8           WAS IT JUST NOT FOUND?
         BE    NOSUCH2             BR IF YES
         CLI   ERROR+3,4           WAS IT VOL NOT AVAIL
         LA    R15,RTNBDVOL        BAD VOLUME
         BE    DEQERR
         XCALL CATER
         B     DEQERR
         SPACE
NOSUCH2  DS    0H                                                  VTOC
         CLI   F2,0                USE?                            VTOC
         BNE   NOSUCH                                              VTOC
         CLC   DSNAME,DSN          IS IT THE VTOC?                 VTOC
         BNE   NOSUCH                                              VTOC
         MVI   DS1RECFM,RECFMF     RECFM=F                         VTOC
         MVI   DS1DSORG,X'20'      DSORG=DA                        VTOC
         MVI   DCB+DCBKEYLE-IHADCB,44   KEYLEN=44                  VTOC
         MVI   DCB+DCBBLKSI-IHADCB+1,96 BLKSIZE=96                 VTOC
         LA    R15,140             KEYLEN+BLKSIZE                  VTOC
         STH   R15,DS1LRECL                                        VTOC
         STH   R15,DS1BLKL                                         VTOC
         SPACE ,                                                   VTOC
DSEXISTS CLI   MEMBER,X'FF'        IS IT TO BE TREATED AS SEQ?
         BER   RR                  BR IF YES
         TM    DS1DSORG,DSORGPO    IS IT A PDS?
         BO    DSISPDS             BR IF YES
         TM    F2,DSNFSCR          SCRATCH COMMAND?
         BO    CHKPSMBR            IF SO DON'T CHECK FOR PS
         TM    DS1DSORG,DSORGPS    IS IT SEQ?
         BZ    ILLORG              BR IF NO - INVALID DSORG
CHKPSMBR TM    F2,DSNFSHOW+DSNFPDS  IS COMMAND SHOW DIRECTORY?
         BO    ILLORG              BR IF YES - ILLEGAL
         BR    RR                  RETURN
         SPACE 3
* PARTITIONED DATA SET
         SPACE
DSISPDS  TM    F2,DSNFSHOW+DSNFPDS  IS COMMAND SHOW DIRECTORY?
         BOR   RR                  BR IF YES - RETURN
         CLI   MEMBER,0            WAS MEMBER EXPLICITLY NULL?
         BE    ILLMEMB             BR IF YES
         CLI   MEMBER,X'40'        WAS MEMBER SPECIFIED?
         BNER  RR                  RETURN IF YES
         TM    CPMEMBSV,X'BF'      IS THERE A DEFAULT MEMBER?
         BZ    ILLMEMB             BR IF NO
         MVC   MEMBER,CPMEMBSV     USE DEFAULT
         BR    RR
         SPACE 3
* CHECK THAT SEQFLD VALUES ARE WITHIN LRECL IF NUMBERED SAVE
*    R0 = LRECL AT ENTRY
         SPACE
CHKSQFLD TM    CPLFLG5,CPFUNUM     UNNUMBERED SAVE
         BOR   R14                 YES, RETURN
         LH    RR,CPSEQLN          GET LENGTH OF SEQFLD
         TM    CPSEQFLD,FNEGBT     SEQ FIELD AT END OF RECORD
         BO    CHKSQFL1            YES
         AH    RR,CPSEQFLD         ADD START COL FOR SEQFLD
         BCTR  RR,0                SET FOR COMPARE TO LRECL
CHKSQFL1 CR    RR,R0               IS IT WITHIN BOUNDS
         BNHR  R14                 NO, RETURN
         TSEG  'LRECL ILLEGAL',,M
         LA    R15,ABRTCODE        SET ABORT CODE
         B     DEQERR              FINISH UP
         TITLE 'DOPEN CONSTANTS'
         LTORG
         SPACE 3
* FOLLOWING CRAP USED BECAUSE OF WAY ENQ MACRO WAS WRITTEN
EL1      ENQ   (,,E,,SYSTEM),RET=USE,MF=L
ENQESU   EQU   EL1+2     FUNCT BYTE FOR EXCL/SYSTEM/USE
         ORG   EL1+4
EL2      ENQ   (,,S,,SYSTEM),RET=USE,MF=L
ENQSSU   EQU   EL2+2     FUNCT BYTE FOR SHR/SYSTEM/USE
         ORG   EL2+4
         SPACE 3
SYSDSN   DC    CL8'SYSWYL'             QNAME FOR DATA SETS
WYLQNM   DC    CL8'WYLBUR'             CONSTANT FOR ENQ
DSRNM    DC    C'DISKSPACE'        RNAME FOR ACCOUNTING ENQ
         SPACE
DSORGPS  EQU   X'40'               DSORG=PS
DSORGPO  EQU   X'02'               DSORG=PO
UNDEFIND EQU   X'C0'               RECFM=U
FIXBLOCK EQU   X'90'               RECFM=FB
RECFMF   EQU   X'80'               RECFM=F
RECFMV   EQU   X'40'               RECFM=V
SPANNED  EQU   X'08'               RECFM=XS
         SPACE 3
         PRINT NOGEN
MODELDCB DCB   DSORG=PS,EODAD=EODAD,SYNAD=SYNAD,                       *
               MACRF=(RP,WP)
DCBSZ    EQU   *-MODELDCB
         PRINT GEN
         SPACE 3
         LTORG
         EJECT
* DOUCBSR ROUTINE LOOKS UP THE VOLUME IN THE TIOT, DOES THE
* SET UP OF THE WORK AREA FOR THE VOLUME BY DOING DEVTYPE.
*
* RETURN -- CC NON-ZERO MEANS UNKNOWN VOLUME OR DEVTYPE NOT
* ALLOWED BY WYLBUR -- R15 HAS ERROR CODE.
* R15 = 0 MEANS THE VOLUME WAS FOUND SUCCESFULLY.
         SPACE
DOUCBSR     XENTER 2,8,*
RESEARCH L     RR,CVTIOT           GET TIOT ADDR
         SR    1,1                     INIT REG
DOUCB1   DS    0H
         CLC   CVSTYPE,4(RR)       CHECK VALID DDNAME
         BE    DOUCB2              BR IF OK
         CLC   CVTTYPE,4(RR)       CHECK FOR TEMP TYPE
         BE    DOUCB2              BR IF OK
         CLC   CVUTYPE,4(RR)       OTHER POSSIBILITY
         BNE   DOUCB3              BR IF NOT VALID DDNAME
DOUCB2   L     15,16(,RR)          GET UCB ADDRESS
         CLC   DSVID,28(15)        IS THIS THE RIGHT ENTRY?
         BE    DOUCB4                  YES,GO PROCESS THIS ENTRY
DOUCB3   IC    1,0(RR)                 GET ENTRY LENGTH
         AR    RR,1                    MOVE TO NEXT ENTRY
         CLI   0(RR),0                 IS IT LAST
         BNE   DOUCB1              CHECK NEXT
         TM    JCBAFL,JCBTSO       RUNNING UNDER TSO?
         BZ    NOVOLUME
         NC    WAPSCB(4),WAPSCB   A PSCB MAYBE?
         BZ    NOVOLUME
         L     R15,CVDAIR          ADDRESS OF DAIR ROUTINE
         MVC   DA08SER(6),DSVID    GET VOLID
         MVC   DSNVOL(6),DSVID     GET VOLID
         XC    WADARECB(4),WADARECB
         MVC   DA08DDN(2),CVSTYPE
         MVC   DA08DDN+2(6),DSVID  GENERATE A DDNAME
         LA    R1,WAUPT            ADDR OF DAPL
         LA    R2,DA08CD
         ST    R2,WADAIR
         BALR  R14,R15             CALL DAIR
         CH    R15,=H'20'
         BH     NOVOLUME
         B     *+4(R15)            BRANCH ACCORDINGLY
         SPACE
         B     ADDADD              ADD A DD
         DC    2H'0'               BAD DAPL .. ANOTHER DUMP
         DC    2H'0'               ERROR IN CAT
         B     DAIRERR             ERROR
         B     TIOTFULL
         B     NOVOLUME
         SPACE 3
ADDADD   L     R5,CVDDNAMS
         L     R2,CVDDCNT          COUNT OF DD'S
         CH    R2,=H'&MAXDDS'
         BNL   RESEARCH            TABLE FULL
         LR    R3,R2
         LA    R2,1(,R2)
         ST    R2,CVDDCNT
         SLL   R3,3                MULT BY 8
         AR    R5,R3
         MVC   0(8,R5),DA08DDN     SAVE DDNAME
         B     RESEARCH            GO THRU LOOP AGAIN
         SPACE
* TIOT IS FULL SO WE MUST DEALLOCATE SOMETHING
TIOTFULL L     R5,CVDDNAMS
         L     R4,CVDDCNT          COUNT OF DD'S
         LTR   R4,R4
         BZ    NOVOLUME            CANT FREE ANYTHING
         BCTR  R4,R0               -1
         ST    R4,CVDDCNT
         SLL   R4,3                MULT BY 8
         AR    R5,R4               POINT TO LAST DD ALLOCATED
         MVC   DA18DDN(8),0(R5)
         L     R15,CVDAIR
         LA    R1,WAUPT            ADDR OF DAPL
         LA    R2,DA18CD
         ST    R2,WADAIR           SAVE PARM ADDR
         BALR  R14,R15
         LTR   R15,R15             OK?
         BZ    RESEARCH
DAIRERR  B     NOVOLUME
NOVOLUME LA    R15,RTNBDVOL        ILL VOLUME ERROR CODE
         LTR   R15,R15             SET CC FOR RETURN
         B     XXX
         SPACE
DOUCB4   MVC   DSDD(8),4(RR)       MOVE FULL DDNAME
         LA    15,0(15)                ZERO FIRST BYTE UCB ADDR
         ST    15,UCB                  SAVE FOR ANYONE WHO WANTS
         DEVTYPE DSDD,DVTAREA,DEVTAB
         MVC   DEVCODE(4),DVTDEVCD     SAVE DEVCODE
         MVC   DS4DEVSZ+2(2),DVTNUMT  SET IN CASE FMT4 NOT READ
         SR    R15,R15             SET R15 FOR OK
         CLI   DEVCODE+2,X'20'     IS IT DIRECT ACCESS?
         BE    XXX
         LA    R15,RTNBDVOL    RETURN CODE FOR ILL VOLUME
         LTR   R15,R15             SET CC FOR RETURN
XXX      LR    13,8
         LM    2,8,4(13)
         BR    SR                  RETURN TO CALLER
         SPACE 6
         EJECT
RENCTG   XENTER 2,8,*
         OI    CPLFLG3,CPFUNCLG  SET UNCAT
         TM    F1,X'02'          IS UNCAT SET
         BNO   REUN1             NO
REUN     XCALL DCATLG            UNCAT
         BZ    REUN1             NO ERROR
         OI    F1,X'01'         SET UNCAT ERROR
         SR    R15,R15              CLR
REUN1    MVC   DSNAME(44),SDSNQLB   MOVE IN DSN
         TM    SDSNQUB+16,X'02'     UNCAT,RECAT
         BNO   REUN2                NO
         XCALL DCATLG
         BZ    REUN2                NO ERROR
         OI    SDSNQUB+16,X'01'     UNCAT ERROR FLG
         SR    R15,R15             CLR
REUN2    TM    SDSNQUB+16,X'04'     CAT,RECAT
         BNO   REUN3                NO
         XI    CPLFLG3,X'60'        SET CAT
         XCALL DCATLG
         BZ    REUN3                NO ERROR
         OI    SDSNQUB+16,X'08'     SET CAT ERROR FLG
         SR    R15,R15             CLR
REUN3    XEXIT 2,8,*
         SPACE 3
PRENA    XENTER 2,8,*              PDS PROCESSING FOR RENAME
         USING WDIOWA,RWA
         L     RWA,CVIOWA
         MVC   VTOCEND+49(17),BLDL   CREATE SEC BLDL LIST
         MVI   VTOCEND+52,X'4C'      SET LENGTH TO MAX
         BLDL  DCB,VTOCEND+49
         ST    R15,ERROR             SAVE ERROR CODE
         CLI   ERROR+3,8             I/O ERROR?
         BE    BLDR                  YES
         CLI   ERROR+3,4           MEMBER FOUND AFTER BLDL
         L     R14,=A(ILLMEMB)     SET RETURN
         BE    BLDR             NO, ERROR
         TM    F3,X'02'            ADD
         BO    PREN1               YES
         MVC   VTOCEND+61(8),VTOCEND+4    MOVE IN NEW NAME
         STOW  DCB,VTOCEND+53,C      CHANGE NAME
         LTR   15,15                 ERROR
         BNZ   PREN2                 YES
EXIP     XEXIT 2,8                   RETURN
         SPACE 3
PREN1    MVC   VTOCEND+53(8),VTOCEND+4    MOVE IN ALIAS NAME
         MVC   VTOCEND+64(63),VTOCEND+66  REMOVE KZ FOR STOW ADD
         OI    VTOCEND+64,X'80'      SET ALIAS FLAG
         STOW  DCB,VTOCEND+53,A      ADD ALIAS
         LTR   15,15                 ERROR
         BZ    EXIP                  NO,CLOSE RTN
PREN2    ST    R15,ERROR             SAVE ERROR
         CLI   ERROR+3,4             ALREADY EXISTS
         L     R14,=A(EXISTS)        SET RET
         BE    BLDR               YES
         CLI   ERROR+3,X'0C'         NO ROOM
         L     R14,=A(NODIRSPC)      SET RET
         BE    BLDR               YES
         L     R14,=A(ABORTMS)       SET RET
BLDR     L     R15,=A(BLDLERR)     OUT
         LR    13,8
         LM    2,8,4(13)
         BR    R15                 RETURN TO ERROR ROUTINE
         TITLE 'ROUTINE TO CLEAR AND RESET THE JFCB'
CLRJFCB  DS    0H
         SENTER R7
         USING WDIOWA,RWA
         MVC   JFCBSAVE(JFCBLGTH),JFCB  COPY JFCB
         XC    JFCB(JFCBLGTH),JFCB  CLEAR THE WHOLE THING
         MVC   JFCBELNM,JFCBSAVE+JFCBELNM-JFCB
         MVC   JFCBLTYP,JFCBSAVE+JFCBLTYP-JFCB
         MVC   JFCBVLSQ,JFCBSAVE+JFCBVLSQ-JFCB
         MVC   JFCBIND2,JFCBSAVE+JFCBIND2-JFCB
         MVC   JFCBNVOL,JFCBSAVE+JFCBNVOL-JFCB
         MVC   JFCBVOLS,JFCBSAVE+JFCBVOLS-JFCB
         MVC   JFCBVLCT,JFCBSAVE+JFCBVLCT-JFCB
* JFCBDSNM IS FILLED IN ELSEWHERE
         SEXIT R7
         TITLE 'DISK READ (DREAD) ROUTINE'
* READ
         SPACE
DREAD    XENTER 2,8,*
         XTRACE DREAD
         L     RWA,CVIOWA          LOAD WORK AREA ADDR
         USING WDIOWA,RWA
         TM    JCBAFL,JCBAFDO          DISK OPEN?
         BNZ   NOTOPEN1                BR IF SO
         XCALL NOTOPEN
NOTOPEN1 SR    15,15
         ST    15,RETCOD      SAVE RETURN CODE
         IC    R15,DCB+DCBKEYLE-IHADCB GET KEY LENGTH
         L     R2,=A(DBUFSIZE)     GET SIZE OF BUFFER
         SR    R2,R15              SET BLKSIZE FOR READ
         READ  DECB,SF,,,(2),MF=E
         BAL   14,DWAIT
         CLC   CCREDT(8),=CL8' '
         BE    AD3
         STM   R0,R5,0(R13)
         LA    R3,DBUF
         LA    R4,4
         LA    R5,MXRECSZ(R3)
         SR    R5,R4
AD6      L     R1,CCREDT
         SR    R0,R0
         M     R0,=F'65533'
         ST    R1,CCREDT
         L     R1,CCREDT+4
         SR    R0,R0
         M     R0,=F'65547'
         LR    R0,R1
         X     R0,CCREDT
         ST    R0,CCREDT+4
         XC    0(4,R3),CCREDT+4
         ST    R1,CCREDT+4
         BXLE  R3,R4,AD6
         LM    R0,R5,0(R13)
AD3      EQU   *
         XEXIT 2,8,LTR
         TITLE 'DISK WRITE (DWRITE) ROUTINE'
* WRITE
         SPACE
DWRITE   XENTER 2,8,*
         XTRACE DWRITE
         L     RWA,CVIOWA          LOAD WORK AREA ADDR
         TM    JCBAFL,JCBAFDO          DISK OPEN?
         BNZ   NOTOPEN2                BR IF SO
         XCALL NOTOPEN
NOTOPEN2 LTR   SR,0
         BP    *+8
         L     SR,RECSIZE
         SR    15,15
         ST    15,RETCOD      SAVE RETURN CODE
         CLC   CCREDT(8),=CL8' '
         BE    AD2
         STM   R0,R5,0(R13)
         LA    R3,DBUF
         LA    R4,4
         LA    R5,MXRECSZ(R3)
         SR    R5,R4
AD4      L     R1,CCREDT
         SR    R0,R0
         M     R0,=F'65533'
         ST    R1,CCREDT
         L     R1,CCREDT+4
         SR    R0,R0
         M     R0,=F'65547'
         LR    R0,R1
         X     R0,CCREDT
         ST    R0,CCREDT+4
         XC    0(4,R3),CCREDT+4
         ST    R1,CCREDT+4
         BXLE  R3,R4,AD4
         LM    R0,R5,0(R13)
AD2      WRITE DECB,SF,,,(SR),MF=E
         BAL   R14,DWAIT
         XEXIT R2,R8,TEST
         EJECT
TAB      DC    256X'5F'
         ORG   TAB+C'0'
         DC    X'01030507090B0D0F1113'
         ORG   TAB+C'A'
         DC    X'1517191B1D1F212325'
         ORG   TAB+C'J'
         DC    X'27292B2D2F31333537'
         ORG   TAB+C'S'
         DC    X'393B3D3F41434547'
         ORG   TAB+C'$'
         DC    X'494B'
         ORG   TAB+C'¬'
         DC    X'4D4F51'
         ORG   TAB+C'#'
         DC    X'5355'
         ORG
TAB2     DC    256X'BF'
         ORG   TAB2+C'0'
         DC    X'61636567696B6D6F7173'
         ORG   TAB2+C'A'
         DC    X'7577797B7D7F818385'
         ORG   TAB2+C'J'
         DC    X'87898B8D8F91939597'
         ORG   TAB2+C'S'
         DC    X'999B9D9FA1A3A5A7'
         ORG   TAB2+C'$'
         DC    X'A9AB'
         ORG   TAB2+C'¬'
         DC    X'ADAFB1'
         ORG   TAB2+C'#'
         DC    X'B3B5'
         ORG
         TITLE 'DISK CLOSE (DCLOSE) ROUTINE'
* CLOSE
         SPACE
DCLOSE   XENTER 2,8,*
         XTRACE DCLOSE
         TM    JCBAFL,JCBAFDO          DISK OPEN?
         BNZ   NOTOPEN3                BR IF SO
         XCALL NOTOPEN
NOTOPEN3 L     RWA,CVIOWA           LOAD WDIOWA ADDR
         USING WDIOWA,RWA
         LA    R3,DCB
         USING IHADCB,R3
         MVC   DCBRECFM(1),RRECFM  RESET FOR CLOSE
         TM    F2,X'02'            RENAME
         BO    CLOSE               YES, SKIP STOW
         TM    F2,DSNFWRT+DSNFSCR+DSNFPDS    TEST FUNCTION
         BO    STOW                BR IF SCRATCH MEMBER
         SR    R15,R15             INIT RETURN CODE
         TM    DCBDSORG,DSORGPO    TEST FOR PDS
         BO    CLOSPDS             BR IF YES
         TM    DFL,DFUPTSPC        IS SEQ SPACE ACCTG NEEDED
         BZ    CLOSE               BR IF NOT
         NOTE  (R3)
         SR    R15,R15             INIT RETURN CODE
         SRL   R1,16               GET TT FROM TTRZ IN NOTE
         LTR   R1,R1               IS IT STILL ON FIRST TRACK
         BNZ   CLOSE               BRANCH NO -- NOT SMALL FILE
         L     R0,DEVBLOCK         GET BLKSIZE FOR DEVICE
         SRA   R0,1                HALVE IT
         CH    R0,DCBTRBAL         COMPARE TO BALANCE ON TRACK
         BH    CLOSE               NOT SMALL IF HIGH
         OI    CPLFLG2,CPFSMALL    SET SMALL DATA SET FLAG
         B     CLOSE
         SPACE
CLOSPDS  TM    F2,DSNFWRT          TEST OUTPUT
         BZ    CLOSE               BR IF NOT
* WE MIGHT GET TO THIS POINT WITH A SAVE OF A VOID RANGE
         TM    CPSTAD,CPFSOME      WAS IT A VOID RANGE
         BE    CLOSVOID            YES, DON'T UPDATE DIRECTORY
* SET UP FOR STOW OF NEW/REPL MEMBER
         XC    BLDLTTR(STOWSZ-L'MEMBER),BLDLTTR  CLEAR TRASH
         L     R1,DSAVSSI          GET SSI IF GIVEN
         TM    F3,DSNFSSI          WAS SSI GIVEN
         BO    CLOSPDS1            YES, GO USE IT
         TIME  ,                   GET DATE
         SRL   R1,4                GET RID OF SIGN
         N     R1,=X'0000FFFF'     SAVE DIGIT FOR YEAR AND DATE
CLOSPDS1 ST    R1,STOWLTTR         STOW IT IN DIRECTORY
         MVI   BLDLKZC,X'02'   INDICATE 2H USER DATA
         SPACE
* THE STOW ROUTINE CALLS EOV TO ALLOCATE A NEW EXTENT IF
* THE EOB WILL NOT FIT IN THE DATA SET.  WYLBUR DOES NOT
* ALLOW EXTRA EXTENTS TO BE ALLOCATED AND MANY TIMES WYLBUR
* WOULD ABEND X37 BECAUSE NO EXTENT WAS DEFINED OR NO EXTENT
* WOULD VE AVAILABLE.  THEREFORE, THE FOLLOWING CODE IS NEEDED
* TO DETERMINE IF THE EOB WILL FIT WITHOUT CALLING EOV.  IT IS
* A DUPLICATE OF THE TEST MADE BY R21 MVT STOW MODULE IGG0210A.
*
* THE CODE FIRST CHECKS IF THE EOB WILL FIT ON THE TRACK BEING
* USED.  IF IT WON'T THEN IT USES THE RESIDENT CONVERT ROUTINES
* TO DETERMINE IF THERE IS ANOTHER TRACK IN THE CURRENT EXTENT/
* THIS IS DONE BY CONVERTING THE CURRENT ABSOLUTE ADDRESS TO
* TTRN FORM, ADD 1 TRACK TO THE TT, AND CONVERT BACK TO
* ABSOLUTE FORM.  THE CONVERT BACK HAS A ZERO RETURN CODE IF
* THE TRACK IS WITHIN THE DATASET, OR A FOUR RETURN CODE IF NOT
*
* THE RESIDENT ROUTINES USE R1 AS THE DEB PTR, R2 AS THE
* ABSOLUTE ADDRESS AREA, R0 AS THE TTRN CONTENTS.  R1-R8 ARE
* NOT CHANGED BY THE ROUTINES.  R9-R13 ARE CHANGED.  R14 IS THE
* RETURN REGISTER, AND R15 IS THE ENTRY ADDRESS.
         SPACE
STOWCRAP L     R2,DCBDVTBL         GET DEVTABLE ADDRESS
         SR    R1,R1               PICK UP OVERHEAD VALUE
         IC    R1,7(,R2)           FOR KEYED LAST RECORD
         TM    9(R2),X'08'         IS OVERHEAD HALFWORD?
         BZ    *+8                 NO, VALUE IS OK
         LH    R1,6(,R2)           GET HALFWORD OVERHEAD
         SR    R0,R0               PICK UP OVERHEAD
         IC    R0,8(,R2)           FOR KEYED RECORDS
         SR    R1,R0               GET OVERHEAD FOR NO KEYS
         CH    R1,DCBTRBAL         WILL EOB FIT ON THIS TRACK?
         BL    STOWCR1             YES EVERYTHING IS OK
         SPACE
* WON'T FIT IN THIS TRACK, CALCULATE NEXT TRACK AND SEE IF
* STILL IN DATASET EXTENT.
         L     R1,DCBDEBAD         GET DEB ADDRESS
         LA    R2,CPDOUB           POINT TO 8-BYTE AREA
         MVC   CPDOUB(8),DCBFDAD   SET CURRENT ABS ADDR
         STM   R3,R13,0(R13)       SAVE REGISTERS
         LR    R3,R13              AND R13
         L     R4,CVTPTR           GET POINTER TO CVT
         USING CVT,R4
         L     R15,CVTPRLTV        CONVERT MBBCCHHR
         BALR  R14,R15              TO TTRN
         AL    R0,=XL4'10000'      POINT TO NEXT TRACK
         L     R15,CVTPCNVT        CONVERT TTRN
         BALR  R14,R15              TO MBBCCHHR
         DROP  R4
         LM    R3,R13,0(R3)        RESTORE REGISTERS
         LTR   R15,R15             IS NEXT TRACK OK?
         BNZ   CLOSVOID            NO, ABORT THE STOW
STOWCR1  LR    R1,R3               RESTORE STOW REGISTER
         LA    R0,MEMBER
         NI    CPLFLG2,255-CPFSCRTC  CLEAR IN CASE NOT REPL
         TM    DFL,DFREPL          WAS IT REPL?
         BZ    STOW
         OI    CPLFLG2,CPFSCRTC    RESET IT
         LCR   R1,R1               INDICATE REPL FUNCT
STOW     SVC   21                  STOW
         B     CLOSE
         SPACE 3
* AN ATTEMPT WAS MADE TO SAVE A MEMBER OF A PDS BUT THE RANGE
* WAS VOID.  RECOVER BY NOT UPDATING THE DIRECTORY OR DSCB
* ALSO USED TO BYPASS STOW IF EOB WON'T FIT
         SPACE
CLOSVOID NI    DCB+DCBOFLGS-IHADCB,X'7F' TURN OFF FOR DSCB
         LNR   R15,R6              SET NEGATIVE RETURN CODE
         SPACE
CLOSE    ST    R15,ERROR           SAVE RETURN CODE
         CLOSE (,REREAD),MF=(E,OPENLIST)  CLOSE DATA SET
         MODESET KEY=ZERO         KEY ZERO FOR ENQ              JJG
         DEQ   RET=HAVE,MF=(E,ENQDSN)
         SR    15,15
         STH   R15,DCBLRECL        RESET LRECL
         STH   R15,DCBBLKSI        RESET BLKSIZE
         MODESET KEY=NZERO        NOT ZERO                      JJG
         L     R15,ERROR           GET RETURN CODE
         LTR   R15,R15             WAS IT NORMAL?
         BZ    CHKCLCAT            BR IF YES
         BM    DCX         VOID OR STOW EOF RECORD PROB IF NEG
         MVI   ERROR+1,C'7'     EITHER I/O ERROR OR LOGIC PROB
         XCALL CATER
         L     R0,RECSIZE          RELOAD ERROR CODE
         B     DCX
         SPACE 3
* TEST IF CATLG/RECATLG/UNCATLG SPECIFIED
         SPACE
CHKCLCAT TM    CPLFLG3,CPFRECLG    WAS ANY CATLG STUFF SPEC?
         BZ    DCX                 BR IF NO
         TM    CPLFLG3,CPFDSCLG    WAS IT CATLG OR RECATLG?
         BZ    DOCLCAT             BR IF UNCAT
         TM    CPLFLG1,CPFUSCAT    WAS CATLG USED TO LOC VOL?
         BO    DCX        BR IF YES - SUPERFLUOUS TO REDO
DOCLCAT  XCALL DCATLG              GO DO WHATEVER IT IS
         B     DCX                 PASS ON RETURN CODE TO EXIT
         SPACE 3
* RELEASE
         SPACE
DCX      NI    JCBAFL,255-JCBAFDO      SET DS CLOSED
DCXX     XEXIT 2,8                     RETURN
         TITLE 'LITERAL POOL'
         LTORG
         TITLE 'MISCELLANEOUS STUFF'
*  PROCESS REQUEST ON UNOPENED FILE
         SPACE
NOTOPEN  DS    0H
         GENTER ,
         ABEND  69,DUMP,STEP
         TITLE 'DISK WAIT (DWAIT) ROUTINE'
* ROUTINE TO WAIT FOR DISK I/O
*
* UNDER NORMAL CIRCUMSTANCES, THIS ROUTINE GOES DIRECTLY TO THE
* WYLBUR DISPATCHER.  THUS, THE REGISTERS ARE SAVED IN THE CP.
* THE EXCEPTION TO THIS IS WHEN AN I/O OPERATION IS COMPLETED
* IMMEDIATELY BECAUSE THERE IS NO MORE ROOM IN A PDS.  INSTEAD
* OF LETTING THE CHECK MODULE CALL EOV AND ABEND, THE APPROPRIATE
* FLAGS ARE TURNED OFF TO PREVENT STOW AND DSCB UPDATING AND
* DCLOSE IS USED TO CLOSE THE DATA SET.  FOR THIS FUNCTION, IT
* IS NECESSARY TO SAVE THE REGISTERS IN THE STANDARD WAY SO THAT
* WHEN DCLOSE CALLS THE DISPATCHER THE REGISTERS IN THE CP ARE
* NOT OVERLAID CAUSING A LOOP.
         SPACE
DWAIT    STM   13,8,CPR13
         SENTER R14,R8,C44          IN CASE DCLOSE CALLED
         USING WDIOWA,RWA
         XTRACE DWAIT
         TM    DECB,X'40'              COMPLETE?
         BO    DW                      BR IF NOT
         WAIT  ECB=DECB
         SPACE
* IF OPERATION IS IMMEDIATELY COMPLETE CHECK FOR OPERATION
* NOT INITIATED.  IF NOT, CHECK OUT OF SPACE AND BYPASS
* FURTHER PROCESSING.
         SPACE
DW       TM    DECB+5,X'20'        WAS IT A WRITE?
         BZ    DWNB                BR IF NO
         TM    DCB+DCBCIND1-IHADCB,X'20'  WAS IT EOV?
         BZ    DWNB                BR IF NO
         SPACE
* OUT OF SPACE (IN PDS). TURN OFF WRITE FLAG TO PREVENT DSCB
* UPDATE DURING CLOSE.
         SPACE
         NI    DCB+DCBOFLGS-IHADCB,X'7F'
         L     R15,DCB+DCBIOBA-IHADCB  GET IOB ADDR
         NI    0(R15),X'BF'        INDICATE NO WRITE IN PROGRESS
         NI    F2,255-DSNFWRT  TELL CLOSE IT'S INPUT TO BYPASS STOW
         CVCALL DCLOSE
         LA    R15,RTNNOSPC        RETURN CODE FOR NO SPACE
         ST    R15,4(R8)           SAVE FOR SEXIT
         SEXIT R14,R8,FOOP         RELOAD AND EXIT
         SPACE 3
DWNB     CHECK DECB
DWCL     L     SR,DECB+16          POINT TO IOB
         SR    R0,R0               CLEAR FOR IC
         IC    R0,DCB+DCBKEYLE-IHADCB GET ANY KEY LENGTH
         AH    R0,DECB+6           ADD IN BLKSIZE TO GET ORIG LEN
         SH    0,14(,SR)           SUBTRACT RESID TO GET READ CNT
DWCL1    L     15,RETCOD      LOAD RETURN CODE
DWTXW    LM    2,8,CPR2       RETUTN
         LM    13,14,CPR13
         LTR   15,15
         BR    14
         SPACE
EODAD    LA    15,4
         B     DWTXW
         SPACE
SYNAD    L     SR,=F'-4'
         ST    SR,RETCOD      SAVE RETURN CODE
         BR    14
         TITLE 'CATALOG MANIPULATION (DCATLG) ROUTINE'
* ROUTINE TO DO CATLG/RECATLG/UNCATLG
         SPACE
DCATLG   DS    0H
         XENTER R2,R8,32
         SR    R15,R15
         TM    CPLFLG3,CPFRECLG    TEST ANY BITS ON
         BZ    DCATX               BR IF NO
         L     R15,CAMUNC          GET UNCATLG FUNCT
         TM    CPLFLG3,CPFUNCLG    UNCATLG OR RECATLG?
         BO    DCATLGO             BR IF YES
GETCATF  L     R15,CAMCAT          GET CATLG FUNCT
DCATLGO  ST    R15,CATLST          AND STORE IN CAMLIST
         MVI   SCRRET,0            CLEAR DATA SET SEQ NO FIELD
         CATALOG CATLST            DO FUNCTION
         CLC   CAMUNC,CATLST       WAS FUNCT UNCATLG?
         BNE   DCATXX              BR IF NOT
         TM    CPLFLG3,CPFDSCLG    ARE WE TO RECATLG?
         BZ    DCATX               BR IF NO
         SPACE
* REACTLG SPECIFIED - IF UNCAT UNSUCC CHANGE TO CATLG
         LTR   R15,R15
         BZ    GETCATF
         NI    CPLFLG3,255-CPFUNCLG
         B     GETCATF
         SPACE
DCATXX   CH    R15,=H'8'           RC=8 MEANS REAL CODE IN R1
         BNE   DCATX               BR IF NOT RETURN CODE 8
         SLL   R1,8                SHIFT CODE LEFT
         OR    R15,R1              PUT CODE INTO R15
DCATX    XEXIT R2,R8,LTR
         SPACE 3
         DS    0F
CAMUNC   CAMLST UCATDX,0
         ORG   CAMUNC+4
CAMCAT   CAMLST CATBX,0,,0
         ORG   CAMCAT+4
         TITLE 'SHOW DSNAMES/DIRECTORY/CATALOG (DVTOC) ROUTINE'
* SHOW DSNAMES
         SPACE
DVTOC    L     R14,0(R13)          GET FINAL EXIT RETURN
DVTOC2   DS    0H                  ENTRY FOR SPACE COMPUTATION
         XENTER R2,R8,32           AND RESAVE REGS
         XTRACE DVTOC
         L     RWA,CVIOWA           RESTORE WDIOWA REG
         TM    F2,DSNFSHOW         IS IT A SHOW COMMAND?
         BZ    SDSNSPAC            NO - COMPUTE DSCB SPACE
         ST    15,PAGEGET         SAVE SUBR ADDRESS
         CLI   F2,DSNFSHOW         IS IT SHOW DSNAMES?
         BE    NOTDRUM             SKIP CCW SETUP IF SO.
         MVC   CCWSW+1(3),VTOCCCW   SET SHOW DSNAMES TIC ADDR
         MVI   KEY,SCHKADEQ+MT     RESET CCW COMMAND CODE
         MVI   ENDCCW1,SCHKADEQ+MT
         LH    R0,DSNWANL          GET PATTERN LENGTH
         LTR   R0,R0               IS THERE ONE?
         BNZ   BLF                 BR IF NOT
         LA    R0,1                SET DUMMY ONE FOR CCW
         MVI   DSNAME,X'80'        SET LOW VALUE IN AREA
         MVI   KEY,SCHKADHI+MT     USE SEARCH HI VICE EQ
         MVI   ENDCCW1,SCHKADHI+MT
BLF      STH   R0,KEY+6            LENGTH OF PATTERN
         STH   R0,ENDCCW1+6
         CLI   DEVCODE+3,2         IS DEVICE 2301?
         BNE   NOTDRUM             BR IF NOT
         SPACE
* SCH KEY AND DATA COMMANDS NOT VALID ON 2301
         XI    KEY,SWKADKY         SWAP TO SCH KEY
         XI    ENDCCW1,SWKADKY     SAME
NOTDRUM  L     R15,PAGEGET
         BAL   R14,0(R15,R10)     GO TO PAGEGET SUBR
         BZ    VTOCNPG                 NO PAGES
         LA    0,1                INIT COUNT
         STH   0,0(9)
         MVI   2(9),0             INIT PAGE
         PMARK 9                   MARK THE PAGE AS CHANGED
         LA    SR,DCB
         TM    F2,DSNFPDS          IS IT SHOW DIRECTORY?
         BNZ   VTOCLP1             BR IF NOT
         MVC   DCB(DCBSZ),TEST
         USING IHADCB,SR
         LA    R1,EXLST            EOD ADDRESS
         IC    R0,DCBEXLST         PRESERVE RECFM BYTE
         ST    R1,DCBEXLST
         STC   R0,DCBEXLST         RESTORE IT
         B     VTOCLP
         SPACE 3
* OTHERWISE, IT'S SHOW DIRECTORY
         SPACE
VTOCLP1  MVC   SEEK(4),DS1EXT1+2   SET DIRECTORY SEEK ADDR
         MVI   SEEK+4,0              RO
         MVC   CCWSW+1(3),PDSCCW   SET SHOW DIR TIC ADDR
         LA    SR,FOURS
         SPACE
VTOCLP   LA    0,6                PUT OUT VOLID MSG
         LA    1,DSVID
         BAL   14,VTOCMSG
         TM    F2,DSNFCAT          IS IT SHOW CATALOG?
         BO    SHOWCAT             BR IF YES
         MVC   DCBDDNAM(8),DSDD   INITIALIZE IT
         TM    F2,DSNFPDS          IS IT SHOW DIRECTORY?
         BO    OPENEXCP            BR IF YES
         CLI   DSNAME,X'05'        IS IT SHO DSN
         BNE   READJFCB            YES. DONT DO OBTAIN
         OBTAIN VTOC
         LTR   15,15              WAS IT OK
         BZ    DVTOBTOK            BR IF OBTAIN OK
         CH    R15,=H'8'           WAS IT VALID ERROR?
         BE    DVTOBTOK            BR IF NO
         CH    R15,=H'4'           WAS IT VOL NOT MOUNTED
         BNE   VTOCERR             BR IF NO - I/O ERROR
         LA    R15,RTNBDVOL        INDICATE BAD VOLUME
         ST    R15,RETCOD
         B     VTOCRET1            GO EXIT
         SPACE 3
DVTOBTOK LH    1,DVTNUMT
         BCTR  1,0
         STH   1,NUMTRK
         MVC   ENDTEST(4),VTOCEND
         MVC   ENDTEST+4(1),DS4DEVDT  SET UP FOR TEST
         MVC   SEEK(4),VTOCBEG
         MVI   SEEK+4,0
         CLI   DSNAME,X'05'        IS IT SHOW SPACE?
         BE    SHOWSPAC            BR IF YES
READJFCB RDJFCB (DCB),MF=(E,OPENLIST)
         XCALL CLRJFCB             GO CLEAN UP THE JFCB
         MVC   JFCBDSNM(44),DSN
OPENEXCP DS    0H
         MVI   JFCBLTYP,JFCBLP         NO LAST ACCESS DATE UPD
         OI    JFCBTSDM,X'08'      INHIBIT JFCB REWRITE
         OPEN  ((SR),INPUT),TYPE=J,MF=(E,OPENLIST)
         TM    DCBOFLGS,X'10'     IS IT OPEN
         BZ    VTOCERR            NO,ERROR
         DROP  SR
         MVI   SBUF,X'40'          CLEAR SHOW DSNAMES BUFFER
         MVC   SBUF+1(SBSZ-1),SBUF
         TM    F2,DSNFPDS           IS IT SHOW DIRECTORY?
         BO    SRCHSTRT             YES. BRANCH.
         SPACE
         LA    R1,DECB1
         LA    R2,DECB2
         STM   R1,R2,DECBSTRT
         MVC   DECBCUR(4),DECBEND  INIT DECBCUR FOR NEW VTOC
         LA    R2,0
         STH   R2,DSCBCNT
         MVC   DSNLEN(2),DSNWANL
         MVC   DPLFLG3,CPLFLG3
         MVC   DDSNQLB(88),SDSNQLB
         MVI   ALLBYTE,X'00'
         CLC   DSNAME+4(2),FF1          GROUP=ALL?
         BNE   CL2
         OI    ALLBYTE,ALLGROUP
CL2      CLC   DSNAME+7(3),FF1
         BNE   CL3
         OI    ALLBYTE,ALLUSER
         SPACE
* START A READ FOR EACH BUFFER NOW
CL3      L     R3,DECBSTRT         GET STARTING ADDRESS OF DECB'S
         LA    R2,DCB              SET ADDRESS OF VTOC READ DCB
STRTLOOP LA    R4,BUFFADDR(,R3)     GET BUFFER ADDR
         XC    0(4,R3),0(R3)
         READ  (R3),SF,(R2),(R4),MF=E ISSUE READ
         LA    R3,DECBLEN(,R3)     STEP TO NEXT
         C     R3,DECBEND          AT END YET
         BL    STRTLOOP            NO, LOOP
OBTAIN   L     R2,DECBCUR          GET CURRENT DECB POINTER
         LA    R2,DECBLEN(,R2)     STEP TO NEXT DECB
         C     R2,DECBEND          AT END OF DECB'S
         BL    *+8                 NO, BRANCH
         L     R2,DECBSTRT         YES, RESTART AT BEGINNING
         ST    R2,DECBCUR          RESET CURRENT POINTER FOR NEXT
CHECKRD  CHECK (R2)                CHECK THE RESULT
         LH    R3,DSCBCNT
         LA    R3,1(,R3)
         STH   R3,DSCBCNT
         MVC   DS1DSNAM(140),BUFFADDR(R2)  MOVE DSCB TO WORK
         XC    0(4,R2),0(R2)
         READ  (R2),SF,MF=E        RESTART READ FOR THIS DECB
         CLI   DS1FMTID,C'1'      CHECK FOR FORMAT 1
         BNE   OBTAIN              RETURN TO CALLER
         SR    RR,RR
         MVC   SBDSN,DS1DSNAM      DSNAME
         LH    RR,DSNLEN           GET PATTERN LENGTH
         LTR   RR,RR
         BZ    ITSALL
         LA    R15,DS1DSNAM        GET OFFSET IN DSN
         TM    ALLBYTE,ALLUSER+ALLGROUP
         BZ    EXCOMP
         BO    ORFF1
         TM    ALLBYTE,ALLGROUP
         BZ    ORFF2
         EX    0,ORFF1
         B     EXCOMP
         SPACE
ORFF1    OC    4(2,R15),FF1
         SPACE
ORFF2    OC    7(3,R15),FF1
EXCOMP   BCTR  RR,0
         EX    RR,SDSCOMP
         BNE   OBTAIN
         LA    RR,1(RR)
ITSALL   LA    R15,DS1DSNAM(RR)    GET OFFSET IN DSN
         LA    SR,44               LENGTH OF DSN
         SR    SR,RR               LENGTH REMAINING FOR RANGE
         BCTR  SR,0
         EX    SR,DDSNCLC1         CHECK DSNAME IN BOUNDS
         BL    DUTOFRNG            BR IF LOWER THAN LOW BOUND
         EX    SR,DDSNCLC2         CHECK DSNAME IN BOUNDS
         BH    DUTOFRNG            BR IF HIGHER THAN UPPER BOUND
         TM    DPLFLG3,CPFEXCL     TEST FOR EXCLUDE RANGE
         BO    OBTAIN              BR IF YES
         B     SDSNWANT
DUTOFRNG TM    DPLFLG3,CPFEXCL     TEXT FOR EXCLUDE RANGE
         BZ    OBTAIN              BR IF NO
         B     SDSNWANT            WE WANT THIS ONE
         SPACE
SDSCOMP  CLC   0(0,R15),DSNAME
DDSNCLC1 CLC   0(0,R15),DDSNQLB
DDSNCLC2 CLC   0(0,R15),DDSNQUB
         SPACE
FF1      DC    XL3'FFFFFF'
         SPACE
SYNAD1   ABEND 999,DUMP
         EJECT
SRCHSTRT LA    1,SRCHCCW
         ST    1,IOBSTART
EXCP     TM    JCBAFL,JCBAFIA          IDLE ATTN TO ABORT COMMND
         BO    VTOCERR                 YES, ERROR EXIT
         MVI   DECB,X'00'              CLEAR ECB
         EXCP  IOB                     NO, START NEXT I/O
         WAIT  ECB=DECB                WAIT FOR READ TO COMPLETE
         TM    DECB,X'20'              OK COMPLETE
         BO    ENDCHK
         TM    IOBSNS+1,X'20'
         BO    NEWCYL
VTOCERR  LA    R15,RTNSHERR        SHOW ERROR RETURN CODE
         B     VTOCRET            EXIT
         SPACE
VTOCNPG  TSEG  'WYLBUR OUT OF PAGES',,W
         B     VTOCERR
         SPACE
NEWCYL   SR    1,1
         STC   1,SEEK+4
         IC    R1,SEEK+1
         LA    1,1(,1)
         STC   1,SEEK+1
         B     EXCP
         SPACE
ENDCHK   CLC   IOBCSW+1(3),LASTCCW
         BE    DONE
         TM    F2,DSNFPDS          IS IT SHOW DIRECTORY?
         BO    PDSRDOK             BR IF YES
         SPACE
* GET PERTINENT STUFF FROM FORMAT 1 DSCB
SDSNWANT MVC   SBCRDT,DS1CREDT     CREATION DATE
         AIF   ('&DCEC' NE '1').LBLX6                           JEP00X
         MVC   SBEXDT,DS1SYSCD+13      RES. FLD FOR LAST ACCESS JEP011
         AGO   .LBLX7                                           JEP00X
.LBLX6   DS    0H                                               JEP00X
         MVC   SBEXDT,DS1REFD      (SU60) LAST UPDATE
.LBLX7   DS    0H                                               JEP00X
         MVC   SBNOEX,DS1NOEPV     NUMBER OF EXTENTS
         MVC   SBDSORG,DS1DSORG    DSORG
         MVC   SBRECFM,DS1RECFM    RECFM
         MVC   SBLRECL,DS1LRECL    LRECL
         MVC   SBBLKSZ,DS1BLKL     BLKSIZE
         MVC   SBKEYL,DS1KEYL      KEY LENGTH
         MVC   SBLB,DS1LSTAR       LAST RECORD WRITTEN
         MVC   SBPROTF,DS1PROTF    PROTECTION BITS
         MVC   SBACCTG,DS1SPACE    MOVE ACCOUNTING FLAG
         NI    SBACCTG,SPACFLAG    GET RID OF OTHER CRAP
         SPACE
* THE FOLLOWING CODE IS ALSO USED AS A SUBROUTINE
* COMPUTE AMOUNT OF SPACE ALLOCATED FROM EXTENT INFORMATION
SDSNSPAC SR    SR,SR               TOTAL SPACE (IN TRKS)
         LA    R0,3                NUMBER OF EXTENTS IN FMT 1
         SR    RR,RR
         IC    RR,DS1NOEPV         TOTAL NUMBER OF EXTENTS
         LA    R15,DS1EXT1         ADDR OF FIRST EXTENT DESCRIP
NXTXSECT CR    RR,R0          TOTAL REMAINING VS MAX THIS SECT
         BH    MULTSECT            BR IF MORE SECTIONS FOLLOWING
         LTR   R0,RR               TOTAL IS REMAINING
         BZ    XTNTALL             UNLESS ZERO
MULTSECT SR    RR,R0               REMAINING AFTER THIS SECTION
XTNTLP   CLI   0(R15),0            IS THIS EXTENT ACTIVE?
         BE    XTNTDONE            BR IF NO
         MVC   CCREDT,2(R15)       MOVE LOWER/UPPER DESCRIP
         LH    R1,CCREDT+6         LAST TRACK
         LA    R1,1(R1)            +1 FOR SUBT
         SH    R1,CCREDT+2         LESS FIRST TRACK
         AR    SR,R1
         LH    R1,CCREDT+4         UPPER CYL
         SH    R1,CCREDT           LOWER CYL
         MH    R1,DS4DEVSZ+2       * # TRKS/CYL
         AR    SR,R1
XTNTDONE LA    R15,DS1EXT2-DS1EXT1(R15)  TO NEXT DESCRIP
         BCT   R0,XTNTLP           PROCESS NEXT ONE
         LTR   RR,RR               ARE THERE MORE?
         BZ    XTNTALL             BR IF NO
         CLI   DS3FMTID,C'3'       HAS FMT 3 BEEN READ?
         BE    FMT3SEC2            BR IF YES - SECTION 2
READFMT3 OBTAIN VTOC3
         LTR   R15,R15             TEST NORMAL
         BZ    XTNTFMT3            BR IF YES
FMT3ERR  LNR   SR,SR               FLAG TOTAL AS INCOMPLETE
         B     XTNTALL             SKIP IT
         SPACE
XTNTFMT3 CLI   DS3FMTID,C'2'       IS IT FORMAT 2?
         BE    READFMT3            BR IF YES - GO GET FMT 3
         CLI   DS3FMTID,C'5'       IS IT FORMAT 5?
         BE    FMT5PROC            BR IF YES
         CLI   DS3FMTID,C'3'       WAS DSCB FMT 3?
         BNE   FMT3ERR             BR IF NO - ERROR
         LA    R0,4                4 EXTENTS IN FIRST SECTION
         LA    R15,DS3EXTNT        ADDR OF FIRST SECTION
         B     NXTXSECT            GO PROCESS IT
         SPACE
FMT3SEC2 LA    R15,DS3ADEXT        ADDR OF SECTION 2 IN FMT 3
         LA    R0,9                9 EXTENTS IN SECT 2
         B     NXTXSECT
         SPACE 3
XTNTALL  STH   SR,SPTRK            SAVE TOTAL
         SR    R15,R15             RESET RETURN CODE
         TM    F2,DSNFSHOW         IS IT A SHOW COMMAND?
         BZ    VTRX                NO - SUBROUTINE EXIT
* END OF SUBROUTINE CODE
         SPACE
         LA    R1,SBUF             ADDR OF BUFFER
         LA    R0,SBSZ             LENGTH OF ENTRY
         CLI   DSNAME,X'05'        ARE WE IN SHOW SPACE?
         BE    FMT5DONE            YES - GO FINISH UP
         BAL   14,VTOCMSG         PUT IT OUT
DONTWANT CLI   F2,DSNFSHOW
         BE    OBTAIN
         CLC   IOBCSW+1(3),LASTCCW1    WAS THIS THE FUNNY CASE
         BNE   SRCHSTRT                NO CONTINUE SEARCH
         SPACE
DONE     SR    15,15              COMP CODE
         B     VTOCRET
         SPACE
DONEA    SR    15,15              COMP CODE
         B     VTOCRET
         SPACE 3
SDSNCLC1 CLC   0(0,R15),SDSNQLB
SDSNCLC2 CLC   0(0,R15),SDSNQUB
         EJECT
* ROUTINE TO PROCESS FORMAT 5 DSCBS FOR SHOW SPACE
         SPACE
SHOWSPAC XC    SBUF(SBSZ),SBUF     CLEAR BUFFER
         MVC   SBDSN,DSNAME        MOVE IN SPECIAL DSNAME
         SR    SR,SR               ZERO SPACE TOTAL
         SR    TR,TR               ZERO EXTENT TOTAL
         ST    SR,HOLDEXT          INIT. LARGEST EXT
         MVC   DS5PTRDS,VTOCBEG    MOVE FMT4 LOCATION (CCHH)
         MVI   DS5PTRDS+4,2        REC 2 ON THAT TRACK
         B     READFMT3            GO READ IT
         SPACE
FMT5PROC LA    R0,8                NUMBER OF FIELDS IN SECT 1
         LA    R15,DS5AVEXT        ADDR OF FIRST ONE
FMT5LOOP CLC   0(L'DS5AVEXT,R15),=D'0'  IS IT IN USE?
         BE    FMT5NOTH            BR IF NOT
         MVC   CCREDT,0(R15)       MOVE EXTENT INFO (+ GARBAGE)
         LH    R1,CCREDT+2         NO OF CYL IN EXTENT
         MH    R1,DS4DEVSZ+2       # NO TRKS/CYL
         AR    SR,R1               ADD TO TOTAL
         LR    R14,R1
         SR    R1,R1
         IC    R1,CCREDT+4         NO OF ODD TRACKS
         AR    SR,R1               TO TOTAL
         LA    TR,1(TR)            BUMP NO OF EXTENTS
         AR    R14,R1              GET CURRENT EXTENT SIZE
         C     R14,HOLDEXT         IS IT BIGGER?
         BNH   FMT5NOTH            NO. BRANCH
         ST    R14,HOLDEXT         STORE LARGEST EXTENT
FMT5NOTH LA    R15,L'DS5AVEXT(R15)  BUMP FIELD POINTER
         BCT   R0,FMT5LOOP
         CLI   0(R15),C'5'         ARE WE AT END OF DSCB?
         BNE   FMT5END             BR IF YES
         LA    R15,1(R15)          BUMP PAST DSCB ID
         LA    R0,18               NO OF FIELDS IN SECT 2
         B     FMT5LOOP            GO GET THE REST
         SPACE
FMT5END  CLC   DS5PTRDS,=D'0'      IS IT LAST ONE?
         BNE   READFMT3            BR IF NOT
         B     XTNTALL             OTHERWISE WE'RE DONE
         SPACE
FMT5DONE STH   TR,SBDSN+8          SAVE TOTAL PIECES
         MVC   SBDSN+4(4),HOLDEXT  MOVE LRGEST XTENT FOR
*                                  WRITE SPA ROUTINE
         BAL   R14,VTOCMSG         GO STORE IT
         B     DONE                AND EXIT
         EJECT
* ROUTINE TO PROCESS DIRECTORY BLOCK FOR SHOW DIRECTORY
         SPACE
PDSRDOK  LA    RR,DBUF+8           ADDR OF DIRECTORY BLOCK
PDSRDOK2 LH    R1,0(RR)            LENGTH OF DATA
         CH    R1,=Y(256)          IS LENGTH OK?
         BH    VTOCERR             BR IF TOO LONG - SOMETHING BA
         LA    R1,0(R1,RR)         ADDR OF END OF BLOCK
         BCTR  R1,0                ADDR OF LAST CHAR IN BLOCK
         LA    R0,2                LENGTH OF BLOCK COUNT FIELD
PDSUNBLK BXH   RR,R0,PDENDBLK      BR IF NO MORE ENTRIES IN BLK
         LA    R0,12               LENGTH OF STD STUFF
         IC    TR,11(RR)           GET "C"
         N     TR,=X'0000001F'     CLEAR ALL EXCEPT LENGTH
         SLL   TR,1                WHICH IS IN HALFWORDS
         AR    R0,TR               TOTAL ENTRY LENGTH
         TM    F2,DSNFCAT          IS IT SHOW CATLG?
         BOR   R14                 RETURN IF YES
         CLI   0(RR),X'FF'         IS IT LAST MEMBER
         BE    DONE                BR IF YES
         SPACE
SCATPRNM CLC   0(8,RR),CPDSNWA+DSSIZ   MEMBER IN LOWER BOUND?
         BL    PDSORNG             BR IF BELOW LOWER BOUND
         CLC   0(8,RR),CPDSNWA+DSSIZ+8   UPPER BOUND?
         BH    PDSORNG             BR IF ABOVE UPPER BOUND
         SPACE
* PDS MEMBER IN SPECIFIED RANGE
         TM    CPLFLG3,CPFEXCL     EXCLUDE RANGE?
         BO    PDSUNBLK            BR IF YES
         B     HAVEMBR             NO - PROCESS IT
         SPACE 3
* PDS MEMBER OUTSIDE SPECIFIED RANGE
         SPACE
PDSORNG  TM    CPLFLG3,CPFEXCL     EXCLUDE RANGE?
         BZ    PDSUNBLK            BR IF NOT
*                 OUTSIDE EXCLUDED RANGE IS INSIDE DESIRED RANGE
HAVEMBR  TM    F2,DSNFCAT          IS IT SHOW CATLG?
         BO    HAVECAT             BR IF YES
         LR    SR,R1               SAVE R1
         LR    R1,RR               ADDR OF ENTRY
         BAL   R14,VTOCMSG         GO ADD TO DISPLAY PAGE
         LR    R1,SR               RESTORE R1 FOR BXH
         B     PDSUNBLK
         SPACE 3
* END OF DIRECTORY BLOCK
         SPACE
PDENDBLK TM    F2,DSNFCAT          IS IT SHOW CATLG?
         BO    VTOCERR             ERR IF SO
         MVC   SEEK(5),SRCHC       ADDR OF LAST BLOCK READ
         CLI   DBUF,X'FF'          CHECK KEY FOR LAST BLOCK
         BE    DONE                BR IF SO
         B     SRCHSTRT            GO GET NEXT BLOCK
         EJECT
* ROUTINE TO PROCESS CATALOG BLOCKS
         SPACE
SHOWCAT  LH    R0,DSNWANL          PATTERN LENGTH
         LTR   R0,R0               IS PATTERN LENGTH ZERO?
         BZ    FSTCTBLK            GO READ HIGHEST LEVEL IF SO
         CLI   RETCOD+3,0          WAS DSN FOUND BY LOCATE?
         BE    SCATDSN             BR IF YES
         CLI   RETCOD+3,12         WAS INDEX LEVEL FOUND?
         BE    SCATGO              BR IF YES
         L     R0,RETCOD           SOMETHING WRONG
         B     VTOCERR             SCRAM
         SPACE 3
* GO DEBLOCK INDEX BLOCK
         SPACE
SCATGO   LA    RR,CATBLOCK         FOR SHOW DIR ROUTINE
         BAL   R14,PDSRDOK2        USE SHOW DIR RTN TO DEBLOCK
         B     SCATGO2
         SPACE
SCATNEXT BAL   R14,PDSUNBLK        GET NEXT ENTRY
SCATGO2  CLC   0(4,RR),=F'-1'      IS IT INDEX LINK ENTRY?
         BNE   SCATDATA            BR IF NOT
         SPACE
* ENTRY SHOULD BE INDEX LINK
         CLI   11(RR),0            VERIFY ENTRY TYPE
         BNE   VTOCERR             BR IF NOT
         CLC   8(3,RR),=XL3'0'     IS IT END OF LIST?
         BE    DONE                BR IF YES
         MVC   CATNTTR(3),8(RR)    NEXT TTR
         OI    USCATL2,X'80'
LOCATTR  LOCATE USCATL2       LOCATE NEXT BLOCK
         LTR   R0,R15              LOCATE OK?
         BNZ   VTOCERR             BR IF NOT
         B     SCATGO              NOW GO AHEAD
         SPACE 3
* NULL PATTERN - READ FIRST CATALOG BLOCK FROM SYSRES
         SPACE
FSTCTBLK NI    USCATL2,X'7F'
         MVC   CATNTTR(3),=AL3(1)  TTR=001
         B     LOCATTR             GO DO LOCATE
         SPACE 3
* PROCESS OTHER ENTRY TYPES
         SPACE
SCATDATA LA    R14,SCATGO2         LOAD IN CASE OUT OF LIMITS
         B     SCATPRNM            GO CHECK IN LIMITS SPECIFIED
         SPACE
HAVECAT  MVI   SCBUF,X'40'
         MVC   SCBUF+1(SCBSZ-1),SCBUF   CLEAR BUFFER
         MVC   SCBNM,0(RR)         MOVE INDEX NAME
         CLI   11(RR),5            CHECK FOR DSN POINTER ENTRY
         BH    SCATDSP             BR IF YES
         SR    TR,TR
         IC    TR,11(RR)           GET TYPE
         SLL   TR,2                *4
         B     *+4(TR)             BR TO PROPER ROUTINE
         SPACE
         B     SCATINDX            INDEX POINTER ENTRY
         B     SCATVCB             VOLUME CONTROL BLOCK ENTRY
         B     SCATGDG             GENERATION DATA GROUP ENTRY
         B     SCATNEXT            INDEX CONTROL ENTRY - IGNORED
         B     SCATALAS            ALIAS ENTRY
         B     SCATCVOL            CVOL ENTRY
         SPACE 3
* ENTRY HERE FOR DSNAME SPECIFIED TO ORIG LOCATE
         SPACE
SCATDSN  MVI   SCBNM,X'FF'         INDICATE NAME IN DSNWA
         MVI   SCBCODE,C'D'        ENTER DSNAME CODE
         MVC   SCBNVOLS,CATNOENT   GET NUMBER OF VOLUMES
         MVC   SCBVOL,CATVOL       GET VOLUME NAME
         LA    R1,SCBUF
         LA    R0,SCBSZ
         BAL   R14,VTOCMSG
         B     DONE                EXIT
         SPACE
* INDEX POINTER ENTRY
SCATINDX MVI   SCBCODE,C'I'        ENTER INDEX CODE
         B     SCATWRT             THAT'S ALL
         SPACE
* VOLUME CONTROL BLOCK ENTRY
SCATVCB  MVI   SCBCODE,C'D'        FLAG AS DSNAME
         MVI   SCBVOL,X'FF'        INDICATE VOL NAME NOT AVAIL
         B     SCATGDSN            GO CHECK FOR GDG NAME
         SPACE
* GENERATION DATA GROUP INDEX POINTER
SCATGDG  MVI   SCBCODE,C'G'        ENTER GDG CODE
         MVC   SCBMAX(L'SCBMAX+L'SCBNVOLS),13(RR)  TWO COUNTERS
         B     SCATWRT
         SPACE
* ALIAS ENTRY
SCATALAS MVI   SCBCODE,C'A'        ENTER ALIAS CODE
         MVC   SCBNM2,12(RR)       GET TRUE NAME
         B     SCATWRT
         SPACE
* CVOL ENTRY
SCATCVOL CLC   SCBNM,=FL8'1'       IS ENTRY CVOL OR VOL INDEX?
         BE    SCATNEXT            BR IF VOL INDEX ENTRY
         MVI   SCBCODE,C'C'        ENTER CVOL CODE
         MVC   SCBVOL,16(RR)       GET CVOL NAME
         B     SCATWRT
         SPACE
* DATA SET POINTER ENTRY
SCATDSP  MVI   SCBCODE,C'D'        ENTER DSNAME CODE
         MVC   SCBNVOLS,12(RR)     GET NUMBER OF VOLS
         MVC   SCBVOL,18(RR)       GET VOL NAME
         SPACE
* CHECK FOR COMPLEMENTED GDG LOWEST LEVEL NAME
SCATGDSN TM    SCBNM+1,X'F0'       TEST NO HI-ORDER BITS
         BNZ   SCATWRT             CAN'T BE GDG NAME
         CLI   SCBNM,C'G'          MAKE SURE GDG
         BNE   SCATWRT             BR IF NOT
         XC    SCBNM+1(4),=F'-1'   MAKE IT READABLE
         SPACE
SCATWRT  STM   R0,R1,CCREDT        SAVE REGS
         LA    R1,SCBUF
         LA    R0,SCBSZ
         BAL   R14,VTOCMSG
         LM    R0,R1,CCREDT        RESTORE REGS
         B     SCATNEXT            CONTINUE TO NEXT ENTRY
         EJECT
VTOCRET  ST    R15,RETCOD
         TM    F2,DSNFCAT          IS IT SHOW CATLG?
         BO    VTOCRET4            BR IF YES
         CLOSE (,REREAD),MF=(E,OPENLIST)
         TM    F2,DSNFPDS          IS IT SHOW DIRECTORY?
         BZ    VTOCRET1            BR IF NOT
         MODESET KEY=ZERO         KEY ZERO FOR ENQ              JJG
         DEQ   MF=(E,ENQDSN),RET=HAVE  DEQ ON PDS
         MODESET KEY=NZERO        NOT ZERO                      JJG
VTOCRET1 L     R15,RETCOD
VTOCRET4 NI    JCBAFL,255-JCBAFDO      SET DS CLOSED
VTRX     XEXIT R2,R8,LTR
         EJECT
VTOCMSG  STM   14,8,VTOCSV        SAVE REGS
         TM    CPLFLG3,CPFPUT
         BZ    DONTCONT
         L     SR,CPWK6           USED FOR DELTA CALCULATION
         LA    SR,1(SR)
         ST    SR,CPWK6
DONTCONT LH    SR,0(9)            GET COUNT
         LR    TR,0               NEW COUNT
         AR    SR,TR              NEW TOTAL
         C     SR,=A(CPSIZE-3)    THATS HOW MUCH THERE IS
         LH    SR,0(,9)           OLD COUNT
         BNH   VMSGOK             IT'LL FIT
         BCTR  SR,0               DECR. COUNT
         STH   SR,0(,9)           STORE IT BACK
         L     R14,CPMDLN         GET # OF PAGES
         CH    R14,=Y(10)         OVER MAX?
         BNL   OVERTEN            NO. BRANCH
         L     15,PAGEGET         GET ADDR OF SUBR
         BAL   R14,0(R15,R10)
         BZ    OVERTEN
         LA    SR,1               INIT NEW PAGE
VMSGOK   LA    TR,1(9,SR)         POINTER WHERE TO PUT IT
         AR    SR,0
         LA    SR,1(SR)           FORM NEW COUNT
         STH   SR,0(9)            STORE IT
         LR    SR,0               MSG COUNT
         BCTR  SR,0
         EX    SR,DVTMV           MOVE IN MSG
         LA    SR,1(SR)           COUNT OF MSG
         STC   SR,0(TR)           STORE IT
         LA    SR,1(SR,TR)        ONE PAST END OF MSG
         MVI   0(SR),0            END FLAG
         PMARK 9                   MARK THE PAGE AS CHANGED
         LM    14,8,VTOCSV
         BR    14
         SPACE 3
OVERTEN  LA    R15,RTNPAGES       SET CODE
         B     VTOCRET
         SPACE
DVTMV    MVC   1(0,TR),0(1)
         SPACE
         PRINT NOGEN
TEST     DCB   BLKSIZE=96,KEYLEN=44,RECFM=F,BUFNO=0,DSORG=PS,          *
               EODAD=DONEA,LRECL=96,DEVD=DA,MACRF=(R),SYNAD=SYNAD1,    *
               OPTCD=C,NCP=&NCP
         PRINT GEN
         TITLE 'CALCULATE RECORDS/TRACK ROUTINE'
* CALCTRK CALCULATES THE NUMBER OF RECORDS/TRACK FOR A GIVEN
*        BLKSIZE.
*  INPUT  R1 POINTS TO DVTAREA AND THE DEVTYPE HAS BEEN DONE
*         R0 HAS BLKSIZE
* OUTPUT  R1 HAS RECORD COUNT
         SPACE
CALCTRK  SENTER R2,R8
         LR    R6,R1               SET BASE
         USING DVTAREA,R6              FOR DEVTABLE
         LR    R2,R0               SET R2 TO BLKSIZE ALSO
         MH    R2,DVTTOL           MULT BY TOLERANCE
         SRA   R2,9                DIVIDE BY 512
         SR    R1,R1               SET FOR IC
         IC    R1,DVTKEYO          GET KEY OVERHEAD
         SR    R0,R1               ADJUST BLKSIZES SINCE NO KEYS
         SR    R2,R1
         TM    DVTFLAG,DVTFOHD     IS IT HALF WORD OVERHEAD
         BO    CALCTRK1            BR YES
         IC    R1,DVTBLKO          GET NORMAL BLOCK OVERHEAD
         AR    R2,R1               ADJUST NORMAL VALUE
         IC    R1,DVTLBLKO         GET LAST BLOCK OVERHEAD
         AR    R0,R1               ADJUST LAST BLOCK VALUE
         B     CALCTRK2            NOW GO ON
         SPACE
CALCTRK1 LH    R1,DVTBLKO          GET BLOCK OVERHEAD
         AR    R0,R1               ADJUST BOTH FOR
         AR    R2,R1                   BLOCK OVERHEAD
CALCTRK2 LH    R1,DVTTRKSZ         GET TRACK SIZE
         SR    R1,R0               ADJUST FOR LAST BLOCK
         AR    R1,R2               ADD TO INCR COUNT BY 1
         SR    R0,R0               SET FOR DIVIDE
         DR    R0,R2               CALCULATE VALUE IN R1
         SEXIT R2,R8               RETURN
         DROP  R6
         TITLE 'CATASTROPHIC ERROR (CATER) ROUTINE'
CATER    DS    0H
         XENTER 0,8,*
         USING WDIOWA,RWA
         TSEG  '*** WYLBUR *** DATA FILE ERROR NO. '
         L     R0,ERROR       ERROR CODE IN FORM XXFN00RR
         LA    R15,4               NUMBER OF SHIFT ITERATIONS
GAIN     SRDL  R0,4                PUT RETURN CODE INTO LO BITS
         SRL   R1,4
         BCT   R15,GAIN
         ST    R1,ERROR            SAVE RETURN CODE PART
         TR    ERROR(4),TRTB
         STC   R0,ERROR+1          PUT EBCDIC ID BACK IN
         MVC   RECSIZE,ERROR       SAVE IT FOR RETURN TO NTGDOPN
         TSEG  ERROR+1,3
         TSEG  '. VOLUME='
         TSEG  DSVID,6
         TSEG  '. DSNAME='
         LH    R0,DSNWANL          GET DSNAME LENGTH
         TSEG  DSNAME,(0)
         OPWRITE
         LA    R15,RTNCATER
         XEXIT 0,8
         SPACE
TRTB     DC    C'0123456789ABCDEF'
         DROP  RWA
         TITLE 'MISCELLANEOUS STUFF'
         COPY  WYLCONST
         EJECT
         COPY  RTNCODES
         EJECT
         LTORG
         TITLE 'WDIO WORK AREA'
WDIOWA   WDIOWA DSECT
WASASZ   EQU 72
         ORG WASA+WASASZ
HOLDEXT  DC    F'0'
ALLBYTE  DC    X'00'
ALLUSER  EQU   X'01'
ALLGROUP EQU   X'02'
DECBCUR  DC    A(DECB2)            CURRENT DECB POINTER
DECBSTRT DC    A(DECB1)            START OF DECB'S
DECBEND  DC    A(DECB2)            END OF DECB'S
DSCBCNT  DC    H'0'                TOTAL DSCB COUNT
DSNLEN   DC    H'0'
DPLFLG3  DC    F'0'                CP FLAG 3
DDSNQSZ  EQU   44
DDSNQLB  DS    CL(DDSNQSZ)
DDSNQUB  DS    CL(DDSNQSZ)
BUFFADDR EQU   20
PROTGRUP EQU   X'80'               ALLOW USE WITHIN GROUP
PROTUSER EQU   X'40'               RESTRICT ACCESS TO USER ONLY
         SPACE 3
         DECBS ,
         TITLE 'DSECTS'
         EJECT
         COMMON
         EJECT
         PRINT  NOGEN
         DCBD  DSORG=PS
         SPACE 3
         COPY  SVCS
UCM      DSECT
         IEECUCM
         SPACE
CVT      DSECT
         CVT     SYS=VMS
         CUCCCVT ,
         IKJTCB
         IEECHAIN
         IEZJSCB
         IHADSAB
         SPACE
         END
./ ADD NAME=PDOS,SSI=00000176
PDOS     TITLE 'DO TYPE ROUTINES FOR WYLTSO'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
         GBLC    &DCEC             SWITCH FOR DCEC MODS         JEP00X
&DCEC    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE DCEC MODJEP00X
         AIF   ('&DCEC' NE '1').LBL01                           JEP00X
*                                                               JEP003
*                                                               JEP003
* MOD  JEP003                                                   JEP003
*  FIX BUG IN ALTERS COMMAND.  DENOTED  JEP003 IN 66/71.        JEP003
*  MODULES AFFECTED: PDOS, PGOP                                 JEP003
*  JERRY PITTENGER DEF COMM ENG CTR                             JEP003
*                                                               JEP004
*                                                               JEP004
* MOD  JEP004                                                   JEP004
*  ENABLE 3277 RECOGNITION SO ALTERS & EDIT COMMANDS LINE UP    JEP004
*  DIRECTLY UNDER CHARACTER TO BE CHANGED ON NON-3277 TERMINALS.JEP004
*  MODULES AFFECTED: PDOS, INIT, WTR, PGOP, MACRO(CPTSO)        JEP004
*  DENOTED  JEP004 IN 66/71. JERRY PITTENGER DEF COMM ENG CTR.  JEP004
*                                                               JEP005
*                                                               JEP005
*                                                               JEP005
* MOD  JEP005                                                   JEP005
*  CHANGED AT DCEC TO ADD UPPER & LOWER OPERANDS TO CHANGE CMD. JEP005
*  FOR CHANGING CASE OF TEXT. DENOTED BY  JEP005 IN COL. 66/71. JEP005
*      MODULES AFFECTED ARE:                                    JEP005
*                           PDOS, PGOS, PUTB, AND MACRO CPTSO   JEP005
*                                                               JEP008
*                                                               JEP008
* MOD  JEP007                                                   JEP007
*  CHANGED AT DCEC TO ALLOW ATTENTION DURING THE CHANGE CMD.    JEP007
*  DENOTED JEP007 IN COL. 66/71.  JERRY PITTENGER DCEC 5/19/78  JEP007
*      MODULES AFFECTED ARE:                                    JEP007
*                           PDOS                                JEP007
*                                                               JEP008
*                                                               JEP008
* MOD JEP008                                                    JEP008
*  IMPLEMENT TAB SUPPORT FOR SECRETARIAL STAFF. DENOTED IN 66/71JEP008
*  MODULES AFFECTED: INIT, PDOS, MACRO(CVTSO)                   JEP008
*                                                               JEP008
*                                                               JEP008
.LBL01   DS    0H                                               JEP00X
PDOS     CSECT
         SPACE
         WIDENT 001
         SPACE
         XTRNS ,
         SPACE
         USING CPAREA,R12
         TITLE 'DOCHNG ROUTINE'
* DOCHNG EXECUTES ANY CHANGES ON A LINE.  DOCHNG IS CALLED BY DESPOT
*      WITH THE UNPRESSED LINE.  CELLS USED SHOWN IN CP.
         SPACE
DOCHNG   XENTER R2,R8,C32+SZR+C8        REGS & SPACE
         TM    CPLFLG3,CPFCHNM+CPFCHUS  CHANGE WITH NUMBERS
         BZ    *+8                 BRANCH NO
         OI    CPLFLG3,CPFCHNMI    SET TO INCREMENT
         LR    R2,R0                    SAVE TOTAL UNPRESSED COUNT
         LR    R14,R0                   COUNT OF UNPRESSED LINE
         TM    CPFILLFG,CPFILL
         BZ    FILLOWER
         STM   R0,R1,CPFLEN(R8)    R0 = LEN, R1 = LEN
         NI    CPFILLFG,255-CPDUN-CPFILLHI-CPLOST CLR FLAGS
         L     R3,CPFCOL           GET FILL COL
         LA    R3,0(R3)            CLEAR FLAG BYTE
         CR    R3,R0               IS FILL COL > ORIG SIZE
         BL    FILLOWER            NO. BRANCH
         OI    CPFILLFG,CPFILLHI   TURN ON FILL HI FLAG
FILLOWER LM    R3,R6,CPCHCST            PICK UP ASSOC CELLS
         AIF   ('&DCEC' NE '1').LBL02                           JEP00X
         TM    CPLFLG4,CPFCHUP          CHANGE TO UPPER?        JEP005
         BO    CHUP                     GO RAISE                JEP005
         TM    CPLFLG4,CPFCHLO          CHANGE TO LOWER?        JEP005
         BO    CHLO                     GO LOWER                JEP005
.LBL02   DS    0H                                               JEP00X
         TM    CPLFLG2,CPFCHPOS         POSITIONAL CHANGE ONLY?
         BNZ   POSCHANG                 YES
         MVC   0(1,R8),CPCHMOD          MOD TO WORK MOD
         STC   R5,CPSTCNT           SAVE LENGTH
         MVC   CPSTCNT+1(1),0(R6)   SAVE CHAR
         TM    CPLFLG2,CPFCHLIM         ASSOC IN ALL OR LIMITED CHARPOS
         BO    GOTLIM                   DEFINED
         CH    R14,=Y(MXPRTSZ)          133 CHARS?
         BNL   CHKIT                    YES
         LA    R14,1(R14)               END SCAN AT NO. CHARS PLUS ONE
CHKIT    LA    R15,0(R14,R5)            AST START +(LEN-1) LE MXPRTSZ
         CH    R15,=Y(MXPRTSZ)          COMPARE
         BNH   MCLIB                    OK
         LA    R14,MXPRTSZ              FIXUP
         SR    R14,R5                   NO. CHARS TO CHECK FOR START
MCLIB    LR    R0,R14                   NEED IT IN R0
         SR    R3,R3                    START OUT COUNTER
         LA    R4,C32+C8(R8)            START OUT POINTER
MCLIA    LR    R15,R1                   KEEP START POINTER
MCLI     CLC   0(1,R1),CPSTCNT+1         FIRST CHAR?
         BE    MCLC                     YES
MRCMP    LA    R1,1(R1)                 KICK
         BCT   R0,MCLI                  MORE?
         TM    CPLFLG2,CPFCHNGD         ANYTHING CHANGED?
         BZ    SCREXIT                  NO
         B     FINISUP                  MOVE THE REST
         SPACE
NOTNOW   STC   R14,0(R8)                RESET MOD
         B     MRCMP                    GO ON
         SPACE
MCLCINST CLC   0(0,R1),0(R6)
MCLC     ST    R14,0(,R13)         SAVE A REG
         IC    R14,CPSTCNT          GET LENGTH-1
         EX    R14,MCLCINST        EXECUTE INSTR
         L     R14,0(,R13)         RESTORE..LEAVE CC UNCHANGED
         BNE   MRCMP                    NOT THIS
         TM    0(R8),FALLBT             MOD?
         BZ    CHNGNOW                  NO, DO ALL OCCURANCES
         IC    R14,0(R8)                MOD COUNTER
         BCT   R14,NOTNOW               NOT THIS ONE
         MVI   0(R8),FALLBT             MAKE SURE NO MORE
CHNGNOW  OI    CPLFLG2,CPFCHNGD         SET CHANGES OCCURRED
         LR    R14,R1                   CURRENT POINTER
         SR    R14,R15                  COUNT BEFORE CHANGE
         BNP   NOLDMOVE                 NOTHING BEFORE
         AR    R3,R14                   INCREMENT OUT COUNTER
         CH    R3,=Y(MXPRTSZ+15)        TOO MUCH IN NEW LINE?
         BNH   OLDMOVE                  NO
         SR    R3,R14                   BACK TO OLD COUNT
         LA    R14,MXPRTSZ+15           MAX
         SR    R14,R3                   COUNT THAT CAN STILL BE MOVED
         BNP   NOMORMOV                 NIL
         LA    R3,MXPRTSZ+15            OUT COUNT
OLDMOVE  SR    R2,R14                   REDUCE COUNT TO MOVE YET
         BCTR  R14,0                    FOR EX
         EX    R14,MOVECHNG             MVC   0(0,R4),0(R15)
         LA    R4,1(R4,R14)             UPDATE OUT POINTER
NOLDMOVE LA    R1,1(R1,R5)              UPDATE IN POINTER
         SR    R2,R5                    REDUCE COUNT TO MOVE YET
         BCTR  R2,0                     ONE MORE
POSENTER TM    CPLFLG2,CPFCHDEL         STRING TO MOVE IN?
         BO    ONLIDEL                  NOTHING TO MOVE IN
         LM    R14,R15,CPCHLN2          REPLACING STRING
         TM    CPLFLG3,CPFCHUS     CHANGE USING?
         BO    CHUS                BR IF SO
         SPACE
* PROCESS CHANGE TO NUMBERS
         TM    CPLFLG3,CPFCHNM+CPFCHNMI  CHANGE TO NUMBERS?
         BZ    NCHN                BRANCH NO TO NORMAL CHANGE
         BM    NCHNX               BRANCH IF ALREADY INCREMENTED
         TM    CPLFLG3,CPFCHLN     "LINE" OPTION
         BZ    *+8                 BRANCH IF NOT
         NI    CPLFLG3,255-CPFCHNMI CLEAR INCREMENT FLAG
         STM   R0,R2,0(R13)        SAVE A FEW
         L     R0,0(,R15)          CURRENT NUMBER
         CVD   R0,CPDOUB           CONVERT TO PACKED
         A     R0,4(,R15)          ADD INCREMENT
         BO    CHNOFL              BR IF OVERFLOW
         C     R0,=F'999999999'    TOO HIGH?
         BH    CHNOFL              BR IF SO
         C     R0,=F'-999999999'   TOO LOW?
         BNL   *+6                 BRANCH NO
CHNOFL   SR    R0,R0               SET BACK TO ZERO
         ST    R0,0(,R15)          SAVE NEW VALUE
         LA    R2,10(,R14)         SET UP LENGTH
         EX    R2,CHNMVC           MOVE PATTERN
         L     R1,8(,R15)          SIGNAL START
         ALR   R1,R13
         EX    R2,CHNEDMK          EDIT
         BNM   CHNM                BR IF NOT NEGATIVE
         BCTR  R1,0
         MVI   0(R1),C'-'          SIGN
         CLI   8(R15),C'+'         PLUS SIGN?
         BE    CHNS                BR IF SO
CHNM     CLI   8(R15),0            SIGN?
         BE    CHNS                BR IF NOT
         BCTR  R1,0
         MVC   0(1,R1),8(R15)      PLANT SIGN
CHNS     LR    R15,R13             POINTER TO STRING
         LA    R1,12+10-1(,R15)    SET UP LOOP
         LA    R0,10
BLTEST   CLI   0(R1),C' '          NUMBER EXPANDED?
         BE    ISBL                BR IF NOT
         BCTR  R15,0
         BCTR  R1,0
         LA    R14,1(,R14)
         BCT   R0,BLTEST
ISBL     LM    R0,R2,0(R13)        RESTORE REGS
         STM   R14,R15,0(R13)      SAVE POINTERS TO STRING
         B     NCHN
         SPACE 3
* PROCESS CHANGE USING
         SPACE
CHUS     TM    CPLFLG3,CPFCHNMI    INCREMENT?
         BZ    NCHNX               BR IF NOT
         TM    CPLFLG3,CPFCHLN     "LINE" OPTION
         BZ    *+8                 BR IF NOT
         NI    CPLFLG3,255-CPFCHNMI CLEAR INCREMENT FLAG
         STM   R0,R3,0(R13)        SAVE A FEW
         PFLIP 9,11                SAVE CHANGED PAGE
         LR    R3,R13              WORK SPACE
         LA    R13,C28+SZR(,R13)
         MVC   C16(12,R3),CPDRPT   SAVE LOCATE VALUES
         LR    R2,R15              POINTER TO VALUES
         CLC   0(4,R2),4(R2)       ALREADY TOO HIGH?
         BH    CHUNM               BR IF SO
CHUSLC   LR    R1,R2               POINT AT LINE NO.
         CVCALL LOCATE              LOCATE LINE
         TM    CPDRPT,CPFNTYT+CPFHIGH NO MORE TEXT?
         BNZ   CHUNM               BR IF SO
         CLC   CPLCNO(4),C4(R2)    LINE TOO HIGH?
         BH    CHUNM               BR IF SO
         MVC   0(4,R2),CPLCNO      SAVE LOCATE LINE NO.
         TM    CPDRPT,CPFPGHI      HIGHER THAN ANY ON PAGE
         BO    CHUSLC              YES, GO LOCATE AGAIN
         L     R0,CPLCNO           COMPUTE NEXT LINE NO.
         LA    R1,1
         CVCALL ADDER              ADD INCREMENT
         ST    R0,0(,R2)           SAVE NEW LINE NO.
         LA    R1,C28(,R3)         POINT TO UNPRESS AREA
         CVCALL UNPRESS            UNPRESS THE LINE
         LM    R14,R15,C8(R2)      GET COLUMN POINTERS
         LTR   R14,R14             WHOLE LINE?
         BNZ   CHUNZL              BR IF NOT
         SR    R0,R15              COMPUTE REAL LENGTH
         LR    R14,R0              SET REAL LENGTH
CHUNZL   AR    R15,R1              POINT AT RIGHT COL.
         BCTR  R14,0               LENGTH - 1
         MVC   CPDRPT(12),C16(R3)  RESTORE LOCATE VALUES
         LR    R13,R3              RESTORE REG 13
         LM    R0,R3,0(R13)        RESTORE REGS.
         SH    R15,=Y(12+10)       ALLOW FOR HEADER
         STM   R14,R15,0(R13)      SAVE VALUES FOR LATER
         B     NCHNXX
         SPACE
CHUNM    CLC   0(4,R2),C16(R2)     IS LINE NUM SAME AS FRST NUM
         BE    CHUNMB              YES, REPORT USING ERROR
         MVC   0(8,R2),C16(R2)     RESET USING RANGE
         TM    CPLFLG3,CPFCHREP    REPEAT THE RANGE
         BO    CHUSLC              BRANCH YES
         TSEG  'NOT ENOUGH LINES FOR USING',,M
         SYSQS 1,0,'REPEAT'        ASK IF REPEAT IS OKAY
         CVCALL YESREQ                   FROM USER
         OI    CPLFLG3,CPFCHREP    OK, IF RETURN IS MADE
         B     CHUSLC              GO REPEAT RANGE
         SPACE
CHUNMB   TSEG  'NO LINES IN USING RANGE'
         B     CVQTYPE             GO ABORT COMMAND
         SPACE 3
* PLACE THE NEW STRING IN THE LINE
         SPACE
NCHNX    LM    R14,R15,0(R13)      PICK UP STRING POINTERS
NCHNXX   LTR   R14,R14             NULL STRING?
         BM    ONLIDEL             BR IF SO
NCHN     LA    R15,12+10(,R15)     ALLOW FOR HEADER
         LA    R3,1(R3,R14)             UPDATE OUT COUNT
         CH    R3,=Y(MXPRTSZ+15)        TOO MUCH IN NEW LINE?
         BNH   NEWMOVE                  NO
         SR    R3,R14                   BACK TO OLD COUNT (PLUS 1)
         LA    R14,MXPRTSZ+15           MAX (PLUS 1)
         SR    R14,R3                   COUNT THAT CAN STILL BE MOVED
         BM    NOMORMOV                 NIL
         LA    R3,MXPRTSZ+15            OUT COUNT
NEWMOVE  EX    R14,MOVECHNG             MVC   0(0,R4),0(R15)
         LA    R4,1(R4,R14)             UPDATE OUT POINTER
ONLIDEL  SR    R0,R5                    REDUCE FOR STRING ELIMINATED
         BNP   NOTCHECK                 ANOTHER STRING IMPOSSIBLE
         TM    0(R8),FALLBT             MODS DONE?
         BO    NOTCHECK                 YES, MOVE ANY MORE
         BCT   R0,MCLIA                 LAST ONE?
NOTCHECK LR    R15,R1                   CURRENT POINTER TO R15
FINISUP  LTR   R14,R2                   MORE OF OLD LINE TO MOVE?
         BNP   NOMORMOV                 NO
         TM    CPFILLFG,CPFILL           FILL SPECIFIED?
         BZ    LAS1
         L     R2,CPFLEN(R8)       ORIG SIZE - # LEFT =
         SR    R2,R14              NUMBER USED IN IN BUF
         CR    R3,R2                    R3 = # IN OUT
         BH    LAS2                     CHAR LOST. BR.
         BL    LESINOUT                 LESS IN OUT. BLANK
         OI    CPFILLFG,CPDUN
         B     LAS1
         SPACE 3
* COME HERE IF REPLACED LINE IS SMALLER THAN ORIGINAL
* IF FILL COL > THAN ORIG SIZE, SET DONE FLAG AND GO TO
* PROCESS NORMALLY. IF FILL COL < ORIG SIZE PAD WITH BLANKS
         SPACE
LESINOUT TM    CPFILLFG,CPFILLHI   FILL COL > ?
         BZ    FILLOW              NO. GO PAD
         OI    CPFILLFG,CPDUN      GO THE NORMAL WAY
         B     LAS1                NO NEED TO PAD
         SPACE
FILLOW   L     R14,CPFCOL          GET FILL COL
         LA    R14,0(R14)          CLEAR HI ORDER BYTE
         LR    R6,R14              SAVE IT
         SR    R14,R2              # CHAR FROM CURR TO FILL
*                                  SINCE # USED-FILL = # TO MOV
         BNP   MOVEBLKS            UP TO FILL NOW. BR.
         BCTR  R14,0               -1 FOR EXEC
         EX    R14,MOVECHNG        MVC 0(0,R4),0(15)
         LA    R3,1(R3,R14)
         LA    R4,1(R4,R14)
MOVEBLKS SR    R6,R3               R6 = # BLANKS
         LR    R14,R6
         MVI   0(R4),X'40'         MOVE BLANKS
         S     R14,=F'2'           -1 FOR EX, -1 FOR ONE ABOVE
         BM    NOMORMOV            NO MORE TO MOVE. BR.
         EX    R14,MVBLKS          MVC 1(0,4),0(4)
         B     NOMORMOV
         SPACE 3
*  IF OUT BIGGER THAN IN AND FILL SPECIFIED, ONLY MOVE UP
*  TO FILL COL. THIS SAVES EXTRA MOVES, AND ALLOWS YOU TO
*  CHECK ACCURATELY FOR LOST CHARACTERS.
         SPACE
LAS2     L     R14,CPFCOL
         LA    R14,0(R14)
         CR    R3,R14              OVER FILL ALREADY?
         BNH   NOTOVER             NO. BRANCH
         OI    CPFILLFG,CPLOST     SET LO T CHAR FLAG
         B     NOMORMOV            NO NEED TO MOVE MORE
         SPACE
NOTOVER  SR    R14,R2              # LEFT FROM CUR/FIL
         BNP   NOMORMOV
LAS1     AR    R3,R14                   INCREMENT OUT COUNTER
         CH    R3,=Y(MXPRTSZ+15)        TOO MUCH IN NEW LINE?
         BNH   LASMOVE                  NO
         SR    R3,R14                   BACK TO OLD COUNT
         LA    R14,MXPRTSZ+15           MAX
         SR    R14,R3                   COUNT THAT CAN STILL BE MOVED
         BNP   NOMORMOV                 NIL
         LA    R3,MXPRTSZ+15            OUT COUNT
LASMOVE  BCTR  R14,0                    FOR EX
         EX    R14,MOVECHNG             MVC   0(0,R4),0(R15)
         B     NOMORMOV
         SPACE
MVBLKS   MVC   1(0,R4),0(R4)
COMPBLK  CLC  0(0,R4),1(R4)
MOVESTR1 MVC   C32+C8(0,R8),0(R1)
         EJECT
* CPDUN WILL BE ON IF FILL COL > ORIG LEN AND REPLACED LINE
* WAS SHORTER THAN ORIGINAL (NO SPILL), OR IF REPLACED LINE
* WAS EQUAL IN SIZE TO ORIGINAL
         SPACE
NOMORMOV LR    R6,R3               SAVE LEN IN R6
         TM    CPFILLFG,CPFILL+CPDUN
         BNM   NOMORV2     IF NO FILL OR FILL DONE. BR.
         L     R2,CPFCOL
         LA    R2,0(R2)            CLEAR FLAG BYTE
         LA    R4,C32+C8(R8)       ADDR OF OUT BUF
         AR    R4,R2               FILL POS IN OUT FOR SEARCH
         TM    CPFILLFG,CPLOST     KNOW THAT CHAR LOST?
         BO    LOSTTHEM            YES. DONT BOTHER TO CHK
         SR    R6,R2               LOST CHAR FOR FILL?
         BNP   NOLOSS              NO. BR.
         CLI   0(R4),X'40'         SEARCH FOR BLANKS IN FILL+
         BNE   LOSTTHEM            NON-BLANK. LOST CHAR
         S     R6,=F'2'            -1 FOR EX, -1 FOR ONE ABOVE
         BM    NOLOSS              ONLY 1 TO LOOK AT. BR
         EX    R6,COMPBLK          CLC 0(0,R4),1(R4)
         BE    NOLOSS
LOSTTHEM TSEG  'LINE NO.',,B
         L     R0,CPLCNO           GET CURRENT LINE #
         CVCALL CVEXNO             CONVERT IT
         TSEG  (R1),(R0),B         PUT IT IN BUFFER
         TSEG  'LOST CHARACTERS',,W
         SPACE
* IF FILL COL < THAN ORIGINAL SIZE, COPY CHARACTERS FROM
* FILL TO END INTO OUT BUFFER.  IF FILL > THAN ORIG SIZE,
* BRANCH OUT AND SET LENGTH TO LARGER OF 2 VALUES: FILL COL
* OR SIZE IN OUT.
         SPACE
NOLOSS   TM    CPFILLFG,CPFILLHI   FILL COL > ORIG LEN?
         BZ    HI2                 NO. BRANCH
         CR    R3,R2               SIZE IN OUT < FILL?
         BL    NOMORV2             YES. SET SIZE TO OUT SIZE
         LR    R0,R2               SET LEN = FILL
         B     NOMORE
         SPACE
HI2      LM    R14,R15,CPFLEN(R8)  14 = LEN, 15 = IN ADDR
         SR    R14,R2              # CHAR FROM FILL TO END
         AR    R15,R2              FILL POS IN IN
         BCTR  R14,0               -1 FOR EX
         EX    R14,MOVECHNG
         L     R0,CPFLEN(R8)       LEN IN OUT = ORIG
         B     NOMORE
         SPACE
NOMORV2  LR    R0,R3                    ADDR REASSEMBLED LINE
NOMORE   LA    R1,C32+C8(R8)            TOTAL COUNT
         L     R15,CPLCNO               LINE NO. TO R15
         CVCALL LENCHK               CHECK LENGTH (AND UPDATE COUNT)
         LR    R3,R0                    SAVE COUNT
         TM    CPLFLG5,CPFNLST          LIST CHANGED LINE?
         BNZ   DONLIST                 NO
         CVCALL LISTLINE                 MAKE DESIRED LISTING
         BNP   DONLIST                  CONTINUE (NO ATTN)
         OI    CPLFLG2,CPFCHND          SET TO TERMINATE CHANGE
DONLIST  L     R15,CPLCNO               LINE NO. TO R15
         ST    R15,CPCURRL         SAVE CURRENT LINE POINTER
         LA    R1,C32+C8(R8)            ADDR REASSEMBLED LINE
         LR    R0,R3                    UNPRESSED COUNT TO R0
         AIF   ('&DCEC' NE '1').LBL06                           JEP00X
DONLIST1 CVCALL PRESS                   PRESS THE NEW LINE      JEP005
         AGO   .LBL07                                           JEP00X
.LBL06   DS    0H                                               JEP00X
         CVCALL PRESS                    PRESS THE NEW LINE
.LBL07   DS    0H                                               JEP00X
         BAL   R14,STOWIT               REPLACE THE OLD WITH THE NEW
         OI    CPLFLG2,CPFLNCHN        SET LINE CHANGED
SCRAM    TM    CPLFLG2,CPFCHND          SEE IF TERMINATE SET
         BNZ   CVQTYPE                  YES
         NI    CPLFLG2,255-CPFCHNGD     TURN OFF LINE CHANGED BIT
SCREXIT  XEXIT R2,R8                    RETURN
         EJECT
         AIF   ('&DCEC' NE '1').LBL03                           JEP00X
CHUP     EQU   *                                                JEP005
         TM    CPLFLG3,CPFCHALL         CHANGE WHOLE LINE???    JEP005
         BNZ   CHALL                    YES                     JEP005
* THIS SECTION IS FOR CHANGING EITHER SINGLE CHARS. OR          JEP005
* STRINGS OF CHARS. TO UPPER CASE.                              JEP005
* REGISTERS AT ENTRY ARE AS FOLLOWS                             JEP005
*    R0 = UNPRESSED LENGTH                                      JEP005
*    R1 = TEXT ADDRESS                                          JEP005
*    R5 = LENGTH OF MATCH STRING - 1                            JEP005
*    R6 = ADDRESS OF MATCHING STRING                            JEP005
*                                                               JEP005
UPSTART  EQU   *                                                JEP005
         STM   R0,R1,CVSPARES      SAVE FOR LATER               JEP005
         TM    CPLFLG2,CPFCHLIM    POSITIONALLY DEFINED?        JEP005
         BNO   UPSTARTA            NOPE                         JEP005
         AR    R1,R3               BUMP TO MATCH LOCATION       JEP005
UPSTARTA LTR   R5,R5               IF EQ 0 -- ONLY 1 CHAR       JEP005
         BNZ   UPPARTB             GO TO PART B                 JEP005
UPPARTA  EQU   *                   SINGLE CHAR TO CHANGE SECT   JEP005
         CLC   0(1,R1),0(R6)       IS THIS THE ONE??            JEP005
         BNE   LOOPCTL             NO - LOOK FURTHER            JEP005
         OC    0(1,R1),BLANKS      THIS WAS IT                  JEP005
         OI    CVSPARES+11,X'01'   TELL EM WE MADE IT           JEP005
LOOPCTL  EQU   *                                                JEP005
         TM    CPLFLG2,CPFCHLIM    POSITIONALLY DEFINED?        JEP005
         BO    CHGO1               ALLOW ONLY 1 SHOT IF SO      JEP005
         LA    R1,1(R1)            UP THE TEXT PTR              JEP005
         BCT   R0,UPPARTA          REDO UNTIL LINE DONE         JEP005
         B     CHGO1               FINISHED                     JEP005
UPPARTB  EQU   *                   STRING CHG SECT              JEP005
         CLC   0(1,R1),0(R6)       BEGINNING CHAR??             JEP005
         BNE   LOOPCTRL            NOT YET                      JEP005
         EX    R5,COMP             FIRST  YES, REST = YES??     JEP005
         BNE   LOOPCTRL            NOT YET                      JEP005
         OI    CVSPARES+11,X'01'   TELL EM WE MADE IT           JEP005
         EX    R5,ORCHAR           CHANGE IT TO UPPER           JEP005
* WE DON'T NEED TO SET R5 TO REAL LENGTH                        JEP005
* BECAUSE OF LA AT LOOPCTRL                                     JEP005
         AR    R1,R5               BUMP PAST MATCH              JEP005
* NOW WE NEED REAL LENGTH                                       JEP005
         LA    R5,1(R5)            UP TO REAL LENGTH            JEP005
         SR    R0,R5               DOWN BY LEN OF STRING        JEP005
         BCTR  R5,0                BACK DOWN FOR LATER          JEP005
         LTR   R0,R0               ANY LEFT TO CHECK??          JEP005
         BC    2,LOOPCTRL          YES - GO GET EM              JEP005
         B     CHGO1               FINISHED                     JEP005
LOOPCTRL EQU   *                                                JEP005
         TM    CPLFLG2,CPFCHLIM    POSITIONALLY DEFINED?        JEP005
         BO    CHGO1               ALLOW ONLY 1 SHOT IF SO      JEP005
         LA    R1,1(R1)            BUMP THE TEXT PTR            JEP005
         BCT   R0,UPPARTB          GO DO UNTIL DONE             JEP005
         B     CHGO1               ALL DONE                     JEP005
CHALL    OC    0(EXCHUP,R1),BLANKS      CHANGE LINE TO UPPER CASJEP005
         OI    CVSPARES+11,X'01'        TURN ON OUR CHG FLAG    JEP005
         B     CHGO                                             JEP005
CHGO1    LM    R0,R1,CVSPARES      RELOAD REGS                  JEP005
CHGO     L     R15,CPLCNO               PICK UP LINE NUMBER     JEP005
         ST    R15,CPCURRL              CURRENT LINE POINTER    JEP005
         TM    CVSPARES+11,X'01'        DID WE REALLY CHG SOME??JEP005
         BO    SETCHG                   YEP...LIST IT & GO      JEP005
         B     DONLIST1                 NO....DON'T LIST        JEP005
SETCHG   OI    CPLFLG2,CPFCHNGD         SET CHANGED SOMETHING   JEP005
         NI    CVSPARES+11,X'FE'        RESET FOR NEXT LINE     JEP005
        CVCALL LENCHK           INSURE CORRECT LEN & TABS DONE  JEP005
         TM    CPLFLG5,CPFNLST          DO HE WANT LISTED????   JEP005
         BO    DONLIST1                 NO...THATS ALL          JEP005
        CVCALL LISTLINE                 MAKE THE LISTING        JEP005
         L     R15,CPLCNO               RELOAD R15              JEP005
         BNP   DONLIST1                 CONTINUE (NO ATTN)      JEP005
         OI    CPLFLG2,CPFCHND          TURN ON TERMINATE FLAG  JEP005
         B     DONLIST1                 GO BACK                 JEP005
EXCHUP   EQU   133                      LENGTH OF LINE          JEP005
BLANKS   DC    168C' '                                          JEP005
ORCHAR   OC    0(0,R1),BLANKS           RAISE TO UPPER CASE     JEP005
COMP     CLC   0(0,R1),0(R6)            ARE WE MATCHED YET????  JEP005
COMP1    CLC   0(0,R6),0(R4)                                    JEP005
MOVEIT   MVC   0(0,R1),0(R4)                                    JEP005
         EJECT                                                  JEP005
CHLO     EQU   *                                                JEP005
         LTR   R0,R0                         CHECK FOR BLANK LN JEP005
         BZ    CHGO                          IF YES...GET OUT   JEP005
         STM   R0,R1,CVSPARES           SAVE FOR LATER          JEP005
         LR    R4,R1                    POINT R4 TO DATA        JEP005
         TM    CPLFLG3,CPFCHALL         CHANGE WHOLE LINE???    JEP005
         BO    CHLOALL                  YES                     JEP005
EXCOMP1  EX    R5,COMP1                 IS THIS IT???           JEP005
         BNE   REGCOMP                  NOPE, NOT YET           JEP005
         CLI   0(R4),X'4B'              IT THIS A PERIOD???     JEP005
         BE    PERIOD                   YES                     JEP005
         CLI   0(R4),X'5A'              IT THIS A EXCLAMATION?? JEP005
         BE    PERIOD                   YES                     JEP005
         CLI   0(R4),X'6F'              IT THIS A QUESTION???   JEP005
         BE    PERIOD                   YES                     JEP005
SPACECHK CLI   0(R4),X'40'              IS THIS A BLANK????     JEP005
         BE    PERCHK                   YES, SEE IF AFTER PERIODJEP005
SPCCHK1  CLI   0(R4),X'D0'              IS CHAR A BRACE???      JEP005
         BE    REGCOMP                  YES, DON'T CHG IT       JEP005
         CLI   0(R4),X'C1'              MUST BE AT LEAST AN 'A' JEP005
         BL    REGCOMP                  GO SEE IF DONE          JEP005
         CLI   0(R4),X'E9'              CAN'T BE > Z (NUMERIC)  JEP005
         BH    REGCOMP                  GO SEE IF DONE          JEP005
         OI    CVSPARES+11,X'01'        TURN ON OUR CHG FLAG    JEP005
        NI    0(R4),X'BF'              CHANGE CHAR TO LOWER CASEJEP005
         NI    CVSPARES+12,X'FE'        TURN OFF PERIOD FLAG    JEP005
REGCOMP  LA    R4,1(R4)                 BUMP TO NEXT CHAR       JEP005
         BCT   R0,EXCOMP1               DOWN 1 AND GO IF > 0    JEP005
BACK     EQU   *                                                JEP005
         B     CHGO1                    GO RELOAD R0, LIST & GO JEP005
PERIOD   TM    CPLFLG3,CPFCHALL         IS THIS CHG ALL???      JEP005
         BO    ALLPERCK                 YES                     JEP005
         CLI   1(R4),X'40'              IS NEXT CHAR A BLANK??? JEP005
         BNE   SPCCHK1                  NOT END OF SENTENCE     JEP005
PER1     LA    R4,2(R4)                 YES...ASSUME SPACE      JEP005
         SH    R0,=H'2'                 SUBTRACT 2              JEP005
         LTR   R0,R0                    FIND OUT IF END YET     JEP005
         BNP   BACK                     END....GET OUT          JEP005
         OI    CVSPARES+12,X'01'        TURN ON PERIOD FLAG     JEP005
MORESPCS CLI   0(R4),X'40'        IS NEXT ONE BLANK ALSO?       JEP005
         BNE   PER2               FINISHED                      JEP005
         LA    R4,1(R4)           BUMP POINTER                  JEP005
         BCTR  R0,0               DOWN 1 ON REMAINING           JEP005
         LTR   R0,R0              DID WE GO NEGATIVE?           JEP005
         BNP   BACK               YES...GET OUT                 JEP005
         B     MORESPCS           GO CHECK FURTHER              JEP005
PER2     LA    R4,1(R4)           BUMP POINTER PAST FIRST       JEP005
         BCTR  R0,0               DOWN ONE ON REMAINING         JEP005
         LTR   R0,R0              DID WE GO NEGATIVE            JEP005
         BNP   BACK               YES...GET OUT                 JEP005
         TM    CPLFLG3,CPFCHALL         IF CHG ALL GO THERE     JEP005
         BO    SPCCHK3                                          JEP005
         B     SPCCHK1                  CONTINUE                JEP005
ALLPERCK EQU   *                                                JEP005
         CLI   1(R4),X'40'              NEXT CHAR A BLANK???    JEP005
         BNE   SPCCHK3                  NO, LEAVE               JEP005
         B     PER1                     YES, GO SKIP OVER       JEP005
PERCHK   TM    CPLFLG3,CPFCHALL         ARE WE CHANGING ALL???  JEP005
         BO    ALLCHK                   YES                     JEP005
         TM    CVSPARES+12,X'01'        PERIOD FLAG ON????      JEP005
        BNO   REGCOMP                  NO...GO BUMP REGS & CONT.JEP005
UPRTBPTR LA    R4,2(R4)                 YES, MUST BE MULT SPACESJEP005
         SH    R0,=H'2'                 ASSUME BLANK & CAP      JEP005
         LTR   R0,R0                    FIND OUT IF END YET     JEP005
         BNP   BACK                     END....GET OUT          JEP005
         TM    CPLFLG3,CPFCHALL         IF CHG ALL GO THERE     JEP005
         BO    SPACECH2                                         JEP005
         B     SPACECHK                 NOT DONE....CONTINUE    JEP005
ALLCHK   EQU   *                                                JEP005
         TM    CVSPARES+12,X'01'        PERIOD FLAG ON???       JEP005
         BNO   SPCCHK3                  NOT US...CONTINUE       JEP005
         B     UPRTBPTR                 CONTINUE WITH THE CHECK JEP005
CHLOALL  EQU   *                        HERE FOR CHG WHOLE LINE JEP005
CHLOALL1 CLI   0(R4),X'4B'              IT THIS A PERIOD???     JEP005
         BE    PERIOD                   YES                     JEP005
         CLI   0(R4),X'5A'              IT THIS AN EXCLAMATION? JEP005
         BE    PERIOD                   YES                     JEP005
         CLI   0(R4),X'6F'              IT THIS A QUESTION???   JEP005
         BE    PERIOD                   YES                     JEP005
SPACECH2 CLI   0(R4),X'40'              IS THIS A BLANK????     JEP005
         BE    PERCHK                   YES, SEE IF AFTER PERIODJEP005
SPCCHK3  EQU   *                                                JEP005
         CLI   0(R4),X'D0'              IS CHAR A BRACE???      JEP005
         BE    BUMP4                    YES, DON'T CHG IT       JEP005
         CLI   0(R4),X'C1'              MUST BE AT LEAST AN 'A' JEP005
         BL    BUMP4                    GO SEE IF DONE          JEP005
         CLI   0(R4),X'E9'              CAN'T BE > Z (NUMERIC)  JEP005
         BH    BUMP4                    GO SEE IF DONE          JEP005
         OI    CVSPARES+11,X'01'        TURN ON OUR CHG FLAG    JEP005
        NI    0(R4),X'BF'              CHANGE CHAR TO LOWER CASEJEP005
         NI    CVSPARES+12,X'FE'        TURN OFF PERIOD FLAG    JEP005
BUMP4    LA    R4,1(R4)                 BUMP TO NEXT CHAR       JEP005
         BCT   R0,CHLOALL1              DOWN 1 AND DO IT AGAIN  JEP005
CHLODONE EQU   *                                                JEP005
         B     BACK                     GO RELOAD R0, LIST & GO JEP005
.LBL03   DS    0H                                               JEP00X
GOTLIM   EX    R3,MOVESTR1              MVC C32+C8(0,8),0(R1)
         LA    R1,0(R1,R3)              SET LIMITED SCAN POINTER
         SR    R2,R3                    LESS NO CHARS ALREADY MOVED
         LTR   R0,R4                    NO. POSSIBLE START POINTS
         BNZ   SKIP1                    OK
         LA    R0,1                     1 START POINT
SKIP1    LA    R4,C32+C8(R8,R3)         SET OUT POINTER
         B     MCLIA                    GO LOOK
         SPACE
POSCHANG EX    R3,MOVESTR1              MVC C32+C8(0,8),0(R1)
         AR    R4,R3                    DISP TO NEXT SOURCE MOVE
         SR    R2,R4                    NO CHARS LEFT TO MOVE
         AR    R1,R4                    PTR TO CHARS LEFT TO MOVE
         LA    R4,C32+C8(R8,R3)         SET OUT POINTER
         SR    R0,R0                    SCAN COUNT ZERO
         B     POSENTER                 TO COMMON CODE
         TITLE 'DODELE ROUTINE'
* DODELE CHARRIES OUT A LINE DELETE
* DODELEL IS ENTRY FOR DELETE COMMAND -- DODELE IS ENTRY FOR OTHERS
*
* EXPECTS R15 TO BE POINTED AT THE R9 START OF THE PRESSED LINE
* TO BE DELETED.
         SPACE
DODELEL  XENTER 0,8,C32+SZR+8      SET UP LIST WORK AREA
         PFLIP 11,9                PUT PAGE IN R9
         MVI   0(R8),X'80'         FLAG AS DELETE COMMAND
         TM    CPLFLG5,CPFNLST     ANY LIST TO DO
         BO    DODELE1             NO, GO DO DELETE
         LR    R2,R15              SAVE POINTER TO LINE
         LA    R1,C32+8(R8)        POINT TO UNPRESS AREA
         CVCALL UNPRESS            GO UNPRESS LINE
         CVCALL LISTLINE            FORMAT LINE FOR LIST
         BP    CVQTYPE             ABORT IF HIT ATTN.
         LR    R15,R2              RESTORE POINTER TO LINE
         B     DODELE1             GO DELETE LINE
         SPACE
DODELE   XENTER 0,8,*                   SAVE REGS
         MVI   0(R8),0             FLAG NOT DELETE AND NO LIST
DODELE1  EQU   *
         GENTER ,                  ESTABLISH COMMON BASE
DELRTN   MVC    CPWORK1(4),CPLCNO
         SR    R3,R3                    ZERO FOR IC INST
         IC    R3,4(,R15)               PRESSED COUNT DELETE LINE
         LA    R3,5(,R3)                DELETE COUNT
         LH    R5,0(,R9)               TOTAL COUNT FOR PAGE
         LA    R6,0(R9,R5)          POINTER TO AFTER LAST BYTE ON PAGE
         LA    R2,0(R15,R3)             SOURCE FOR MVC (TARGET IN R15)
         TM    CPDRPT,CPFPGLW           DELETE FIRST LINE ON PAGE?
         BO    CHKPGDL                  YES
FIXCNT   SR    R5,R3                    NEW PAGE COUNT
         STH   R5,0(,R9)               RESET COUNT
         PMARK R9                       MARK PAGE
         TM    CPDRPT,CPFPGND+CPFNDDS   DELETE LAST LINE ON PAGE?
         BO    FIXHIPS                  LAST LINE OF DATA SET
         BM    FIXLCNT                  LAST LINE OF PAGE
         SR    R6,R2                    NO. CHARS TO MOVE
         BNP   FIXLCNT                     NO MOVE
         BAL   R14,DELMVC               GO MOVE UP LINES
FIXLCNT  SLR   R1,R1
         ICM   R1,3,CPLNCT                LINE COUNT
         BCTR  R1,0                     REDUCE BY ONE
         STH   R1,CPLNCT                RESET
DONET    XEXIT R0,R8                    SCRAM
         EJECT
CHKPGDL  OI    CPGFLG,CPFDIRCH         NO, SET DIR CHANGED
         L     R4,CPDRPT               POINT TO DIR ENTRY
         TM    CPDRPT,CPFPGND           ALSO LAST LINE ON PAGE?
         BO    DELPAG                   YES, DELETE PAGE
         MVC   0(4,R4),0(R2)            RESET 1ST LINE NO. ON PAGE
         TM    0(R8),X'80'         IS IT DELETE COMMAND
         BE    FIXCNT              BRANCH NO
         MVC   CPNWLN,0(R2)        YES, SET CPNWLN FOR NEXT LOCAT
         OI    CPLFLG4,CPFDESET    TELL DESPOT THAT CPNWLN SET
         B     FIXCNT                   FINISH
         SPACE
DELPAG   OI    CPGFLG,CPFDIRCH     SET DIR CHANGED FOR PAGE DEL
         LH    R1,CPAGCT                PAGE COUNT
         BCT   R1,NTONLIPG              REDUCE (& SEE IF ONLY PAGE)
         MVC   CPHIPS(8),=D'0'          ZERO HI-PS,LNCT,PGCT
         MVC   CPDREC(4),=D'0'          ZERO IST LINE NO.
         MVI   CPLSTCOL,FNEGBT          SET AS FIRST COLLECT
         PFREE R9,EMPTY                 FREE ONLY PAGE
         B     DONET                    SCRAM
         SPACE
NTONLIPG STH   R1,CPAGCT                RESET PAGE COUNT
         TM    CPDRPT,CPFNDDS           LAST LINE?
         BO    NOWFREE                  YES
         MH    R1,=Y(6)                 NO. BYTES IN NEW DIREC
         LA    R6,CPDREC(R1)            POINT PAST END NEW DIREC
         LA    R15,0(R4)                SET TARGET ADDR & ZERO 1ST BYTE
         SR    R6,R15                   COUNT TO MOVE
         LA    R2,6(R15)                SOURCE FOR MOVE
         BAL   R14,DELMVC               GO MOVE UP DIRECTORY
NOWFREE  PFREE R9,EMPTY                 FREE EMPTY PAGE
CHKHIPS  TM    CPDRPT,CPFNDDS           LAST LINE?
         BZ    FIXLCNT                  NO
         PFLIP R9,R11                   SAVE ANY PAGE IN R11
         LA    R1,CPLCNO                NEED NEW HI-POS
         CVCALL LOCATE                   LOCATE IT
         PFLIP R11,R9                   RESTORE REGS
FIXHIPS  MVC   CPHIPS(4),CPREVLN        SET NEW HIGH POSITION
         B     FIXLCNT                  FINISH
         EJECT
DELMVC   LA    R5,256                   SET COMPARAND-INCREMENT
CHKMVC   CR    R6,R5                    A 256 BYTE MVC?
         BNH   FNNMVC                   NO
         MVC   0(256,R15),0(R2)         MOVE 256 BYTES
         AR    R2,R5                    NEW SOURCE ADDR
         AR    R15,R5                   NEW TARGET ADDR
         SR    R6,R5                    LEFT-OVER COUNT
         B     CHKMVC                   ANOTHER FULL MVC?
         SPACE
FNNMVC   BCTR  R6,0                     REDUCE FOR EX OF MVC
         EX    R6,LSSMVC                MVC   0(0,R15),0(R2)
         BR    R14                      RETURN TO CALLER
         TITLE 'REMOTE INSTRUCTIONS'
* FOR CHANGE COMMAND
         SPACE
MOVECHNG MVC   0(0,R4),0(R15)
CHNMVC   MVC   12(0,R13),12(R15)
CHNEDMK  EDMK  12(0,R13),CPDOUB+3
         SPACE 3
* FOR DELETE
         SPACE
LSSMVC   MVC   0(0,R15),0(R2)
         TITLE 'LITERALS'
         LTORG
         TITLE 'STOWIT ROUTINE'
         SPACE
* STOWIT REPLACES OR INSERTS A LINE INTO A WYLBUR DATA SET.  CALL WITH
*        REG 0 - PRESSED COUNT OF LINE.
*            1 - PTR TO PRESSED LINE (B/4 LINE NO)
*
* CPLFLG4 HAS SOME FLAG BIT DEFINITIONS THAT AFFECT THE OPERATION
* OF STOWIT:
*        CPFSTSPL - IF THE INSERT-ONLY FLAG IS ALSO ON, THIS
*              FLAG SIGNALS THAT A PAGE SPLIT, IF NECESSARY,
*              SHOULD BE DONE AT THE LINE NUMBER TO INSERT
*              RATHER THAN SIMPLY DIVIDING THE PAGE IN HALF.
*              COPY, MOVE, AND COLLECT USE THIS TO REDUCE THE
*              WORK NEEDED TO DO LARGE NUMBERS OF LINES.
*        CPFSTINS - THIS FLAG SIGNALS THAT ONLY INSERTS OF LINES
*              SHOULD BE DONE BY STOWIT.  IF A REPLACE IS
*              ATTEMPTED, IT IS NOT DONE AND AN ERROR RETURN
*              CODE IS GIVEN INSTEAD.
*
* R15 RETURN CODES -- LTR IS DONE TO ALSO SET CC
*        -4    REPLACE OF A LINE ATTEMPTED IN INSERT ONLY MODE
*        0     STOWIT COMPLETED OKAY
         SPACE
STOWIT   XENTER R2,R8,C32+8+4+8
         MVC   C32+8(4,R8),CPHIPS       SET HI POS
         LR    R2,R0                    SAVE PTRS
         LR    R3,R1
         SLR   R6,R6
         ICM   R6,3,CPLNCT               LINE COUNT
         C     R6,=X'0000FFFF'         TOO BIG?
         BE    TOOPGS                  TOO BAD...
         LH    R6,CPAGCT                PAGE COUNT
         CLC   0(4,R3),CPHIPS           HIGHEST LINE NO YET?
         BL    NTHI                     NO
         BE    CKZR                     IF ZERO, YES
         MVC   CPHIPS(4),0(R3)          RESET HI POSITION
         LTR   R5,R6                    FIRST LINE OF ALL?
         BZ    FSTPAG                   YES
         MH    R5,=Y(6)
         LA    R5,CPDREC-6(R5)          LAST ENTRY IN DIRECTORY
         BAL   R4,STWPGET               GET LAST PAGE
         LH    R4,0(R11)                COUNT ON PAGE
         CH    R4,=Y(9*CPSIZE/10)       ROOM?
         BH    NEWPAG                   NO
         SPACE
* PUT LINE INTO END OF PAGE
ALLSET   LA    R15,0(R4,R11)            NEXT AVAILABLE SPOT ON PAGE
         LA    R4,5(R4,R2)              NEW COUNT
         STH   R4,0(R11)
         LA    R6,4(R2)                 FOR REMOTE MVC
         EX    R6,MOVIT1
CNTXIT   SLR   R6,R6
         ICM   R6,3,CPLNCT                KICK LINE COUNT
         LA    R6,1(R6)
         STH   R6,CPLNCT
MEXIT    PMARK R11
         SR    R15,R15                  SET NO ERROR
         MVC   CPWORK1(4),0(R3)
FIXOT    XEXIT R2,R8,LTR                SCRAM
         SPACE
CKZR     LTR   R6,R6                    ANYTHING YET
         BNZ   NTHI                     YES
FSTPAG   LA    R5,CPDREC-6              SET BEFORE NEXT DIRECTORY ENTRY
NEWPAG   BAL   R6,PGETT                 GET TXPG & PGCT TO R6
JUMPIN   LA    R6,1(R6)                 BUMP PAGE COUNT
         STH   R6,CPAGCT
         STH   R0,10(R5)                PAGE NO &
         MVC   6(4,R5),0(R3)            1ST LINE NO TO DIREC.
         LA    R4,2
         B     ALLSET
         EJECT
* NOT HIGHEST LINE NO. OF ALL
         SPACE
NTHI     LA    R5,CPDREC                1ST DIREC ENTRY
         CH    R6,=Y(8)                IS PAGE COUNT > 8
         BNH   LOOPSKIP                NO SKIP BINARY SEARCH
         LA    R0,64                   SET PAGE COUNT STEP
         LA    R1,384                  SET BYTE COUNT STEP
         LA    R4,3                    SET LOOP COUNT
LOOP1    SR    R6,R0                   SET NEW PAGE COUNT
         BNH   LOOPEND1                BRANCH PAST END
         AR    R5,R1                   POINT TO DIR VALUE
         CLC   0(4,R3),0(R5)           COMPARE LINE NUMBERS
         BH    LOOP1                   HIGH, CONTINUE SEARCH
         SR    R5,R1                   RESET DIR POINTER
LOOPEND1 AR    R6,R0                   RESET PAGE COUNT
         SRDL  R0,2                    QUARTER STEPS FOR NEXT LP
         BCT   R4,LOOP1                LOOP WITH NEW STEPS
LOOPSKIP BCT   R6,NXCMPA                MORE THAN 1 PAGE EXISTS
         B     HAVPAG                   ONLY 1, THAT'S IT
         SPACE
NXCMPA   CLC   6(4,R5),0(R3)            CHECK NEXT
         BH    HAVPAG                   HAVE IT NOW
         LA    R5,6(R5)                 TRY NEXT,
         BCT   R6,NXCMPA                IF MORE
HAVPAG   STM   R5,R6,C32+12(R8)         SAVE PTRS
         BAL   R4,STWPGET               GET PAGE
         SPACE
* LOCATE THE LINE NO.(OR NEXT HIGHEST) ON PAGE
         LH    R14,0(R11)               TOTAL COUNT
         SR    R5,R5                    FOR IC
         LA    R4,2                     START COUNT
         LA    R15,2(R11)               PT TO 1ST LINE ON PAGE
NXCMPB   IC    R5,4(R15)                LINE COUNT
         CLC   0(4,R15),0(R3)           WANTED LINE
         BNL   REPORIN                  YES
         LA    R4,5(R4,R5)              KICK COUNT
         LA    R15,5(R15,R5)            & PTR
         CR    R4,R14                   MORE?
         BL    NXCMPB                   YES
         SPACE
* INSERT AT END OF PAGE (NOT LAST)
         CH    R4,=Y(9*CPSIZE/10)       ROOM?
         BNH   ALLSET                   YES
         SPACE
* ONTO NEW PAGE
         BAL   R6,PGETT                 GET A PAGE
         LM    R5,R6,C32+12(R8)
         MH    R6,=Y(6)                 MOVE-UP DIRECTORY BYTE COUNT
         BAL   R4,MVDRCTRY              MOVE UP DIREC ENTRIES
         LH    R6,CPAGCT                PAGE COUNT
         B     JUMPIN                   FINISH
         EJECT
* INSERT BEFORE SOMETHING OR REPLACE
         SPACE
REPORIN  LR    R6,R2                    NEW LINE PRESSED COUNT
         BH    INSERT                   GO TO INSERT
         TM    CPLFLG4,CPFSTINS    INSERT ONLY MODE???
         BO    STREPERR            YES, REPLACE IS AN ERROR
         SR    R6,R5                    LINE LENGTH DIFFERENCE
         BP    MOREREP                  NEW LONGER
         EX    R2,MOVIT2                MOVE NEW LINE (WITHOUT NO)
         BZ    MEXIT                    DONE IF SAME LEN
         AR    R6,R14                   NEW PAGE COUNT
         STH   R6,0(R11)
         LA    R4,5(R4,R5)              COUNT TILL MOVE START
         SR    R14,R4                   COUNT TO MOVE UP
         BNP   MEXIT                    NONE TO MOVE
         LA    R1,5(R15,R2)             TARGET
         LA    R15,5(R15,R5)            SOURCE
         LA    R4,MEXIT                 RETURN
         B     MOVBLCK                  MOVE
         SPACE
* ERROR -- TRYING TO REPLACE WHEN ONLY INSERTS ARE ALLOWED
STREPERR LH    R15,=H'-4'          SET RETURN CODE
         B     FIXOT               GO EXIT
         EJECT
* REPLACE WITH INCREASING PAGE SIZE
         SPACE
MOREREP  AR    R6,R14                   NEW TOTAL COUNT
         CH    R6,=Y(CPSIZE)            WILL IT FIT
         BH    SPLIT                    NO
         LA    R4,5(R4,R5)              COUNT TO AFTER REPLACE LINE
         SR    R14,R4                   MOVE-OUT COUNT
         BZ    SNEEKY                   END-OF-PAGE REPLACE
         SR    R15,R11                  RELATIVE DISPL
         STM   R14,R15,C32(R8)          SAVE MOVE CT & PTR
         STH   R6,0(R11)                NEW PAGE COUNT
         LM    R14,R15,C32(R8)          RELOAD
         AR    R15,R11                  ACTUAL DISPL
         LA    R15,5(R15,R5)            SOURCE
         L     R1,JCBWAPTR             AS TEMPORARY TARGET
         BAL   R4,MOVBLCK               MOVE OUT
         LM    R14,R15,C32(R8)          RELOAD
         AR    R15,R11                  ACTUAL DISPL
         EX    R2,MOVIT2                MOVE IN NEW LINE
         LA    R1,5(R15,R2)             TARGET
         L     R15,JCBWAPTR              BUFFER ADDRESS
         BAL   R4,MOVBLCK               MOVE BACK
         B     MEXIT                    BYE
         SPACE
SNEEKY   EX    R2,MOVIT2                MOVE (LAST LINE ON PAGE)
         STH   R6,0(R11)                NEW PAGE COUNT
         B     MEXIT
         EJECT
* INSERT A LINE
         SPACE
INSERT   LA    R6,5(R6,R14)             NEW PAGE COUNT
         ST    R4,C32(,R8)         SAVE LINE POSITION FOR SPLIT
         CH    R6,=Y(CPSIZE)            WILL IT FIT?
         BH    SPLIT                    NO
         SR    R14,R4                   MOVE-OUT COUNT
         SR    R15,R11                  RELATIVE DISPL
         STM   R14,R15,C32(R8)          SAVE
         STH   R6,0(R11)                NEW PAGE COUNT
         LM    R14,R15,C32(R8)          RELOAD
         AR    R15,R11                  ACTUAL DISPL
         L     R1,JCBWAPTR
         BAL   R4,MOVBLCK               MOVE OUT
         LM    R14,R15,C32(R8)          RELOAD
         AR    R15,R11                  ACTUAL DISPL
         LA    R6,4(R2)                 SET EX COUNT
         EX    R6,MOVIT1                MOVE IN INSERT
         LA    R1,5(R15,R2)             TARGET
         L     R15,JCBWAPTR
         BAL   R4,MOVBLCK               MOVE BACK
         CLC   0(4,R3),2(R11)           NEW 1ST LINE ON PAGE?
         BH    CNTXIT                   NO
         L     R14,C32+12(R8)           SAVED POINTER TO DIREC ENTRY
         MVC   0(4,R14),0(R3)           SET NEW FIRST LINE NO. ON PAGE
         B     CNTXIT                   COUNT LINE & GO
         EJECT
* MOVBLCK MOVES A BLOCK, SOURCE IN R15, TARGET IN R1, LENGTH IN R14,
*        RETURN ADDR IN R4.
         SPACE
MOVBLCK  CH    R14,=Y(256)              OVER 256 CHARS?
         BNH   MOVLAS                   NO
         MVC   0(256,R1),0(R15)         YES - MOVE 256
         LA    R1,256(R1)               KICK TARGET POINTER
         LA    R15,256(R15)             KICK SOURCE POINTER
         SH    R14,=Y(256)              REDUCE REMAINING COUNT 256
         B     MOVBLCK                  CHECK WHAT'S LEFT
MOVLAS   BCTR  R14,0                    REDUCE FOR EX INST.
         EX    R14,MOVEXM               MOVE BALANCE
         BR    R4                       RETURN
         SPACE
MOVEXM   MVC   0(0,R1),0(R15)
         SPACE
MVDRCTRY LA    R1,6(R5,R6)              PAST LAST SOURCE BYTE
         LA    R14,256                  CONSTANT
MVLOOP   CR    R6,R14                   OVER 256 CHARS?
         BNH   LASMOV                   NO, LAST MVC
         SR    R1,R14                   SET SOURCE THIS MOVE
         MVC   0(256,R11),0(R1)         MOVE TO SCRATCH AREA
         MVC   6(256,R1),0(R11)         MOVE TO TARGET AREA
         SR    R6,R14                   REDUCE REMAINING COUNT
         B     MVLOOP                   MORE?
         SPACE
LASMOV   SR    R1,R6                    LAST MOVE SOURCE
         BCTR  R6,0                     REDUCE FOR EX INST.
         EX    R6,DRMVC1                LAST SCRATCH MOVE
         EX    R6,DRMVC2                LAST TARGET MOVE
         BR    R4                       FIN
         EJECT
* SPLITS PAGE IF NOT ENOUGH ROOM
         SPACE
SPLIT    PFLIP 11,9                     P(11) TO P(9)
         BAL   R6,PGETT                 GET A PAGE
         LA    R6,1(R6)                 KICK PAGE COUNT
         STH   R6,CPAGCT
         LM    R5,R6,C32+12(R8)         GET SAVED PTRS
         MH    R6,=Y(6)                 MOVE-OUT COUNT
         LTR   R6,R6                    LAST PAGE?
         BNP   NTMOOV                   ADDING LAST DIRECTORY ENTRY
         BAL   R4,MVDRCTRY              MOVE UP DIREC ENTRIES
NTMOOV   STH   R0,10(R5)                SAVE NEW PAGE NO
         LH    R14,0(R9)                OLD COUNT
         LR    R0,R14                   TO RO
         SRL   R0,1                     HALVE
         TM    CPLFLG4,CPFSTSPL+CPFSTINS SPLIT AT LINE FOR INSERT
         BNO   *+8                 BRANCH NO
         L     R0,C32(,R8)         YES, SET COUNT TO INSERT COUNT
         SR    R4,R4                    ZERO
         LA    R6,2                     INIT
         LA    R15,2(R9)                POINT AT 1ST LINE
NXCMPC   IC    R4,4(R15)                COUNT
         LA    R6,5(R6,R4)              KICK CTR
         LA    R15,5(R15,R4)            & PTR
         CR    R6,R0                    ENOUGH
         BL    NXCMPC                   NO
         SR    R14,R6                   MOVE COUNT
         STH   R6,0(R9)                 NEW P9 COUNT
         LA    R6,2(R14)                KICK
         STH   R6,0(R11)                NEW P11 COUNT
         MVC   6(4,R5),0(R15)           NEW 1ST LINE NO ON PAGE
         LA    R1,2(R11)                TARGET
         BAL   R4,MOVBLCK               MOVE
         CLC   2(4,R11),0(R3)           WHICH ONE FOR 11
         BNH   NOFLIP                   THIS ONE
         PFLIP 11,9                     FLIP
NOFLIP   PMARK 9                        MARK
         PFREE 9
         PMARK 11                  ALSO MARK R11
         LH    R6,CPAGCT                PAGE COUNT
         B     NTHI
         EJECT
* STWPGET PLACES THE PAGE POINTED AT BY 4(R5) INTO PAGE "11"
*        RETURNS ON R4
         SPACE
STWPGET  LTR   R11,R11                  ANYTHING IN 11?
         BZ    TRY9                     NO
         PNUM  11                       WHAT?
         CH    R0,4(R5)                 WANTED ONE?
         BER   R4                       YES
TRY9     LTR   R9,R9                    ANYTHING IN 9?
         BZ    DOGET                    NO
         PNUM  9                        WHAT?
         CH    R0,4(R5)                 WANTED ONE?
         BNE   DOGET                    NO
         PFLIP 11,9                     INTO 11
         BR    R4                       DONE
         SPACE
DOGET    LH    R0,4(R5)                 SET POINTER
         PGET  11,(0)                   GET PAGE
         BR    R4                       DONE
         EJECT
* NEED ANOTHER TEXT PAGE
         SPACE
PGETT    CLC   CPAGCT(2),=Y(CPTNPG)     STILL DIRECTORY SPACE?
         BNL   TOOPGS                   NO
GTEXPG   PGET  11                       GET TEXT PAGE
         BZ    NOTAPAG                  NOMORE
         LR    R14,R6                   SETUP FOR RETURN
         LH    R6,CPAGCT                SET WITH PAGE COUNT
         OI    CPGFLG,CPFDIRCH         SET DIRECTORY CHANGED
         BR    R14                      BYE - BYE
         EJECT
* NO PAGES ANYWHERE
         SPACE
NOTAPAG  MVC   CPHIPS(4),C32+8(R8)      RESET HI POSITION
         LA    R15,16
         TM    CPLFLG3,CPFPUT           DOING A PUT?
         BO    FIXOT                     YES, RETURN TO MAMA
         XCALL NOMORPG
         SPACE 3
* USER WANTS TOO MANY TEXT PAGES
         SPACE
TOOPGS   MVC   CPHIPS(4),C32+8(R8)      RESET HI POSITION
         XC    RTBWC(4),RTBWC
         TSEG  'WORKING FILE TOO BIG, COMMAND ABORTED'
         CLC   CPCMNM(3),=CL3'COP'      FROM COPY?
         BE    CHKMOR1                  YES
         TM    CPLFLG3,CPFPUT           DOING A PUT?
         BZ    HOWUSE                    NO. BRANCH
         TWRITE ,
         LA    R15,12
         B     FIXOT
         SPACE
HOWUSE   CLC   CPCMNM(3),=CL3'USE'      FROM USE?
         BNE   CVQTYPE                  NO
         MVC   CPWORK2(4),CPDREC
         MVC   CPWORK1(4),CPHIPS
         B     FINIS1                   GET READY TO GO
         SPACE
CHKMOR1  TM    CPLFLG5,CPFSELOC         EXTERNAL COPY?
         BNO   CVQTYPE                  NO
FINIS1   DCLOSE ,                       CLOSE EXTERNAL DATA SET
         NI    CPGFLG,255-CPFOPN        TURN OFF OPEN FLAG
         B     CVQTYPE
         TITLE 'UNPRESS ROUTINE'
* UNPRESS SUBROUTINE - UNPRESSES A LINE IN EDIT FORMAT
*        CALL WITH RETURN AREA POINTED TO BY R1 (AT LEAST 133 BYTES)
*                  PRESSED LINE POINTED TO BY R15 (BEFORE LINE NO.)
*        RETURNS R1 INTACT
*                R0 WITH UNPRESSED CHAR COUNT
*                R15 WITH INTERNAL LINE NO.
         SPACE
UNPRESS  SENTER R1,R7         SAVE REGS
         MVC   CPDOUB(4),0(R15)    MAKE ALIGNED LINE-NO AVAILABLE
         MVI   0(R1),C' '     BLANK RETURN AREA
         MVC   1(MXPRTSZ-1,R1),0(R1)
         SR    R6,R6          ZERO COUNTER
         SR    R5,R5          ZERO FOR IC INSTRUCTION
         IC    R5,4(R15)      PRESSED-LINE COUNT
         LTR   R5,R5          TEST
         BNP   FINUNP         BLANK LINE
         LA    R1,0(R1)       CLEAR 1ST BYTE
         SR    R4,R4          ZERO FOR IC INSTRUCTIONS
MORECH   IC    R4,5(R15)      GET BLANK-CHAR COUNT BYTE
         LA    R3,X'0F'       SET MASK
         NR    R3,R4          NON-BLANK COUNT TO R3
         SRL   R4,4           BLANK COUNT TO R4
         AR    R1,R4          MOVE OUTPUT POINTER OVER BLANKS
         AR    R6,R4          INCREASE OUTPUT COUNTER
         LTR   R2,R3          ANY NON-BLANKS
         BNP   ALLBLS         NO
         SR    R5,R3          DECREASE INPUT COUNT BY NO. NON-BLANKS
         BNP   BADEDIT                  CAN'T HAVE
         AR    R6,R3          INCREASE OUTPUT COUNTER
         CH    R6,=AL2(MXPRTSZ) TOO LONG?
         BH    LIN2LONG            LINE WOULD BE TOO LONG
         BCTR  R2,0           DECREMENT NON-BLANK COUNT FOR EX INST
         EX    R2,UNPMVC      MOVE NON-BLANKS
         AR    R1,R3          MOVE OUTPUT POINTER
ALLBLS   LA    R15,1(R15,R3)  MOVE INPUT POINTER OVER COUNT & NON-BLNKS
         BCT   R5,MORECH      DO MORE
FINUNP   L     R15,CPDOUB     LINE-NO TO R15
         LTR   R0,R6          COUNT TO R0 WITH LTR
         SEXIT R1,R7          RESTORE REGS
         EJECT
LIN2LONG TSEG  'LINE EXCEEDS 133 CHARACTERS'
         B     CVQTYPE             ISSUE ERROR MSG
BADEDIT  TSEG  'INVALID EDIT FORMAT'
         B     CVQTYPE             ISSUE ERROR MSG
         TITLE 'LENCHK ROUTINE'
* LENCHK CHECKS TO SEE IF AN UNPRESSED LINE HAS A NON-BLANK CHARACTER
*      AT A POSITION GREATER THAN THE CURRENT VALUE OF CPLBGTH.  IF ONE
*      IS FOUND, A WARNING IS ISSUED.  IF TRUNCATION TO 133 CHARACTERS
*      OCCURS, A TRUNCATION MESSAGE IS ISSUED.
*
* LENCHK EXPECTS:
*      REG 1 - POINTER TO UNPRESSED TEXT
*      REG 0 - COUNT OF UNPRESSED TEXT
*      REG 15 - LINE NO. (INTERNAL FORM)
*
* LENCHK RETURNS:
*      REGS 1 & 15 - INTACT
*      REG 0 - COUNT UP TO LAST NON-BLANK IN THE LINE
         SPACE
LENCHK   SENTER R14,R8,44               SAVE REGS
        AIF   ('&DCEC' NE '1').LBL08                            JEP00X
*********                                                       JEP008
*                                                               JEP008
*  DCEC TAB SUPPORT WITH BACKSPACES RECOGNIZED.                 JEP008
*                                                               JEP008
*********                                                       JEP008
TABSTART LR    R5,R0              SET R5 = R0 IF NO TABS        USPS01
         LTR   R2,R0              TEST LENGTH                   USPS01
         BZ    EXIT               IF ZERO SKIP                  USPS01
         OI    CVSPARES+12,X'01'  TURN ON ALTERS IN CASE TRUE   JEP008
TABALTER CH    R0,=Y(MXPRTSZ)     ALREADY AT MAX LENGTH         JEP008
         BNL   EXIT               IF TRUE SKIP (CAME FROM ALTER)JEP008
         SR    R4,R4              CLEAR R4                      USPS01
         LA    R3,RTBTABS         GET TABS ADDR                 USPS01
         IC    R4,0(R3)           FIRST TAB                     USPS01
         LTR   R4,R4              IS IT ZERO                    USPS01
         BNZ   YESTABS            IF ZERO SKIP, ELSE CONTINUE   USPS01
         NI    CVSPARES+12,X'FE'  TURN OFF FLAG TO PREVENT LOOP USPS01
         B     EXIT               SKIP THE REST                 USPS01
YESTABS  L     R4,RTBWAPTR        PREPARE TO BLANK OUT          USPS01
         LA    R4,RTBTRBUF(R4)    BUMP TO BEGINNING OF TR BUFF  JEP008
         MVI   0(R4),C' '          BLANK FIRST POS              JEP008
         MVC   1(RTBNTEXT-1,R4),0(R4)  BLANK IT                 USPS01
         LA    R5,0               SET NEW LINE COUNT = 0        USPS01
BS1      CLI   0(R1),X'08'         ASCII BACKSPACE???           JEP008
         BE    BSSET               YES .. GO BACKSPACE          JEP008
         CLI   0(R1),X'16'         EBCDIC BACKSPACE???          JEP008
         BNE   ANYTABS             NO BACKSPACE                 JEP008
BSSET    LTR    R5,R5               AT=START??                  JEP008
         BZ    ADDTEMP             CAN'T BACK UP                JEP008
         BCTR  R5,0                MOVE TABBED LINE BACK 1      JEP008
         B     ADDTEMP             DONE... GET NEXT CHAR        JEP008
ANYTABS  EQU   *                  TAB CHECKED HERE              USPS01
         CLI   0(R1),X'4A'        LOGICAL TAB?                  USPS01
         BE    TAB                YES                           USPS01
         CLI   0(R1),X'05'        TAB? (UPLOW SET)              USPS01
         BE    TAB                YES                           USPS01
         L     R4,RTBWAPTR        TAB LINE POINTER              USPS01
         LA    R4,RTBTRBUF(R4)    BUMP TO BEGINNING OF TR BUFF  JEP008
         AR    R4,R5              ADJ BY NEW LINE COUNT         USPS01
         MVC   0(1,R4),0(R1)      MOVE A CHAR                   USPS01
         LA    R5,1(R5)           INCR. TAB LINE COUNT          USPS01
ISTABOK  CH    R5,=H'148'         MAX LINE LENGTH               USPS01
         BH    RESETLNE           YES                           USPS01
ADDTEMP  LA    R1,1(R1)           INCR. TEMP POINTER            USPS01
         BCT   R2,BS1            GO CHECK NEXT CHAR             USPS01
RESETLNE L     R1,12(R8)           ORIGINAL R1                  USPS01
         L     R2,RTBWAPTR         NEW LINE POINTER             USPS01
         LA    R2,RTBTRBUF(R2)    BUMP TO BEGINNING OF TR BUFF  JEP008
         LR    R3,R5               NEW LINE LENGTH              USPS01
         BCTR  R3,0                DOWN 1 FOR EX                USPS01
         EX    R3,MOVELINE         MOVE BACK                    USPS01
         NI    CVSPARES+12,X'FE'   TURN OFF ALTERS FLAG         JEP008
         B     EXIT                                             USPS01
MOVELINE MVC   0(0,R1),0(R2)  MOVE TABBED LINE                  USPS01
*                                                               USPS01
*  CHECK TAB TABLE                                              USPS01
*                                                               USPS01
TAB      LA    R6,8               MAX NO. OF TABS               USPS01
         SR    R14,R14            CLEAR R14                     USPS01
TABLOOP  IC    R14,0(R3)          PICK UP TAB                   USPS01
         LTR   R14,R14            TAB = 0                       USPS01
         BZ    TAB1               YES                           USPS01
         SH    R14,=H'12'         MAKE TABS REAL                USPS01
         CR    R5,R14             IS OLD LINE COUNT < TAB       USPS01
         BL    TAB2               YES                           USPS01
         LA    R3,1(R3)           INCR TAB TO NEXT TAB          USPS01
         BCT   R6,TABLOOP                                       USPS01
TAB1     LA    R5,149             BAD TAB OR NO TABS            USPS01
         B     ISTABOK                                          USPS01
TAB2     LR    R5,R14             OLD LINE COUNT = TABSET       USPS01
         B     ADDTEMP                                          USPS01
EXIT     LR    R0,R5              R0 HAS LENGTH OF INPUT        USPS01
.LBL08   DS    0H                                               JEP00X
         MVI   0(R8),0                  SET NOT TRUNCATED
         CH    R0,=Y(148)               FORCE TRUNCATION BIT AT 148
         BL    AFFEN                    OK
AEEEN    MVI   0(R8),FALLBT             SET TRUNCATED
AFFEN    AR    R1,R0                    POINT AT 1ST CHAR AFTER LAST
AGGEN    BCTR  R1,0                     MOVE POINTER FOREWARD BY 1
         CLI   0(R1),C' '               BLANK?
         BNE   STRIT                    NO
         BCT   R0,AGGEN                 TRY NEXT
STRIT    CH    R0,=Y(MXPRTSZ)           OVER 133 CHARS?
         BH    FIXXUP                   YES
         ST    R0,8(R8)                 COUNT TO LAST NON-BLANK
         AIF   ('&DCEC' NE '1').LBLX8                           JEP00X
         TM    CVSPARES+12,X'01'  IF COMING FROM ALTERS         JEP008
         BNO   TABSDONE           LENGTH HAD TO BE SET FIRST    JEP008
         L     R1,12(R8)          RELOAD ORIGINAL R1            JEP008
         NI    CVSPARES+12,X'FE'  TURN OFF FLAG TO PREVENT LOOP JEP008
         B     TABALTER           NOW WE CAN DO TABS            JEP008
TABSDONE EQU   *                  NOW WE CAN CONTINUE           JEP008
.LBLX8   DS    0H                                               JEP00X
         TM    0(R8),FALLBT             TRUNCATED?
         BO    LMESSA                   YES
         TM    CPGFLG,CPFRETRY          IS RETRY GOING ON?
         BO    STROUT                   RETURN IF SO
         CH    R0,CPLNGTH               GREATER THAN LENGTH?
         BNH   STROUT                   NO
LMESSA   TM    CPGFLG,CPFRETRY          IS RETRY GOING ON
         BO    LMESSR                   YEP, GIVE OTHER MSG
         TSEG  'LINE NO.',,B
         LR    R0,R15                   INTERNAL LINE-NO.
         CVCALL CVEXNO                   CONVERT
         TSEG  (1),(0),B                INTO MESSAGE
         TM    0(R8),FALLBT             TRUNCATED?
         BO    LMESSC                   YES
         TSEG  'CONTAINS',,B
         L     R15,8(,R8)              COUNT
         BTD   CPDOUB,0,(15)           CONVERT TO DECIMAL
         TSEG  (1),(0),B                INTO MESSAGE
LMESSB   TSEG  'CHARACTERS',,W
         BNP   STROUT                   ATTN NOT HIT
         OI    CPLFLG2,CPFCHND          SET ATTN HIT
STROUT   SEXIT R14,R8,*                 EXIT
         SPACE
FIXXUP   L     R1,12(R8)                RESET POINTER
         LA    R0,MXPRTSZ               SET DOWN TO MAX
         B     AEEEN
         SPACE
LMESSR   TSEG  'COMMAND',,B
LMESSC   TSEG  'TRUNCATED TO 133',,B
         B     LMESSB
         TITLE 'TERMINAL READ ROUTINE'
* ALL TERMINAL READS GO THRU HERE
*
* IN ORDER TO GET AROUND PROBLEMS INVOLVED WITH SPECIAL
* HANDLING OF ATTENTION HERE IN TRDRTN, THE ROUTINE HAS BEEN
* CHANGED TO ALWAYS RETURN TO THE CALLER WHEN A READ ENDS WITH
* ATTENTION OR NORMALLY.   ON RETURN THE CONDITION CODE IS
* SET TO ZERO IF NO ATTENTION OCCURRED OR TO POSITIVE IF AN
* ATTENTION DID OCCUR.  FOR NORMAL READS THAT DO NOT ALLOW
* SPECIAL CHARACTERS(SUCH AS @, $, AND CENT SIGN) BEFORE
* THE ATTENTION, THE LENGTH REGISTER R0 WILL HAVE A VALUE OF 0
* WHEN ATTENTION IS RETURNED.
*
* BEFORE ISSUING THE READ REQUEST, THE PROMPT IS MOVED TO
* THE CPWORK AREA OFF R13 IN CASE R1 POINTS TO AN ADDRESS IN
* CODE THAT MAY BE PAGED.
         SPACE
TRDRTN   XENTER 6,8,C28                 SAVE REGS
         LTR   R6,R0               PUT PROMPT CNT IN R6 & TEST
         BNP   SAVPRMPT            BR IF NO PROMPT
         BCTR  R6,0                SET FOR MVC
         EX    R6,PRMPTMV          MOVE PROMPT TO R13 AREA
         LR    R1,R13              POINT R1 TO NEW PROMPT AREA
         LA    R13,4(R6,R13)       BUMP R13 BY LENGTH &
         N     R13,=F'-4'              MAKE SURE WORD BOUNDARY
SAVPRMPT STM   R15,R1,C16(R8)           SAVE PROMPT
RESEG    TSEG  (1),(0)                  PROMPT
         L     R15,C16(R8)              RESET CODE
         TREAD                          OUT, THEN READ TERMINAL
         BM    ITSIO                         BR I/O ERROR
         XEXIT 6,8                      GOOD
         SPACE
ITSIO    C     R15,=F'-4'               I/O OR TABS
         BE    MERGE                    BR IF I/O ERROR
         TSEG  'UNSET TABS -',,B
MERGE    TSEG  'RETYPE',,M
         LM    R0,R1,C20(R8)            RESET PROMPT
         B     RESEG
         SPACE
PRMPTMV  MVC   0(0,R13),0(R1)
         TITLE 'UTILITY ROUTINES'
* LIST A LINE ROUTINE -- FORMATS THE OUTPUT LINE BASED ON
*          SETTING OF LIST OPTIONS IN CPLFLG5
* INPUT  R0 - LENGTH OF LINE TO LIST
*        R1 - ADDRESS OF START OF LINE TO LIST
*        CPLCNO - LINE NUMBER OF LINE TO LIST
         SPACE
LISTLINE XENTER 0,8,*
         TM    CPLFLG5,CPFNONUM    NONUMBER OPTION
         BO    LIST3               BRANCH YES
         TM    CPLFLG5,CPFUNUM     UNNUMBERED
         BO    LIST1               BRANCH YES
         L     R0,CPLCNO           GET LINE NUMBER
         CVCALL CVEXNO             CONVERT IT
         TSEG  (1),(0),B           PUT IT IN BUFFER
         AIF   ('&DCEC' NE '1').LBL04                           JEP00X
         TM    LFLG1,CPF3277       IS THIS A 3277???            JEP004
         BO    YES3277             YES...PUT OUT 2 BLANKS       JEP004
         TSEG  ' '                 1 LESS BLANK FOR NON-3277    JEP004
         B     NO3277              GO AROUND 3277 TSEG          JEP004
YES3277  TSEG  '  '                PUT OUT TWO BLANKS           JEP004
NO3277   TM    CPLFLG5,CPFNTEX     NOTEXT                       JEP004
         BO    LIST2               YES                          JEP004
LIST1    LM    R0,R1,4(R8)         POINT TO TEXT                JEP004
         TSEG  (1),(0),MARK        PUT IT IN BUFF & MARK EOL    JEP003
         AGO   .LBL05                                           JEP00X
.LBL04   DS    0H                                               JEP00X
         TSEG  ' '                 PUT OUT ANOTHER BLANK
         TM    CPLFLG5,CPFNTEX     NOTEXT
         BO    LIST2               YES
LIST1    LM    R0,R1,4(R8)         POINT TO TEXT
         TSEG  (1),(0)             PUT IT IN BUFFER
.LBL05   DS    0H                                               JEP00X
LIST2    TMARK ,                   MARK END OF LINE
         AIF   ('&DCEC' NE '1').LBLX4                           JEP00X
         TM    JCBAFL,JCBAFIA     DID USER HIT ATTENTION???     JEP007
         BNO   LISTEXIT           BRANCH IF NO ATTN HIT         JEP007
         OI    CPLFLG2,CPFCHND    SET TERMINATE                 JEP007
LISTEXIT XEXIT 0,8                RETURN                        JEP007
LIST3    TM    LFLG1,CPF3277      ARE WE A 3277 DEVICE???       JEP007
         BNO   LIST3A             NO...DO NORMAL TSEG           JEP007
         TSEG  ' '                EXTRA BLANK FOR 3277          JEP007
LIST3A   TSEG  '           '      PUT OUTMBLANKS FOR NONUM      JEP007
         AGO   .LBLX5                                           JEP00X
.LBLX4   DS    0H                                               JEP00X
         XEXIT 0,8                 RETURN
         SPACE
LIST3    TSEG  '           '       PUT OUT BLANKS FOR NONUMBER
.LBLX5   DS    0H                                               JEP00X
         B     LIST1               GO PUT OUT TEXT
         TITLE 'SET PROMPT FOR LINE INPUT'
* SETPRMPT SETS THE CORRECT PROMPT FOR TEXT INPUT BASED
* ON THE LIST OPTIONS SET IN FLAG CPLFLG5
*
* INPUT -- R0 = INTERNAL LINE NUMBER THAT MAY BE USED IN PROMPT
*
* OUTPUT -- R0, R1, AND R15 ARE SET FOR THE CALL TO TRDRTN
         SPACE
SETPRMPT XENTER 7,8,*
         TM    CPLFLG5,CPFNONUM    TEST IF NORMAL NUMBER PROMPT
         BNZ   SETPR2              BRANCH NO
SETPR1   CVCALL CVEXNO             CONVERT LINE NUMBER
         SR    R15,R15             SET R15 FOR NORMAL PROMPT
SETPREX  XEXIT 7,8                 EXIT
         SPACE
SETPR2   BNO   SETPR3              BRANCH IF NOT NONUMBER
         SYSQS 1,0,'           '   SET NONUMBER PROMPT
         LA    R15,4               SET FOR NO ? IN PROMPT
         B     SETPREX             GO RETURN
         SPACE
SETPR3   TM    CPLFLG5,CPFUNUM     UNNUMBERED OR NOTEXT
         BE    SETPR1              GO DO NORMAL PROMPT IF NOTEXT
         SR    R0,R0               SET NO PROMPT FOR UNNUMBERED
         SR    R1,R1
         LA    R15,4
         B     SETPREX             GO RETURN
         TITLE 'DISK READ/WRITE ERROR MESSAGE ROUTINE'
RDSKER   SENTER 14,8,44       SAVE REGS
         TSEG  'DATA SET READ ERROR, PROCEEDING',,M
         SEXIT 14,8,*
         SPACE 3
WDSKER   SENTER 14,8,44       SAVE REGS
         TSEG  'DATA SET WRITE ERROR, PROCEEDING',,M
         SEXIT 14,8,*
         TITLE 'ADDER ROUTINE'
* ADDER ADDS A LINE NO. IN R0 TO A DELTA IN R1 WITH LINE NO. ADDITION.
* RETURN IS IN REG R0.
* R0 NEGATIVE ON ILLEGAL (TOO-HIGH) RESULT
         SPACE
ADDER    SENTER R3,R7         SAVE REGS
         AR    R0,R1                   ADD NOS.
         L     R6,CMPHGH               LOAD HIGH VALUE
         CLR   R6,R0                   LESS THAN HIGH
         BH    LNOK           GOOD WITH RETURN CONDITION CODE SET
         LNR   R0,R6          SET NO GOOD
LNOK     SEXIT R3,R7          SCRAM
         TITLE 'LOWMULT ROUTINE'
*  COMPUTE NEXT LOWER MULTIPLE OF A DELTA
*
*  (R0) = LINE NO.
*  (R1) = DELTA
*
*  RETURNS R0 = NEXT LOWER MULTIPLE
         SPACE
LOWMULT  SENTER R1,R7
         LR    R3,R0                   LINE NO.
         SR    R2,R2
         DR    R2,R1                   DIVIDE BY DELTA
         MR    R2,R1                   MULTIPLY BY DELTA
         LR    R0,R3                   PUT RESULT IN R0
         SEXIT R1,R7
         TITLE 'CVEXNO ROUTINE'
* CVEXNO  CONVERTS INTERNAL LINE NOS. TO 9-DIGITS WITH/WITHOUT
*              A DECIMAL POINT -- CVEXNO1 IS BRANCHED TO IF A
*              DECIMAL POINT IN WANTED
*      EXPECTS R0 - INTERNAL LINE NO.
*      RETURNS R1 - ADDRESS OF EXTERNAL FORM LINE NO.
*              R0 - LENGTH OF LINE NO. (9 CHARACTERS)
         SPACE
CVEXNO   SENTER 2,8,*
         CVD   R0,CPDOUB               CONVERT TO DECIMAL
         TM    CPLFLG5,CPFINT          IS DECIMAL POINT WANTED
         BE    CVEXNO1                 NO
         MVC   C32(8,R8),CPDOUB        MOVE CONVERTED NUMBER
         UNPK  CPDOUB(9),C32+3(5,R8)   UNPK TO CPDOUB
         OI    CPDOUB+8,X'F0'          SET ZONE
         MVI   CPDOUB,C' '         SET FIRST CHAR TO BLANK
         B     DONA                    EXIT FROM CVEXNO
         SPACE
CVEXNO1  MVC   C32(11,R8),EXEDTMSK     MOVE EDIT MASK
         ED    C32(11,R8),CPDOUB+3     EDIT LINE NO.
         MVC   CPDOUB(9),C32+2(R8)     MOVE RESULT TO CPDOUB
         LA    R3,CPDOUB+8             TRAIL ZERO POINTER
STOP     CLI   0(3),C'0'     TRAILING ZERO?
         BNE   DONA          NO
         MVI   0(3),C' '     SET BLANK
         BCT   3,STOP        REDUCE TRAILING PTR
DONA     LA    1,CPDOUB       RETURN ADDRESS OF CONVERTED IN R1
         LA    R0,9                    SET LENGTH
         SEXIT 2,8,*         BYE
         SPACE
EXEDTMSK DC    C' ',X'202020202120',C'.',X'202020' EDIT MASK
         DC    0H'0'
         TITLE 'PRESS ROUTINE'
* PRESS LINES FOR WYLBUR WDS
*
* R1 - PTR TO TEXT TO PRESS
* R0 - COUNT OF TEXT TO PRESS
* R15 - WYLBUR LINE NUMBER
*
* RETURNS PRESSED AT SAME PLACE R1 POINTED TO
* PRESSED COUNT IN R0
         SPACE
PRESS    SENTER R1,R8         SAVE REGS
         LA    R8,C32+4(R13)  SET PUT-TOGETHER AREA
         ST    R15,C32(R13)   PUT LINE-NO INTO PRESSED
         CH    R0,=Y(MXPRTSZ)           CANT HAVE TOO BIG
         BNH   PRSGO          OK
         LH    R0,=Y(MXPRTSZ)           FIXUP
PRSGO    SR    R6,R6          START OUTPUT COUNT
         LTR   R5,R0          SET (& TEST) INPUT COUNT
         BNP   ALLBL          BLANK LINE
         LA    R3,0(R1)       SET INPUT POINTER (ZERO 1ST BYTE)
         SR    R1,R1          MAKE SURE HIGH ORDER BYTE IS ZERO
         BCTR  R5,0           SET TO EX TRT INST
         LA    R0,15          SET CONSTANT 15 INTO REG
         LA    R2,1           SET CONSTANT 1 INTO REG (WILL REMAIN)
OVER     EX    R5,BLTRT       FIND A NON-BLANK
         BZ    ALLBL          NONE
         SR    R1,R3          LENGTH BLANK STRING TO R1
         LR    R4,R1          AND TO R4
         AR    R3,R1          MOVE POINTER
         SR    R5,R1          DECREASE COUNTER
         EX    R5,NBTRT       FIND NEXT BLANK
         BNZ   EVALA          NONE
         LA    R1,1(R3,R5)    PRETEND ITS JUST AFTER INTERESTING STRING
EVALA    CR    R4,R0          BLANK STRING OVER 15?
         BH    EVALB          YES
         SLL   R4,4           MOVE BLANK STRING LENGTH TO LEFT HALF-BYT
         SR    R1,R3          LENGTH NON-BLANK STRING TO R1
         LA    R6,1(R6,R1)    ADD NON-BL CT & CT-BYTE TO COUNTER
         SR    R5,R1          DECREASE COUNTER
EVALC    CR    R1,R0          OVER 15 NON-BLANKS?
         BH    EVALD          YES
         OR    R4,R1          COMBINE BLANK & NON-BLANK COUNTS
         STC   R4,1(R8)       STORE COUNT-BYTE
         BCTR  R1,0           SET R1 FOR EX OF MVC
         EX    R1,NBLMVC      MOVE NON-BLANKS
         LA    R8,2(R8,R1)    MOVE OUTPUT POINTER
         LA    R3,1(R3,R1)    RESET POINTER (IN)
         LTR   R5,R5          ANY MORE?
         BP    OVER           YES
         EJECT
ALLBL    STC   R6,C32+4(R13)  STORE TOTAL PRESSED COUNT
         L     R1,0(R13)      RETURN ADDR FOR PRESSED LINE
         LA    R5,4(R6)       MVC COUNT
         EX    R5,FINMVC      MOVE PRESSED (WITHOUT LINE-NO)
         LTR   R0,R6          SET PRESSED COUNT RETURN
         LM    R2,R8,4(R13)   RESTORE REGS
         BR    R14            SCRAM
         SPACE
EVALB    MVI   1(R8),X'F0'    SET A BLANK-ONLY COUNT BYTE
         AR    R6,R2          KICK COUNTER
         AR    R8,R2          KICK POINTER
         SR    R4,R0          REDUCE BLANK COUNT BY 15
         B     EVALA          ANOTHER ROUND
         SPACE
EVALD    OR    R4,R0          COMBINE BL & NON-BL COUNTS
         STC   R4,1(R8)       INSERT NON-BL COUNT BYTE
         SR    R1,R0          REDUCE REMAINING NON-BL COUNT BY 15
         SR    R4,R4          ZERO REMAINING BL COUNT
         MVC   2(15,R8),0(R3) MOVE A NON-BLANK STRING
         AR    R3,R0          MOVE POINTER
         AR    R6,R2          COUNT CONTROL CHAR
         LA    R8,16(R8)      INCREASE COUNT BY 16
         B     EVALC          MORE?
         SPACE
BLTRT    TRT   0(0,R3),BLTRTB SCAN FOR NON-BLANK
NBTRT    TRT   0(0,R3),NBTRTB SCAN FOR BLANK
         TITLE 'REMOTE INSTRUCTIONS'
* FOR STOWIT
         SPACE
DRMVC1   MVC   0(0,R11),0(R1)
DRMVC2   MVC   6(0,R1),0(R11)
RTBTXMVC MVC   RTBTEXT(0),0(R1)
MOVIT1   MVC   0(0,R15),0(R3)
MOVIT2   MVC   4(0,R15),4(R3)
         SPACE 3
* FOR PRESS-UNPRESS
         SPACE
UNPMVC   MVC   0(0,R1),6(R15)
NBLMVC   MVC   2(0,R8),0(R3)  MOVE NON-BLANK STRINGS
FINMVC   MVC   0(0,R1),C32(R13)    MOVE PRESSED LINE
         SPACE 3
* FOR ADDER ROUTINE
         SPACE
CMPHGH   DC    F'100000000'            HIGH LINE VALUE
         SPACE 3
* FOR PRESS ROUTINE
         SPACE
BLTRTB   DC    256XL1'1'
NBTRTB   DC    256XL1'0'
         ORG   BLTRTB+C' '
         DC    X'0'
         ORG   NBTRTB+C' '
         DC    X'1'
         ORG
         TITLE 'LITERALS'
         LTORG
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
         EJECT ,
PCB      DSECT ,
         COPY  PCBTSO                  PAGE BUFFER DSECT
         TITLE 'COPY MODS'
         COMMON
         SPACE
CPFLEN   EQU   C32
CPFLOC   EQU   C32+4
CPFCOL   EQU   CPDRED
CPFILLFG EQU   CPDRED
CPFILL   EQU   X'80'
CPDUN    EQU   X'40'
CPFILLHI EQU   X'20'               FILL COL > ORIG LENGTH
CPLOST   EQU   X'10'
         SPACE
         END
./ ADD NAME=PEDP     0100-80193-80193-1611-02037-02037-00000-$SYS13  00
PEDP     TITLE 'START OF PAGED CODE -- PAGE 2'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
         GBLC    &DCEC             SWITCH FOR DCEC MODS         JEP00X
         GBLC    &USPS                                          USPS01
         GBLC    &CHKSPCE                                       USPS01
&USPS    SETC  '1'                                              USPS01
&DCEC    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE DCEC MODJEP00X
         AIF   ('&DCEC' NE '1').LBL01                           JEP00X
*                                                               JEP006
*                                                               JEP006
* MOD JEP006                                                    JEP006
*  INTERFACED WYLBUR TO TSO'S HELP COMMAND PROCESSOR.           JEP006
*  MODULES AFFECTED: PEDP, PWYL ...DENOTED JEP006 IN 66/71.     JEP006
*                                                               JEP006
*                                                               JEP006
*                                                               JEP001
*                                                               JEP001
*                                                               JEP001
* MOD JEP001                                                    JEP001
*  IMPLEMENTED DCEC NAMING CONVENTIONS. DENOTED JEP001 IN 66/71 JEP001
*  MODULES AFFECTED: PDIO,PEDS,PUTB,INIT MACRO(DSNWA,CVTSO)     JEP001
*                                                               JEP001
*                                                               JEP001
*
* MOD
*  MODULES AFFECTED ARE PWYL, PEDP AND MACRO(ROUTBLE)
*  DENOTED BY  IN CC 66/71.     JERRY PITTENGER
*
*
.LBL01   DS    0H                                               JEP00X
P002     PAGECDE COMPARE,GODUMP,CLEAR
         WIDENT 001
         USING  CPAREA,R12
         TITLE 'DUMP ROUTINE -- PAGE 2'
PGODUMP  GENTER ,
         SCAN  ARGPRT                   GET LOC TO DUMP
         B     CVABSENT                 CAN'T DO
THISS    CH    R0,=Y(8)                 8 CHAR MAX
         BH    CVNVALID                 CAN'T DO
         XCALL HXCVT                    CONVERT ADDR
         LA     R15,GONXCM
         ST     R15,CVSPIEAD
         L     R2,CPDOUB                ADDR TO R2
TINHERE  LA    R13,300(R13)             WORK SPACE
NXLINE   L     R6,CVTPTR                CVT POINTER
         USING CVT,R6
         L     R6,CVTMZ00               CURRENT MACHINE SIZE
         DROP  R6
         S     R6,=A(31)                DON'T PUSH TOO CLOSE TO EOCORE
         CR    R2,R6                    CHECK IF LEGAL CORE VALUE
         BH    GONXCM                   YES
         ST    R2,CPWA+200              START ADDR DUMP
         MVC   CPWA+204(32),0(R2)       CONTENT OF DUMP
         LA    R6,CPWA+100              POINT TO UNPACK AREA
         LA    R5,CPWA+201              SOURCE AREA
         LA    R4,5                     35 SOURCE BYTES = 5 TIMES
NXTUN    UNPK  0(15,R6),0(8,R5)         UNPACK 7 BYTES
         LA    R6,14(R6)                UPDATE PTRS
         LA    R5,7(R5)
         BCT   R4,NXTUN                 MORE?
         TR    CPWA+100(70),HEXTRTB     TRANSLATE
         MVC   CPWA(6),CPWA+100         MOVE ADDR
         LA    R4,CPWA+106              SET SOURCE ADDR START
         LA    R6,2                     2 ROUNDS
         MVC   CPWA+43(3),=C'  *'
         MVC   CPWA+46(16),CPWA+204
         MVI   CPWA+62,C'*'
NXLIN    MVI   CPWA+6,C' '
         LA    R5,CPWA+7                SET TARGET ADDR START
         LA    R3,4                     4 TIMES/ROUND
NXMUV    MVI   0(R5),C' '
         MVC   1(8,R5),0(R4)            MOVE IN 8 CHARS
         LA    R4,8(,R4)                KICK SOURCE PTR
         LA    R5,9(,R5)                & TARGET PTR
         BCT   R3,NXMUV                 MORE IN ROUND
         TR    CPWA+46(16),PRTBL
         TSEG  CPWA,63,W                OUTPUT
         BP    GONXCM
         MVC   CPWA+46(16),CPWA+204+16
         MVC   CPWA(6),=6C' '
         BCT   R6,NXLIN                 NEXT ROUND
         L     R2,CPWA+200              LAST ADDR
         LA    R2,32(R2)                NEXT ADDR
         B     NXLINE                   DO MORE
GONXCM   LR    R13,R8                   RESET R13 B/4 NEXT COMMAND
         B     CVGETCOM                 NEXT COMMAND
         SPACE 3
TDIREC   LA    R2,CPDREC                POINT AT DIREC
         B     TINHERE                  GO
         SPACE
TCPWYL   LA    R2,CPGLDL          POINT AT CPGLDL
         B     TINHERE                  GO
         SPACE
TROUTBLE LA    R2,ROUTBLE          LOAD ADDRESS OF ROUTBLE
         B     TINHERE             GO
         SPACE 3
HEXTRTB  EQU   *-C'0'
         DC    CL16'0123456789ABCDEF'
         SPACE 3
PRTBL    DC    64C'.'
         DC    X'40',10C'.'
         DC    X'4B4C4D4E4F50',9C'.'
         DC    X'5A5B5C5D5E5F6061',9C'.'
         DC    X'6B6C6D6E6F',10C'.'
         DC    X'7A7B7C7D7E7F80818283848586878889',C'.'
         DC    X'8B',5C'.'
         DC    X'919293949596979899',C'.'
         DC    X'9B',6C'.'
         DC    X'A2A3A4A5A6A7A8A9',3C'.'
         DC    X'AD',15C'.'
         DC    X'BD',3C'.'
         DC    X'C1C2C3C4C5C6C7C8C9',7C'.'
         DC    X'D1D2D3D4D5D6D7D8D9',8C'.'
         DC    X'E2E3E4E5E6E7E8E9',6C'.'
         DC    X'F0F1F2F3F4F5F6F7F8F9',6C'.'
         SPACE 3
HXCVT    LR    R2,R0                    SAVE PTRS
         LR    R3,R1
THISNX   CLI   0(R1),C'A'               LESS A NG
         BL    BADADDR                  CAN'T DO
         CLI   0(R1),C'F'               A TO F OK
         BH    THISNUM
         TR    0(1,R1),ALPHTRTB         TRANS
         B     THISOK
         SPACE
THISNUM  CLI   0(R1),C'0'               LESS 0 NG
         BL    BADADDR                  CAN'T DO
         CLI   0(R1),C'9'               GTR 9 NG
         BH    BADADDR                  CAN'T DO
THISOK   LA    R1,1(R1)                 KICK PTR
         BCT   R0,THISNX                MORE?
         EX    R2,PACKEM                PACK IT
         MVI   CPDOUB,X'00'             IGNORE HI ORDER BITS
         NI    CPDOUB+3,X'F8'           ALIGN D-W
         L     R6,CVTPTR
         USING CVT,R6
         L     R6,CVTMZ00
         DROP  R6
         S     R6,=A(31)
         C     R6,CPDOUB
         BL    BADADDR
         BR    R14                      RETURN TO CALLER
         SPACE 3
BADADDR  TSEG  'INVALID ADDRESS'
         B     CVQTYPE
         SPACE
PACKEM   PACK  CPDOUB(5),0(0,R3)
         SPACE
ALPHTRTB EQU   *-C'A'
         DC    X'0A0B0C0D0E0F'
         SPACE 3
ARGPRT   SCKW  DIR,TDIREC
         SCKW  CP,TCPWYL
         SCKW  ROUTBLE,TROUTBLE,A
         SCKW  ,THISS
         TITLE 'COMPARE ROUTINE -- PAGE 2'
PCOMPARE GENTER C32+SZR+SZR
         CLC   CPAGCT(2),=D'0'     IS THERE AN ACTIVE FILE
         BNE   COMPAR1             BRANCH YES
         CVCALL ITSNIL             NO, REPORT ERROR
         SPACE
COMPAR1  LA    R6,LN1HV-P002       SET FOR FIRST LINE NUMBER
         LCR   R6,R6               MAKE REL ADDR NEGATIVE AS FLG
         SR    R2,R2               ZERO FOR IC
         SCAN  LN1PRT              1ST LINE NO.
         B     CVABSENT            VOID NG
         SPACE
LN1HV    ST    R0,0(R8)            SAVE LINE 1
         ST    R0,16(,R8)          SAVE ALSO IN HIGH POSITION
         LA    R6,LN2HV-P002       SET FOR 2ND LINE NUMBER
         LCR   R6,R6               MAKE REL ADDR NEGATIVE AS FLG
         SCAN  LN1PRT              2ND LINE
         B     CVABSENT            VOID NG
         SPACE
LN2HV    LR    R2,R0               SAVE LINE 2
         C     R2,16(,R8)          FIRST OR SECOND LINE NO HIGH
         BL    LLLL                BRANCH IF SECOND HIGH
         BE    TOOHI               IF EQUAL, THEN DONE
         ST    R2,16(,R8)          SET SECOND LINE NO
         B     MMMM                CONTINUE
         SPACE
LLLL     ST    R2,0(,R8)           SET FIRST LINE NO
MMMM     SR    R1,R1
         ST    R1,CPWK2
         LA    R1,1
         ST    R1,CPWK1
         SCAN  COLUMN
         B     COUT
         SPACE
MMMM1    SCAN  COLT
         B     CVABSENT
         SPACE
COLTA    C     R15,=F'133'
         BH    CVNVALID
         ST    R15,CPWK1
         SCAN  COLTE
         B     COUT
         SPACE
COLTF    C     R15,CPWK1
         BL    BADRA
         ST    R15,CPWK2
COUT     PCALL GOCOMP
         SPACE 3
BADRA    TSEG  'BAD COLUMN RANGE'
         B     CVQTYPE
         SPACE
BAD      B     CVNVALID
         SPACE
TOOHI    TSEG  'COMPARE',,W
         B     CVGETCOM            YES, GO GET NEXT COMMAND
         SPACE 3
LN1PRT   SCKW  ,,PUSH       FILLED IN TO LNENOPRT
LN2PRT   SCKW  ,,PUSH       FILLED IN TO LTNPRT
         SCKW  ,BAD
         SPACE
COLUMN   SCKW  COLUMNS,MMMM1,A
         SCKW  ,BAD
         SPACE
COLT     SCKW  ,COLTA,PI,133
COLTE    SCKW  /,COLTF,(P,PI),133
         SCKW  ,BAD
         TITLE 'CLEAR ROUTINE -- PAGE 2'
PCLEAR   GENTER SZR+4  ENTRY FOR CLEAR COMMAND
         LA    R2,TEXTPRT          POINT TO NORMAL SCAN TABLE
GOCLEAR1 SLR   R2,R10              CONVERT PRT ADDR
         LCR   R2,R2               TO RELATIVE ADDR FOR SCAN
         SCTELL (1),(0)            GET OPERANDS
         MVC   4(SZR,R8),0(R1)     MOVE TO WORK AREA
         LA    R1,4(,R8)           POINT TO NEW SCAN AREA
         SCINIT (1),(0)            SET SCANNER TO NEW AREA
         MVC   0(1,R8),CPGFLG2     SAVE CURRENT VALUE OF CPGFLG2
         SCAN  (R2),NO             SCAN FOR OPERANDS
         B     CVABSENT            OP MISSING IF NOTHING
         SPACE
GOCLEAR2 SCAN  (R2),NO             CONTINUE SCAN FOR OTHER OPS
         B     CVGETCOM            GO GET NEXT COMMAND
         SPACE
GGCLEAR  CLC   CPAGCT(2),=D'0'     IS THERE AN ACTIVE FILE
         BNE   GGCLEAR1            BR YES
         TM    0(R8),CPFEXEC+CPFEXTER    EXEC & EXEC TERSE
         BO    GOCLEAR2            YES, DON'T WRITE MESSAGE
         TSEG  'NO ACTIVE FILE',,W
         B     GOCLEAR2            GO GET NEXT OPERAND
         SPACE
GGCLEAR1 CVCALL DOCLEAR            GO CLEAR FILE
         B     GOCLEAR2            NEXT OPERAND
         SPACE
GGCLREX  CLC   CPEXCNT(2),=D'0'    IS THERE AN EXEC FILE
         BNE   GGCLREX1            BR YES
         TSEG  'NO EXEC FILE',,W
         B     GOCLEAR2            GO GET NEXT OPERAND
         SPACE
GGCLREX1 CVCALL DOCLRX             GO CLEAR FILE
         NI    CPGFLG2,255-CPFEXEC RESET EXEC MODE IF ON
         B     GOCLEAR2            NEXT OPERAND
         SPACE
GGCLRTAB XC    RTBTABS(8),RTBTABS  CLEAR TAB SETTINGS
         B     GOCLEAR2            NEXT OPERAND
         SPACE
GGCLRNAM XC    CPPFXL,CPPFXL       CLEAR PREFIX
         MVI   CPMEMBSV,C' '       CLEAR SAVED MEMBER
         AIF   ('&USPS' NE '1').XLBL03                          USPS01
         ST    R6,CVSPARES   SAVE FOR MIN                       USPS01
         SR    R6,R6         ZERO IT                            USPS01
         IC    R6,CVUSRFLD  PICK UP ID LENGTH                   USPS01
         MVC   CPUSERSV(0),CPUSER  RESET ID                     USPS01
         EX    R6,*-6        EXECUTE ABOVE INST                 USPS01
         L     R6,CVSPARES   RELOAD R6                          USPS01
         AGO   .XLBL04                                          USPS01
.XLBL03   DS   0H                                               USPS01
         MVC   CPUSERSV(5),CPUSER  RESET SAVED USER AND GROUP
.XLBL04   DS   0H                                               USPS01
         B     GOCLEAR2            NEXT OPERAND
         SPACE
GGCLRIGN TSEG  (1),(0)             BAD OPERAND -- IGNORE IT
         TSEG  ': IGNORED',,W      WRITE OUT MESSAGE
         B     GOCLEAR2            GO GET NEXT OPERAND
         SPACE 3
TEXTPRT  SCKW  TEXT,GGCLEAR,A
         SCKW  ACTIVE,GGCLEAR,A
         SCKW  EXECUTE,GGCLREX,A
         SCKW  TABS,GGCLRTAB,A
         SCKW  NAME,GGCLRNAM,A
         SCKW  ,GGCLRIGN
         TITLE 'END OF PAGE CODE -- PAGE 2'
         PINIT                     DEFINE START OF INIT ROUTINE
         MVC   LN1PRT+1(3),CVLNENO+1
         MVC   LN2PRT+1(3),CVLTNPR+1
         PEND                      DEFINE END OF INIT CODE
         TITLE 'TSO COMMANDS - INTERFACE ROUTINE - PAGE3'
P003     PAGECDE TSOCMDS
         WIDENT  001
         USING   CPAREA,R12
PTSOCMDS GENTER BLDLSIZ
         USING BLDLWORK,R8    WORK AREA
         CH    R0,=H'8'        COMMAND TOO LONG
         ST    R0,CPWK1        SAVE FOR ILLEGAL COMMAND
         BH    CMDILL          YES.
         LR    R2,R0            CMD LEN FOR EXECUTE
         MVC   BLDLNAM,=CL8' ' CLEAR
         BCTR  R2,R0            DECR
         EX    R2,MOVCMD        MOVE COMMAND FOR ATTACH
         L     R4,CPCTSAV      PICK UP LENGTH OF CMD BUFF
         LA    R4,4(,R4)       UP TO REAL LENGTH
         LA    R5,CPCMSAV      MIN CMD LEN=1+BLANK
         LA    R5,1(,R5)
CMDLOOP  DS    0H
         CLI   0(R5),C' '       CMD+SPACE = OPERAND OFFSET
         BE    OPERAND         FOUND OPERAND OFFSET
         LA    R5,1(,R5)       BUMP TO NEXT POS.
         B     CMDLOOP         LOOP
OPERAND  DS    0H
         LA    R6,CPCMSAV      PICK UP START OF CMD
         SR    R5,R6           GET LENGTH
         LA    R5,1(,R5)       CORRECT FOR SPACE
         STH   R5,CPCTSAV+2     SAVE OPERAND OFFSET
         STH   R4,CPCTSAV       SAVE CMD LEN FOR TSO
         LA    R0,BLDLWORK        FOR BLDL
         MVC   BLDLCNT,=X'0001' FF
         MVC   BLDLLEN,=AL2(BLDLSIZ)   LL
         SLR   R1,R1               ALSO
         SVC   18                  BLDL
         L     R0,CPWK1         FOR ILLEGAL IF NEC
         LA    R1,BLDLNAM       ALSO
         LTR   R15,R15             FOUND
         BNZ   CMDILL              NO EXIT
*  ITEL  TM    BLDLLIB,2        IS IT STEPLIB,JOBLIB ETC
*  ITEL  BO    APFLIB           MUST BE APF LIB
         L     R6,CVIOWA        WORK AREA ADDRESS
         USING WDIOWA,R6
         L     R2,WAUPT         USER PROFILE TABLE
         ST    R2,CPSTART+4
         L     R2,WAPSCB           PSCB
         ST    R2,CPSTART+8
         L     R2,WAECT
         ST    R2,CPSTART+12       ECT
         LA    R2,CPCTSAV          CMD BUFFER
         ST    R2,CPSTART
         LA    R1,CPSTART          PHONEY CPPL
         LA    R14,BLDLNAM
         XC    ATTDECB(4),ATTDECB  CLEAR THE ECB
         LA    R2,ATTDECB          PICK UP ECB ADDR
        ATTACH DE=(14),ECB=(2)
         LR    R3,R1               SAVE TCB ADDR
         WAIT  ECB=(2)             WAIT FOR COMPLETION
         OC    CPCMSAV(25),CPCMSAV READY CMD AREA FOR NEXT
         ST    R3,CPSTART          SETUP FOR DETACH
DETACH   DETACH CPSTART            DETACH CP
         CLI    BLDLNAM,C'Q'       IS IT QUEUE COMMAND
         BNE    NODEL              NO BYPASS DELETE
         DELETE EP=QCMN            DELETE QUEUE COMMON
NODEL    DS     0H
*TURN STAX BACK ON
         LA    R3,WASTAX           STAX WORK AREA
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         L     R14,CVATNRTN
         STAX  (14),REPLACE=YES,DEFER=NO,USADDR=((R12)),MF=(E,(R3))
         OC    CPCMSAV(25),CPCMSAV READY CMD AREA FOR NEXT
         B     CVGETCOM                 NEXT COMMAND
MOVCMD   MVC   BLDLNAM(0),0(R1) EXECUTE ONLY
*
CMDILL   TSEG  (R1),(R0),B
         B      CVUNLEGL           GET NEXT COMMAND
*
APFLIB   TSEG 'COMMAND MUST BE IN LINKLST LIBRARY'
         B     CVQTYPE
*
         DROP  R6
         PINIT
         PEND
BLDLWORK DSECT
BLDLCNT  DS    XL2
BLDLLEN  DS    XL2
BLDLNAM  DS    CL8
BLDLENT  DS    CL62
BLDLLIB  EQU   BLDLENT+4          TYPE OF BLDL LIB
BLDLSIZ  EQU   *-BLDLWORK
         CSECT
.LBLX1   DS     0H
         TITLE 'START OF PAGED CODE -- PAGE 20'
P020     PAGECDE GOCTLG,NTGDCAT,NTGDOPN,NOMORPG
         WIDENT 001
         TITLE 'GOCTLG ROUTINE -- PAGE 20'
PGOCTLG  DENTER DSSIZ
         CVCALL DODSNM
         TM    CPLFLG3,CPFSET      WAS SET SPECIFIED?
         BZ    GOCTLG2             BR IF NOT
         CVCALL SETPFXNS
GOCTLG2  TM    CPLFLG3,CPFDSCLG    CATLG OR RECATLG?
         BZ    GOUNC               BR IF NEITHER
         LNR   R1,R8               INDICATE MANDATORY VOL PRMT
         CVCALL VOLCHKNL           CHECK FOR VOLUME
GOUNC    TM    DSNWAF1,DSNFMYDS    BELONG TO USER?
         BO    CALLCAT
         CVCALL NOTMYDS            GO SEE IF OK
CALLCAT  DCATLG ,                  GO DO FUNCTION
         LR    R2,R15              SAVE RETURN CODE
         CVCALL DSNAMED
         LTR   R15,R2              TEST RETURN CODE
         BNZ   PNTGDCAT            BR IF ERROR
         CVCALL CTLGED
         TM    CPLFLG3,CPFDSCLG    CATLG OR RECATLG?
         BZ    CVGETCOM              EXIT IF NOT
         TSEG  'ON',,B
         TSEG  DSNWAVOL,6
         B     CVGETCOM
         TITLE 'NTGDCAT ROUTINE -- PAGE 20'
PNTGDCAT GENTER ,
         CH    R15,=Y(C8)          WAS RC=8?
         BE    CATRC8P             GO DO PRELIM CHECKING
         CH    R15,=Y(255)         WAS RC=8 AND FUNNY CONDITION
         BNH   CATRCNT8            BR NO
         SYSQS 1,0,'CANN''T CATLG'
         B     NTGDCATX            GO FINISH
         SPACE
CATRCNT8 TSEG  'NOT',,B
         CVCALL CTLGED             GO PRINT FUNCTION NOT DONE
         TSEG  '-',,B
         B     *(R15)              TAKE PROPER BRANCH
         B     CATRC4
         B     CATRC8
         B     NTGDCATX
         B     CATRC16
         B     CATRC20
         B     CATRC24
         B     CATRC28
         SPACE
CATRC4   SYSQS 1,0,'CVOL NOT AVAILABLE'
         B     NTGDCATX
         SPACE
CATRC8   SYSQS 1,0,'NOT IN CATALOG'
         B     NTGDCATX
         SPACE
CATRC16  SYSQS 1,0,'INDEX DOES NOT EXIST'
         B     NTGDCATX
         SPACE
CATRC20  SYSQS 1,0,'NO SPACE ON CVOL'
         B     NTGDCATX
         SPACE
CATRC24  SYSQS 1,0,'IMPROPER GDG NAME'
         B     NTGDCATX
         SPACE
CATRC28  SYSQS 1,0,'I/O ERROR'
         B     NTGDCATX
         SPACE 3
* IF RETURN CODE IS 8 ENTRY FOUND/NOT FOUND
CATRC8P  DS    0H
         TM    CPLFLG3,CPFDSCLG    WAS IT CATLG OR RECATLG?
         BZ    CATRCNT8            BR IF UNCATLG
         SYSQS 1,0,'ALREADY CATLG''D'
         SPACE
NTGDCATX TSEG  (1),(0)             PUT MESSAGE IN BUFFER
         B     CVQTYPE
         TITLE 'OPEN ERROR MESSAGE ROUTINE -- PAGE 20'
PNTGDOPN GENTER ,
         LR    R6,R15              SAVE ERROR CONDITION
         LR    R5,R0               SAVE ANY PARM PASSED BACK
         CH    R15,=Y(RTNCATER)    IS IT POSSIBLE CATASTRPHE?
         BNL   CATER
         CH    R15,=Y(TALOCODE)    TALO ON DOPEN?
         BNL   THISEN(R15)         DON'T PRINT DSNAME
         CVCALL DSNAMED            DSNAME INTO MESSAGE
THISEN   B     THISEN(R6)     BRANCH TO PROPER CONTINUATION
         SPACE
         B     NOSUCH         4
         B     CVGETCOM       8 - HANDLED ELSEWHERE
         B     NOROOM         12
         B     BATCH          16
         B     ILLBLKSZ       20
         B     DSILLEG        24
         B     ILLORG         28
         B     CVGETCOM       32    TALO
         B     ABORTMS        36    ABORT
         B     BDVOLM         40
         B     ILLMEMB        44
         B     NODIRSPC       48
         B     EXPDTPRO       52
         B     OUTOFSP        56
         B     DIRIOERR       60
         B     ABORTMS        64      SHOULDN'T HAPPEN
         B     PROTERR        68
         SPACE 3
ILLORG   DS    0H
         SYSQS 1,0,': ILLEGAL DSORG OR RECFM'
         B     NTGDOPNX
         SPACE
DSILLEG  SYSQS 1,0,': ILLEGAL DSNAME'
         B     NTGDOPNX
         SPACE
BDVOLM   DS    0H
         TSEG  DSNWAVOL,6
         SYSQS 1,0,': INVALID VOLUME'
         B     NTGDOPNX
         SPACE
NOSUCH   TSEG  'NOT',,B
VOLTOMSG TSEG  'ON',,B
         TSEG  DSNWAVOL,6,B
         CLI   DSNWAF2,DSNFSHOW+DSNFCAT  IS CMND SHOW CATLG?
         BNE   CVQTYPE             BR IF NOT
         BTD   CPDOUB,0,(R5)       GET LAST GOOD INDEX LEVEL
         TSEG  (1),(0),B
         SYSQS 1,0,'LEVELS OK'
         B     NTGDOPNX
         SPACE
NOROOM   TSEG  'CAN''T FIND SPACE',,B
         B     VOLTOMSG
         SPACE
CATER    TSEG  'ERROR #'
         ST    R5,CPDOUB           SAVE FORMATTED ERROR NUMBER
         TSEG  CPDOUB+1,3          AND WRITE IT
         SYSQS 1,0,'. I/O INCOMPLETE'
         B     NTGDOPNX
BATCH    SYSQS 1,0,'IS IN USE'
         B     ABORMS
         SPACE
PROTERR  CVCALL DSNAMED
         SYSQS 1,0,'IS PROTECTED'
         B     ABORMS
         SPACE
OUTOFSP  SYSQS 1,0,'ALLOWED DISK SPACE EXCEEDED'
         B     ABORMS
         SPACE
EXPDTPRO CVCALL DSNAMED            PUT OUT DSNAME
         SYSQS 1,0,'IS DATE PROTECTED'
         SPACE
ABORMS   TSEG  (1),(0),M
ABORTMS  SYSQS 1,0,'REQUEST ABORTED'
         B     NTGDOPNX
         SPACE
ILLMEMB  TSEG  'MEMBER',,B
         TM    DSNWAMBR,X'BF'      WAS MEMBER SPECIFIED?
         BZ    ILLMEMB2            NO - THAT'S WHAT'S WRONG
         CVCALL MEMBERED           GO TSEG MEMBER NAME
         SYSQS 1,0,'NOT FOUND'
         B     NTGDOPNX
         SPACE
ILLMEMB2 SYSQS 1,0,'NOT SPECIFIED'
         B     NTGDOPNX
         SPACE
ILLBLKSZ TSEG  ':',,B
         BTD   CPDOUB,0,(R5)       GET INVALID BLOCKSIZE
         TSEG  (1),(0),B
         SYSQS 1,0,'INVALID BLOCK SIZE'
         SPACE
NTGDOPNX TSEG  (1),(0)             PUT MESSAGE INTO BUFFER
         B     CVQTYPE             GO GET NEXT COMMAND
         SPACE
NODIRSPC DS    0H
         TSEG  'NO DIRECTORY SPACE IN',,B
DIRDSN   CVCALL DSNAMED            PUT IN DSNAME
         B     CVQTYPE             GO GET NEXT COMMAND
         SPACE
DIRIOERR TSEG  'DIRECTORY I/O ERROR IN',,B
         B     DIRDSN              GO PUT IN DSNAME
         TITLE 'PAGE SHORTAGE MESSAGES -- PAGE 20'
PNOMORPG GENTER ,
         TM    CPGFLG,CPFOPN  IS ANY EXTERNAL DATA SET NOT CLOSED?
         BZ    READYZ         NO
         DCLOSE ,             CLOSE IT
         NI    CPGFLG,255-CPFOPN SET CLOSED
READYZ   XC    RTBWC(4),RTBWC
         TSEG  'WYLBUR OUT OF PAGES -- COMMAND ABORTED'
         B     CVQTYPE                  GET NEW COMMAND
         TITLE 'END OF PAGED CODE -- PAGE 20'
         PINIT             DEFINE END OF CODE - START OF INIT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 21'
P021     PAGECDE GOSHO,GOPUT
         WIDENT 001
         TITLE 'GOSHOW ROUTINE -- PAGE 21'
* GOSHOW IS THE PRIMARY ENTRY FOR SHOW.
         SPACE
PGOSHO   GENTER C8
         SCANSAVE 0(R8)            SAVE SCAN POINTERS FOR LATER
         MVI   CPLFLG3,X'00'
         SCAN  STPRTA                   SCAN FOR OPTIONS
         B     CVABSENT                 ILLEGAL COMMAND
         SPACE 3
* MIGHT BE SHOW LINENO -- SET UP FOR THAT
         SPACE
GOSHOW1  SCANRSTR 0(R8)            RESTORE SCAN POINTERS
         CVCALL SCNEXFR            SEE IF SELECT EXECUTE
         LA    R6,SHOLNENO-P021    SET R6 FOR LINE NO.
         LCR   R6,R6                  WITH NEG RELATIVE ADDR
         SCAN  STPRTB              SCAN FOR LINE NUMBER
         B     CVABSENT            NOTHING -- SHOULDN'T HAPPEN
         SPACE
SHOLNENO SYSQS 6,5,'LINE NUMBER'   SET FOR NORMAL LINE NUMBER
         CH    R15,=Y(24)          VALUE TOO LARGE FOR BR TABLE
         BH    CONVTRR             YES, SHOW AS LINE NUMBER
         LTR   R15,R15             POSITIVE VALUE RETURNED
         BNH   CONVTRR             NO, SHOW AS LINE NUMBER
         B     *(R15)              GO TO PROPER ROUTINE
         SPACE
         B     FIRST               FIRST SPECIFIED
         B     CURRENT             CURRENT SPECIFIED
         B     LAST                LAST SPECIFIED
         B     END                 END SPECIFIED
         B     NEXT                NEXT SPECIFIED
         B     PREVIOUS            PREVIOUS SPECIFIED
         SPACE 3
CURRENT  SYSQS 6,5,'CURRENT'       POINT TO TEXT
         B     CONVTRR             GO OUTPUT IT
         SPACE
LAST     SYSQS 6,5,'LAST'          SET OPTION
         B     CONVTRR             FINISH
         SPACE
FIRST    SYSQS 6,5,'FIRST'         SET FOR FIRST MESSAGE
         B     CONVTRR             GO OUTPUT NOW
         SPACE
END      SYSQS 6,5,'END'           SET FOR END MESSAGE
         B     CONVTRR             GO OUTPUT NOW
         SPACE
NEXT     SYSQS 6,5,'NEXT'          SET FOR NEXT MESSAGE
         B     CONVTRR             GO OUTPUT NOW
         SPACE
PREVIOUS SYSQS 6,5,'PREVIOUS'      SET FOR PREVIOUS MESSAGE
         B     CONVTRR             GO FINISH
         SPACE
DELTA    SYSQS 6,5,'DELTA'         SET OPTION
         L     R0,CPGLDL           DELTA INTO R0
CONVTRR  CVCALL CVEXNO             CONVERT
         B     OUTPUTR             OUTPUT
         SPACE
SIZEA    SYSQS 6,5,'PAGES'         SET OPTION
         LH    R15,CPAGCT          LOAD PAGE COUNT
         B     LNGTHB              CONTINUE
         SPACE
LNGTHA   SYSQS 6,5,'LENGTH'        SET OPTION
         LH    R15,CPLNGTH         LEN INTO R15
LNGTHB   SR    R0,R0               ZERO
         BTD   CPDOUB,(0),(15)     CONV TO INTEGER
OUTPUTR  TSEG  (1),(0),B           INTO MSG
SSSNPT   TSEG  '-',,B
SSSOPT   TSEG  (6),(5)             OPTION INTO MESSAGE
         B     CVGETCOM
         SPACE 3
SHLOG    TM    CPGFLG2,CPFNOLOG    TEST IF NOLOG ON
         BNO   SHLOG2              NO
         TSEG  'NO'
SHLOG2   SYSQS 1,0,'LOG'           PUT LOG IN MESSAGE
INEFFECT TSEG  (1),(0),B
         TSEG  'IS IN EFFECT'      WRITE REST OF MESSAGE
         B     CVGETCOM
         SPACE 3
SHCOLL   TM    RTBUFL,RTBUNCOL     NO COLLECT?
         BNO   SHCOLL2
         TSEG  'NO'
SHCOLL2  SYSQS 1,0,'COLLECT'
         B     INEFFECT
         SPACE 3
SHWRAP   TM    RTBMFL,RTBWRAP      IS IT WRAP
         BO    SHWRAP2
         TSEG  'NO'
SHWRAP2  SYSQS 1,0,'WRAP'
         B     INEFFECT
         SPACE 3
SHPAD    TM    RTBUFL,RTBUPAD
         BO    SHPAD2
         TSEG  'NO'
SHPAD2   SYSQS 1,0,'PAD'
         B     INEFFECT
         SPACE 3
SHCRT    TM    RTBMFL,RTBCRT
         BO    SHCRT2
         TSEG  'NO'
SHCRT2   SYSQS 1,0,'CRT'
         B     INEFFECT
         SPACE 3
SHOBACK  TM    RTBUFL,RTBUBACK
         BO    SHOBACK2
         TSEG  'NO'
SHOBACK2 SYSQS 1,0,'BACK'
         B     INEFFECT
         SPACE 3
SHPSZ    LA    R15,RTBPSZ
         SYSQS 6,5,'PAGESIZE'
         B     SHLPSZ
         SPACE 3
SHLSZ    LA    R15,RTBLSZ
         SYSQS 6,5,'LINESIZE'
SHLPSZ   L     R14,RTBWAPTR
         LH    R15,0(R15,R14)
         B     LNGTHB
         SPACE 3
SHATTN   SYSQS 6,5,'ATTN SEQUENCE'
         TM    RTBUFL,RTBUATTN
         BNO   VOLNONE
         L     R14,RTBWAPTR
         LA    R1,RTBATTN(,R14)
         LH    R0,RTBATNSZ(,R14)
         B     OUTPUTR
         SPACE 3
VOLSHOW  SYSQS 6,5,'VOLUME'
         TM    CPGFLG,CPFVOLM      DEFAULT?
         BZ    VOLNONE             NO
         TSEG  CPVOLSV,6,B         SET DEFAULT VOL
         B     SSSNPT              PUT OPTION INTO MSG
         SPACE
VOLNONE  TSEG  'NO',,B             NONE
         B     SSSOPT              PUT OPTION INTO MSG
         SPACE 3
SHOESCAP SYSQS 6,5,'ESCAPE CHAR'   SET OPTION
         LA    R1,CPESCAPE         GET ESCAPE CHAR
         TM    CPGFLG2,CPESNULL    IS IT NULL
SHESCSK  BO    VOLNONE             BRANCH YES
         LA    R0,1                SET LENGTH
         B     OUTPUTR             GO FINISH
         SPACE
SHOSKIP  SYSQS 6,5,'SKIP CHAR'     SET OPTION
         LA    R1,CPSKIP           GET SKIP CHAR
         TM    CPGFLG2,CPSKNULL    IS IT NULL
         B     SHESCSK             BRANCH YES
         SPACE
SHORSCN  LH    R15,CPRSCNVL        GET RESCAN VALUE
         SYSQS 6,5,'RESCAN COUNT'  SET OPTION
         B     LNGTHB              GO FINISH
         SPACE 3
CCASE    TM    CPGFLG,CPFUPLW      TEST IF UPPER-LOWER BIT ON
         BO    ISUPLOW             YES
         TSEG  'UPPER CASE ONLY'
         B     CVGETCOM            GET NEW COMMAND
         SPACE
TSKTSK   B     CVNVALID
         SPACE
ISUPLOW  TSEG  'UPPER-LOWER CASE'
         B     CVGETCOM            GET NEW COMMAND
         EJECT
* CALL VARIOUS SHOW COMMANDS IMPLEMENTED IN OTHER PAGES
* NAME, PREFIX, MEMBER, DSNAME, USER, GROUP
         SPACE
SHNAM    PCALL SHONAM
         SPACE
TABSA    PCALL GOTAB               GO DO TABS
         SPACE
COLUMNS  PCALL SHOCOL              CALL SHOW COLUMNS ROUTINE
         SPACE
SHDSNSPA PCALL SHODSN
         SPACE
SHSPACES PCALL SHOSPAC
         SPACE
SHDIRCAT PCALL SHOCAT
         SPACE
SHVOLS   PCALL SHOVOLS
         SPACE
FINDSIZE PCALL SHOSIZ
         SPACE
INFO     PCALL TIME
         SPACE
PROFIL   PCALL PROFIL
         SPACE
LISTUSR  PCALL LSTUSR
         SPACE
         EJECT
* SCAN ROUTINES FOR SHOW
         SPACE
STPRTA   SCKW  DELTA,DELTA,A
         SCKW  LENGTH,LNGTHA,A
         SCKW  CASE,CCASE,A
         SCKW  VOLUME,VOLSHOW,A
         SCKW  NAME,SHNAM,(A,S)
         SCKW  GROUP,SHNAM,(A,S)
         SCKW  USERS,LISTUSR
         SCKW  USER,SHNAM,(A,S)
         SCKW  MEMBER,SHNAM,(A,S)
         SCKW  LOG,SHLOG
         SCKW  SIZE,FINDSIZE,A
         SCKW  PAGES,SIZEA,A
STPRTA1  SCKW  EXECUTE,,A      FILLED IN AT INIT TO SHEXEC
         SCKW  VOLUMES,SHVOLS
         SCKW  VOLS,SHVOLS
         SCKW  TIME,INFO,(A,S)
         SCKW  DATE,INFO,(A,S)
         SCKW  PROFILE,PROFIL,A
         SCKW  TABS,TABSA,A
         SCKW  COLUMNS,COLUMNS,A
         SCKW  COLS,COLUMNS
         SCKW  PAGESIZE,SHPSZ,A
         SCKW  PS,SHPSZ,A
         SCKW  LINESIZE,SHLSZ,A
         SCKW  LS,SHLSZ
         SCKW  ATTN,SHATTN
         SCKW  COLLECT,SHCOLL,A
         SCKW  WRAP,SHWRAP
         SCKW  PAD,SHPAD
         SCKW  CRT,SHCRT
STPRTA2  SCKW  VALUE,,A        FILLED IN AT INIT TO SHOVAR
         SCKW  ESCAPE,SHOESCAP,A
         SCKW  SKIP,SHOSKIP,A
         SCKW  RESCAN,SHORSCN,A
         SCKW  BACK,SHOBACK,A
         SCKW  ,GOSHOW1        END FIRST SHOW TABLE
         SPACE
STPRTB   SCKW  ,,PUSH          FILLED IN AT INIT TO LNENOPRT
         SCKW  PREFIX,SHNAM,(A,S)
PUTSCKW  SCKW  DSNAMES,SHDSNSPA,(A,S)
         SCKW  DIRECTORY,SHDIRCAT,(A,S)
         SCKW  CATLG,SHDIRCAT,(A,S)
         SCKW  CATALOG,SHDIRCAT,(A,S)
         SCKW  SPACE,SHSPACES,(A,S)
         SCKW  TRACKS,SHSPACES,(A,S)
         SCKW  ,TSKTSK
         TITLE 'GOPUT ROUTINE -- PAGE 21'
* GOPUT IS THE PRIMARY ENTRY FOR PUT.
         SPACE
PGOPUT   GENTER C8
         MVI   CPLFLG3,CPFPUT
         SCAN  PUTSCKW
         B     CVABSENT
         TITLE 'END OF PAGED CODE -- PAGE 21'
         PINIT             DEFINE END OF CODE - START OF INIT
         MVC   STPRTA1+1(3),CVSHEXE+1  SET TO SHEXEC
         MVC   STPRTA2+1(3),CVSHOVA+1  SET TO SHOVAR
         MVC   STPRTB+1(3),CVLNENO+1   SET TO LNENOPRT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 22'
P022     PAGECDE SHOSIZ
         WIDENT 001
         TITLE 'SHOW ROUTINES -- PAGE 22'
* SHO SIZE: LIST # OF CHARACTERS IN EACH LINE OF A RANGE
         SPACE
PSHOSIZ  GENTER ,
         OI    CPLFLG1,CPFALL      DEFAULT RANGE IS 'ALL'
*                                  DEFAULT OPTION IS 'COUNT'
         CVCALL DETRNG             FIND RANGE IF SPECIFIED
         XC    CPOVSIZE(8),CPOVSIZE  INITIALIZE
NEXTOKEN SCAN  SHOSIZOP            SCAN FOR A SPECIFIED OPTION
         TM    CPLFLG2,CPFOV+CPFUN WAS OVER AND UNDER GIVEN
         BNO   AWAYWEGO            NO, NO CHECK NEEDED
         L     R6,CPUNSIZE         GET UNDER SIZE
         BCTR  R6,0                SUBTRACT 1
         C     R6,CPOVSIZE         NOW MUST STILL BE > OVSIZE
         BH    AWAYWEGO            BR IF VALUES OK
         SYSQS 1,0,'CAN''T HAVE LINES OVER' SET FIRST PART
         B     OV1                 GO FINISH MESSAGE
         SPACE
AWAYWEGO L     R15,VDOSHOSZ        COME HERE IF NO TOKEN FOUND
         MVI   CPCURRL,X'F0'       SET CURRENT LINE INVALID
         OI    CPLFLG5,CPFNCUR     QUASH CURRENT LINE PNTR UPDAT
         CVCALL DESPOT             GIVE DESPOT FLAGS AND GO THERE
         TM    CPSTAD,CPFSOME      VOID RANGE?
         BZ    NCOMMAND            YES-AVOID FURTHER MESSAGE
         TM    CPLFLG2,CPFFIRST    HAS DO RTN WRITTEN A LINE?
         BO    NCOMMAND            YES AVOID FURTHER MESSAGE
         TM    CPLFLG2,CPFEQ       WAS IT EQUAL?
         BZ    NOEQ                BR NO
         SYSQS 1,0,'NO LINES EQUAL' SET PART OF MESSAGE
         B     NOUN1               GO FINISH MESSAGE
         SPACE
NOEQ     TM    CPLFLG2,CPFOV       WAS IT FOR OVER?
         BZ    NOUN                GO TO PUT OUT FOR UNDER
         SYSQS 1,0,'NO LINES OVER' SET PART OF MESSAGE
OV1      TSEG  (1),(0),B           PUT OUT FIRST PART OF MESSAGE
         L     R6,CPOVSIZE         GET OVER SIZE
         BTD   CPDOUB,3,(6)        CONVERT IT TO BCD
         TSEG  (1),(0)             FINISH UP "NULL" MESSAGE
         TM    CPLFLG2,CPFUN       WAS IT ALSO UNDER?
         BZ    WPM                 NO. GO WRITE.
         SYSQS 1,0,' UNDER'        MSG NEEDS OVER AND UNDER
         B     NOUN1               SKIP AROUND NEXR LINE
         SPACE
NOUN     SYSQS 1,0,'NO LINES UNDER' SET FOR UNDER
NOUN1    TSEG  (1),(0),B           PUT OUT PART OF MESSAGE
         L     R6,CPUNSIZE         GET UNDER SIZE
         BTD   CPDOUB,3,(6)        CONVERT IT TO BCD
         TSEG  (1),(0)             FINISH UP "NULL" MESSAGE
WPM      TWRITE                    TELL THE USER ABOUT IT
NCOMMAND B     CVGETCOM            GO GET THE NEXT COMMAND
         SPACE
GOINVAL1 B     CVNVALID                   GO SAY INVALID
         SPACE 3
         DS    0F                  ALIGNMENT
VDOSHOSZ DC    AL1(UNPRST+DESMATCH+DESRTRN+DESRELA)
         DC    AL3(DOSHOSZ-P022)  ADDR OF WORK ROUTINE
         EJECT
*        FOLLOWING CODE ENTERED FROM SCAN OF TABLE SHOSIZOP
*
*                                  **OPTION FOUND**  **ACTION**
HAVNOCNT OI    CPLFLG2,CPFCOUNT    'NOCOUNT'         FLAG IT
         BR    R14                 RETURN TO SAME SCAN LEVEL
         SPACE
HAVEOVER SCAN  SHOSIZOV            'OVER'            START SCAN
         B     CVABSENT            IF NO PARAMETER--ERROR
         SPACE
HAVUNDER SCAN  SHOSIZUN
         B     CVABSENT            IF NO PARM---ERROR
         SPACE
HAVEQUAL SCAN  SHOSIZEQ            SCAN FOR EQUAL VALUE
         B     CVABSENT            ERROR IF NOTHING
         SPACE 3
*        FOLLOWING CODE ENTERED FROM SCAN OF TABLE SHOSIZOV
*
*                                  **OPTION FOUND**  **ACTION**
GOTLENGT LH    R15,CPLNGTH         'OVER LENGTH'     GET CUR LNG
GOTNUMBR ST    R15,CPOVSIZE        'OVER NUMBER'     SAVE IT
         TM    CPLFLG2,CPFOV+CPFEQ DOES THIS OPTION CONFLICT
         BNZ   CVNVALID            YES, MAKE IT INVALID
         OI    CPLFLG2,CPFOV       SET OVER FLAG
         B     NEXTOKEN            RETURN TO NEXT HIGHER SCAN
         SPACE
GOTLENUN LH    R15,CPLNGTH         'UNDER LENGTH'
GOTNUMU  ST    R15,CPUNSIZE        'UNDER NUMBER'
         TM    CPLFLG2,CPFUN+CPFEQ DOES THIS OPTION CONFLICT
         BNZ   CVNVALID            YES, MAKE IT INVALID
         OI    CPLFLG2,CPFUN       SET UNDER FLAG
         B     NEXTOKEN
         SPACE
GOTLENEQ LH    R15,CPLNGTH         'EQUAL LENGTH'
GOTNUMEQ ST    R15,CPUNSIZE        USE UNDER AREA FOR EQUAL VAL
         TM    CPLFLG2,CPFUN+CPFOV+CPFEQ  DOES THIS OPTION CONFL
         BNZ   CVNVALID            YES, MAKE IT INVALID
         OI    CPLFLG2,CPFEQ       SET EQUAL FLAG
         B     NEXTOKEN
         EJECT
* SHOW SIZE DO ROUTINE ENTRY CONDITIONS:
* R1=POINTER TO TEXT  R0=TEXT COUNT CPLCN0=LINE # INTRNL FMT
         SPACE
DOSHOSZ  XENTER 6,8,*              SMOKEY THE BEAR SAYS-THE REGS
         LR    R6,R0               YOU SAVE MAY BE YOUR OWN
         TM    CPLFLG2,CPFOV+CPFUN+CPFEQ IS IT SHO SIZ ALL?
         BZ    PUTOUT              YES. BRANCH TO PUT OUT
         C     R0,CPOVSIZE         OVER ?
         BNH   SEEUNDER            NO. BRANCH
         OI    CPOVSIZE,CPFOV      MARK OVER
SEEUNDER C     R0,CPUNSIZE         IS IT UNDER?
         BNL   SEEEQUAL            NO. BRANCH.
         OI    CPOVSIZE,CPFUN      MARK UNDER
         B     WELLWELL            GO SEE IF CONDITIONS HOLD
         SPACE
SEEEQUAL BNE   WELLWELL            NOT EQUAL - BRANCH
         OI    CPOVSIZE,CPFEQ      MARK EQUAL
WELLWELL NC    CPOVSIZE(1),CPLFLG2 DO CONDITIONS HOLD?
         XC    CPOVSIZE(1),CPLFLG2
         TM    CPOVSIZE,CPFOV+CPFUN+CPFEQ
         BNZ   NOTQUITE            NO. BRANCH OUT.
PUTOUT   L     R0,CPLCNO           LINE # TO ARG REG FOR CVEXNO
         ST    R0,CPCURRL          UPDATE CURRENT LINE POINTER
         CVCALL CVEXNO             CONVERT IT TO EXTRNL FORMAT
         TSEG  (1),(0),B           BUFFER IT
         TM    CPLFLG2,CPFCOUNT    DO WE HAVE TO SHO THE COUNT??
         BO    WRITE               IF NOT GO WRITE THE LINE
         TSEG  '-',,B              MAKE FANCY LINE
         BTD   CPDOUB,3,(6)        CNVRT BINARY TEXT COUNT TO BCD
         TSEG  (1),(0),B           BUFFER IT
         TM    CPLFLG2,CPFFIRST    MUST WE PUT OUT THE DOODADS??
         BO    WRITE               IF NOT SKIP THE DODAD
         TSEG  'CHARACTERS'        ELSE PUT IT IN..SIGH
WRITE    OI    CPLFLG2,CPFFIRST    SET 'NOT FIRST CALL' FLAG ON
         TWRITE ,
         BP    CVQTYPE             BREAK PROCESSING IF ATTENTION
NOTQUITE XC    CPOVSIZE(1),CPOVSIZE CLEAR HI BITS
         XEXIT 6,8
         EJECT
* SCAN TABLE FOR SHOW SIZE
         SPACE
SHOSIZOP SCKW  OVER,HAVEOVER,A
         SCKW  UNDER,HAVUNDER,A
         SCKW  EQUAL,HAVEQUAL,A
         SCKW  COUNT,NEXTOKEN,A
         SCKW  NOCOUNT,HAVNOCNT,A
         SCKW  ,GOINVAL1
         SPACE 3
* SCAN TABLE FOR SHOW SIZE OVER
         SPACE
SHOSIZOV SCKW  ,GOTNUMBR,I,133
         SCKW  LENGTH,GOTLENGT,A
         SCKW  ,GOINVAL1
         SPACE 3
* SCAN TABLE FOR SHOW SIZE EQUAL
         SPACE
SHOSIZUN SCKW  ,GOTNUMU,PI,133
         SCKW  LENGTH,GOTLENUN,A
         SCKW  ,GOINVAL1
         SPACE 3
* SCAN TABLE FOR SHOW SIZE EQUAL
         SPACE
SHOSIZEQ SCKW  ,GOTNUMEQ,I,133
         SCKW  LENGTH,GOTLENEQ,A
         SCKW  ,GOINVAL1
         TITLE 'END OF PAGED CODE -- PAGE 22'
         PINIT         DEFINE END OF CODE START OF INIT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 25'
P025     PAGECDE SHONAM,SHOVOLS,DECIDE
         WIDENT 2067 12:12:03 03/07/72
         TITLE 'SHOW VOLUMES ROUTINE -- PAGE 25'
* SHOW VOLUMES ROUTINE
*
* LIST VOLUMES VALID IN CURRENT SESSION
*        USE & SAVE VOLUMES ARE LISTED FIRST
*        TEMPORARY VOLUMES ARE LISTED NEXT
*        USE ONLY VOLUMES ARE LISTED LAST
         SPACE
PSHOVOLS GENTER ,
         TSEG  'USE && SAVE --',,B
         LA    R5,CVSTYPE       POINT TO USE&SAVE TIOT IDENT
         LA    R4,10                   SET MAXIMUM FOR A LINE
         BAL   R6,SHVROUT              GO PUT OUT VOLUMES
         TSEG  'TEMPORARY  --',,B
         LA    R5,CVTTYPE              POINT TO TEMP TIOT IDENT
         LA    R4,10                   SET MAXIMUM FOR A LINE
         BAL   R6,SHVROUT              GO PUT OUT VOLUMES
         TSEG  'USE ONLY   --',,B
         LA    R5,CVUTYPE              POINT TO USE TIOT IDENT
         LA    R4,10                   SET MAXIMUM FOR A LINE
         BAL   R6,SHVROUT              GO PUT OUT VOLUMES
         B     CVGETCOM                GO GET NEXT COMMAND
         SPACE 3
SHVROUT  SLR   R6,R10              MAKE RETURN RELATIVE
         SR    R2,R2                   ZERO REGISTER FOR IC
         L     R3,CVTIOT               POINT TO TIOT VOL LIST
SHVROUTL CLC   0(2,R5),4(R3)           DOES VOL IDENT MATCH
         BNE   SHVROUT1               NO, GET NEXT ENTRY
         TM    3(R3),X'10'            IS IT DYNAM?
         BNO   SHVROUT2               NO IT'S OK.
SHVROUT1 IC    R2,0(,R3)               GET COUNT
         AR    R3,R2                   POINT TO NEXT ENTRY
         CLI   0(R3),0                 DONE
         BNE   SHVROUTL                NO, GO DO THIS ENTRY
         TWRITE ,                      WRITE OUT BUFFER
         B     0(R6,R10)               RETURN
         SPACE
SHVROUT2 BCT   R4,SHVROUT3             BRANCH BUFFER NOT FULL
         LA    R4,9                    RESET BUFFER COUNT
         TWRITE ,                      WRITE OUT BUFFER
         BP    0(R6,R10)               RETURN IF ATTN
         TSEG  '             ',,B      INITIALIZE NEW BUFFER
SHVROUT3 L     R1,16(,R3)          GET UCB POINTER
         TM    18(R1),X'20'        DIRECT ACCESS?
         BNO   SHVROUT1            IF NOT DONT DISPLAY.
         TSEG  28(,R1),6,B             PUT VOL IN BUFFER WITH BLK
         B     SHVROUT1                GO GET NEXT ENTRY
         TITLE 'SHO NAM/PREF/MEM/GRO/USE -- PAGE 25'
* ENTER HERE FOR SHOW  NAME, PREFIX, MEMBER, GROUP, AND USER
*     DETERMINE WHICH OPTION WAS SPECIFIED AND GO DO IT
PSHONAM  GENTER ,
         CLC   CPCMNM,=C'NAM'  IS IT NAME
         BE    SHONAM              YES GO SHOW NAME
         CLC   CPCMNM,=C'PRE'      IS IT PREFIX
         BE    SHPFX               YES, GO SHOW PREFIX
         CLC   CPCMNM,=C'MEM'      IS IT MEMBER
         BE    SHMBR               YES, GO SHOW MEMBER
         CLC   CPCMNM,=C'USE'      IS IT USER
         BE    SHUSER              YES, GO SHOW USER
         AIF   ('&USPS' EQ '1').XLBL05                          USPS01
         CLC   CPCMNM(2),=C'GR'    IS IT GROUP
         BE    SHGRP               YES, GO SHOW GROUP
.XLBL05   DS   0H                                               USPS01
GOINVAL  B     CVNVALID                   GO SAY INVALID
         EJECT
*  SHOW PREFIX
         SPACE
SHONAM   OI    CPLFLG3,CPFSET      INDICATE SHOW NAME
         AIF   ('&USPS' EQ '1').XLBL06                          USPS01
         BAL   R2,SHGRP2           GO SHOW GROUP CODE
         TSEG  ':',,B
         BAL   R2,SHUSER2          GO SHOW USER CODE
         TSEG  ':',,B
.XLBL06   DS   0H                                               USPS01
SHPFX    LH    R0,CPPFXL               TEST FOR PREFIX
         LTR   R0,R0
         BNP   NULLPFX                 BR IF NONE
         TM    CPGFLG,CPFCMOFF     TEST TERSE
         BO    SHPFX1              BR IF YES
         TSEG  'PREFIX -',,B
SHPFX1   LH    R0,CPPFXL           PREFIX LENGTH
         TSEG  CPPFX,(0),B
SHPFX2   DS    0H
         TM    CPLFLG3,CPFSET      SHOW PREFIX OR NAMES?
         BZ    CVGETCOM            BR IF SHOW PREFIX
         TSEG  ':',,B
         BAL   R2,SHMBR2           GO SHOW MEMBER
SHGETCOM B     CVGETCOM
         SPACE
NULLPFX  TSEG  'NO PREFIX',,B
         B     SHPFX2
         SPACE 3
         AIF   ('&USPS' EQ '1').XLBL07                          USPS01
* SHOW GROUP
         SPACE
SHGRP    LA    R2,SHGETCOM
SHGRP2   SLR   R2,R10              MAKE RETURN RELATIVE
         TM    CPGFLG,CPFCMOFF     TEST TERSE
         BO    SHGRP3              BR IF YES
         TSEG  'GROUP -',,B
         B     SHGRP4
         SPACE
SHGRP3   TSEG  '@'
SHGRP4   TSEG  CPGRPSV,L'CPGRPSV,B
         B     0(R2,R10)
         SPACE 3
.XLBL07   DS   0H                                               USPS01
* SHOW USER
         SPACE
SHUSER   LA    R2,SHGETCOM
SHUSER2  SLR   R2,R10              MAKE RETURN RELATIVE
         TM    CPGFLG,CPFCMOFF     TEST TERSE
         BO    SHUSER3              BR IF YES
         TSEG  'USER -',,B
         B     SHUSER4
         SPACE
SHUSER3  TSEG  '&&'
         AIF   ('&DCEC' NE '1').LBL04                           JEP00X
SHUSER4  ST    R0,CVSPARES         SAVE R0 PAST TSEG            JEP001
         SR    R0,R0               ZERO IT                      JEP001
         IC    R0,CVUSRFLD         PICK UP USERID LENGTH        JEP001
         TSEG  CPUSERSV,(0),BLANK                               JEP001
         L     R0,CVSPARES         RESTORE R0                   JEP001
         AGO   .LBL05                                           JEP00X
.LBL04   DS    0H                                               JEP00X
SHUSER4  TSEG  CPUSERSV,L'CPUSERSV,B
.LBL05   DS    0H                                               JEP00X
         B     0(R2,R10)
         SPACE 3
* SHOW MEMBER
         SPACE
SHMBR    LA    R2,SHGETCOM
SHMBR2   SLR   R2,R10              MAKE RETURN RELATIVE
         CLI   CPMEMBSV,X'40'      IS THERE A SAVED MEMBER?
         BE    NULLMBR             BR IF NO
         TM    CPGFLG,CPFCMOFF     TEST TERSE
         BO    SHMBR3              BR IF YES
         TSEG  'MEMBER -',,B
         B     SHMBR4
         SPACE
SHMBR3   TSEG  '#'
SHMBR4   TSEG  CPMEMBSV,L'CPMEMBSV
         B     0(R2,R10)
         SPACE
NULLMBR  TSEG  'NO MEMBER'
         B     0(R2,R10)
         TITLE 'DECIDE ROUTINE -- PAGE 25'
PDECIDE  GENTER ,
         TIME  BIN                      GET TIME
         LA    R1,7
         NR    R1,R0                    LEAVE LAST 3 BITS
         MH    R1,=H'12'                INDEX INTO FOLLOWING
         B     *+4(R1)                  GO TO A MESSAGE
         SYSQS 1,0,'MAYBE'
         B     TSEGIT
         SYSQS 1,0,'NO'
         B     TSEGIT
         SYSQS 1,0,'WHY NOT?'
         B     TSEGIT
         SYSQS 1,0,'YES'
         B     TSEGIT
         SYSQS 1,0,'OF COURSE'
         B     TSEGIT
         SYSQS 1,0,'NEVER'
         B     TSEGIT
         SYSQS 1,0,'OK'
         B     TSEGIT
         SYSQS 1,0,'BEATS ME'
TSEGIT   TSEG  (1),(0)
         B     CVGETCOM
         TITLE 'END OF PAGED CODE -- PAGE 25'
         PINIT         DEFINE END OF CODE START OF INIT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 23'
P023     PAGECDE SHODSN
         WIDENT 001
         TITLE 'SHOW DSNAMES AND SHOW SPACE -- PAGE 23'
PSHODSN  GENTER  ,
         XC    CPWK6(4),CPWK6
         CLC   CPCMNM,=C'DSN'      IS IT SHOW DSN
         BE    SHDSNMS             BR YES, ELSE SPACE
         SPACE 3
* SHOW SPACE ROUTINE
         SPACE
SHSPACE  SCANSAVE CPWK1
         BAL   R14,DSNMDO      GO GET AND INIT DSNAME WORK AREA
         MVC   CPCMNM(3),=C'DSN'   MAKE IT LOOK LIKE SHOW DSN
         B     DSNRESCN            NOW GO DO SHOW DSNAMES
         EJECT
* SHOW DSNAMES ROUTINE
*
*
* DSNAME WORK AREA DESCRIBED BY DSNWA ENTRY
*
* 12 BYTES OBTAINED AFTER DSNAME WORK AREA USED AS FOLLOWS:
*   BYTES 1-4 CONTAINS ADDR OF RESCAN ROUTINE.
*   BYTES 5-10 USED TO SAVE VOL WHEN MULT CALLS OF DODSNM
*   BYTES 11-12 USED TO SAVE SHOW DSN SKIP COUNT
         SPACE
SHDSNMS  LA    R14,DSNMDFLT        LOAD INIT EXIT ADDR
         SR    R4,R4               ZERO SKIP COUNTER
DSNMDO   DS    0H
         DENTER SDSNDSZ,C12,,NO
         OI    CPLFLG2,CPFDSNMS    SET NULL DSNAMES OK FLAG
         XC    SDSNQLB(SDSNQSZ),SDSNQLB    CLEAR LOWER BOUND
         MVI   SDSNQUB,X'FF'       FILL UPPER BOUND WITH HIGH
         MVC   SDSNQUB+1(SDSNQSZ-1),SDSNQUB     VALUES
         XC    0(C12,R8),0(R8)     CLEAR WORK AREA
         LA    R15,DSNRESCN        ADDRESS OF SCAN FOR SHOW DSN
         SLR   R15,R10             MAKE ADDRESS RELATIVE
         ST    R15,0(R8)           SAVE IT
         BR    R14                 RETURN OR CONTINUE
         SPACE 3
DSNMDFLT SCTELL ,
         SH    R1,=H'2'            GO BACK TWO CHARS
         AH    R0,=H'2'            ADJUST LENGTH
         ST    R1,0(R13)
         MVC   4(2,R13),0(R1)      SAVE WHATEVER WAS
         LA    R13,8(,R13)         STEAL 8 BYTES
         MVC   0(2,R1),=C'# '      MOVE IN DUMMY OPERAND
         SCINIT (1),(0)            REINIT SCANNER
         CVCALL DODSNM         GO CONSTRUCT DEFAULT LIKE PATTERN
         L     R15,0(R8)           GET SCAN ADDRESS
         S     R13,=F'8'           SUBTRACT 8
         L     R14,0(,R13)         GET BUFFER ADDRESS
         MVC   0(2,R14),4(R13)     MOVE BACK THEM
         B     0(R15,R10)          GO DO IT
         EJECT
DSNRESCN TM    CPLFLG3,CPFPUT
         BO    DIDFIRST
         SCAN  DSONPRT                  VOLUME OR OPTIONS
         B     PUTRID
         SPACE
DIDFIRST NI    CPLFLG5,255-CPFNLST
         L     R0,CPHIPS                HIGHEST LINE NO. YET
         L     R1,CPGLDL                GLOBAL DELTA
         CVCALL LOWMULT                 GET MULTIPLE
         CVCALL ADDER                   ADD
         STM   R0,R1,CPWKPS
         OI    CPWKDL,FNEGBT       SET DELTA NOT SPEC. YET
NOTFIRST CLC   DSNWADSN(4),=X'05050505' IS IT SHO SPA
         BNE   DSNSCAN
         SCAN  PUTOPT
         B     PRYPRY
         SPACE
DSNSCAN  SCAN  PUTSTUFF                 VOLUME OR OPTIONS
PRYPRY   TM    CPLFLG2,CPFCLEAR    WAS CLEAR SPECIFIED
         BZ    PRYOUT              BRANCH NO
         CVCALL DOCLEAR            GO CLEAR ACTIVE FILE
         LM    R2,R3,CPWKPS        SAVE COLLECT VALUES
         LTR   R6,R6               WAS A LINE NUMBER GIVEN
         BZ    PRYCLR2             BRANCH YES
         L     R2,CPGLDL           NO, SET START TO DELTA
PRYCLR2  TM    CPWKDL,FNEGBT             WAS DELTA SPE?
         BZ    PRYCLR1                   YES. BRANCH
         L     R3,CPGLDL
PRYCLR1  STM   R2,R3,CPWKPS        RESET COLLECT VALUES
PRYOUT   MVC   CPNXPS(4),=F'100000000' SET COMPARAND TOO HIGH
         OI    CPLFLG4,CPFSTSPL+CPFSTINS SET SO STOWIT WILL ONLY
         NI    CPWKDL,255-FNEGBT
         TM    CPWKPS,FNEGBT            ILLEGAL LINE NO.?
         BO    BADLINES                 YES
         LA    R1,CPWKPS                1ST LINE NO. FOR LOCATE
         CVCALL LOCATE                  LOCATE
         TM    CPDRPT,CPFMTCH           MATCHING LINE NO.?
         BO    BADLINEM                  YES
         TM    CPDRPT,CPFNTYT+CPFHIGH   OK TO COLLECT TILL 9999.9
         BNZ   POTCHEK                  YES
         MVC   CPNXPS(4),CPLCNO         SET COMPARAND TO NEXT LIN
POTCHEK  L     R0,CPWKPS                LINE NO. TO COLLECT
         ST    R0,CPCURRL          SET CURRENT LINE
         ST    R0,CPLCNO           SET CURRENT LINE
         C     R0,CPNXPS                STILL SMALL ENOUGH?
         BNL   PUTERC                   NO
         TM    CPLFLG2,CPFSCRTC
         BZ    PUTNOCHK
         NI    CPLFLG5,255-CPFNTEX-CPFNLST
PUTNOCHK TM    CPLFLG5,CPFNLST
         BZ    PUTRID
         TM    JCBAFL,JCBSYSPR     SYSTEM PRIVILEGES?
         BO    PUTRID              YES..LET NOLIST STAY
         NI    CPLFLG5,255-CPFNLST NO LIST
PUTRID   TM    CPLFLG3,CPFSET      WAS SET SPECIFIED?
         BZ    DSNCOLL             BR IF NOT
         CVCALL SETPFXNS           GO DO IT
         TWRITE ,
DSNCOLL  NI    CPLFLG3,255-CPFPMSG
POLCHEK  CVCALL VOLCHEK
         XC    CPMDLN(4),CPMDLN    INDICATE NO PAGES
         DVTOC ,                   COLL SHOW DSNAMES ROUTINE
         MVC   CPDSNWA+DSSIZ(2),10(R8)  SAVE SKIP COUNT
DSMBRCOM LTR   R9,R9                    PAGE  9 IN?
         BZ    SKIPMRK                  NO
         PMARK R9
SKIPMRK  LTR   R15,R15                  BAD VOL., TALO, ABORT OR ERROR?
         BZ    NGTDSER                  NO
         CH    R15,=Y(RTNPAGES)          NOT ENUF PAGES?
         BNE   ATTNHIT
         OI    CPLFLG3,CPFPMSG
         TSEG  'INSUFFICIENT PAGES FOR COMPLETE OUTPUT'
         B     GOWARN
ATTNHIT  CH    R15,=Y(RTNSHERR)    SHOW RTN ERROR?
         BNE   CALLNGO             BR IF NOT
         TSEG  'PROCESSING BREAK'
         LTR   R9,R9                    ANYTHING?
         BZ    CVGETCOM                 NO - GET NEW COMMAND
GOWARN   TWRITE ,
NGTDSER  L     R4,CPWK6
         LTR   R4,R4
         BZ    WRIDSSP1
         L     R1,CPNXPS           GET FIRST ILLEGAL
         S     R1,CPWKPS           SUBT FIRST LINENO TO GET SIZE
         SR    R0,R0               ZERO FOR DIVIDE
         DR    R0,R4               CALCULATE MAXIMUM DELTA
         C     R1,CPWKDL           IS WORK DELTA LESS OR EQUAL
         BNL   WRIDSSP1            YES, USE WORK DELTA
         CVCALL SELDELTA           CONVERT IT TO ACTUAL DELTA
         ST    R1,CPWKDL           SAVE DELTA TO USE
WRIDSSP1 PCALL WRIDSSP                 TO 2741'S
         SPACE
CALLNGO  PCALL NTGDOPN
         EJECT
DSNMSPAC OI    CPLFLG3,CPFSPACE
         BR    R14
         SPACE
DSNMTYPE OI    CPLFLG3,CPFTYPE
         BR    R14
         SPACE
DSNMPROT OI    CPLFLG3,CPFPROTF
         BR    R14
         SPACE
DSNDALL  OI    CPLFLG3,CPFPROTF+CPFTYPE+CPFDATED+CPFSPACE
         BR    R14
         SPACE
DSNMSCRT OI    CPLFLG2,CPFSCRTC         SET "SCRATCH" MODE
         BR    R14                       LOOK FOR MORE
         SPACE
DSNMDTED OI    CPLFLG3,CPFDATED         SET DATED OPTION
         BR    R14                       LOOK FOR MORE
         SPACE
SKIP     STH   R15,10(R8)          SAVE SKIP COUNT
         BR    R14
         SPACE
ADLIKE   DS    0H                  LIKE PATTERN
         MVC   4(6,R8),DSNWAVOL    SAVE VOLUME
         CVCALL DODSNM
         L     R15,0(R8)           ADDR OF RESCAN ROUTINE
         ALR   R15,R10             MAKE ADDRESS ABSOLUTE
         CLI   DSNWAVOL,C' '       WAS VOLUME FOUND IN SCAN?
         BNER  R15                 BR IF YES
         CLI   4(R8),C' '          WAS VOLUME THERE BEFORE?
         BER   R15                 GO START SCAN AGAIN
         MVC   DSNWAVOL(6),4(R8)   RESTORE OLD VOLUME
         BR    R15                 GO START SCAN AGAIN
         SPACE 3
DSNMEXCL OI    CPLFLG3,CPFEXCL     MARK EXCLUDE
         SPACE
DSNMFROM LA    R15,SDSNQLB         ADDR OF LOWER BOUND STORAGE
         B     DSNMFMTO            GO TO COMMON ROUTINE
         SPACE
DSNMTO   XC    SDSNQUB(SDSNQSZ),SDSNQUB   CLEAR UPPER BOUND
         SPACE
DSNMTHRU LA    R15,SDSNQUB         ADDR OF UPPER BOUND STORAGE
         SPACE
DSNMFMTO SR    R2,R2               LENGTH REG
         CLI   0(R1),C'$'
         BE    FMTOERR             $ SPEC INVALID
         CLI   0(R1),C'*'          WAS PREFIX USE SPECIFIED?
         BNE   NOFTPFX             BR IF NO
         LH    R2,CPPFXL           GET PREFIX LENGTH
         LTR   R2,R2               IS THERE ONE?
         BZ    NOFTPFX             BR IF NO
         CLI   CPPFX,C'$'          DOES PFX HAVE $?
         BE    FMTOPERR            IT'S NFG IF SO
         LA    R4,CPPFX            ADDR OF SOURCE
         BCTR  R2,0                FOR EX
         EX    R2,FMTOMVC          MOVE PREFIX
         LA    R2,1(R2)            BUMP IT BACK AGAIN
         AR    R15,R2              UPDATE POINTER
         LA    R1,1(R1)            BUMP PAST "*"
         BCTR  R0,0                ALSO ADJUST OPERAND LENGTH
         SPACE
NOFTPFX  LR    R4,R0               OPERAND LENGTH
         AR    R4,R2               PLUS PFX LENGTH
         CH    R4,=H'44'           IS TOTAL OK?
         BH    FMTOLERR            BR IF TOO LONG
         LTR   R2,R0               OPERAND LENGTH
         BZR   R14                 BR IF NULL OPERAND
         LR    R4,R1               ADDR OF OPERAND
         BCTR  R2,0                FOR EX
         EX    R2,FMTOMVC          MOVE OPERAND
         BR    R14                 EXIT TO SCANNER
         SPACE
FMTOMVC  MVC   0(0,R15),0(R4)      MOVE FROM/THRU STRING
         SPACE 3
FMTOERR  TSEG  '$'
         B     FMTOERRX
         SPACE
FMTOPERR TSEG  '$ IN PREFIX'
         SPACE
FMTOERRX B     CVUNLEGL
         SPACE
FMTOLERR TSEG  (1),(0),B
         TSEG  'TOO LONG'
         B     CVQTYPE
         EJECT
HAVTO    LA    R6,POTLNENO-P023    SET LINE NUMBER RETURN
         LCR   R6,R6               SET NEGATIVE TO FLAG RELATIVE
         SCAN  LINPRT              GO GET TO LINE
         B     CVABSENT            MISSING IF NOTHING FOUND
         SPACE
POTLNENO ST    R0,CPWKPS                SET NEW LINE NO. & DELTA
         TM    CPWKDL,FNEGBT             WAS DELTA SPE?
         BZ    POTDEL                    YES. BRANCH
         ST    R1,CPWKDL
POTDEL   SR    R6,R6               FLAG HAVE LINE NUMBER
         B     NOTFIRST
         SPACE
POTDLL   LTR   R15,R15                  ZERO NG
         BZ    CVNVALID                 NG
         ST    R15,CPWKDL               STORE COLLECT DELTA
         B     NOTFIRST
         SPACE 3
BADLINEM L     R0,CPLCNO           GET BAD LINE NUMBER
         CVCALL CVEXNO             CONVERT TO EXTERNAL FORM
         TSEG  (1),(0),B           PUT IT IN MESSAGE
BADLINES TSEG  'LINE NO.'
         B     CVUNLEGL
         SPACE 3
PUTERC   TSEG  'NO REPLACE OR INTERLEAVE'
         B     CVQTYPE
         SPACE 3
BADBAD   B     CVNVALID
         EJECT
* SCAN TABLE FOR SHOW DSNAMES
         SPACE
PUTSTUFF SCKW  AT,HAVTO
         SCKW  BY,POTDLL,(P,LN)
DAPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO CLRPRT
LAPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO LTNPRT
DSONPRT  SCKW  DATED,DSNMDTED,A
         SCKW  LIKE,ADLIKE,A
         SCKW  FROM,DSNMFROM,(P,A)
         SCKW  EXCLUDE,DSNMEXCL,(P,A)
         SCKW  THROUGH,DSNMTHRU,(P,A)
         SCKW  THRU,DSNMTHRU,P
         SCKW  TO,DSNMTO,P
         SCKW  SPACE,DSNMSPAC,A
         SCKW  SIZE,DSNMSPAC,A
         SCKW  TRACKS,DSNMSPAC,A
         SCKW  TYPE,DSNMTYPE,A
         SCKW  PERMIT,DSNMPROT,A
         SCKW  ALL,DSNDALL   SPA TYP DAT
         SCKW  SKIP,SKIP,(P,PI,A),999
         SCKW  SCRATCH,DSNMSCRT,A
DSONPRT1 SCKW  ,,PUSH        FILLED IN AT INIT TO IGDSNPRT
COMPRT   SCKW  SCRATCH,DSNMSCRT,A
DSONPRT2 SCKW  ,BADBAD
         SPACE
LINPRT   SCKW  ,,PUSH        FILLED IN AT INIT TO LNENOPRT
         SCKW  ,BADBAD
         SPACE
PUTOPT   SCKW  AT,HAVTO
         SCKW  BY,POTDLL,(P,LN)
DOPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO CLRPRT
LOPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO LTNPRT
         SCKW  ,DSONPRT2,PUSH
         TITLE 'GETTPAG ROUTINE -- PAGE 23'
GETTPAGR XENTER 15,8,44       SAVE SPACE (USED BY SHOW DSNAMES)
GETTPAG  EQU   GETTPAGR-P023        MAKE RELATIVE ADDRESS
         L     2,CPMDLN       NO PAGES ALREADY
         LTR   2,2            ANY?
         BNP   GETTNO1
         PMARK R9
         CH    R2,=Y(10)                10 MAX
         BNL   SENSAME
GETTNO1  PGET  R9
         BZ    SENSAME
         LA    2,1(2)         ONE MORE
         ST    2,CPMDLN       STORE
         SLL   2,2            POINT AT PLACE TO STORE PAGE NO
         ST    0,CPMDAD-4(2)  STORE PAGE NO
SENSAME  LTR   R9,R9
         XEXIT 15,8
         TITLE 'END OF PAGED CODE -- PAGE 23'
         PINIT             DEFINE END OF CODE - START OF INIT
         MVC   DSONPRT1+1(3),CVIGDSN+1  SET TO IGDSNPRT
         MVC   LINPRT+1(3),CVLNENO+1  SET TO LNENOPRT
         MVC   LAPRC+1(3),CVLTNPR+1   SET TO LTNPRT
         MVC   DAPRC+1(3),CVCLRPR+1   SET TO CLRPRT
         MVC   LOPRC+1(3),CVLTNPR+1   SET TO LTNPRT
         MVC   DOPRC+1(3),CVCLRPR+1   SET TO CLRPRT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 26'
P026     PAGECDE SHOSPAC,DSNERR,GOCOMP
         WIDENT 001
         TITLE 'SHOW SPACE -- PAGE 26'
PSHOSPAC GENTER  ,
         SCAN  SHSPCPRT            SCAN FOR OPTIONS
         B     CVABSENT
         SPACE 3
SHSPCON  DS    0H
         DENTER SDSNDSZ,C12,,NO
         XC    CPDSNWA(DSSIZ),CPDSNWA   CLEAR DSNAME WORK AREA
         MVC   DSNWAVOL(6),0(R15)  SAVE VOLUME
         MVC   DSNWADSN,=X'05050505'  DSN IS FORMAT 5 DSCB
         MVI   DSNWANL+1,4         LENGTH OF DSNAME
         PCALL SHODSN
         TITLE 'ERROR MESSAGES -- PAGE 26'
PDSNERR  GENTER ,
         XC    RTBWC(4),RTBWC
         B     *(R2)               JUMP AROUND
         SPACE
         B     PPOTERD             4
         B     PPOTERC             8
         B     CVGETCOM            12
*                                  16
         SPACE 3
PWHAT    TM    CPLFLG3,CPFPMSG     ALREADY GIVEN 1 OF THESE?
         BO    CVGETCOM            YES. DONT TALK SO MUCH
         PCALL NOMORPG             ALRIGHT..BETTER SAY SOMETHING
         SPACE
PPOTERD  TSEG  '99999.999 EXCEEDED'
         B     CVGETCOM
         SPACE
PPOTERC  TSEG  'ABORTED BY ATTEMPT TO REPLACE OR INTERLEAVE',,B
         MVC   CPWORK1(4),CPCURRL
         CVCALL LSLNMSG   GO DO LAST LINE MSG & DON'T COME BACK
         TITLE 'COMPARE ROUTINE -- PAGE 26'
PGOCOMP  GENTER ,
         SR    R5,R5
         LA    R1,16(,R8)          POINT TO
         CVCALL LOCATE                 HIGH LINE NO
         TM    CPDRPT,CPFNTYT+CPFHIGH  DONE IF TOO HIGH OR NONE
         BNZ   TOOHIX
         SYSQS 6,5,'DON''T '
LOOPA    LR    R1,R8                    POINT AT 1ST LINE NO.
         MVI   32(R8),X'40'
         MVC   33(165,R8),32(R8)
         CVCALL LOCATE                   LOCATE
         TM    CPDRPT,CPFMTCH           MATCH?
         BO    HAVLN1                   YES
         MVC   0(4,R8),CPLCNO           SET FOR NEXT LOCATE
         TM    CPDRPT,CPFPGHI          IS IT END OF PAGE
         BE    HAVLN1                  NO, WE HAVE NEXT LINE
         B     LOOPA                    GET IT
         SPACE 3
HAVLN1   LA    R1,C32(,R8)
         CVCALL UNPRESS
         LR    R2,R0
         PFLIP 11,9                    SAVE PAGE POINTER
LOOPB    LA    R1,16(R8)                POINT AT 2ND LINE NO.
         CVCALL LOCATE                   LOCATE
         TM    CPDRPT,CPFMTCH           MATCH?
         BO    HAVLN2                   YES
         MVC   16(4,R8),CPLCNO          SET FOR NEXT LOCATE
         TM    CPDRPT,CPFPGHI          IS IT END OF PAGE
         BE    HAVLN2                  NO, WE HAVE NEXT LINE
         B     LOOPB                    GET IT
         SPACE
HAVLN2   LA    R1,C32+SZR(,R8)
         CVCALL UNPRESS
         LM    R3,R4,CPWK1
         LTR   R4,R4
         BNZ   GOCOMP
         LR    R4,R2
         CR    R2,R0
         BNL   GOCOMP
         LR    R4,R0
GOCOMP   SR    R4,R3
         BM    COMPOK
         BCTR  R3,0
         LA    R3,0(R8,R3)
         EX    R4,CCCOMP2
         BNE   OUTPUTT                  NOT SAME
COMPOK   LR    R3,R0
         L     R0,16(R8)                LINE 2
         C     R0,CPHIPS           FINISHED LAST LINE IN FILE
         BNL   OUTPAT              YES, REPORT ALL COMPARE
         LA    R1,1                     INCREMENT
         CVCALL ADDER                    NEXT
         ST    R0,16(R8)                SET
         L     R0,0(R8)                 LINE 1
         LA    R1,1                     INCREMENT
         CVCALL ADDER                    NEXT
         ST    R0,0(R8)                 SET
         B     LOOPA                    MORE
         SPACE 3
OUTPAT   SR    R5,R5               ZERO COUNT SO 'DON''T ' OMITTED
OUTPUTT  LR    R3,R0
         L     R0,0(,R8)               LINE 1
         CVCALL CVEXNO                   CONV
         TSEG  (1),(0),B           INTO MSG
         TSEG  '--',,B
         L     R0,16(,R8)              LINE 2
         CVCALL CVEXNO                   CONV
         TSEG  (1),(0),B                INTO MSG
         TSEG  (6),(5)
TOOHIX   TSEG  'COMPARE',,W
         TM    CPLFLG5,CPFNLST     NOLIST OPTION
         BO    CVGETCOM            YES, GO GET NEXT COMMAND
         LTR   R5,R5               DID LAST COMPARE OR NOT
         BZ    CVGETCOM            COMPARE, DO NOT LIST THEM
         LR    R1,R8               POINT TO 1ST LINE NO
COMPLST  LA    R1,C32(,R8)         POINT TO UNPRESS AREA
         MVC   CPLCNO(4),0(R8)
         LR    R0,R2
COMPLST1 CVCALL LISTLINE            FORMAT LINE FOR OUTPUT
         LTR   R5,R5               SECOND TIME THROUGH
         BZ    CVGETCOM            YES, GO GET NEXT COMMAND
         SR    R5,R5               SET SWITCH FOR 2ND PASS
         LA    R1,C32+SZR(,R8)
         LR    R0,R3
         MVC   CPLCNO(4),16(R8)
         B     COMPLST1
         SPACE
CCCOMP2  CLC   C32(1,R3),C32+SZR(R3)
         SPACE 3
* SCAN TABLES FOR SHOW SPACE
         SPACE
INVAL    B     CVNVALID
         SPACE
SHSPCPRT SCKW  ON,SHSPCON,P
SHSPC1   SCKW  ,INVAL
         TITLE 'END OF PAGED CODE -- PAGE 26'
         PINIT             DEFINE END OF CODE - START OF INIT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 24'
P024     PAGECDE WRIDSSP
         WIDENT 001
         TITLE 'WRITE OUTPUT FOR SHOW DSNAMES/SPACE -- PAGE 24'
* WRIDSSP IS USED TO LIST INFORMATION PASSED FROM SHOW DSNAMES
* AND SHOW SPACE
*   CPMDLN CONTAINS THE NUMBER OF PAGES OF INFORMATION.
*   CPMDAD CONTAIN UP TO TEN PAGE NUMBERS.
*   THE FIRST HALF-WORD ON EACH PAGE IS THE PAGE BYTE-COUNT.
*   EACH FIRST BYTE IN A LINE IS THE CHARACTER COUNT FOR THE LINE.
*   A LINE CHARACTER COUNT OF ZERO INDICATES ALL DONE.
*
*   THE WORD AFTER 'DSSIZ' (DSSIZ+4 BELOW) IS USED TO STORE
*   THE SKIP COUNT FOR SHOW DSNAMES AND THE ORIGINAL
*   PATTERN LENGTH FOR SHOW CATLG.
         SPACE
PWRIDSSP DENTER DSSIZ+4,SDSNDSZ-DSSIZ+SBSZ
         NI    CPLFLG3,255-CPFPUTER
         L     R5,CPMDLN                NO. PAGES
         LA    R6,CPMDAD-4              4 BYTES B/4 1ST PAGE NO
         SR    R4,R4
         LTR   R5,R5                    ANY?
         BP    GTNXTPG             YES, START LOOP
         PCALL NOMORPG             NO, ISSUE MESSAGE TO USER
         SPACE
GTNXTPG  LA    R6,4(R6)                 POINT AT NEXT PAGE NO
         LTR   R9,R9                    PAGE IN?
         BZ    GETNXPG                  NO
         PNUM  R9                       WHICH PAGE IS IN?
         C     R0,0(R6)                 RIGHT ONE?
         BE    PROCPAG                  YES
GETNXPG  L     R0,0(R6)                 PAGE NO NEEDED
         PGET  R9,(0)                   GET IT
         LTR   R4,R4
         BNZR  R4
PROCPAG  LA    R3,2                     NO. BYTES PROCESSED ON PAGE
NEXTLINX CH    R3,0(R9)            MORE ON PAGE?
         BNL   GONXPAG                  NO
         TM    CPLFLG2,CPFSTOP          TEST IF MORE WANTED
         BNZ   GONXPAG                  NO MORE
         SR    R2,R2
         IC    R2,0(R3,R9)              LINE CHAR COUNT
         LTR   R0,R2                    ANY?
         BZ    ALLDONN                  NO
LOADAFC  LA    R1,1(R3,R9)         POINT AT 1ST CHAR IN LINE
         SPACE 3
* FORMAT AND WRITE INFORMATION FOR SHOW DSNAMES COMMAND.
*
* REGISTERS ARE USED AS FOLLOWS:
*   R2    CHAR COUNT IN LINE OF DATA.
*   R3    NUMBER OF BYTES PROCESSED IN CURRENT PAGE.
*   R4    POINTS TO CURRENT INPUT LINE (SDSNBUF).
*   R5    NUMBER OF PAGES TO BE PROCESSED.
*   R6    PAGE INDEX POINTER.
         SPACE
         CH    R2,=Y(SBSZ)         IS IT DSNAME LINE?
         BE    WDSN                BR IF YES
         TSEG  (1),(0)             NO - WRITE COMPLETE LINE
         TM    CPLFLG3,CPFPUT
         BZ    LWRITE
         B     DIDNTADD
         SPACE 3
* FORMAT DSNAME RECORD
         SPACE
WDSN     LR    R4,R13              END OF CURRENT WORK AREA
         SH    R4,=Y(SBSZ)         GET AMOUNT ACTUALLY NEEDED
         N     R4,=F'-8'           ALIGN DOUBLEWORD
         MVC   0(SBSZ,R4),0(R1)    MOVE CURRENT RECORD
         AIF   ('&DCEC' EQ '1').LBLX2
         USING SDSNBUF,R4
         AGO   .LBLX3
.LBLX2   DS    0H
         USING SBUF,R4
.LBLX3   DS    0H
         MVC   DSNWADSN,SBDSN      MOVE ACTUAL DSNAME
         LA    R1,0(R8)            ADDR OF WORK AREA
         CLI   SBDSN,X'05'         IS IT SHOW SPACE?
         BE    WNOLTW              BR IF YES
         LH    R0,CPDSNWA+DSSIZ    GET SKIP COUNT
         LTR   R0,R0               TEST VALUE
         BP    WDSNSKP             SKIP THIS ONE
         SYSQS R1,R0,DSNWADSN+43,44
WDSNL    CLI   0(R1),X'40'
         BNE   HAVDSNL             BR IF LAST CHAR
         BCTR  R1,0                CHECK NXT CHAR
         BCT   R0,WDSNL            LOOP
HAVDSNL  STH   R0,DSNWANL          SAVE DSNAME LENGTH
         MVI   DSNWAF1,0           CLEAR ATTRIBUTE FLAGS
         CVCALL DSNSTDDO          GO SET ATTRIBUTE FLAGS
         CVCALL DSNUDSDO          SET MY FLAGS
         CVCALL DSNAMED            GO TSEG DSNAME
         TM    CPLFLG3,CPFDATED+CPFSPACE+CPFTYPE+CPFPROTF
         BZ    NOWWHAT             BR IF NO OTHER OPTIONS
         TM    CPLFLG3,CPFSPACE    WAS SPACE SPECIFIED?
         BZ    WNOSPC              BR IF NO
         SPACE
* FORMAT SPACE INFORMATION
         TSEG  '--',,B
         LA    R1,0(R8)            START OF WORK AREA
         LH    R15,SBLB            LAST TT
         LA    R15,1(R15)          (REL TO 0)
         CH    R15,SPTRK           SAME AS LAST ALLOC TRK?
         BNL   WNOLTW              BR IF YES
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               BUMP PTR BY LENGTH
         MVC   0(4,R1),=C' OF '
         LA    R1,4(R1)
WNOLTW   LH    R15,SPTRK           NUMBER OF TRKS ALLOCATED
         LTR   R15,R15             TEST SPACE ALLOC COMPLETE?
         BNM   WNOLTW2             BR IF YES
         STM   R0,R1,CPDOUB        SAVE AROUND TSEG
         TSEG  '>>'
         LM    R0,R1,CPDOUB
         LPR   R15,R15
WNOLTW2  BTD   (1),0,(15)          CONVERT
         AR    R1,R0               BUMP PTR BY LENGTH
         MVC   0(5,R1),=C' TRKS'
         LA    R1,5(R1)
         CLI   SBNOEX,1            WAS THERE ONE EXTENT?
         BE    WNOEXT              BR IF YES - DON'T BOTHER
         MVC   0(2,R1),=C', '
         LA    R1,2(R1)
         SPACE
* FORMAT NUMBER OF EXTENTS USED
         SR    R15,R15
         IC    R15,SBNOEX          NUMBER OF EXTENTS
         CLI   SBDSN,X'05'         IS IT SHO SPA?
         BNE   *+8                 IF NOT SKIP NEXT INSTR
         LH    R15,SBDSN+8         GET REAL # OF EXTENTS
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               BUMP PTR BY LENGTH
         MVC   0(5,R1),=C' EXTS'
         LA    R1,5(R1)
         CLI   SBDSN,X'05'
         BNE   WNOEXT
         MVC   0(2,R1),=C', '
         LA    R1,2(R1)
         L     R15,SBDSN+4
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               BUMP PTR BY LENGTH
         MVC   0(9,R1),=C' TRKS MAX'
         LA    R1,9(R1)
WNOEXT   LR    R0,R1               CURRENT POINTER
         LA    R1,0(R8)            START OF WORK AREA
         SR    R0,R1               LENGTH OF LINE
         TSEG  (1),(0)
         CLI   SBDSN,X'05'         IS IT SHOW SPACE?
         BE    NOWWHAT
         TM    DSNWAF1,DSNFSTD     STANDARD WYLBUR DSN?
         BZ    WNOSPC
         CLI   SBACCTG,0           ACCOUNTED FOR?
         BNE   WNOSPC
         TM    JCBAFL,JCBSYSPR
         BZ    WNOSPC
         TSEG  ' N/A'              INDICATE NOT ACCOUNTED FOR
         SPACE
* FORMAT  FILE TYPE INFO AND DATE INFO ON SECOND LINE.
WNOSPC   TM    CPLFLG3,CPFTYPE+CPFDATED+CPFPROTF
         BZ    NOWWHAT
         TSEG  '   '               ADD BLANKS
         TM    CPLFLG3,CPFTYPE     WAS TYPE SPECIFIED?
         BZ    WNOTYPE             BR IF NO
         LA    R1,0(R8)            START OF WORK AREA
         SPACE
* FORMAT TYPE INFORMATION
         SR    R15,R15
         NI    SBDSORG,X'E2'       CLEAR GARBAGE BITS
         IC    R15,SBDSORG         GET DSORG BYTE
         SRL   R15,4               MOVE PS,IS,DA TO LOW BITS
         TM    SBDSORG,X'02'       PO?
         BZ    *+8                 BR IF NO
         LA    R15,1(R15)          YES - ADD ITS BIT
         STC   R15,SBDSORG         SAVE DSORG INDEX BYTE
         SPACE
* DSORG NOW HAS LOW ORDER FOUR BITS REPRESENTING PS/IS/DA/PO
         TR    SBDSORG,DSORGTR     TRANSLATE INTO INDEX BYTE
         IC    R15,SBDSORG         GET INDEX
         LA    R15,DSORGTBL(R15)   GET ADDR OF DISPLAY
         MVC   0(2,R1),0(R15)      MOVE TO DISPLAY BUFFER
         MVC   2(2,R1),=C', '
         LA    R1,4(R1)            BUMP PTR
         SPACE
* FORMAT RECFM
         SR    R15,R15
         IC    R15,SBRECFM
         SRL   R15,6               ONLY PROCESS F/V/U
         LA    R15,RECFMTBL(R15)   GET ADDR OF CHAR
         MVC   0(1,R1),0(R15)      MOVE IT TO BFR
         LA    R1,1(R1)
         SPACE
* FORMAT REST OF RECFM
         TM    SBRECFM,X'10'       BLOCKED?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'B'
         LA    R1,1(R1)
         TM    SBRECFM,X'20'       TRACK OVERFLOW?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'T'
         LA    R1,1(R1)
         TM    SBRECFM,X'08'       STANDARD?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'S'
         LA    R1,1(R1)
         TM    SBRECFM,X'04'       ASA CONTROL?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'A'
         LA    R1,1(R1)
         TM    SBRECFM,X'02'       MACHING CONTROL?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'M'
         LA    R1,1(R1)
         MVI   0(R1),C'/'
         LA    R1,1(R1)
         SPACE
* FORMAT LRECL
         LH    R15,SBLRECL
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               PTR PLUS LENGTH
         MVI   0(R1),C'/'
         LA    R1,1(R1)
         SPACE
* FORMAT BLOCKSIZE
         LH    R15,SBBLKSZ
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               PTR+LENGTH
         SPACE
* CHECK IF A KEYLENGTH
         CLI   SBKEYL,0            IS THERE ONE?
         BE    WPRTYPE             BR IF NO
         MVI   0(R1),C'/'
         LA    R1,1(R1)
         SR    R15,R15
         IC    R15,SBKEYL
         BTD   (1),0,(15)
         AR    R1,R0
         SPACE
* PRINT IT
WPRTYPE  LR    R0,R1               CURR PTR
         LA    R1,0(R8)            START OF WORK AREA
         SR    R0,R1               LENGTH
         TSEG  (1),(0)
         TM    CPLFLG3,CPFDATED+CPFPROTF
         BZ    NOWWHAT
         TSEG  ';',,B
WNOTYPE  TM    CPLFLG3,CPFDATED+CPFPROTF
         BZ    NOWWHAT             BR IF NO
WOKTYPE  TM    CPLFLG3,CPFPROTF
         BZ    WDATED
         SPACE
* FORMAT PROTECTION
         CVCALL TPROTF
         TM    CPLFLG3,CPFDATED
         BZ    NOWWHAT
         TSEG  ';',,B
         SPACE
* FORMAT DATES
WDATED   LR    R1,R8
         MVC   CPWK2+1,SBCRDT      CREATION DATE
         MVC   CPWK3+1,SBEXDT      LAST ACCESS DATE
         DROP  R4
         LA    R15,CPWK2           ADDR OF CREATION DATE
         BAL   R4,WCNVDT           GO CONVERT
         MVI   8(R1),C' '          SEPERATOR
         LA    R1,9(R1)           BUMP PTR BY DATE AND PREV
         LA    R15,CPWK3           ADDR OF LAST ACCESS DATE
         BAL   R4,WCNVDT           GO CONVERT
         LA    R1,8(R1)            BUMP PTR BY SECOND DATE
         LR    R0,R1               CURR PTR
         LA    R1,0(R8)            START OF WORK AREA
         SR    R0,R1               LENGTH
NOWTSEG  TSEG  (1),(0)
         B     NOWWHAT             ALL DONE
         SPACE 3
* SHOW DSNAMES SKIP COUNT NOT YET ZERO
         SPACE
WDSNSKP  BCTR  R0,0                DECREMENT BY ONE
         STH   R0,CPDSNWA+DSSIZ    SAVE NEW VALUE
         B     NEXTLIN             GO ON TO NEXT LINE
         EJECT
NEXTRY   LR    R15,R1                  GET ADDR OF LAST CHAR
         AR    R15,R0
NEXTRYX  BCTR  R15,0                   BACK UP ONE CHAR
         CLI   0(R15),C' '              BLANK?
         BNE   NOWTSEG             NO
         BCT   R0,NEXTRYX
NEXTLIN  LA    R3,1(R3,R2)             COUNT TO NEXT LINE
         B     NEXTLINX
         SPACE 3
NOWWHAT  TM    CPLFLG3,CPFPUT            PUT?
         BZ    DONTPUT                   NO. BRANCH.
PONEXT   LM    R0,R1,CPWKPS             LINE NO.
         CVCALL ADDER                   ADD
         BM    POTERD                   TOO BIG
         ST    R0,CPWKPS                SAVE NEXT LINE NO.
         ST    R0,CPLCNO                FOR LISTLINE ROUTIN
DIDNTADD MVC   0(133,R8),RTBTEXT        INTO WORK AREA
         LH    R0,RTBWC
         LR    R1,R8                    SET POINTER
         L     R15,CPWKPS               LINE NO. INTO R15
         CVCALL PRESS                   PRESS
         CVCALL STOWIT                STOW IT AWAY
         BM    POTERC                   REPL ERR
         BNZ   BADFIT
         MVC   CPCURRL(4),CPWKPS   SET CURRENT LINE
         PNUM  R9                       CHECK ON R9?
         C     R0,0(R6)
         BE    NOWWRIT
         BAL   R4,GETNXPG               GET IT BACK
         EJECT
NOWWRIT  LH    R0,RTBWC
         XC    RTBWC(4),RTBWC
         TM    CPLFLG5,CPFNLST          NOLIST?
         BO    NEXTLIN                  YES   BRANCH.
         MVC   0(133,R8),RTBTEXT        INTO WORK AREA
         LR    R1,R8
         CVCALL LISTLINE
         BP    DSNMATTN                 ATTN HIT.
DONTPUT  TM    CPLFLG2,CPFSCRTC         "SCRATCH" OPTION?
         BO    PPROMPTT                 YES
LWRITE   TM    CPLFLG3,CPFPUT            PUT COMMAND?
         BO    NEXTLIN                  LINE ALREADY PRINTED
         TWRITE ,
         BP    DSNMATTN
         B     NEXTLIN
         EJECT
BADFIT   LR     R2,R15                   MAKE A TRADE
         B      CALLPERR
         SPACE
POTERD   LA    R2,4
         B     CALLPERR
         SPACE
POTERC   LA    R2,8
CALLPERR OI    CPLFLG3,CPFPUTER
         SPACE
DSNMATTN OI    CPLFLG2,CPFSTOP          SET TO PRINT NO MORE
GONXPAG  PFREE R9,EMPTY                 SCRATCH PAGE
         SR    R4,R4
         BCT   R5,GTNXTPG               GET NEXT PAGE (IF ANY)
ALLDONN  PFREE R9,EMPTY                 SCRATCH LAST PAGE
         TM    CPLFLG3,CPFPUTER
         BZ    CVGETCOM
         PCALL DSNERR
         SPACE 3
DSORGTR  DC    AL1(0,4,6,0,2),XL3'0',AL1(8),XL7'0'  INDEX VALUES
DSORGTBL DC    C'**PSPODAIS'       DISPLAYS
RECFMTBL DC    C'*VFU'             DISPLAYS
         SPACE 3
* ROUTINE TO CONVERT DSCB DATE INTO MM/DD/YY FORMAT.
*   R1 POINTS TO AREA WHERE CONVERTED DATE TO BE PLACED,
*   R15 POINTS TO FULLWORD WITH DSCB DATE IN LAST THREE BYTES
         SPACE
WCNVDT   SR    R0,R0
         IC    R0,1(R15)           GET YEAR
         MH    R0,=H'1000'         YEAR VALUE
         AH    R0,2(R15)           ADD JULIAN DAY
         CVD   R0,CPDOUB           CONVERT TO DEC
         L     R0,CPDOUB+4         GET VALUE
         CVCALL DATE                CONVERT
         BR    R4                  RETURN
         EJECT
* PROMPT FOR SCRATCH IF DATA SET IS CANDIDATE FOR SCRATCHING
* BY THIS USER.  OTHERWISE, FORGET THE PROMPT.
         SPACE
PPROMPTT TM    JCBAFL,JCBSYSPR     SYSTEM PRIVILEGES?
         BO    PPETC2              YES..LET NOLIST STAY
         TM    DSNWAF1,DSNFMYDS    BELONG TO USER?
         BZ    LWRITE              BR IF NO
         TM    DSNWAF1,DSNFWLIB    IS IT A WYLBUR LIB?
         BO    LWRITE              YES - CON'T PROMPT
PPETC2   SR    R1,R1
         IC    R1,0(R3,R9)
         CH    R1,=Y(SBSZ)
         BNE   LWRITE
         TM    CPLFLG5,CPFPUT
         BO    NOPMARK
         TMARK
NOPMARK  SYSQS R1,R0,'SCRATCH'
PPETC3   TREADR (1),(0)
         BP    DSNMATTN            ABORT IF ATTENTION
         SCINIT (1),(0)                 INIT SCAN
         SCAN  YESSPRT                  LOOK FOR "YES"
         B     NEXTLIN                  DO MORE
         SPACE
YESREPLY DSCRATCH ,                SCRATCH IT
         BZ    NEXTLIN                  ON TO NEXT
         L     R14,CVDSNMED        ADDR OF DSNAMED
         BALR  R14,R14             GO DO PROPER ROUTINE
         TSEG  'NOT SCRATCHED',,W
YESRETN  BP    DSNMATTN
         B     NEXTLIN
         EJECT
YESSPRT  SCKW  YES,YESREPLY
         SCKW  OK,YESREPLY
         SCKW  ,NEXTLIN
         TITLE 'END OF PAGED CODE -- PAGE 24'
         PINIT             DEFINE END OF CODE - START OF INIT
         PEND                      END OF PAGE
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
         EJECT
         COPY  RTNCODES
         TITLE 'COPY MODS'
         AIF   ('&DCEC' EQ '1').LBLX4
SDSNBUF  DSECT
         COPY  SDSNBUF
         SPACE 3
         COPY  SCATBUF
         EJECT
.LBLX4   DS    0F
WDIOWA   WDIOWA DSECT
         EJECT
.LBL06   DS    0H                                               JEP00X
         COMMON ,
         SPACE 3
CPUNSIZE EQU   CPWK2
CPFOV    EQU   X'08'               FLAG FOR OVER SIZE
CPFUN    EQU   X'04'               FLAG FOR UNDER SIZE
CPFEQ    EQU   X'10'               FLAG FOR EQUAL SIZE
         SPACE
         PRINT NOGEN
CVT      DSECT
         CVT   SYS=VMS
         SPACE
         END
./ ADD NAME=PEDP8    0100-80193-80193-1611-02037-02037-00000-$SYS13  00
PEDP     TITLE 'START OF PAGED CODE -- PAGE 2'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
         GBLC    &DCEC             SWITCH FOR DCEC MODS         JEP00X
         GBLC    &USPS                                          USPS01
         GBLC    &CHKSPCE                                       USPS01
&USPS    SETC  '1'                                              USPS01
&DCEC    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE DCEC MODJEP00X
         AIF   ('&DCEC' NE '1').LBL01                           JEP00X
*                                                               JEP006
*                                                               JEP006
* MOD JEP006                                                    JEP006
*  INTERFACED WYLBUR TO TSO'S HELP COMMAND PROCESSOR.           JEP006
*  MODULES AFFECTED: PEDP, PWYL ...DENOTED JEP006 IN 66/71.     JEP006
*                                                               JEP006
*                                                               JEP006
*                                                               JEP001
*                                                               JEP001
*                                                               JEP001
* MOD JEP001                                                    JEP001
*  IMPLEMENTED DCEC NAMING CONVENTIONS. DENOTED JEP001 IN 66/71 JEP001
*  MODULES AFFECTED: PDIO,PEDS,PUTB,INIT MACRO(DSNWA,CVTSO)     JEP001
*                                                               JEP001
*                                                               JEP001
*
* MOD
*  MODULES AFFECTED ARE PWYL, PEDP AND MACRO(ROUTBLE)
*  DENOTED BY  IN CC 66/71.     JERRY PITTENGER
*
*
.LBL01   DS    0H                                               JEP00X
P002     PAGECDE COMPARE,GODUMP,CLEAR
         WIDENT 001
         USING  CPAREA,R12
         TITLE 'DUMP ROUTINE -- PAGE 2'
PGODUMP  GENTER ,
         SCAN  ARGPRT                   GET LOC TO DUMP
         B     CVABSENT                 CAN'T DO
THISS    CH    R0,=Y(8)                 8 CHAR MAX
         BH    CVNVALID                 CAN'T DO
         XCALL HXCVT                    CONVERT ADDR
         LA     R15,GONXCM
         ST     R15,CVSPIEAD
         L     R2,CPDOUB                ADDR TO R2
TINHERE  LA    R13,300(R13)             WORK SPACE
NXLINE   L     R6,CVTPTR                CVT POINTER
         USING CVT,R6
         L     R6,CVTMZ00               CURRENT MACHINE SIZE
         DROP  R6
         S     R6,=A(31)                DON'T PUSH TOO CLOSE TO EOCORE
         CR    R2,R6                    CHECK IF LEGAL CORE VALUE
         BH    GONXCM                   YES
         ST    R2,CPWA+200              START ADDR DUMP
         MVC   CPWA+204(32),0(R2)       CONTENT OF DUMP
         LA    R6,CPWA+100              POINT TO UNPACK AREA
         LA    R5,CPWA+201              SOURCE AREA
         LA    R4,5                     35 SOURCE BYTES = 5 TIMES
NXTUN    UNPK  0(15,R6),0(8,R5)         UNPACK 7 BYTES
         LA    R6,14(R6)                UPDATE PTRS
         LA    R5,7(R5)
         BCT   R4,NXTUN                 MORE?
         TR    CPWA+100(70),HEXTRTB     TRANSLATE
         MVC   CPWA(6),CPWA+100         MOVE ADDR
         LA    R4,CPWA+106              SET SOURCE ADDR START
         LA    R6,2                     2 ROUNDS
         MVC   CPWA+43(3),=C'  *'
         MVC   CPWA+46(16),CPWA+204
         MVI   CPWA+62,C'*'
NXLIN    MVI   CPWA+6,C' '
         LA    R5,CPWA+7                SET TARGET ADDR START
         LA    R3,4                     4 TIMES/ROUND
NXMUV    MVI   0(R5),C' '
         MVC   1(8,R5),0(R4)            MOVE IN 8 CHARS
         LA    R4,8(,R4)                KICK SOURCE PTR
         LA    R5,9(,R5)                & TARGET PTR
         BCT   R3,NXMUV                 MORE IN ROUND
         TR    CPWA+46(16),PRTBL
         TSEG  CPWA,63,W                OUTPUT
         BP    GONXCM
         MVC   CPWA+46(16),CPWA+204+16
         MVC   CPWA(6),=6C' '
         BCT   R6,NXLIN                 NEXT ROUND
         L     R2,CPWA+200              LAST ADDR
         LA    R2,32(R2)                NEXT ADDR
         B     NXLINE                   DO MORE
GONXCM   LR    R13,R8                   RESET R13 B/4 NEXT COMMAND
         B     CVGETCOM                 NEXT COMMAND
         SPACE 3
TDIREC   LA    R2,CPDREC                POINT AT DIREC
         B     TINHERE                  GO
         SPACE
TCPWYL   LA    R2,CPGLDL          POINT AT CPGLDL
         B     TINHERE                  GO
         SPACE
TROUTBLE LA    R2,ROUTBLE          LOAD ADDRESS OF ROUTBLE
         B     TINHERE             GO
         SPACE 3
HEXTRTB  EQU   *-C'0'
         DC    CL16'0123456789ABCDEF'
         SPACE 3
PRTBL    DC    64C'.'
         DC    X'40',10C'.'
         DC    X'4B4C4D4E4F50',9C'.'
         DC    X'5A5B5C5D5E5F6061',9C'.'
         DC    X'6B6C6D6E6F',10C'.'
         DC    X'7A7B7C7D7E7F80818283848586878889',C'.'
         DC    X'8B',5C'.'
         DC    X'919293949596979899',C'.'
         DC    X'9B',6C'.'
         DC    X'A2A3A4A5A6A7A8A9',3C'.'
         DC    X'AD',15C'.'
         DC    X'BD',3C'.'
         DC    X'C1C2C3C4C5C6C7C8C9',7C'.'
         DC    X'D1D2D3D4D5D6D7D8D9',8C'.'
         DC    X'E2E3E4E5E6E7E8E9',6C'.'
         DC    X'F0F1F2F3F4F5F6F7F8F9',6C'.'
         SPACE 3
HXCVT    LR    R2,R0                    SAVE PTRS
         LR    R3,R1
THISNX   CLI   0(R1),C'A'               LESS A NG
         BL    BADADDR                  CAN'T DO
         CLI   0(R1),C'F'               A TO F OK
         BH    THISNUM
         TR    0(1,R1),ALPHTRTB         TRANS
         B     THISOK
         SPACE
THISNUM  CLI   0(R1),C'0'               LESS 0 NG
         BL    BADADDR                  CAN'T DO
         CLI   0(R1),C'9'               GTR 9 NG
         BH    BADADDR                  CAN'T DO
THISOK   LA    R1,1(R1)                 KICK PTR
         BCT   R0,THISNX                MORE?
         EX    R2,PACKEM                PACK IT
         MVI   CPDOUB,X'00'             IGNORE HI ORDER BITS
         NI    CPDOUB+3,X'F8'           ALIGN D-W
         L     R6,CVTPTR
         USING CVT,R6
         L     R6,CVTMZ00
         DROP  R6
         S     R6,=A(31)
         C     R6,CPDOUB
         BL    BADADDR
         BR    R14                      RETURN TO CALLER
         SPACE 3
BADADDR  TSEG  'INVALID ADDRESS'
         B     CVQTYPE
         SPACE
PACKEM   PACK  CPDOUB(5),0(0,R3)
         SPACE
ALPHTRTB EQU   *-C'A'
         DC    X'0A0B0C0D0E0F'
         SPACE 3
ARGPRT   SCKW  DIR,TDIREC
         SCKW  CP,TCPWYL
         SCKW  ROUTBLE,TROUTBLE,A
         SCKW  ,THISS
         TITLE 'COMPARE ROUTINE -- PAGE 2'
PCOMPARE GENTER C32+SZR+SZR
         CLC   CPAGCT(2),=D'0'     IS THERE AN ACTIVE FILE
         BNE   COMPAR1             BRANCH YES
         CVCALL ITSNIL             NO, REPORT ERROR
         SPACE
COMPAR1  LA    R6,LN1HV-P002       SET FOR FIRST LINE NUMBER
         LCR   R6,R6               MAKE REL ADDR NEGATIVE AS FLG
         SR    R2,R2               ZERO FOR IC
         SCAN  LN1PRT              1ST LINE NO.
         B     CVABSENT            VOID NG
         SPACE
LN1HV    ST    R0,0(R8)            SAVE LINE 1
         ST    R0,16(,R8)          SAVE ALSO IN HIGH POSITION
         LA    R6,LN2HV-P002       SET FOR 2ND LINE NUMBER
         LCR   R6,R6               MAKE REL ADDR NEGATIVE AS FLG
         SCAN  LN1PRT              2ND LINE
         B     CVABSENT            VOID NG
         SPACE
LN2HV    LR    R2,R0               SAVE LINE 2
         C     R2,16(,R8)          FIRST OR SECOND LINE NO HIGH
         BL    LLLL                BRANCH IF SECOND HIGH
         BE    TOOHI               IF EQUAL, THEN DONE
         ST    R2,16(,R8)          SET SECOND LINE NO
         B     MMMM                CONTINUE
         SPACE
LLLL     ST    R2,0(,R8)           SET FIRST LINE NO
MMMM     SR    R1,R1
         ST    R1,CPWK2
         LA    R1,1
         ST    R1,CPWK1
         SCAN  COLUMN
         B     COUT
         SPACE
MMMM1    SCAN  COLT
         B     CVABSENT
         SPACE
COLTA    C     R15,=F'133'
         BH    CVNVALID
         ST    R15,CPWK1
         SCAN  COLTE
         B     COUT
         SPACE
COLTF    C     R15,CPWK1
         BL    BADRA
         ST    R15,CPWK2
COUT     PCALL GOCOMP
         SPACE 3
BADRA    TSEG  'BAD COLUMN RANGE'
         B     CVQTYPE
         SPACE
BAD      B     CVNVALID
         SPACE
TOOHI    TSEG  'COMPARE',,W
         B     CVGETCOM            YES, GO GET NEXT COMMAND
         SPACE 3
LN1PRT   SCKW  ,,PUSH       FILLED IN TO LNENOPRT
LN2PRT   SCKW  ,,PUSH       FILLED IN TO LTNPRT
         SCKW  ,BAD
         SPACE
COLUMN   SCKW  COLUMNS,MMMM1,A
         SCKW  ,BAD
         SPACE
COLT     SCKW  ,COLTA,PI,133
COLTE    SCKW  /,COLTF,(P,PI),133
         SCKW  ,BAD
         TITLE 'CLEAR ROUTINE -- PAGE 2'
PCLEAR   GENTER SZR+4  ENTRY FOR CLEAR COMMAND
         LA    R2,TEXTPRT          POINT TO NORMAL SCAN TABLE
GOCLEAR1 SLR   R2,R10              CONVERT PRT ADDR
         LCR   R2,R2               TO RELATIVE ADDR FOR SCAN
         SCTELL (1),(0)            GET OPERANDS
         MVC   4(SZR,R8),0(R1)     MOVE TO WORK AREA
         LA    R1,4(,R8)           POINT TO NEW SCAN AREA
         SCINIT (1),(0)            SET SCANNER TO NEW AREA
         MVC   0(1,R8),CPGFLG2     SAVE CURRENT VALUE OF CPGFLG2
         SCAN  (R2),NO             SCAN FOR OPERANDS
         B     CVABSENT            OP MISSING IF NOTHING
         SPACE
GOCLEAR2 SCAN  (R2),NO             CONTINUE SCAN FOR OTHER OPS
         B     CVGETCOM            GO GET NEXT COMMAND
         SPACE
GGCLEAR  CLC   CPAGCT(2),=D'0'     IS THERE AN ACTIVE FILE
         BNE   GGCLEAR1            BR YES
         TM    0(R8),CPFEXEC+CPFEXTER    EXEC & EXEC TERSE
         BO    GOCLEAR2            YES, DON'T WRITE MESSAGE
         TSEG  'NO ACTIVE FILE',,W
         B     GOCLEAR2            GO GET NEXT OPERAND
         SPACE
GGCLEAR1 CVCALL DOCLEAR            GO CLEAR FILE
         B     GOCLEAR2            NEXT OPERAND
         SPACE
GGCLREX  CLC   CPEXCNT(2),=D'0'    IS THERE AN EXEC FILE
         BNE   GGCLREX1            BR YES
         TSEG  'NO EXEC FILE',,W
         B     GOCLEAR2            GO GET NEXT OPERAND
         SPACE
GGCLREX1 CVCALL DOCLRX             GO CLEAR FILE
         NI    CPGFLG2,255-CPFEXEC RESET EXEC MODE IF ON
         B     GOCLEAR2            NEXT OPERAND
         SPACE
GGCLRTAB XC    RTBTABS(8),RTBTABS  CLEAR TAB SETTINGS
         B     GOCLEAR2            NEXT OPERAND
         SPACE
GGCLRNAM XC    CPPFXL,CPPFXL       CLEAR PREFIX
         MVI   CPMEMBSV,C' '       CLEAR SAVED MEMBER
         AIF   ('&USPS' NE '1').XLBL03                          USPS01
         ST    R6,CVSPARES   SAVE FOR MIN                       USPS01
         SR    R6,R6         ZERO IT                            USPS01
         IC    R6,CVUSRFLD  PICK UP ID LENGTH                   USPS01
         MVC   CPUSERSV(0),CPUSER  RESET ID                     USPS01
         EX    R6,*-6        EXECUTE ABOVE INST                 USPS01
         L     R6,CVSPARES   RELOAD R6                          USPS01
         AGO   .XLBL04                                          USPS01
.XLBL03   DS   0H                                               USPS01
         MVC   CPUSERSV(5),CPUSER  RESET SAVED USER AND GROUP
.XLBL04   DS   0H                                               USPS01
         B     GOCLEAR2            NEXT OPERAND
         SPACE
GGCLRIGN TSEG  (1),(0)             BAD OPERAND -- IGNORE IT
         TSEG  ': IGNORED',,W      WRITE OUT MESSAGE
         B     GOCLEAR2            GO GET NEXT OPERAND
         SPACE 3
TEXTPRT  SCKW  TEXT,GGCLEAR,A
         SCKW  ACTIVE,GGCLEAR,A
         SCKW  EXECUTE,GGCLREX,A
         SCKW  TABS,GGCLRTAB,A
         SCKW  NAME,GGCLRNAM,A
         SCKW  ,GGCLRIGN
         TITLE 'END OF PAGE CODE -- PAGE 2'
         PINIT                     DEFINE START OF INIT ROUTINE
         MVC   LN1PRT+1(3),CVLNENO+1
         MVC   LN2PRT+1(3),CVLTNPR+1
         PEND                      DEFINE END OF INIT CODE
         TITLE 'TSO COMMANDS - INTERFACE ROUTINE - PAGE3'
P003     PAGECDE TSOCMDS
         WIDENT  001
         USING   CPAREA,R12
PTSOCMDS GENTER BLDLSIZ
         USING BLDLWORK,R8    WORK AREA
         CH    R0,=H'8'        COMMAND TOO LONG
         ST    R0,CPWK1        SAVE FOR ILLEGAL COMMAND
         BH    CMDILL          YES.
         LR    R2,R0            CMD LEN FOR EXECUTE
         MVC   BLDLNAM,=CL8' ' CLEAR
         BCTR  R2,R0            DECR
         EX    R2,MOVCMD        MOVE COMMAND FOR ATTACH
         L     R4,CPCTSAV      PICK UP LENGTH OF CMD BUFF
         LA    R4,4(,R4)       UP TO REAL LENGTH
         LA    R5,CPCMSAV      MIN CMD LEN=1+BLANK
         LA    R5,1(,R5)
CMDLOOP  DS    0H
         CLI   0(R5),C' '       CMD+SPACE = OPERAND OFFSET
         BE    OPERAND         FOUND OPERAND OFFSET
         LA    R5,1(,R5)       BUMP TO NEXT POS.
         B     CMDLOOP         LOOP
OPERAND  DS    0H
         LA    R6,CPCMSAV      PICK UP START OF CMD
         SR    R5,R6           GET LENGTH
         LA    R5,1(,R5)       CORRECT FOR SPACE
         STH   R5,CPCTSAV+2     SAVE OPERAND OFFSET
         STH   R4,CPCTSAV       SAVE CMD LEN FOR TSO
         LA    R0,BLDLWORK        FOR BLDL
         MVC   BLDLCNT,=X'0001' FF
         MVC   BLDLLEN,=AL2(BLDLSIZ)   LL
         SLR   R1,R1               ALSO
         SVC   18                  BLDL
         L     R0,CPWK1         FOR ILLEGAL IF NEC
         LA    R1,BLDLNAM       ALSO
         LTR   R15,R15             FOUND
         BNZ   CMDILL              NO EXIT
         TM    BLDLLIB,2        IS IT STEPLIB,JOBLIB ETC
         BO    APFLIB           MUST BE APF LIB
         L     R6,CVIOWA        WORK AREA ADDRESS
         USING WDIOWA,R6
         L     R2,WAUPT         USER PROFILE TABLE
         ST    R2,CPSTART+4
         L     R2,WAPSCB           PSCB
         ST    R2,CPSTART+8
         L     R2,WAECT
         ST    R2,CPSTART+12       ECT
         LA    R2,CPCTSAV          CMD BUFFER
         ST    R2,CPSTART
         LA    R1,CPSTART          PHONEY CPPL
         LA    R14,BLDLNAM
         XC    ATTDECB(4),ATTDECB  CLEAR THE ECB
         LA    R2,ATTDECB          PICK UP ECB ADDR
        ATTACH DE=(14),ECB=(2)
         LR    R3,R1               SAVE TCB ADDR
         WAIT  ECB=(2)             WAIT FOR COMPLETION
         OC    CPCMSAV(25),CPCMSAV READY CMD AREA FOR NEXT
         ST    R3,CPSTART          SETUP FOR DETACH
DETACH   DETACH CPSTART            DETACH CP
         CLI    BLDLNAM,C'Q'       IS IT QUEUE COMMAND
         BNE    NODEL              NO BYPASS DELETE
         DELETE EP=QCMN            DELETE QUEUE COMMON
NODEL    DS     0H
*TURN STAX BACK ON
         LA    R3,WASTAX           STAX WORK AREA
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         L     R14,CVATNRTN
         STAX  (14),REPLACE=YES,DEFER=NO,USADDR=((R12)),MF=(E,(R3))
         OC    CPCMSAV(25),CPCMSAV READY CMD AREA FOR NEXT
         B     CVGETCOM                 NEXT COMMAND
MOVCMD   MVC   BLDLNAM(0),0(R1) EXECUTE ONLY
*
CMDILL   TSEG  (R1),(R0),B
         B      CVUNLEGL           GET NEXT COMMAND
*
APFLIB   TSEG 'COMMAND MUST BE IN LINKLST LIBRARY'
         B     CVQTYPE
*
         DROP  R6
         PINIT
         PEND
BLDLWORK DSECT
BLDLCNT  DS    XL2
BLDLLEN  DS    XL2
BLDLNAM  DS    CL8
BLDLENT  DS    CL62
BLDLLIB  EQU   BLDLENT+4          TYPE OF BLDL LIB
BLDLSIZ  EQU   *-BLDLWORK
         CSECT
.LBLX1   DS     0H
         TITLE 'START OF PAGED CODE -- PAGE 20'
P020     PAGECDE GOCTLG,NTGDCAT,NTGDOPN,NOMORPG
         WIDENT 001
         TITLE 'GOCTLG ROUTINE -- PAGE 20'
PGOCTLG  DENTER DSSIZ
         CVCALL DODSNM
         TM    CPLFLG3,CPFSET      WAS SET SPECIFIED?
         BZ    GOCTLG2             BR IF NOT
         CVCALL SETPFXNS
GOCTLG2  TM    CPLFLG3,CPFDSCLG    CATLG OR RECATLG?
         BZ    GOUNC               BR IF NEITHER
         LNR   R1,R8               INDICATE MANDATORY VOL PRMT
         CVCALL VOLCHKNL           CHECK FOR VOLUME
GOUNC    TM    DSNWAF1,DSNFMYDS    BELONG TO USER?
         BO    CALLCAT
         CVCALL NOTMYDS            GO SEE IF OK
CALLCAT  DCATLG ,                  GO DO FUNCTION
         LR    R2,R15              SAVE RETURN CODE
         CVCALL DSNAMED
         LTR   R15,R2              TEST RETURN CODE
         BNZ   PNTGDCAT            BR IF ERROR
         CVCALL CTLGED
         TM    CPLFLG3,CPFDSCLG    CATLG OR RECATLG?
         BZ    CVGETCOM              EXIT IF NOT
         TSEG  'ON',,B
         TSEG  DSNWAVOL,6
         B     CVGETCOM
         TITLE 'NTGDCAT ROUTINE -- PAGE 20'
PNTGDCAT GENTER ,
         CH    R15,=Y(C8)          WAS RC=8?
         BE    CATRC8P             GO DO PRELIM CHECKING
         CH    R15,=Y(255)         WAS RC=8 AND FUNNY CONDITION
         BNH   CATRCNT8            BR NO
         SYSQS 1,0,'CANN''T CATLG'
         B     NTGDCATX            GO FINISH
         SPACE
CATRCNT8 TSEG  'NOT',,B
         CVCALL CTLGED             GO PRINT FUNCTION NOT DONE
         TSEG  '-',,B
         B     *(R15)              TAKE PROPER BRANCH
         B     CATRC4
         B     CATRC8
         B     NTGDCATX
         B     CATRC16
         B     CATRC20
         B     CATRC24
         B     CATRC28
         SPACE
CATRC4   SYSQS 1,0,'CVOL NOT AVAILABLE'
         B     NTGDCATX
         SPACE
CATRC8   SYSQS 1,0,'NOT IN CATALOG'
         B     NTGDCATX
         SPACE
CATRC16  SYSQS 1,0,'INDEX DOES NOT EXIST'
         B     NTGDCATX
         SPACE
CATRC20  SYSQS 1,0,'NO SPACE ON CVOL'
         B     NTGDCATX
         SPACE
CATRC24  SYSQS 1,0,'IMPROPER GDG NAME'
         B     NTGDCATX
         SPACE
CATRC28  SYSQS 1,0,'I/O ERROR'
         B     NTGDCATX
         SPACE 3
* IF RETURN CODE IS 8 ENTRY FOUND/NOT FOUND
CATRC8P  DS    0H
         TM    CPLFLG3,CPFDSCLG    WAS IT CATLG OR RECATLG?
         BZ    CATRCNT8            BR IF UNCATLG
         SYSQS 1,0,'ALREADY CATLG''D'
         SPACE
NTGDCATX TSEG  (1),(0)             PUT MESSAGE IN BUFFER
         B     CVQTYPE
         TITLE 'OPEN ERROR MESSAGE ROUTINE -- PAGE 20'
PNTGDOPN GENTER ,
         LR    R6,R15              SAVE ERROR CONDITION
         LR    R5,R0               SAVE ANY PARM PASSED BACK
         CH    R15,=Y(RTNCATER)    IS IT POSSIBLE CATASTRPHE?
         BNL   CATER
         CH    R15,=Y(TALOCODE)    TALO ON DOPEN?
         BNL   THISEN(R15)         DON'T PRINT DSNAME
         CVCALL DSNAMED            DSNAME INTO MESSAGE
THISEN   B     THISEN(R6)     BRANCH TO PROPER CONTINUATION
         SPACE
         B     NOSUCH         4
         B     CVGETCOM       8 - HANDLED ELSEWHERE
         B     NOROOM         12
         B     BATCH          16
         B     ILLBLKSZ       20
         B     DSILLEG        24
         B     ILLORG         28
         B     CVGETCOM       32    TALO
         B     ABORTMS        36    ABORT
         B     BDVOLM         40
         B     ILLMEMB        44
         B     NODIRSPC       48
         B     EXPDTPRO       52
         B     OUTOFSP        56
         B     DIRIOERR       60
         B     ABORTMS        64      SHOULDN'T HAPPEN
         B     PROTERR        68
         SPACE 3
ILLORG   DS    0H
         SYSQS 1,0,': ILLEGAL DSORG OR RECFM'
         B     NTGDOPNX
         SPACE
DSILLEG  SYSQS 1,0,': ILLEGAL DSNAME'
         B     NTGDOPNX
         SPACE
BDVOLM   DS    0H
         TSEG  DSNWAVOL,6
         SYSQS 1,0,': INVALID VOLUME'
         B     NTGDOPNX
         SPACE
NOSUCH   TSEG  'NOT',,B
VOLTOMSG TSEG  'ON',,B
         TSEG  DSNWAVOL,6,B
         CLI   DSNWAF2,DSNFSHOW+DSNFCAT  IS CMND SHOW CATLG?
         BNE   CVQTYPE             BR IF NOT
         BTD   CPDOUB,0,(R5)       GET LAST GOOD INDEX LEVEL
         TSEG  (1),(0),B
         SYSQS 1,0,'LEVELS OK'
         B     NTGDOPNX
         SPACE
NOROOM   TSEG  'CAN''T FIND SPACE',,B
         B     VOLTOMSG
         SPACE
CATER    TSEG  'ERROR #'
         ST    R5,CPDOUB           SAVE FORMATTED ERROR NUMBER
         TSEG  CPDOUB+1,3          AND WRITE IT
         SYSQS 1,0,'. I/O INCOMPLETE'
         B     NTGDOPNX
BATCH    SYSQS 1,0,'IS IN USE'
         B     ABORMS
         SPACE
PROTERR  CVCALL DSNAMED
         SYSQS 1,0,'IS PROTECTED'
         B     ABORMS
         SPACE
OUTOFSP  SYSQS 1,0,'ALLOWED DISK SPACE EXCEEDED'
         B     ABORMS
         SPACE
EXPDTPRO CVCALL DSNAMED            PUT OUT DSNAME
         SYSQS 1,0,'IS DATE PROTECTED'
         SPACE
ABORMS   TSEG  (1),(0),M
ABORTMS  SYSQS 1,0,'REQUEST ABORTED'
         B     NTGDOPNX
         SPACE
ILLMEMB  TSEG  'MEMBER',,B
         TM    DSNWAMBR,X'BF'      WAS MEMBER SPECIFIED?
         BZ    ILLMEMB2            NO - THAT'S WHAT'S WRONG
         CVCALL MEMBERED           GO TSEG MEMBER NAME
         SYSQS 1,0,'NOT FOUND'
         B     NTGDOPNX
         SPACE
ILLMEMB2 SYSQS 1,0,'NOT SPECIFIED'
         B     NTGDOPNX
         SPACE
ILLBLKSZ TSEG  ':',,B
         BTD   CPDOUB,0,(R5)       GET INVALID BLOCKSIZE
         TSEG  (1),(0),B
         SYSQS 1,0,'INVALID BLOCK SIZE'
         SPACE
NTGDOPNX TSEG  (1),(0)             PUT MESSAGE INTO BUFFER
         B     CVQTYPE             GO GET NEXT COMMAND
         SPACE
NODIRSPC DS    0H
         TSEG  'NO DIRECTORY SPACE IN',,B
DIRDSN   CVCALL DSNAMED            PUT IN DSNAME
         B     CVQTYPE             GO GET NEXT COMMAND
         SPACE
DIRIOERR TSEG  'DIRECTORY I/O ERROR IN',,B
         B     DIRDSN              GO PUT IN DSNAME
         TITLE 'PAGE SHORTAGE MESSAGES -- PAGE 20'
PNOMORPG GENTER ,
         TM    CPGFLG,CPFOPN  IS ANY EXTERNAL DATA SET NOT CLOSED?
         BZ    READYZ         NO
         DCLOSE ,             CLOSE IT
         NI    CPGFLG,255-CPFOPN SET CLOSED
READYZ   XC    RTBWC(4),RTBWC
         TSEG  'WYLBUR OUT OF PAGES -- COMMAND ABORTED'
         B     CVQTYPE                  GET NEW COMMAND
         TITLE 'END OF PAGED CODE -- PAGE 20'
         PINIT             DEFINE END OF CODE - START OF INIT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 21'
P021     PAGECDE GOSHO,GOPUT
         WIDENT 001
         TITLE 'GOSHOW ROUTINE -- PAGE 21'
* GOSHOW IS THE PRIMARY ENTRY FOR SHOW.
         SPACE
PGOSHO   GENTER C8
         SCANSAVE 0(R8)            SAVE SCAN POINTERS FOR LATER
         MVI   CPLFLG3,X'00'
         SCAN  STPRTA                   SCAN FOR OPTIONS
         B     CVABSENT                 ILLEGAL COMMAND
         SPACE 3
* MIGHT BE SHOW LINENO -- SET UP FOR THAT
         SPACE
GOSHOW1  SCANRSTR 0(R8)            RESTORE SCAN POINTERS
         CVCALL SCNEXFR            SEE IF SELECT EXECUTE
         LA    R6,SHOLNENO-P021    SET R6 FOR LINE NO.
         LCR   R6,R6                  WITH NEG RELATIVE ADDR
         SCAN  STPRTB              SCAN FOR LINE NUMBER
         B     CVABSENT            NOTHING -- SHOULDN'T HAPPEN
         SPACE
SHOLNENO SYSQS 6,5,'LINE NUMBER'   SET FOR NORMAL LINE NUMBER
         CH    R15,=Y(24)          VALUE TOO LARGE FOR BR TABLE
         BH    CONVTRR             YES, SHOW AS LINE NUMBER
         LTR   R15,R15             POSITIVE VALUE RETURNED
         BNH   CONVTRR             NO, SHOW AS LINE NUMBER
         B     *(R15)              GO TO PROPER ROUTINE
         SPACE
         B     FIRST               FIRST SPECIFIED
         B     CURRENT             CURRENT SPECIFIED
         B     LAST                LAST SPECIFIED
         B     END                 END SPECIFIED
         B     NEXT                NEXT SPECIFIED
         B     PREVIOUS            PREVIOUS SPECIFIED
         SPACE 3
CURRENT  SYSQS 6,5,'CURRENT'       POINT TO TEXT
         B     CONVTRR             GO OUTPUT IT
         SPACE
LAST     SYSQS 6,5,'LAST'          SET OPTION
         B     CONVTRR             FINISH
         SPACE
FIRST    SYSQS 6,5,'FIRST'         SET FOR FIRST MESSAGE
         B     CONVTRR             GO OUTPUT NOW
         SPACE
END      SYSQS 6,5,'END'           SET FOR END MESSAGE
         B     CONVTRR             GO OUTPUT NOW
         SPACE
NEXT     SYSQS 6,5,'NEXT'          SET FOR NEXT MESSAGE
         B     CONVTRR             GO OUTPUT NOW
         SPACE
PREVIOUS SYSQS 6,5,'PREVIOUS'      SET FOR PREVIOUS MESSAGE
         B     CONVTRR             GO FINISH
         SPACE
DELTA    SYSQS 6,5,'DELTA'         SET OPTION
         L     R0,CPGLDL           DELTA INTO R0
CONVTRR  CVCALL CVEXNO             CONVERT
         B     OUTPUTR             OUTPUT
         SPACE
SIZEA    SYSQS 6,5,'PAGES'         SET OPTION
         LH    R15,CPAGCT          LOAD PAGE COUNT
         B     LNGTHB              CONTINUE
         SPACE
LNGTHA   SYSQS 6,5,'LENGTH'        SET OPTION
         LH    R15,CPLNGTH         LEN INTO R15
LNGTHB   SR    R0,R0               ZERO
         BTD   CPDOUB,(0),(15)     CONV TO INTEGER
OUTPUTR  TSEG  (1),(0),B           INTO MSG
SSSNPT   TSEG  '-',,B
SSSOPT   TSEG  (6),(5)             OPTION INTO MESSAGE
         B     CVGETCOM
         SPACE 3
SHLOG    TM    CPGFLG2,CPFNOLOG    TEST IF NOLOG ON
         BNO   SHLOG2              NO
         TSEG  'NO'
SHLOG2   SYSQS 1,0,'LOG'           PUT LOG IN MESSAGE
INEFFECT TSEG  (1),(0),B
         TSEG  'IS IN EFFECT'      WRITE REST OF MESSAGE
         B     CVGETCOM
         SPACE 3
SHCOLL   TM    RTBUFL,RTBUNCOL     NO COLLECT?
         BNO   SHCOLL2
         TSEG  'NO'
SHCOLL2  SYSQS 1,0,'COLLECT'
         B     INEFFECT
         SPACE 3
SHWRAP   TM    RTBMFL,RTBWRAP      IS IT WRAP
         BO    SHWRAP2
         TSEG  'NO'
SHWRAP2  SYSQS 1,0,'WRAP'
         B     INEFFECT
         SPACE 3
SHPAD    TM    RTBUFL,RTBUPAD
         BO    SHPAD2
         TSEG  'NO'
SHPAD2   SYSQS 1,0,'PAD'
         B     INEFFECT
         SPACE 3
SHCRT    TM    RTBMFL,RTBCRT
         BO    SHCRT2
         TSEG  'NO'
SHCRT2   SYSQS 1,0,'CRT'
         B     INEFFECT
         SPACE 3
SHOBACK  TM    RTBUFL,RTBUBACK
         BO    SHOBACK2
         TSEG  'NO'
SHOBACK2 SYSQS 1,0,'BACK'
         B     INEFFECT
         SPACE 3
SHPSZ    LA    R15,RTBPSZ
         SYSQS 6,5,'PAGESIZE'
         B     SHLPSZ
         SPACE 3
SHLSZ    LA    R15,RTBLSZ
         SYSQS 6,5,'LINESIZE'
SHLPSZ   L     R14,RTBWAPTR
         LH    R15,0(R15,R14)
         B     LNGTHB
         SPACE 3
SHATTN   SYSQS 6,5,'ATTN SEQUENCE'
         TM    RTBUFL,RTBUATTN
         BNO   VOLNONE
         L     R14,RTBWAPTR
         LA    R1,RTBATTN(,R14)
         LH    R0,RTBATNSZ(,R14)
         B     OUTPUTR
         SPACE 3
VOLSHOW  SYSQS 6,5,'VOLUME'
         TM    CPGFLG,CPFVOLM      DEFAULT?
         BZ    VOLNONE             NO
         TSEG  CPVOLSV,6,B         SET DEFAULT VOL
         B     SSSNPT              PUT OPTION INTO MSG
         SPACE
VOLNONE  TSEG  'NO',,B             NONE
         B     SSSOPT              PUT OPTION INTO MSG
         SPACE 3
SHOESCAP SYSQS 6,5,'ESCAPE CHAR'   SET OPTION
         LA    R1,CPESCAPE         GET ESCAPE CHAR
         TM    CPGFLG2,CPESNULL    IS IT NULL
SHESCSK  BO    VOLNONE             BRANCH YES
         LA    R0,1                SET LENGTH
         B     OUTPUTR             GO FINISH
         SPACE
SHOSKIP  SYSQS 6,5,'SKIP CHAR'     SET OPTION
         LA    R1,CPSKIP           GET SKIP CHAR
         TM    CPGFLG2,CPSKNULL    IS IT NULL
         B     SHESCSK             BRANCH YES
         SPACE
SHORSCN  LH    R15,CPRSCNVL        GET RESCAN VALUE
         SYSQS 6,5,'RESCAN COUNT'  SET OPTION
         B     LNGTHB              GO FINISH
         SPACE 3
CCASE    TM    CPGFLG,CPFUPLW      TEST IF UPPER-LOWER BIT ON
         BO    ISUPLOW             YES
         TSEG  'UPPER CASE ONLY'
         B     CVGETCOM            GET NEW COMMAND
         SPACE
TSKTSK   B     CVNVALID
         SPACE
ISUPLOW  TSEG  'UPPER-LOWER CASE'
         B     CVGETCOM            GET NEW COMMAND
         EJECT
* CALL VARIOUS SHOW COMMANDS IMPLEMENTED IN OTHER PAGES
* NAME, PREFIX, MEMBER, DSNAME, USER, GROUP
         SPACE
SHNAM    PCALL SHONAM
         SPACE
TABSA    PCALL GOTAB               GO DO TABS
         SPACE
COLUMNS  PCALL SHOCOL              CALL SHOW COLUMNS ROUTINE
         SPACE
SHDSNSPA PCALL SHODSN
         SPACE
SHSPACES PCALL SHOSPAC
         SPACE
SHDIRCAT PCALL SHOCAT
         SPACE
SHVOLS   PCALL SHOVOLS
         SPACE
FINDSIZE PCALL SHOSIZ
         SPACE
INFO     PCALL TIME
         SPACE
PROFIL   PCALL PROFIL
         SPACE
LISTUSR  PCALL LSTUSR
         SPACE
         EJECT
* SCAN ROUTINES FOR SHOW
         SPACE
STPRTA   SCKW  DELTA,DELTA,A
         SCKW  LENGTH,LNGTHA,A
         SCKW  CASE,CCASE,A
         SCKW  VOLUME,VOLSHOW,A
         SCKW  NAME,SHNAM,(A,S)
         SCKW  GROUP,SHNAM,(A,S)
         SCKW  USERS,LISTUSR
         SCKW  USER,SHNAM,(A,S)
         SCKW  MEMBER,SHNAM,(A,S)
         SCKW  LOG,SHLOG
         SCKW  SIZE,FINDSIZE,A
         SCKW  PAGES,SIZEA,A
STPRTA1  SCKW  EXECUTE,,A      FILLED IN AT INIT TO SHEXEC
         SCKW  VOLUMES,SHVOLS
         SCKW  VOLS,SHVOLS
         SCKW  TIME,INFO,(A,S)
         SCKW  DATE,INFO,(A,S)
         SCKW  PROFILE,PROFIL,A
         SCKW  TABS,TABSA,A
         SCKW  COLUMNS,COLUMNS,A
         SCKW  COLS,COLUMNS
         SCKW  PAGESIZE,SHPSZ,A
         SCKW  PS,SHPSZ,A
         SCKW  LINESIZE,SHLSZ,A
         SCKW  LS,SHLSZ
         SCKW  ATTN,SHATTN
         SCKW  COLLECT,SHCOLL,A
         SCKW  WRAP,SHWRAP
         SCKW  PAD,SHPAD
         SCKW  CRT,SHCRT
STPRTA2  SCKW  VALUE,,A        FILLED IN AT INIT TO SHOVAR
         SCKW  ESCAPE,SHOESCAP,A
         SCKW  SKIP,SHOSKIP,A
         SCKW  RESCAN,SHORSCN,A
         SCKW  BACK,SHOBACK,A
         SCKW  ,GOSHOW1        END FIRST SHOW TABLE
         SPACE
STPRTB   SCKW  ,,PUSH          FILLED IN AT INIT TO LNENOPRT
         SCKW  PREFIX,SHNAM,(A,S)
PUTSCKW  SCKW  DSNAMES,SHDSNSPA,(A,S)
         SCKW  DIRECTORY,SHDIRCAT,(A,S)
         SCKW  CATLG,SHDIRCAT,(A,S)
         SCKW  CATALOG,SHDIRCAT,(A,S)
         SCKW  SPACE,SHSPACES,(A,S)
         SCKW  TRACKS,SHSPACES,(A,S)
         SCKW  ,TSKTSK
         TITLE 'GOPUT ROUTINE -- PAGE 21'
* GOPUT IS THE PRIMARY ENTRY FOR PUT.
         SPACE
PGOPUT   GENTER C8
         MVI   CPLFLG3,CPFPUT
         SCAN  PUTSCKW
         B     CVABSENT
         TITLE 'END OF PAGED CODE -- PAGE 21'
         PINIT             DEFINE END OF CODE - START OF INIT
         MVC   STPRTA1+1(3),CVSHEXE+1  SET TO SHEXEC
         MVC   STPRTA2+1(3),CVSHOVA+1  SET TO SHOVAR
         MVC   STPRTB+1(3),CVLNENO+1   SET TO LNENOPRT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 22'
P022     PAGECDE SHOSIZ
         WIDENT 001
         TITLE 'SHOW ROUTINES -- PAGE 22'
* SHO SIZE: LIST # OF CHARACTERS IN EACH LINE OF A RANGE
         SPACE
PSHOSIZ  GENTER ,
         OI    CPLFLG1,CPFALL      DEFAULT RANGE IS 'ALL'
*                                  DEFAULT OPTION IS 'COUNT'
         CVCALL DETRNG             FIND RANGE IF SPECIFIED
         XC    CPOVSIZE(8),CPOVSIZE  INITIALIZE
NEXTOKEN SCAN  SHOSIZOP            SCAN FOR A SPECIFIED OPTION
         TM    CPLFLG2,CPFOV+CPFUN WAS OVER AND UNDER GIVEN
         BNO   AWAYWEGO            NO, NO CHECK NEEDED
         L     R6,CPUNSIZE         GET UNDER SIZE
         BCTR  R6,0                SUBTRACT 1
         C     R6,CPOVSIZE         NOW MUST STILL BE > OVSIZE
         BH    AWAYWEGO            BR IF VALUES OK
         SYSQS 1,0,'CAN''T HAVE LINES OVER' SET FIRST PART
         B     OV1                 GO FINISH MESSAGE
         SPACE
AWAYWEGO L     R15,VDOSHOSZ        COME HERE IF NO TOKEN FOUND
         MVI   CPCURRL,X'F0'       SET CURRENT LINE INVALID
         OI    CPLFLG5,CPFNCUR     QUASH CURRENT LINE PNTR UPDAT
         CVCALL DESPOT             GIVE DESPOT FLAGS AND GO THERE
         TM    CPSTAD,CPFSOME      VOID RANGE?
         BZ    NCOMMAND            YES-AVOID FURTHER MESSAGE
         TM    CPLFLG2,CPFFIRST    HAS DO RTN WRITTEN A LINE?
         BO    NCOMMAND            YES AVOID FURTHER MESSAGE
         TM    CPLFLG2,CPFEQ       WAS IT EQUAL?
         BZ    NOEQ                BR NO
         SYSQS 1,0,'NO LINES EQUAL' SET PART OF MESSAGE
         B     NOUN1               GO FINISH MESSAGE
         SPACE
NOEQ     TM    CPLFLG2,CPFOV       WAS IT FOR OVER?
         BZ    NOUN                GO TO PUT OUT FOR UNDER
         SYSQS 1,0,'NO LINES OVER' SET PART OF MESSAGE
OV1      TSEG  (1),(0),B           PUT OUT FIRST PART OF MESSAGE
         L     R6,CPOVSIZE         GET OVER SIZE
         BTD   CPDOUB,3,(6)        CONVERT IT TO BCD
         TSEG  (1),(0)             FINISH UP "NULL" MESSAGE
         TM    CPLFLG2,CPFUN       WAS IT ALSO UNDER?
         BZ    WPM                 NO. GO WRITE.
         SYSQS 1,0,' UNDER'        MSG NEEDS OVER AND UNDER
         B     NOUN1               SKIP AROUND NEXR LINE
         SPACE
NOUN     SYSQS 1,0,'NO LINES UNDER' SET FOR UNDER
NOUN1    TSEG  (1),(0),B           PUT OUT PART OF MESSAGE
         L     R6,CPUNSIZE         GET UNDER SIZE
         BTD   CPDOUB,3,(6)        CONVERT IT TO BCD
         TSEG  (1),(0)             FINISH UP "NULL" MESSAGE
WPM      TWRITE                    TELL THE USER ABOUT IT
NCOMMAND B     CVGETCOM            GO GET THE NEXT COMMAND
         SPACE
GOINVAL1 B     CVNVALID                   GO SAY INVALID
         SPACE 3
         DS    0F                  ALIGNMENT
VDOSHOSZ DC    AL1(UNPRST+DESMATCH+DESRTRN+DESRELA)
         DC    AL3(DOSHOSZ-P022)  ADDR OF WORK ROUTINE
         EJECT
*        FOLLOWING CODE ENTERED FROM SCAN OF TABLE SHOSIZOP
*
*                                  **OPTION FOUND**  **ACTION**
HAVNOCNT OI    CPLFLG2,CPFCOUNT    'NOCOUNT'         FLAG IT
         BR    R14                 RETURN TO SAME SCAN LEVEL
         SPACE
HAVEOVER SCAN  SHOSIZOV            'OVER'            START SCAN
         B     CVABSENT            IF NO PARAMETER--ERROR
         SPACE
HAVUNDER SCAN  SHOSIZUN
         B     CVABSENT            IF NO PARM---ERROR
         SPACE
HAVEQUAL SCAN  SHOSIZEQ            SCAN FOR EQUAL VALUE
         B     CVABSENT            ERROR IF NOTHING
         SPACE 3
*        FOLLOWING CODE ENTERED FROM SCAN OF TABLE SHOSIZOV
*
*                                  **OPTION FOUND**  **ACTION**
GOTLENGT LH    R15,CPLNGTH         'OVER LENGTH'     GET CUR LNG
GOTNUMBR ST    R15,CPOVSIZE        'OVER NUMBER'     SAVE IT
         TM    CPLFLG2,CPFOV+CPFEQ DOES THIS OPTION CONFLICT
         BNZ   CVNVALID            YES, MAKE IT INVALID
         OI    CPLFLG2,CPFOV       SET OVER FLAG
         B     NEXTOKEN            RETURN TO NEXT HIGHER SCAN
         SPACE
GOTLENUN LH    R15,CPLNGTH         'UNDER LENGTH'
GOTNUMU  ST    R15,CPUNSIZE        'UNDER NUMBER'
         TM    CPLFLG2,CPFUN+CPFEQ DOES THIS OPTION CONFLICT
         BNZ   CVNVALID            YES, MAKE IT INVALID
         OI    CPLFLG2,CPFUN       SET UNDER FLAG
         B     NEXTOKEN
         SPACE
GOTLENEQ LH    R15,CPLNGTH         'EQUAL LENGTH'
GOTNUMEQ ST    R15,CPUNSIZE        USE UNDER AREA FOR EQUAL VAL
         TM    CPLFLG2,CPFUN+CPFOV+CPFEQ  DOES THIS OPTION CONFL
         BNZ   CVNVALID            YES, MAKE IT INVALID
         OI    CPLFLG2,CPFEQ       SET EQUAL FLAG
         B     NEXTOKEN
         EJECT
* SHOW SIZE DO ROUTINE ENTRY CONDITIONS:
* R1=POINTER TO TEXT  R0=TEXT COUNT CPLCN0=LINE # INTRNL FMT
         SPACE
DOSHOSZ  XENTER 6,8,*              SMOKEY THE BEAR SAYS-THE REGS
         LR    R6,R0               YOU SAVE MAY BE YOUR OWN
         TM    CPLFLG2,CPFOV+CPFUN+CPFEQ IS IT SHO SIZ ALL?
         BZ    PUTOUT              YES. BRANCH TO PUT OUT
         C     R0,CPOVSIZE         OVER ?
         BNH   SEEUNDER            NO. BRANCH
         OI    CPOVSIZE,CPFOV      MARK OVER
SEEUNDER C     R0,CPUNSIZE         IS IT UNDER?
         BNL   SEEEQUAL            NO. BRANCH.
         OI    CPOVSIZE,CPFUN      MARK UNDER
         B     WELLWELL            GO SEE IF CONDITIONS HOLD
         SPACE
SEEEQUAL BNE   WELLWELL            NOT EQUAL - BRANCH
         OI    CPOVSIZE,CPFEQ      MARK EQUAL
WELLWELL NC    CPOVSIZE(1),CPLFLG2 DO CONDITIONS HOLD?
         XC    CPOVSIZE(1),CPLFLG2
         TM    CPOVSIZE,CPFOV+CPFUN+CPFEQ
         BNZ   NOTQUITE            NO. BRANCH OUT.
PUTOUT   L     R0,CPLCNO           LINE # TO ARG REG FOR CVEXNO
         ST    R0,CPCURRL          UPDATE CURRENT LINE POINTER
         CVCALL CVEXNO             CONVERT IT TO EXTRNL FORMAT
         TSEG  (1),(0),B           BUFFER IT
         TM    CPLFLG2,CPFCOUNT    DO WE HAVE TO SHO THE COUNT??
         BO    WRITE               IF NOT GO WRITE THE LINE
         TSEG  '-',,B              MAKE FANCY LINE
         BTD   CPDOUB,3,(6)        CNVRT BINARY TEXT COUNT TO BCD
         TSEG  (1),(0),B           BUFFER IT
         TM    CPLFLG2,CPFFIRST    MUST WE PUT OUT THE DOODADS??
         BO    WRITE               IF NOT SKIP THE DODAD
         TSEG  'CHARACTERS'        ELSE PUT IT IN..SIGH
WRITE    OI    CPLFLG2,CPFFIRST    SET 'NOT FIRST CALL' FLAG ON
         TWRITE ,
         BP    CVQTYPE             BREAK PROCESSING IF ATTENTION
NOTQUITE XC    CPOVSIZE(1),CPOVSIZE CLEAR HI BITS
         XEXIT 6,8
         EJECT
* SCAN TABLE FOR SHOW SIZE
         SPACE
SHOSIZOP SCKW  OVER,HAVEOVER,A
         SCKW  UNDER,HAVUNDER,A
         SCKW  EQUAL,HAVEQUAL,A
         SCKW  COUNT,NEXTOKEN,A
         SCKW  NOCOUNT,HAVNOCNT,A
         SCKW  ,GOINVAL1
         SPACE 3
* SCAN TABLE FOR SHOW SIZE OVER
         SPACE
SHOSIZOV SCKW  ,GOTNUMBR,I,133
         SCKW  LENGTH,GOTLENGT,A
         SCKW  ,GOINVAL1
         SPACE 3
* SCAN TABLE FOR SHOW SIZE EQUAL
         SPACE
SHOSIZUN SCKW  ,GOTNUMU,PI,133
         SCKW  LENGTH,GOTLENUN,A
         SCKW  ,GOINVAL1
         SPACE 3
* SCAN TABLE FOR SHOW SIZE EQUAL
         SPACE
SHOSIZEQ SCKW  ,GOTNUMEQ,I,133
         SCKW  LENGTH,GOTLENEQ,A
         SCKW  ,GOINVAL1
         TITLE 'END OF PAGED CODE -- PAGE 22'
         PINIT         DEFINE END OF CODE START OF INIT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 25'
P025     PAGECDE SHONAM,SHOVOLS,DECIDE
         WIDENT 2067 12:12:03 03/07/72
         TITLE 'SHOW VOLUMES ROUTINE -- PAGE 25'
* SHOW VOLUMES ROUTINE
*
* LIST VOLUMES VALID IN CURRENT SESSION
*        USE & SAVE VOLUMES ARE LISTED FIRST
*        TEMPORARY VOLUMES ARE LISTED NEXT
*        USE ONLY VOLUMES ARE LISTED LAST
         SPACE
PSHOVOLS GENTER ,
         TSEG  'USE && SAVE --',,B
         LA    R5,CVSTYPE       POINT TO USE&SAVE TIOT IDENT
         LA    R4,10                   SET MAXIMUM FOR A LINE
         BAL   R6,SHVROUT              GO PUT OUT VOLUMES
         TSEG  'TEMPORARY  --',,B
         LA    R5,CVTTYPE              POINT TO TEMP TIOT IDENT
         LA    R4,10                   SET MAXIMUM FOR A LINE
         BAL   R6,SHVROUT              GO PUT OUT VOLUMES
         TSEG  'USE ONLY   --',,B
         LA    R5,CVUTYPE              POINT TO USE TIOT IDENT
         LA    R4,10                   SET MAXIMUM FOR A LINE
         BAL   R6,SHVROUT              GO PUT OUT VOLUMES
         B     CVGETCOM                GO GET NEXT COMMAND
         SPACE 3
SHVROUT  SLR   R6,R10              MAKE RETURN RELATIVE
         SR    R2,R2                   ZERO REGISTER FOR IC
         L     R3,CVTIOT               POINT TO TIOT VOL LIST
SHVROUTL CLC   0(2,R5),4(R3)           DOES VOL IDENT MATCH
         BNE   SHVROUT1               NO, GET NEXT ENTRY
         TM    3(R3),X'10'            IS IT DYNAM?
         BNO   SHVROUT2               NO IT'S OK.
SHVROUT1 IC    R2,0(,R3)               GET COUNT
         AR    R3,R2                   POINT TO NEXT ENTRY
         CLI   0(R3),0                 DONE
         BNE   SHVROUTL                NO, GO DO THIS ENTRY
         TWRITE ,                      WRITE OUT BUFFER
         B     0(R6,R10)               RETURN
         SPACE
SHVROUT2 BCT   R4,SHVROUT3             BRANCH BUFFER NOT FULL
         LA    R4,9                    RESET BUFFER COUNT
         TWRITE ,                      WRITE OUT BUFFER
         BP    0(R6,R10)               RETURN IF ATTN
         TSEG  '             ',,B      INITIALIZE NEW BUFFER
SHVROUT3 L     R1,16(,R3)          GET UCB POINTER
         TM    18(R1),X'20'        DIRECT ACCESS?
         BNO   SHVROUT1            IF NOT DONT DISPLAY.
         TSEG  28(,R1),6,B             PUT VOL IN BUFFER WITH BLK
         B     SHVROUT1                GO GET NEXT ENTRY
         TITLE 'SHO NAM/PREF/MEM/GRO/USE -- PAGE 25'
* ENTER HERE FOR SHOW  NAME, PREFIX, MEMBER, GROUP, AND USER
*     DETERMINE WHICH OPTION WAS SPECIFIED AND GO DO IT
PSHONAM  GENTER ,
         CLC   CPCMNM,=C'NAM'  IS IT NAME
         BE    SHONAM              YES GO SHOW NAME
         CLC   CPCMNM,=C'PRE'      IS IT PREFIX
         BE    SHPFX               YES, GO SHOW PREFIX
         CLC   CPCMNM,=C'MEM'      IS IT MEMBER
         BE    SHMBR               YES, GO SHOW MEMBER
         CLC   CPCMNM,=C'USE'      IS IT USER
         BE    SHUSER              YES, GO SHOW USER
         AIF   ('&USPS' EQ '1').XLBL05                          USPS01
         CLC   CPCMNM(2),=C'GR'    IS IT GROUP
         BE    SHGRP               YES, GO SHOW GROUP
.XLBL05   DS   0H                                               USPS01
GOINVAL  B     CVNVALID                   GO SAY INVALID
         EJECT
*  SHOW PREFIX
         SPACE
SHONAM   OI    CPLFLG3,CPFSET      INDICATE SHOW NAME
         AIF   ('&USPS' EQ '1').XLBL06                          USPS01
         BAL   R2,SHGRP2           GO SHOW GROUP CODE
         TSEG  ':',,B
         BAL   R2,SHUSER2          GO SHOW USER CODE
         TSEG  ':',,B
.XLBL06   DS   0H                                               USPS01
SHPFX    LH    R0,CPPFXL               TEST FOR PREFIX
         LTR   R0,R0
         BNP   NULLPFX                 BR IF NONE
         TM    CPGFLG,CPFCMOFF     TEST TERSE
         BO    SHPFX1              BR IF YES
         TSEG  'PREFIX -',,B
SHPFX1   LH    R0,CPPFXL           PREFIX LENGTH
         TSEG  CPPFX,(0),B
SHPFX2   DS    0H
         TM    CPLFLG3,CPFSET      SHOW PREFIX OR NAMES?
         BZ    CVGETCOM            BR IF SHOW PREFIX
         TSEG  ':',,B
         BAL   R2,SHMBR2           GO SHOW MEMBER
SHGETCOM B     CVGETCOM
         SPACE
NULLPFX  TSEG  'NO PREFIX',,B
         B     SHPFX2
         SPACE 3
         AIF   ('&USPS' EQ '1').XLBL07                          USPS01
* SHOW GROUP
         SPACE
SHGRP    LA    R2,SHGETCOM
SHGRP2   SLR   R2,R10              MAKE RETURN RELATIVE
         TM    CPGFLG,CPFCMOFF     TEST TERSE
         BO    SHGRP3              BR IF YES
         TSEG  'GROUP -',,B
         B     SHGRP4
         SPACE
SHGRP3   TSEG  '@'
SHGRP4   TSEG  CPGRPSV,L'CPGRPSV,B
         B     0(R2,R10)
         SPACE 3
.XLBL07   DS   0H                                               USPS01
* SHOW USER
         SPACE
SHUSER   LA    R2,SHGETCOM
SHUSER2  SLR   R2,R10              MAKE RETURN RELATIVE
         TM    CPGFLG,CPFCMOFF     TEST TERSE
         BO    SHUSER3              BR IF YES
         TSEG  'USER -',,B
         B     SHUSER4
         SPACE
SHUSER3  TSEG  '&&'
         AIF   ('&DCEC' NE '1').LBL04                           JEP00X
SHUSER4  ST    R0,CVSPARES         SAVE R0 PAST TSEG            JEP001
         SR    R0,R0               ZERO IT                      JEP001
         IC    R0,CVUSRFLD         PICK UP USERID LENGTH        JEP001
         TSEG  CPUSERSV,(0),BLANK                               JEP001
         L     R0,CVSPARES         RESTORE R0                   JEP001
         AGO   .LBL05                                           JEP00X
.LBL04   DS    0H                                               JEP00X
SHUSER4  TSEG  CPUSERSV,L'CPUSERSV,B
.LBL05   DS    0H                                               JEP00X
         B     0(R2,R10)
         SPACE 3
* SHOW MEMBER
         SPACE
SHMBR    LA    R2,SHGETCOM
SHMBR2   SLR   R2,R10              MAKE RETURN RELATIVE
         CLI   CPMEMBSV,X'40'      IS THERE A SAVED MEMBER?
         BE    NULLMBR             BR IF NO
         TM    CPGFLG,CPFCMOFF     TEST TERSE
         BO    SHMBR3              BR IF YES
         TSEG  'MEMBER -',,B
         B     SHMBR4
         SPACE
SHMBR3   TSEG  '#'
SHMBR4   TSEG  CPMEMBSV,L'CPMEMBSV
         B     0(R2,R10)
         SPACE
NULLMBR  TSEG  'NO MEMBER'
         B     0(R2,R10)
         TITLE 'DECIDE ROUTINE -- PAGE 25'
PDECIDE  GENTER ,
         TIME  BIN                      GET TIME
         LA    R1,7
         NR    R1,R0                    LEAVE LAST 3 BITS
         MH    R1,=H'12'                INDEX INTO FOLLOWING
         B     *+4(R1)                  GO TO A MESSAGE
         SYSQS 1,0,'MAYBE'
         B     TSEGIT
         SYSQS 1,0,'NO'
         B     TSEGIT
         SYSQS 1,0,'WHY NOT?'
         B     TSEGIT
         SYSQS 1,0,'YES'
         B     TSEGIT
         SYSQS 1,0,'OF COURSE'
         B     TSEGIT
         SYSQS 1,0,'NEVER'
         B     TSEGIT
         SYSQS 1,0,'OK'
         B     TSEGIT
         SYSQS 1,0,'BEATS ME'
TSEGIT   TSEG  (1),(0)
         B     CVGETCOM
         TITLE 'END OF PAGED CODE -- PAGE 25'
         PINIT         DEFINE END OF CODE START OF INIT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 23'
P023     PAGECDE SHODSN
         WIDENT 001
         TITLE 'SHOW DSNAMES AND SHOW SPACE -- PAGE 23'
PSHODSN  GENTER  ,
         XC    CPWK6(4),CPWK6
         CLC   CPCMNM,=C'DSN'      IS IT SHOW DSN
         BE    SHDSNMS             BR YES, ELSE SPACE
         SPACE 3
* SHOW SPACE ROUTINE
         SPACE
SHSPACE  SCANSAVE CPWK1
         BAL   R14,DSNMDO      GO GET AND INIT DSNAME WORK AREA
         MVC   CPCMNM(3),=C'DSN'   MAKE IT LOOK LIKE SHOW DSN
         B     DSNRESCN            NOW GO DO SHOW DSNAMES
         EJECT
* SHOW DSNAMES ROUTINE
*
*
* DSNAME WORK AREA DESCRIBED BY DSNWA ENTRY
*
* 12 BYTES OBTAINED AFTER DSNAME WORK AREA USED AS FOLLOWS:
*   BYTES 1-4 CONTAINS ADDR OF RESCAN ROUTINE.
*   BYTES 5-10 USED TO SAVE VOL WHEN MULT CALLS OF DODSNM
*   BYTES 11-12 USED TO SAVE SHOW DSN SKIP COUNT
         SPACE
SHDSNMS  LA    R14,DSNMDFLT        LOAD INIT EXIT ADDR
         SR    R4,R4               ZERO SKIP COUNTER
DSNMDO   DS    0H
         DENTER SDSNDSZ,C12,,NO
         OI    CPLFLG2,CPFDSNMS    SET NULL DSNAMES OK FLAG
         XC    SDSNQLB(SDSNQSZ),SDSNQLB    CLEAR LOWER BOUND
         MVI   SDSNQUB,X'FF'       FILL UPPER BOUND WITH HIGH
         MVC   SDSNQUB+1(SDSNQSZ-1),SDSNQUB     VALUES
         XC    0(C12,R8),0(R8)     CLEAR WORK AREA
         LA    R15,DSNRESCN        ADDRESS OF SCAN FOR SHOW DSN
         SLR   R15,R10             MAKE ADDRESS RELATIVE
         ST    R15,0(R8)           SAVE IT
         BR    R14                 RETURN OR CONTINUE
         SPACE 3
DSNMDFLT SCTELL ,
         SH    R1,=H'2'            GO BACK TWO CHARS
         AH    R0,=H'2'            ADJUST LENGTH
         ST    R1,0(R13)
         MVC   4(2,R13),0(R1)      SAVE WHATEVER WAS
         LA    R13,8(,R13)         STEAL 8 BYTES
         MVC   0(2,R1),=C'# '      MOVE IN DUMMY OPERAND
         SCINIT (1),(0)            REINIT SCANNER
         CVCALL DODSNM         GO CONSTRUCT DEFAULT LIKE PATTERN
         L     R15,0(R8)           GET SCAN ADDRESS
         S     R13,=F'8'           SUBTRACT 8
         L     R14,0(,R13)         GET BUFFER ADDRESS
         MVC   0(2,R14),4(R13)     MOVE BACK THEM
         B     0(R15,R10)          GO DO IT
         EJECT
DSNRESCN TM    CPLFLG3,CPFPUT
         BO    DIDFIRST
         SCAN  DSONPRT                  VOLUME OR OPTIONS
         B     PUTRID
         SPACE
DIDFIRST NI    CPLFLG5,255-CPFNLST
         L     R0,CPHIPS                HIGHEST LINE NO. YET
         L     R1,CPGLDL                GLOBAL DELTA
         CVCALL LOWMULT                 GET MULTIPLE
         CVCALL ADDER                   ADD
         STM   R0,R1,CPWKPS
         OI    CPWKDL,FNEGBT       SET DELTA NOT SPEC. YET
NOTFIRST CLC   DSNWADSN(4),=X'05050505' IS IT SHO SPA
         BNE   DSNSCAN
         SCAN  PUTOPT
         B     PRYPRY
         SPACE
DSNSCAN  SCAN  PUTSTUFF                 VOLUME OR OPTIONS
PRYPRY   TM    CPLFLG2,CPFCLEAR    WAS CLEAR SPECIFIED
         BZ    PRYOUT              BRANCH NO
         CVCALL DOCLEAR            GO CLEAR ACTIVE FILE
         LM    R2,R3,CPWKPS        SAVE COLLECT VALUES
         LTR   R6,R6               WAS A LINE NUMBER GIVEN
         BZ    PRYCLR2             BRANCH YES
         L     R2,CPGLDL           NO, SET START TO DELTA
PRYCLR2  TM    CPWKDL,FNEGBT             WAS DELTA SPE?
         BZ    PRYCLR1                   YES. BRANCH
         L     R3,CPGLDL
PRYCLR1  STM   R2,R3,CPWKPS        RESET COLLECT VALUES
PRYOUT   MVC   CPNXPS(4),=F'100000000' SET COMPARAND TOO HIGH
         OI    CPLFLG4,CPFSTSPL+CPFSTINS SET SO STOWIT WILL ONLY
         NI    CPWKDL,255-FNEGBT
         TM    CPWKPS,FNEGBT            ILLEGAL LINE NO.?
         BO    BADLINES                 YES
         LA    R1,CPWKPS                1ST LINE NO. FOR LOCATE
         CVCALL LOCATE                  LOCATE
         TM    CPDRPT,CPFMTCH           MATCHING LINE NO.?
         BO    BADLINEM                  YES
         TM    CPDRPT,CPFNTYT+CPFHIGH   OK TO COLLECT TILL 9999.9
         BNZ   POTCHEK                  YES
         MVC   CPNXPS(4),CPLCNO         SET COMPARAND TO NEXT LIN
POTCHEK  L     R0,CPWKPS                LINE NO. TO COLLECT
         ST    R0,CPCURRL          SET CURRENT LINE
         ST    R0,CPLCNO           SET CURRENT LINE
         C     R0,CPNXPS                STILL SMALL ENOUGH?
         BNL   PUTERC                   NO
         TM    CPLFLG2,CPFSCRTC
         BZ    PUTNOCHK
         NI    CPLFLG5,255-CPFNTEX-CPFNLST
PUTNOCHK TM    CPLFLG5,CPFNLST
         BZ    PUTRID
         TM    JCBAFL,JCBSYSPR     SYSTEM PRIVILEGES?
         BO    PUTRID              YES..LET NOLIST STAY
         NI    CPLFLG5,255-CPFNLST NO LIST
PUTRID   TM    CPLFLG3,CPFSET      WAS SET SPECIFIED?
         BZ    DSNCOLL             BR IF NOT
         CVCALL SETPFXNS           GO DO IT
         TWRITE ,
DSNCOLL  NI    CPLFLG3,255-CPFPMSG
POLCHEK  CVCALL VOLCHEK
         XC    CPMDLN(4),CPMDLN    INDICATE NO PAGES
         DVTOC ,                   COLL SHOW DSNAMES ROUTINE
         MVC   CPDSNWA+DSSIZ(2),10(R8)  SAVE SKIP COUNT
DSMBRCOM LTR   R9,R9                    PAGE  9 IN?
         BZ    SKIPMRK                  NO
         PMARK R9
SKIPMRK  LTR   R15,R15                  BAD VOL., TALO, ABORT OR ERROR?
         BZ    NGTDSER                  NO
         CH    R15,=Y(RTNPAGES)          NOT ENUF PAGES?
         BNE   ATTNHIT
         OI    CPLFLG3,CPFPMSG
         TSEG  'INSUFFICIENT PAGES FOR COMPLETE OUTPUT'
         B     GOWARN
ATTNHIT  CH    R15,=Y(RTNSHERR)    SHOW RTN ERROR?
         BNE   CALLNGO             BR IF NOT
         TSEG  'PROCESSING BREAK'
         LTR   R9,R9                    ANYTHING?
         BZ    CVGETCOM                 NO - GET NEW COMMAND
GOWARN   TWRITE ,
NGTDSER  L     R4,CPWK6
         LTR   R4,R4
         BZ    WRIDSSP1
         L     R1,CPNXPS           GET FIRST ILLEGAL
         S     R1,CPWKPS           SUBT FIRST LINENO TO GET SIZE
         SR    R0,R0               ZERO FOR DIVIDE
         DR    R0,R4               CALCULATE MAXIMUM DELTA
         C     R1,CPWKDL           IS WORK DELTA LESS OR EQUAL
         BNL   WRIDSSP1            YES, USE WORK DELTA
         CVCALL SELDELTA           CONVERT IT TO ACTUAL DELTA
         ST    R1,CPWKDL           SAVE DELTA TO USE
WRIDSSP1 PCALL WRIDSSP                 TO 2741'S
         SPACE
CALLNGO  PCALL NTGDOPN
         EJECT
DSNMSPAC OI    CPLFLG3,CPFSPACE
         BR    R14
         SPACE
DSNMTYPE OI    CPLFLG3,CPFTYPE
         BR    R14
         SPACE
DSNMPROT OI    CPLFLG3,CPFPROTF
         BR    R14
         SPACE
DSNDALL  OI    CPLFLG3,CPFPROTF+CPFTYPE+CPFDATED+CPFSPACE
         BR    R14
         SPACE
DSNMSCRT OI    CPLFLG2,CPFSCRTC         SET "SCRATCH" MODE
         BR    R14                       LOOK FOR MORE
         SPACE
DSNMDTED OI    CPLFLG3,CPFDATED         SET DATED OPTION
         BR    R14                       LOOK FOR MORE
         SPACE
SKIP     STH   R15,10(R8)          SAVE SKIP COUNT
         BR    R14
         SPACE
ADLIKE   DS    0H                  LIKE PATTERN
         MVC   4(6,R8),DSNWAVOL    SAVE VOLUME
         CVCALL DODSNM
         L     R15,0(R8)           ADDR OF RESCAN ROUTINE
         ALR   R15,R10             MAKE ADDRESS ABSOLUTE
         CLI   DSNWAVOL,C' '       WAS VOLUME FOUND IN SCAN?
         BNER  R15                 BR IF YES
         CLI   4(R8),C' '          WAS VOLUME THERE BEFORE?
         BER   R15                 GO START SCAN AGAIN
         MVC   DSNWAVOL(6),4(R8)   RESTORE OLD VOLUME
         BR    R15                 GO START SCAN AGAIN
         SPACE 3
DSNMEXCL OI    CPLFLG3,CPFEXCL     MARK EXCLUDE
         SPACE
DSNMFROM LA    R15,SDSNQLB         ADDR OF LOWER BOUND STORAGE
         B     DSNMFMTO            GO TO COMMON ROUTINE
         SPACE
DSNMTO   XC    SDSNQUB(SDSNQSZ),SDSNQUB   CLEAR UPPER BOUND
         SPACE
DSNMTHRU LA    R15,SDSNQUB         ADDR OF UPPER BOUND STORAGE
         SPACE
DSNMFMTO SR    R2,R2               LENGTH REG
         CLI   0(R1),C'$'
         BE    FMTOERR             $ SPEC INVALID
         CLI   0(R1),C'*'          WAS PREFIX USE SPECIFIED?
         BNE   NOFTPFX             BR IF NO
         LH    R2,CPPFXL           GET PREFIX LENGTH
         LTR   R2,R2               IS THERE ONE?
         BZ    NOFTPFX             BR IF NO
         CLI   CPPFX,C'$'          DOES PFX HAVE $?
         BE    FMTOPERR            IT'S NFG IF SO
         LA    R4,CPPFX            ADDR OF SOURCE
         BCTR  R2,0                FOR EX
         EX    R2,FMTOMVC          MOVE PREFIX
         LA    R2,1(R2)            BUMP IT BACK AGAIN
         AR    R15,R2              UPDATE POINTER
         LA    R1,1(R1)            BUMP PAST "*"
         BCTR  R0,0                ALSO ADJUST OPERAND LENGTH
         SPACE
NOFTPFX  LR    R4,R0               OPERAND LENGTH
         AR    R4,R2               PLUS PFX LENGTH
         CH    R4,=H'44'           IS TOTAL OK?
         BH    FMTOLERR            BR IF TOO LONG
         LTR   R2,R0               OPERAND LENGTH
         BZR   R14                 BR IF NULL OPERAND
         LR    R4,R1               ADDR OF OPERAND
         BCTR  R2,0                FOR EX
         EX    R2,FMTOMVC          MOVE OPERAND
         BR    R14                 EXIT TO SCANNER
         SPACE
FMTOMVC  MVC   0(0,R15),0(R4)      MOVE FROM/THRU STRING
         SPACE 3
FMTOERR  TSEG  '$'
         B     FMTOERRX
         SPACE
FMTOPERR TSEG  '$ IN PREFIX'
         SPACE
FMTOERRX B     CVUNLEGL
         SPACE
FMTOLERR TSEG  (1),(0),B
         TSEG  'TOO LONG'
         B     CVQTYPE
         EJECT
HAVTO    LA    R6,POTLNENO-P023    SET LINE NUMBER RETURN
         LCR   R6,R6               SET NEGATIVE TO FLAG RELATIVE
         SCAN  LINPRT              GO GET TO LINE
         B     CVABSENT            MISSING IF NOTHING FOUND
         SPACE
POTLNENO ST    R0,CPWKPS                SET NEW LINE NO. & DELTA
         TM    CPWKDL,FNEGBT             WAS DELTA SPE?
         BZ    POTDEL                    YES. BRANCH
         ST    R1,CPWKDL
POTDEL   SR    R6,R6               FLAG HAVE LINE NUMBER
         B     NOTFIRST
         SPACE
POTDLL   LTR   R15,R15                  ZERO NG
         BZ    CVNVALID                 NG
         ST    R15,CPWKDL               STORE COLLECT DELTA
         B     NOTFIRST
         SPACE 3
BADLINEM L     R0,CPLCNO           GET BAD LINE NUMBER
         CVCALL CVEXNO             CONVERT TO EXTERNAL FORM
         TSEG  (1),(0),B           PUT IT IN MESSAGE
BADLINES TSEG  'LINE NO.'
         B     CVUNLEGL
         SPACE 3
PUTERC   TSEG  'NO REPLACE OR INTERLEAVE'
         B     CVQTYPE
         SPACE 3
BADBAD   B     CVNVALID
         EJECT
* SCAN TABLE FOR SHOW DSNAMES
         SPACE
PUTSTUFF SCKW  AT,HAVTO
         SCKW  BY,POTDLL,(P,LN)
DAPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO CLRPRT
LAPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO LTNPRT
DSONPRT  SCKW  DATED,DSNMDTED,A
         SCKW  LIKE,ADLIKE,A
         SCKW  FROM,DSNMFROM,(P,A)
         SCKW  EXCLUDE,DSNMEXCL,(P,A)
         SCKW  THROUGH,DSNMTHRU,(P,A)
         SCKW  THRU,DSNMTHRU,P
         SCKW  TO,DSNMTO,P
         SCKW  SPACE,DSNMSPAC,A
         SCKW  SIZE,DSNMSPAC,A
         SCKW  TRACKS,DSNMSPAC,A
         SCKW  TYPE,DSNMTYPE,A
         SCKW  PERMIT,DSNMPROT,A
         SCKW  ALL,DSNDALL   SPA TYP DAT
         SCKW  SKIP,SKIP,(P,PI,A),999
         SCKW  SCRATCH,DSNMSCRT,A
DSONPRT1 SCKW  ,,PUSH        FILLED IN AT INIT TO IGDSNPRT
COMPRT   SCKW  SCRATCH,DSNMSCRT,A
DSONPRT2 SCKW  ,BADBAD
         SPACE
LINPRT   SCKW  ,,PUSH        FILLED IN AT INIT TO LNENOPRT
         SCKW  ,BADBAD
         SPACE
PUTOPT   SCKW  AT,HAVTO
         SCKW  BY,POTDLL,(P,LN)
DOPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO CLRPRT
LOPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO LTNPRT
         SCKW  ,DSONPRT2,PUSH
         TITLE 'GETTPAG ROUTINE -- PAGE 23'
GETTPAGR XENTER 15,8,44       SAVE SPACE (USED BY SHOW DSNAMES)
GETTPAG  EQU   GETTPAGR-P023        MAKE RELATIVE ADDRESS
         L     2,CPMDLN       NO PAGES ALREADY
         LTR   2,2            ANY?
         BNP   GETTNO1
         PMARK R9
         CH    R2,=Y(10)                10 MAX
         BNL   SENSAME
GETTNO1  PGET  R9
         BZ    SENSAME
         LA    2,1(2)         ONE MORE
         ST    2,CPMDLN       STORE
         SLL   2,2            POINT AT PLACE TO STORE PAGE NO
         ST    0,CPMDAD-4(2)  STORE PAGE NO
SENSAME  LTR   R9,R9
         XEXIT 15,8
         TITLE 'END OF PAGED CODE -- PAGE 23'
         PINIT             DEFINE END OF CODE - START OF INIT
         MVC   DSONPRT1+1(3),CVIGDSN+1  SET TO IGDSNPRT
         MVC   LINPRT+1(3),CVLNENO+1  SET TO LNENOPRT
         MVC   LAPRC+1(3),CVLTNPR+1   SET TO LTNPRT
         MVC   DAPRC+1(3),CVCLRPR+1   SET TO CLRPRT
         MVC   LOPRC+1(3),CVLTNPR+1   SET TO LTNPRT
         MVC   DOPRC+1(3),CVCLRPR+1   SET TO CLRPRT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 26'
P026     PAGECDE SHOSPAC,DSNERR,GOCOMP
         WIDENT 001
         TITLE 'SHOW SPACE -- PAGE 26'
PSHOSPAC GENTER  ,
         SCAN  SHSPCPRT            SCAN FOR OPTIONS
         B     CVABSENT
         SPACE 3
SHSPCON  DS    0H
         DENTER SDSNDSZ,C12,,NO
         XC    CPDSNWA(DSSIZ),CPDSNWA   CLEAR DSNAME WORK AREA
         MVC   DSNWAVOL(6),0(R15)  SAVE VOLUME
         MVC   DSNWADSN,=X'05050505'  DSN IS FORMAT 5 DSCB
         MVI   DSNWANL+1,4         LENGTH OF DSNAME
         PCALL SHODSN
         TITLE 'ERROR MESSAGES -- PAGE 26'
PDSNERR  GENTER ,
         XC    RTBWC(4),RTBWC
         B     *(R2)               JUMP AROUND
         SPACE
         B     PPOTERD             4
         B     PPOTERC             8
         B     CVGETCOM            12
*                                  16
         SPACE 3
PWHAT    TM    CPLFLG3,CPFPMSG     ALREADY GIVEN 1 OF THESE?
         BO    CVGETCOM            YES. DONT TALK SO MUCH
         PCALL NOMORPG             ALRIGHT..BETTER SAY SOMETHING
         SPACE
PPOTERD  TSEG  '99999.999 EXCEEDED'
         B     CVGETCOM
         SPACE
PPOTERC  TSEG  'ABORTED BY ATTEMPT TO REPLACE OR INTERLEAVE',,B
         MVC   CPWORK1(4),CPCURRL
         CVCALL LSLNMSG   GO DO LAST LINE MSG & DON'T COME BACK
         TITLE 'COMPARE ROUTINE -- PAGE 26'
PGOCOMP  GENTER ,
         SR    R5,R5
         LA    R1,16(,R8)          POINT TO
         CVCALL LOCATE                 HIGH LINE NO
         TM    CPDRPT,CPFNTYT+CPFHIGH  DONE IF TOO HIGH OR NONE
         BNZ   TOOHIX
         SYSQS 6,5,'DON''T '
LOOPA    LR    R1,R8                    POINT AT 1ST LINE NO.
         MVI   32(R8),X'40'
         MVC   33(165,R8),32(R8)
         CVCALL LOCATE                   LOCATE
         TM    CPDRPT,CPFMTCH           MATCH?
         BO    HAVLN1                   YES
         MVC   0(4,R8),CPLCNO           SET FOR NEXT LOCATE
         TM    CPDRPT,CPFPGHI          IS IT END OF PAGE
         BE    HAVLN1                  NO, WE HAVE NEXT LINE
         B     LOOPA                    GET IT
         SPACE 3
HAVLN1   LA    R1,C32(,R8)
         CVCALL UNPRESS
         LR    R2,R0
         PFLIP 11,9                    SAVE PAGE POINTER
LOOPB    LA    R1,16(R8)                POINT AT 2ND LINE NO.
         CVCALL LOCATE                   LOCATE
         TM    CPDRPT,CPFMTCH           MATCH?
         BO    HAVLN2                   YES
         MVC   16(4,R8),CPLCNO          SET FOR NEXT LOCATE
         TM    CPDRPT,CPFPGHI          IS IT END OF PAGE
         BE    HAVLN2                  NO, WE HAVE NEXT LINE
         B     LOOPB                    GET IT
         SPACE
HAVLN2   LA    R1,C32+SZR(,R8)
         CVCALL UNPRESS
         LM    R3,R4,CPWK1
         LTR   R4,R4
         BNZ   GOCOMP
         LR    R4,R2
         CR    R2,R0
         BNL   GOCOMP
         LR    R4,R0
GOCOMP   SR    R4,R3
         BM    COMPOK
         BCTR  R3,0
         LA    R3,0(R8,R3)
         EX    R4,CCCOMP2
         BNE   OUTPUTT                  NOT SAME
COMPOK   LR    R3,R0
         L     R0,16(R8)                LINE 2
         C     R0,CPHIPS           FINISHED LAST LINE IN FILE
         BNL   OUTPAT              YES, REPORT ALL COMPARE
         LA    R1,1                     INCREMENT
         CVCALL ADDER                    NEXT
         ST    R0,16(R8)                SET
         L     R0,0(R8)                 LINE 1
         LA    R1,1                     INCREMENT
         CVCALL ADDER                    NEXT
         ST    R0,0(R8)                 SET
         B     LOOPA                    MORE
         SPACE 3
OUTPAT   SR    R5,R5               ZERO COUNT SO 'DON''T ' OMITTED
OUTPUTT  LR    R3,R0
         L     R0,0(,R8)               LINE 1
         CVCALL CVEXNO                   CONV
         TSEG  (1),(0),B           INTO MSG
         TSEG  '--',,B
         L     R0,16(,R8)              LINE 2
         CVCALL CVEXNO                   CONV
         TSEG  (1),(0),B                INTO MSG
         TSEG  (6),(5)
TOOHIX   TSEG  'COMPARE',,W
         TM    CPLFLG5,CPFNLST     NOLIST OPTION
         BO    CVGETCOM            YES, GO GET NEXT COMMAND
         LTR   R5,R5               DID LAST COMPARE OR NOT
         BZ    CVGETCOM            COMPARE, DO NOT LIST THEM
         LR    R1,R8               POINT TO 1ST LINE NO
COMPLST  LA    R1,C32(,R8)         POINT TO UNPRESS AREA
         MVC   CPLCNO(4),0(R8)
         LR    R0,R2
COMPLST1 CVCALL LISTLINE            FORMAT LINE FOR OUTPUT
         LTR   R5,R5               SECOND TIME THROUGH
         BZ    CVGETCOM            YES, GO GET NEXT COMMAND
         SR    R5,R5               SET SWITCH FOR 2ND PASS
         LA    R1,C32+SZR(,R8)
         LR    R0,R3
         MVC   CPLCNO(4),16(R8)
         B     COMPLST1
         SPACE
CCCOMP2  CLC   C32(1,R3),C32+SZR(R3)
         SPACE 3
* SCAN TABLES FOR SHOW SPACE
         SPACE
INVAL    B     CVNVALID
         SPACE
SHSPCPRT SCKW  ON,SHSPCON,P
SHSPC1   SCKW  ,INVAL
         TITLE 'END OF PAGED CODE -- PAGE 26'
         PINIT             DEFINE END OF CODE - START OF INIT
         PEND                      END OF PAGE
         TITLE 'START OF PAGED CODE -- PAGE 24'
P024     PAGECDE WRIDSSP
         WIDENT 001
         TITLE 'WRITE OUTPUT FOR SHOW DSNAMES/SPACE -- PAGE 24'
* WRIDSSP IS USED TO LIST INFORMATION PASSED FROM SHOW DSNAMES
* AND SHOW SPACE
*   CPMDLN CONTAINS THE NUMBER OF PAGES OF INFORMATION.
*   CPMDAD CONTAIN UP TO TEN PAGE NUMBERS.
*   THE FIRST HALF-WORD ON EACH PAGE IS THE PAGE BYTE-COUNT.
*   EACH FIRST BYTE IN A LINE IS THE CHARACTER COUNT FOR THE LINE.
*   A LINE CHARACTER COUNT OF ZERO INDICATES ALL DONE.
*
*   THE WORD AFTER 'DSSIZ' (DSSIZ+4 BELOW) IS USED TO STORE
*   THE SKIP COUNT FOR SHOW DSNAMES AND THE ORIGINAL
*   PATTERN LENGTH FOR SHOW CATLG.
         SPACE
PWRIDSSP DENTER DSSIZ+4,SDSNDSZ-DSSIZ+SBSZ
         NI    CPLFLG3,255-CPFPUTER
         L     R5,CPMDLN                NO. PAGES
         LA    R6,CPMDAD-4              4 BYTES B/4 1ST PAGE NO
         SR    R4,R4
         LTR   R5,R5                    ANY?
         BP    GTNXTPG             YES, START LOOP
         PCALL NOMORPG             NO, ISSUE MESSAGE TO USER
         SPACE
GTNXTPG  LA    R6,4(R6)                 POINT AT NEXT PAGE NO
         LTR   R9,R9                    PAGE IN?
         BZ    GETNXPG                  NO
         PNUM  R9                       WHICH PAGE IS IN?
         C     R0,0(R6)                 RIGHT ONE?
         BE    PROCPAG                  YES
GETNXPG  L     R0,0(R6)                 PAGE NO NEEDED
         PGET  R9,(0)                   GET IT
         LTR   R4,R4
         BNZR  R4
PROCPAG  LA    R3,2                     NO. BYTES PROCESSED ON PAGE
NEXTLINX CH    R3,0(R9)            MORE ON PAGE?
         BNL   GONXPAG                  NO
         TM    CPLFLG2,CPFSTOP          TEST IF MORE WANTED
         BNZ   GONXPAG                  NO MORE
         SR    R2,R2
         IC    R2,0(R3,R9)              LINE CHAR COUNT
         LTR   R0,R2                    ANY?
         BZ    ALLDONN                  NO
LOADAFC  LA    R1,1(R3,R9)         POINT AT 1ST CHAR IN LINE
         SPACE 3
* FORMAT AND WRITE INFORMATION FOR SHOW DSNAMES COMMAND.
*
* REGISTERS ARE USED AS FOLLOWS:
*   R2    CHAR COUNT IN LINE OF DATA.
*   R3    NUMBER OF BYTES PROCESSED IN CURRENT PAGE.
*   R4    POINTS TO CURRENT INPUT LINE (SDSNBUF).
*   R5    NUMBER OF PAGES TO BE PROCESSED.
*   R6    PAGE INDEX POINTER.
         SPACE
         CH    R2,=Y(SBSZ)         IS IT DSNAME LINE?
         BE    WDSN                BR IF YES
         TSEG  (1),(0)             NO - WRITE COMPLETE LINE
         TM    CPLFLG3,CPFPUT
         BZ    LWRITE
         B     DIDNTADD
         SPACE 3
* FORMAT DSNAME RECORD
         SPACE
WDSN     LR    R4,R13              END OF CURRENT WORK AREA
         SH    R4,=Y(SBSZ)         GET AMOUNT ACTUALLY NEEDED
         N     R4,=F'-8'           ALIGN DOUBLEWORD
         MVC   0(SBSZ,R4),0(R1)    MOVE CURRENT RECORD
         AIF   ('&DCEC' EQ '1').LBLX2
         USING SDSNBUF,R4
         AGO   .LBLX3
.LBLX2   DS    0H
         USING SBUF,R4
.LBLX3   DS    0H
         MVC   DSNWADSN,SBDSN      MOVE ACTUAL DSNAME
         LA    R1,0(R8)            ADDR OF WORK AREA
         CLI   SBDSN,X'05'         IS IT SHOW SPACE?
         BE    WNOLTW              BR IF YES
         LH    R0,CPDSNWA+DSSIZ    GET SKIP COUNT
         LTR   R0,R0               TEST VALUE
         BP    WDSNSKP             SKIP THIS ONE
         SYSQS R1,R0,DSNWADSN+43,44
WDSNL    CLI   0(R1),X'40'
         BNE   HAVDSNL             BR IF LAST CHAR
         BCTR  R1,0                CHECK NXT CHAR
         BCT   R0,WDSNL            LOOP
HAVDSNL  STH   R0,DSNWANL          SAVE DSNAME LENGTH
         MVI   DSNWAF1,0           CLEAR ATTRIBUTE FLAGS
         CVCALL DSNSTDDO          GO SET ATTRIBUTE FLAGS
         CVCALL DSNUDSDO          SET MY FLAGS
         CVCALL DSNAMED            GO TSEG DSNAME
         TM    CPLFLG3,CPFDATED+CPFSPACE+CPFTYPE+CPFPROTF
         BZ    NOWWHAT             BR IF NO OTHER OPTIONS
         TM    CPLFLG3,CPFSPACE    WAS SPACE SPECIFIED?
         BZ    WNOSPC              BR IF NO
         SPACE
* FORMAT SPACE INFORMATION
         TSEG  '--',,B
         LA    R1,0(R8)            START OF WORK AREA
         LH    R15,SBLB            LAST TT
         LA    R15,1(R15)          (REL TO 0)
         CH    R15,SPTRK           SAME AS LAST ALLOC TRK?
         BNL   WNOLTW              BR IF YES
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               BUMP PTR BY LENGTH
         MVC   0(4,R1),=C' OF '
         LA    R1,4(R1)
WNOLTW   LH    R15,SPTRK           NUMBER OF TRKS ALLOCATED
         LTR   R15,R15             TEST SPACE ALLOC COMPLETE?
         BNM   WNOLTW2             BR IF YES
         STM   R0,R1,CPDOUB        SAVE AROUND TSEG
         TSEG  '>>'
         LM    R0,R1,CPDOUB
         LPR   R15,R15
WNOLTW2  BTD   (1),0,(15)          CONVERT
         AR    R1,R0               BUMP PTR BY LENGTH
         MVC   0(5,R1),=C' TRKS'
         LA    R1,5(R1)
         CLI   SBNOEX,1            WAS THERE ONE EXTENT?
         BE    WNOEXT              BR IF YES - DON'T BOTHER
         MVC   0(2,R1),=C', '
         LA    R1,2(R1)
         SPACE
* FORMAT NUMBER OF EXTENTS USED
         SR    R15,R15
         IC    R15,SBNOEX          NUMBER OF EXTENTS
         CLI   SBDSN,X'05'         IS IT SHO SPA?
         BNE   *+8                 IF NOT SKIP NEXT INSTR
         LH    R15,SBDSN+8         GET REAL # OF EXTENTS
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               BUMP PTR BY LENGTH
         MVC   0(5,R1),=C' EXTS'
         LA    R1,5(R1)
         CLI   SBDSN,X'05'
         BNE   WNOEXT
         MVC   0(2,R1),=C', '
         LA    R1,2(R1)
         L     R15,SBDSN+4
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               BUMP PTR BY LENGTH
         MVC   0(9,R1),=C' TRKS MAX'
         LA    R1,9(R1)
WNOEXT   LR    R0,R1               CURRENT POINTER
         LA    R1,0(R8)            START OF WORK AREA
         SR    R0,R1               LENGTH OF LINE
         TSEG  (1),(0)
         CLI   SBDSN,X'05'         IS IT SHOW SPACE?
         BE    NOWWHAT
         TM    DSNWAF1,DSNFSTD     STANDARD WYLBUR DSN?
         BZ    WNOSPC
         CLI   SBACCTG,0           ACCOUNTED FOR?
         BNE   WNOSPC
         TM    JCBAFL,JCBSYSPR
         BZ    WNOSPC
         TSEG  ' N/A'              INDICATE NOT ACCOUNTED FOR
         SPACE
* FORMAT  FILE TYPE INFO AND DATE INFO ON SECOND LINE.
WNOSPC   TM    CPLFLG3,CPFTYPE+CPFDATED+CPFPROTF
         BZ    NOWWHAT
         TSEG  '   '               ADD BLANKS
         TM    CPLFLG3,CPFTYPE     WAS TYPE SPECIFIED?
         BZ    WNOTYPE             BR IF NO
         LA    R1,0(R8)            START OF WORK AREA
         SPACE
* FORMAT TYPE INFORMATION
         SR    R15,R15
         NI    SBDSORG,X'E2'       CLEAR GARBAGE BITS
         IC    R15,SBDSORG         GET DSORG BYTE
         SRL   R15,4               MOVE PS,IS,DA TO LOW BITS
         TM    SBDSORG,X'02'       PO?
         BZ    *+8                 BR IF NO
         LA    R15,1(R15)          YES - ADD ITS BIT
         STC   R15,SBDSORG         SAVE DSORG INDEX BYTE
         SPACE
* DSORG NOW HAS LOW ORDER FOUR BITS REPRESENTING PS/IS/DA/PO
         TR    SBDSORG,DSORGTR     TRANSLATE INTO INDEX BYTE
         IC    R15,SBDSORG         GET INDEX
         LA    R15,DSORGTBL(R15)   GET ADDR OF DISPLAY
         MVC   0(2,R1),0(R15)      MOVE TO DISPLAY BUFFER
         MVC   2(2,R1),=C', '
         LA    R1,4(R1)            BUMP PTR
         SPACE
* FORMAT RECFM
         SR    R15,R15
         IC    R15,SBRECFM
         SRL   R15,6               ONLY PROCESS F/V/U
         LA    R15,RECFMTBL(R15)   GET ADDR OF CHAR
         MVC   0(1,R1),0(R15)      MOVE IT TO BFR
         LA    R1,1(R1)
         SPACE
* FORMAT REST OF RECFM
         TM    SBRECFM,X'10'       BLOCKED?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'B'
         LA    R1,1(R1)
         TM    SBRECFM,X'20'       TRACK OVERFLOW?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'T'
         LA    R1,1(R1)
         TM    SBRECFM,X'08'       STANDARD?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'S'
         LA    R1,1(R1)
         TM    SBRECFM,X'04'       ASA CONTROL?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'A'
         LA    R1,1(R1)
         TM    SBRECFM,X'02'       MACHING CONTROL?
         BZ    *+12                BR IF NO
         MVI   0(R1),C'M'
         LA    R1,1(R1)
         MVI   0(R1),C'/'
         LA    R1,1(R1)
         SPACE
* FORMAT LRECL
         LH    R15,SBLRECL
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               PTR PLUS LENGTH
         MVI   0(R1),C'/'
         LA    R1,1(R1)
         SPACE
* FORMAT BLOCKSIZE
         LH    R15,SBBLKSZ
         BTD   (1),0,(15)          CONVERT
         AR    R1,R0               PTR+LENGTH
         SPACE
* CHECK IF A KEYLENGTH
         CLI   SBKEYL,0            IS THERE ONE?
         BE    WPRTYPE             BR IF NO
         MVI   0(R1),C'/'
         LA    R1,1(R1)
         SR    R15,R15
         IC    R15,SBKEYL
         BTD   (1),0,(15)
         AR    R1,R0
         SPACE
* PRINT IT
WPRTYPE  LR    R0,R1               CURR PTR
         LA    R1,0(R8)            START OF WORK AREA
         SR    R0,R1               LENGTH
         TSEG  (1),(0)
         TM    CPLFLG3,CPFDATED+CPFPROTF
         BZ    NOWWHAT
         TSEG  ';',,B
WNOTYPE  TM    CPLFLG3,CPFDATED+CPFPROTF
         BZ    NOWWHAT             BR IF NO
WOKTYPE  TM    CPLFLG3,CPFPROTF
         BZ    WDATED
         SPACE
* FORMAT PROTECTION
         CVCALL TPROTF
         TM    CPLFLG3,CPFDATED
         BZ    NOWWHAT
         TSEG  ';',,B
         SPACE
* FORMAT DATES
WDATED   LR    R1,R8
         MVC   CPWK2+1,SBCRDT      CREATION DATE
         MVC   CPWK3+1,SBEXDT      LAST ACCESS DATE
         DROP  R4
         LA    R15,CPWK2           ADDR OF CREATION DATE
         BAL   R4,WCNVDT           GO CONVERT
         MVI   8(R1),C' '          SEPERATOR
         LA    R1,9(R1)           BUMP PTR BY DATE AND PREV
         LA    R15,CPWK3           ADDR OF LAST ACCESS DATE
         BAL   R4,WCNVDT           GO CONVERT
         LA    R1,8(R1)            BUMP PTR BY SECOND DATE
         LR    R0,R1               CURR PTR
         LA    R1,0(R8)            START OF WORK AREA
         SR    R0,R1               LENGTH
NOWTSEG  TSEG  (1),(0)
         B     NOWWHAT             ALL DONE
         SPACE 3
* SHOW DSNAMES SKIP COUNT NOT YET ZERO
         SPACE
WDSNSKP  BCTR  R0,0                DECREMENT BY ONE
         STH   R0,CPDSNWA+DSSIZ    SAVE NEW VALUE
         B     NEXTLIN             GO ON TO NEXT LINE
         EJECT
NEXTRY   LR    R15,R1                  GET ADDR OF LAST CHAR
         AR    R15,R0
NEXTRYX  BCTR  R15,0                   BACK UP ONE CHAR
         CLI   0(R15),C' '              BLANK?
         BNE   NOWTSEG             NO
         BCT   R0,NEXTRYX
NEXTLIN  LA    R3,1(R3,R2)             COUNT TO NEXT LINE
         B     NEXTLINX
         SPACE 3
NOWWHAT  TM    CPLFLG3,CPFPUT            PUT?
         BZ    DONTPUT                   NO. BRANCH.
PONEXT   LM    R0,R1,CPWKPS             LINE NO.
         CVCALL ADDER                   ADD
         BM    POTERD                   TOO BIG
         ST    R0,CPWKPS                SAVE NEXT LINE NO.
         ST    R0,CPLCNO                FOR LISTLINE ROUTIN
DIDNTADD MVC   0(133,R8),RTBTEXT        INTO WORK AREA
         LH    R0,RTBWC
         LR    R1,R8                    SET POINTER
         L     R15,CPWKPS               LINE NO. INTO R15
         CVCALL PRESS                   PRESS
         CVCALL STOWIT                STOW IT AWAY
         BM    POTERC                   REPL ERR
         BNZ   BADFIT
         MVC   CPCURRL(4),CPWKPS   SET CURRENT LINE
         PNUM  R9                       CHECK ON R9?
         C     R0,0(R6)
         BE    NOWWRIT
         BAL   R4,GETNXPG               GET IT BACK
         EJECT
NOWWRIT  LH    R0,RTBWC
         XC    RTBWC(4),RTBWC
         TM    CPLFLG5,CPFNLST          NOLIST?
         BO    NEXTLIN                  YES   BRANCH.
         MVC   0(133,R8),RTBTEXT        INTO WORK AREA
         LR    R1,R8
         CVCALL LISTLINE
         BP    DSNMATTN                 ATTN HIT.
DONTPUT  TM    CPLFLG2,CPFSCRTC         "SCRATCH" OPTION?
         BO    PPROMPTT                 YES
LWRITE   TM    CPLFLG3,CPFPUT            PUT COMMAND?
         BO    NEXTLIN                  LINE ALREADY PRINTED
         TWRITE ,
         BP    DSNMATTN
         B     NEXTLIN
         EJECT
BADFIT   LR     R2,R15                   MAKE A TRADE
         B      CALLPERR
         SPACE
POTERD   LA    R2,4
         B     CALLPERR
         SPACE
POTERC   LA    R2,8
CALLPERR OI    CPLFLG3,CPFPUTER
         SPACE
DSNMATTN OI    CPLFLG2,CPFSTOP          SET TO PRINT NO MORE
GONXPAG  PFREE R9,EMPTY                 SCRATCH PAGE
         SR    R4,R4
         BCT   R5,GTNXTPG               GET NEXT PAGE (IF ANY)
ALLDONN  PFREE R9,EMPTY                 SCRATCH LAST PAGE
         TM    CPLFLG3,CPFPUTER
         BZ    CVGETCOM
         PCALL DSNERR
         SPACE 3
DSORGTR  DC    AL1(0,4,6,0,2),XL3'0',AL1(8),XL7'0'  INDEX VALUES
DSORGTBL DC    C'**PSPODAIS'       DISPLAYS
RECFMTBL DC    C'*VFU'             DISPLAYS
         SPACE 3
* ROUTINE TO CONVERT DSCB DATE INTO MM/DD/YY FORMAT.
*   R1 POINTS TO AREA WHERE CONVERTED DATE TO BE PLACED,
*   R15 POINTS TO FULLWORD WITH DSCB DATE IN LAST THREE BYTES
         SPACE
WCNVDT   SR    R0,R0
         IC    R0,1(R15)           GET YEAR
         MH    R0,=H'1000'         YEAR VALUE
         AH    R0,2(R15)           ADD JULIAN DAY
         CVD   R0,CPDOUB           CONVERT TO DEC
         L     R0,CPDOUB+4         GET VALUE
         CVCALL DATE                CONVERT
         BR    R4                  RETURN
         EJECT
* PROMPT FOR SCRATCH IF DATA SET IS CANDIDATE FOR SCRATCHING
* BY THIS USER.  OTHERWISE, FORGET THE PROMPT.
         SPACE
PPROMPTT TM    JCBAFL,JCBSYSPR     SYSTEM PRIVILEGES?
         BO    PPETC2              YES..LET NOLIST STAY
         TM    DSNWAF1,DSNFMYDS    BELONG TO USER?
         BZ    LWRITE              BR IF NO
         TM    DSNWAF1,DSNFWLIB    IS IT A WYLBUR LIB?
         BO    LWRITE              YES - CON'T PROMPT
PPETC2   SR    R1,R1
         IC    R1,0(R3,R9)
         CH    R1,=Y(SBSZ)
         BNE   LWRITE
         TM    CPLFLG5,CPFPUT
         BO    NOPMARK
         TMARK
NOPMARK  SYSQS R1,R0,'SCRATCH'
PPETC3   TREADR (1),(0)
         BP    DSNMATTN            ABORT IF ATTENTION
         SCINIT (1),(0)                 INIT SCAN
         SCAN  YESSPRT                  LOOK FOR "YES"
         B     NEXTLIN                  DO MORE
         SPACE
YESREPLY DSCRATCH ,                SCRATCH IT
         BZ    NEXTLIN                  ON TO NEXT
         L     R14,CVDSNMED        ADDR OF DSNAMED
         BALR  R14,R14             GO DO PROPER ROUTINE
         TSEG  'NOT SCRATCHED',,W
YESRETN  BP    DSNMATTN
         B     NEXTLIN
         EJECT
YESSPRT  SCKW  YES,YESREPLY
         SCKW  OK,YESREPLY
         SCKW  ,NEXTLIN
         TITLE 'END OF PAGED CODE -- PAGE 24'
         PINIT             DEFINE END OF CODE - START OF INIT
         PEND                      END OF PAGE
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
         EJECT
         COPY  RTNCODES
         TITLE 'COPY MODS'
         AIF   ('&DCEC' EQ '1').LBLX4
SDSNBUF  DSECT
         COPY  SDSNBUF
         SPACE 3
         COPY  SCATBUF
         EJECT
.LBLX4   DS    0F
WDIOWA   WDIOWA DSECT
         EJECT
.LBL06   DS    0H                                               JEP00X
         COMMON ,
         SPACE 3
CPUNSIZE EQU   CPWK2
CPFOV    EQU   X'08'               FLAG FOR OVER SIZE
CPFUN    EQU   X'04'               FLAG FOR UNDER SIZE
CPFEQ    EQU   X'10'               FLAG FOR EQUAL SIZE
         SPACE
         PRINT NOGEN
CVT      DSECT
         CVT   SYS=VMS
         SPACE
         END
./ ADD NAME=PEDS,SSI=00000178
PEDS     TITLE 'EXTERNAL DATA SET ROUTINES FOR WYLTSO'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
         GBLC    &DCEC             SWITCH FOR DCEC MODS         JEP00X
         GBLC  &USPS                                            USPS01
&USPS    SETC  '1'                                              USPS01
&DCEC    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE DCEC MODJEP00X
         AIF   ('&DCEC' NE '1').LBL01                           JEP00X
         EJECT                                                  JEP00X
*                                                               JEP001
* MOD JEP001                                                    JEP001
*  IMPLEMENTED DCEC NAMING CONVENTIONS IN SAVE.                 JEP001
*  MODULES AFFECTED: PDIO, PEDS, PUTB,INIT MACROS(DSNWA,CVTSO)  JEP001
*                                                               JEP001
*                                                               JEP001
.LBL01   DS    0H                                               JEP00X
PEDS     CSECT
         SPACE
         WIDENT 001
         SPACE
         USING CPAREA,R12
         SPACE
         XTRNS ,
         SPACE
         ENTRY VOLCHEK
         TITLE 'GOSAVE ROUTINE'
* GOSAVE IS THE PRIMARY ENTRY FOR SAVE
         SPACE
GOSAVE   DENTER DSAVSIZ,12,GOSAVELA  LA 13 CMD USED ELSEWHERE
SAVEBASE MVC   CPSEQFLD(4),=H'-1,8'    INITIALIZE SEQFLDS
         MVC   CPCMNM(3),=C'SAV'       SET A POSS S TO SAV
         SPACE
* BACKUP TO THE PAGEFILE IS FORCED BEFORE ANY SAVE IS DONE TO
* INSURE RECOVERY IN CASE OF SYSTEM CRASH.
         SPACE
         OI    CPGFLG,CPFDIRCH     YES, SET TO FORCE FILE UPDATE
NOTNIL   CVCALL DODSNM         GO GET EITHER OR BOTH
NOTVER   CVCALL SCNEXFR            SEE IF EXECUTE FILE RANGE
         XCALL FMTCHK         SEE IF EDIT, CARD OR PRINT
         STM   0,1,CPLRCL     SAVE LRECL & NRECS
         TM    DSNWAF3,DSNFLIN     WAS A RANGE GIVEN
         BO    SAVERNGE            BR YES
         OI    CPLFLG1,CPFALL       SET 'ALL' OK FOR RANGE
         CVCALL DETRNG             CALL DETRNG TO SET UP VALUES
SAVERNGE CVCALL VOLCHEK                 MAKE SURE VOL SPECIFIED
         TM    CPLFLG3,CPFSET      TEST "SET" SPECIFIED
         BZ    ROPENN              BR IF NO
         CVCALL SETPFXNS            GO SET PREFIX
ROPENN   TM    DSNWAF1,DSNFMYDS    DOES IT BELONG TO USER
         BO    ROPENN1             BRANCH YES
             AIF   ('&DCEC' NE '1').LBL02                           J
******   DCEC NAMING CONVENTIONS IMPLEMENTED HERE.              JEP001
*                                                               JEP001
         LA    R2,DSNWADSN        SET POINTER TO USER ID        J
         OC    DSNWADSN(44),BLANKS ALLOW NO UPLOW DSN'S AT DCEC JEP001
         B     NAMECHK             GO AROUND THE BLANKS         JEP001
BLANKS   DC    44C' '              UPPER THE CASE               JEP001
NAMECHK  XR    R1,R1               ZERO WORK REG                JEP001
         IC    R1,CVUSRFLD         GET LENGTH OF USERID         JEP001
         BCTR  R1,0                DOWN 1 FOR EXECUTE           JEP001
         CLC   CPUSERSV(0),0(R2)   IS IT THIS USER???           JEP001
         EX    R1,*-6              EXECUTE ABOVE INSTRUCTION    JEP001
         BE    ROPENN1            BRANCH YES                    JEP001
.LBL02   DS    0H                                               JEP00X
         BAL   R14,NOTMYDS         NO, GO TELL USER
ROPENN1  DOPEN CPLRCL,=A(GETSIZE),SAVE  OPEN DS
         BNZ   PROBOPN        SOMETHING NG
         LA    R2,2                ASSUME EDIT SAVE
         L     R3,CPLRCL           GET LRECL
         LTR   R3,R3               IS IT EDIT OR FIXED
         BZ    ROPENN2             BR IF EDIT
         BCTR  R3,0                SET LRECL FOR EX MOVES
         ST    R3,CPNREC           PUT IN NREC
         SR    R2,R2               SET DISPLACEMENT FOR FIXED
ROPENN2  OI    CPGFLG,CPFOPN  SET EXTERNAL DS OPENED
         ST    1,CPDRED       SAVE EXTERNAL I/O BUFF ADDR
         ST    0,CPRCSZ       SAVE OUTPUT RECORD SIZE
         AR    1,2            POINT TO ADDR FOR FIRST TEXT BYTE
         ST    1,CPNXAD       SAVE
         ST    2,CPNWCT       INTO CURRENT COUNT
         OI    CPLFLG5,CPFNCUR     SET NOT TO CHANGE CURRENT
         L     15,WORKXD      SET ADDR FOR DESPOT
         TM    CPLFLG5,CPFSELOC    IS IT ACTIVE OR EXEC RANGE
         BZ    *+8                 BRANCH IF ACTIVE
         O     R15,=AL1(LEXATRTN,0,0,0) SET FOR EXEC RANGE
         CVCALL DESPOT         GO TO DESPOT
         SPACE
* VOID RANGES FOR SEQUENTIAL SAVES ARE CAUGHT AT DOPEN.
* VOID RANGES FOR PDS SAVES AREN'T CAUGHT UNTIL NOW
         SPACE
         TM    CPSTAD,CPFSOME WAS RANGE VOID
         BZ    DOCLOSVD            BRANCH YES FOR SPECIAL CLOSE
         TM    CPLRCL+3,FALLBT   WAS IT EDIT FORMAT
         BNZ   DOWRITT        NO - ONLY WRITE
         L     2,CPNWCT       REMAINING COUNT
         L     3,CPDRED       TO 1ST HALF-WORD
         STH   2,0(3)         STORE IT
DOWRITT  L     0,CPNWCT       COUNT THIS REC
         DWRITE (0)           WRITE LAST
         BZ    DOCLOS         B IF DISK I/O OK
         BP    EOV                 BR IF NO MORE SPACE
         XCALL WDSKER         GO DO MESSAGE ON DISK WRITE ERROR
DOCLOS   DCLOSE ,             CLOSE
         NI    CPGFLG,255-CPFOPN  SET EXTERNAL DATA SET CLOSED
         LR    R2,R15              SAVE RETURN CODE
         LR    R3,R0               ALSO SAVE SECOND RETURN CODE
         LH    R0,RTBWC            CHECK IF ANYTHING TO WRITE
         LTR   R0,R0
         BZ    DOCLOS3             BRANCH NO
         TWRITE ,                  WRITE OUT LINE
DOCLOS3  TM    CPLFLG2,CPFSMALL    WAS SMALL DATA SET SAVED
         BZ    DOCLOS4             BRANCH NO
         TM    JCBAFL,JCBSYSPR     SYS PRIV?
         BO    DOCLOS4             AVOID MSG
         TSEG  'PUT SMALL DATASETS IN A LIBRARY TO AVOID WASTING LARGE *
               AMOUNTS OF SPACE',,W
* ROUTINE TO PROCESS RETURN FROM DCLOSE
DOCLOS4  LR    R0,R3               RESTORE R0 RETURN CODE
         LTR   R15,R2           RESTORE AND TEST RETURN CODE
         BZ    GOODCLOS            BR IF EVERYTHING NORMAL
         BM    NORMPDSA            BR IF PDS OUT OF SPACE
         CH    R15,=Y(RTNCATER)    TEST FOR CATER
         BE    NTGDOPN             IF YES IT'S ERROR ON STOW
         SPACE
* OTHERWISE IT'S A CATLG ERROR
GOODCLOS XCALL CLRTST              GO CLEAR ACTIVE IF SO SPEC
         XCALL CHKMBRIG            CHECK MEMBER IGNORED
         BAL   R4,ALREDDY          GO TSEG FIRST PART OF MSG
         TM    CPLFLG2,CPFSCRTC    TEST IF OLD ONE DELETED
         BZ    GDCLSA              NO - NEW ONE ADDED
         TSEG  'REPLACED',,B
         B     GDCLS2
         SPACE
GDCLSA   TSEG  'SAVED',,B
GDCLS2   TM    DSNWAF2,DSNFPDS     WAS IT A PDS SAVE?
         BZ    GDCLSPS             BR IF NO
         TSEG  'IN',,B
         CVCALL DSNAMED
         SPACE
* SEQ DATA SET SAVE
GDCLSPS  TM    CPLFLG3,CPFRECLG    TEST ANY CATLG BITS ON
         BZ    GDCLSPS2            BR IF NOT
         LTR   R2,R2               WAS THERE A CATLG ERROR?
         BNZ   GDCLSPS2            BR IF YES
         TSEG  'AND',,B
         CVCALL CTLGED
GDCLSPS2 TM    DSNWAF2,DSNFPDS     WAS IT A PDS SAVE?
         BNZ   CHKCATD             BR IF YES
         TSEG  'ON',,B
         TSEG  DSNWAVOL,6
CHKCATD  TWRITE ,
         LTR   R15,R2              TEST RETURN CODE
         BZ    GETCOM              NORMAL
         TSEG  ' --',,B
         PCALL NTGDCAT
         EJECT
* SCRATCH WITH SAVE CODE
         SPACE
SCRTGO   OI    CPLFLG2,CPFSCRTC    SET SCRATCH BIT
         B     ROPENN         GO OPEN
         SPACE
* THE RANGE SPECIFIED FOR A PDS SAVE WAS VOID -- CLOSE DATA
* SET AND GO ISSUE ABORTED MESSAGE -- NOTE THAT THE VOID RANGE
* MESSAGE HAS ALREADY BEEN ISSUED BY DESPOT
DOCLOSVD DCLOSE ,                  CLOSE THE DATA SET
         NI    CPGFLG,255-CPFOPN   SET DATA SET CLOSED
         LA    R15,ABRTCODE        SET CODE FOR ABORT
         B     NTGDOPN             GO DO MESSAGE
         EJECT
* IF EOV (NO MORE SPACE) DURING SAVE GO HERE.  THE DCB IS
* ALREADY CLOSED.
         SPACE
EOV      NI    CPGFLG,255-CPFOPN   TURN OFF XTRNAL DATA SET OPEN
         B     PROBOPNA
         SPACE
* OPEN IRREGULARITY CODE
         SPACE
PROBOPN  BM    CHTYPE              TYPE BEING CHANGED IF MINUS
PROBOPNA SR    R4,R4               INDICATE NOT A SUBROUTINE
         CH    R15,=Y(RTNNOSPC)    WAS IT NO SPACE?
         BH    NTGDOPN         OTHERS
         BE    PROBNOSP
         CH    R15,=Y(RTNDUPDS)        IS IT DUP DATA SET
         BE    ALREDDY                 YES
         B     NTGDOPN                 NO, MUST BE DS NOT ON CAT
         SPACE
* NO ROOM FOR DATA SET/MEMBER
PROBNOSP TM    DSNWAF2,DSNFPDS     WAS IT A PDS SAVE?
         BNZ   NORMPDS             BR IF YES
         TM    CPLFLG2,CPFSCRTC    WAS OLD DATA SET DELETED?
         BZ    NTGDOPN             BR IF NO
         SPACE
* TELL THE USER HIS OLD ONE IS GONE
         TSEG  'AFTER SCRATCH ON',,B    SCRATCH WAS DONE
         TSEG  DSNWAVOL,6          VOLUME NAME
         TSEG  ',',,B
         LA    R15,RTNNOSPC        RESET RETURN CODE
         SPACE 3
         ENTRY NTGDOPN             USE AS ENTRY FOR PCALL
NTGDOPN  PCALL NTGDOPN
         EJECT
* NO SPACE FOR EOF AT END OF MEMBER -- MEMBER SCRATCHED
* BEFORE COMING HERE
NORMPDSA TM    CPLFLG2,CPFSCRTC    DID MEMBER EXIST BEFORE
         BZ    NORMPDS             NO, NO NEED FOR SCRATCH MESS
         BAL   R4,ALREDDY          GO PUT IN MEMBER PART
         TSEG  'SCRATCHED,',,B     PUT IN SCRATCHED MESSAGE
         SPACE
* NO ROOM IN PDS
NORMPDS  TSEG  'NO SAVE,',,B       TELL USER NO SAVE DONE
         CVCALL DSNAMED
         TSEG  'FULL',,W
         B     CVQTYPE
         SPACE 3
* DATA SET ALREADY THERE
* (USED AS A SUBROUTINE TO TSEG FIRST PART OF MSG)
         SPACE
ALREDDY  TM    DSNWAF2,DSNFPDS     WAS IT A PDS SAVE?
         BZ    ALRDSN              BR IF NO
         TSEG  'MEMBER',,B
         XCALL MEMBERED
         B     ALREDDY2
         SPACE
ALRDSN   CVCALL DSNAMED
ALREDDY2 LTR   R4,R4               CALLED AS A SUBROUTINE?
         BNZR  R4                  BR IF YES - RETURN
         TSEG  'ALREADY THERE',,W
         SYSQS 1,0,'REPLACE'       SET POSITIVE PROMPT
         XCALL YESREQ              GO CHECK IF OK
         B     SCRTGO              YES, GO DO REPLACE
         SPACE
CHTYPE   LR    R3,R0               SAVE BLOCKSIZE RETURNED
         MVC   CPDRED(8),CPDOUB    SAVE KEY
         TSEG  'WARNING - DATASET TYPE WILL BE CHANGED TO',,B
         SYSQS 1,0,'PO'            ASSUME PARTITIONED DATA SET
         TM    DSNWAF2,DSNFPDS     IS IT A PDS
         BO    CHTYPE1             BR YES
         SYSQS 1,0,'PS'            NO, SET FOR SEQUENTIAL
CHTYPE1  TSEG  (1),(0),B           PUT IN PS OR PO
         TM    CPLRCL+3,FALLBT     IS IT EDIT OR FIXED SAVE
         BNZ   CHTYPE2             BR IF FIXED
         TSEG  'U/'                SET RECFM=U
         LR    R15,R3              SET R15 TO LRECL
         B     CHTYPE3             GO FINISH
         SPACE
CHTYPE2  TSEG  'FB/'               SET FIXED PART
         L     R15,CPLRCL          GET LRECL
CHTYPE3  BTD   CPDOUB,0,(15)       DO LRECL
         TSEG  (1),(0)             PUT IN BUFFER
         TSEG  '/'                 PUT IN /
         BTD   CPDOUB,0,(R3)       DO BLKSIZE
         TSEG  (1),(0),M           PUT IN BUFFER AND MARK
         SYSQS 1,0,'OK'            SET PROMPT
         CVCALL YESREQ             GO SEE IF OK TO CHANGE
         OI    DSNWAF3,DSNFCHT     YES, SET CHANGE FLAG
         MVC   CPDOUB(8),CPDRED     RESTORE KEY
         B     ROPENN              DO OPEN AGAIN
         SPACE 3
SAVERB   TSEG  'BLOCKSIZE'
         B     CVUNLEG
         EJECT
WORKX    XENTER 2,8,C32+SZR+C32         REG & WORK SPACE
         LM    R2,R6,CPLRCL             SET ALL REGS
         LTR   R2,R2                    EDIT?
         BZ    DOEDIT                   YES
         AR    R6,R2                    UPDATE CHAR COUNT
         LA    R1,C32(R8)               WORK AREA ADDR
         TM    CPSEQFLD,FNEGBT         IS SEQ # AT END
         BO    GUNPRSS                 YES
         AH    R1,CPSEQLN              NO, LEAVE ROOM FOR SEQ #
GUNPRSS  CVCALL UNPRESS                  UNPRESS
         TM    CPLFLG5,CPFUNUM          NUMBERED SAVE?
         BNZ   GOONNOW                  NO
         L     R0,CPLCNO                LINE NO. INTO R0
         CVCALL CVEXNO                  CONVERT TO EXTERNAL
         TM    CPSEQFLD,FNEGBT         IS SEQ # AT END
         BO    GUNPR2                  YES
         LH    R14,CPSEQFLD            GET SEQ FLD START
         SH    R14,=H'2'               SUBTRACT FOR EX COUNT
         BM    GUNPR1                  BEGINNING IF NEGATIVE
         LA    R15,C32(,R8)            POINT TO
         AH    R15,CPSEQLN                  TEXT TO MOVE
         EX    R14,MVCPMVC             MVC C32(0,R8),9(R15)
GUNPR1   LA    R15,C32+1(R14,R8)       POINT TO LINENO POSITION
         B     GUNPR3
         SPACE
GUNPR2   LA    R15,C32(R2,R8)
         SH    R15,CPSEQLN             POINT TO LINENO POSITION
GUNPR3   LH    R14,CPSEQLN             GET SEQFLD LENGTH
         SR    R0,R14                  ADJUST EXTERNAL
         AR    R1,R0                          POINTER FOR LENGTH
         BCTR  R14,R0                  SET LENGTH FOR EX
         EX    R14,MOVSV3              MVC 0(0,R15),0(R1)
GOONNOW  CR    R6,R4                    BUFFER FULL?
         BNH   PUTMOR                   NO
         DWRITE ,                       WRITE IT
         BZ    WRITOK                   WRITE OK
         BP    WORKXEOV            BR IF NO MORE SPACE
         XCALL WDSKER                   DISK WRITE ERROR MESSAGE
WRITOK   L     R5,CPDRED                RESET BUFFER ADDR TO START
         LR    R6,R2                    RESET COUNT
PUTMOR   EX    R3,MOVSV1                MVC   0(0,R5),C32(R8)
         AR    R5,R2                    UPDATE BUFFER PTR
         B     SCRAM
         SPACE 3
* DOING EDIT FORMAT SAVE
         SPACE
DOEDIT   IC    2,4(15)        PICK PREST COUNT
         LA    6,5(2,6)       TOTAL COUNT FOR LINE PLUS PREVIOUS
         CR    6,4            6 GTR 4 - TOO MUCH - FIRST OUTPUT BUFFER
         BNH   STOW           ALL OK - STOW AWAY
         L     5,CPDRED       EXTERNAL I/O BUF ADDR
         L     6,CPNWCT       SET WITH COUNT FOR OUTPUT REC
         STH   6,0(5)         STORE TOTAL BYTE COUNT
         MVC   C32(SZR,8),0(15)   SAVE LOCATED LINE
         DWRITE ,             OUT
         BZ    NDSKERH        B IF DISK I/O OK
         BP    WORKXEOV            BR IF NO MORE SPACE
         XCALL WDSKER         GO DO MESSAGE ON DISK WRITE ERROR
NDSKERH  LA    5,2(5)         POINT 2 BYTES INTO BUFFER
         LA    6,7(2)         SET COUNT THRU FIRST LINE NEXT BUFFER
         LA    15,C32(8)     POINT AT SAVED LINE IMAGE
STOW     LA    2,4(2)         PREST COUNT PLUS 4 FOR MOVE
         EX    2,MOVSV2       MOVE IT
         LA    5,1(2,5)       KICK POINTER
SCRAM    STM   5,6,CPNXAD     STORE
         XEXIT 2,8            RETURN
         SPACE 3
* EOV ENCOUNTERED DURING SAVE BECAUSE NO MORE SPACE IN THE
*     DATA SET.  THIS IS NORMALLY ONLY DURING A PDS SAVE WHEN
*     THE SPACE IS PRE-ALLOCATED.  DWRITE CLOSES THE DATA SET
*     BEFORE RETURNING SO DCLOSE NEED NOT BE CALLED HERE.
* SINCE THIS CONDITION IS ENCOUNTERED FROM A ROUTINE CALLED
*     BY DESPOT, WE MUST RESTORE TWO LEVELS IN THE SAVE AREA
*     STACK.  IN THIS CASE, SAVE IS AT THE FIRST LEVEL SO WE
*     DON'T HAVE TO GO THROUGH TWO LEVELS OF XEXIT WITH RETUR
*     ADDRESSES GLITCHED.
         SPACE
WORKXEOV LA    R8,CPDSNWA+DSAVSIZ  RESET SA STACK TO BEGINNING
         LR    R13,R8
         L     R2,=A(GOSAVELA)     GET ADDR OF ENTRY
         EX    0,0(R2)        USE LA AT ENTRY TO RESTORE R13
         L     R14,=A(EOV)         RETURN TO EOV ROUTINE IN SAVE
         L     R7,=A(SAVEBASE)     RESTORE SAVE BASE REG
         BR    R14       THE HELL WITH THE REST OF THE REGS
         EJECT
* THIS ROUTINE IS CALLED BY DOPEN IN PDIO IF THE SAVE IS
* SEQUENTIAL.  THE SIZE OF THE SAVE IS CALCULATED BY RUNNING
* THROUGH THE RANGE SPECIFIED.  HOWEVER, IF THE SAVE IS FIXED
* BLOCKED AND NO PARTIAL RANGE WAS GIVEN, THEN THE LINE COUNT
* IS KNOWN AND NO PASS THROUGH THE RANGE IS REQUIRED.
*
* ON ENTRY R15 HAS THE ACTUAL BLOCKSIZE OF THE SAVE
         SPACE
GETSIZE  DS    0H
         XENTER 2,8,*
         TM    DSNWAF3,DSNFLIN     WAS RANGE GIVEN
         BO    GETSIZE1            YES, MUST RUN THROUGH RNAGE
         TM    CPLRCL+3,FALLBT     IS IT FIXED SAVE
         BZ    GETSIZE1            NO, MUST RUN THROUGH RANGE
         LH    R15,CPLNCT          ASSUME ACTIVE FILE RANGE
         TM    CPLFLG5,CPFSELOC    WAS IT ACTIVE OR EXEC
         BZ    *+8                 BRANCH IF ACTIVE
         LH    R15,CPEXLNCT        GET EXEC FILE LINE COUNT
         STH   R15,DSAVCNT         SET LINE COUNT FOR SAVE
         B     GETSIZEX            RETURN TO PDIO
         SPACE
* A RUN THROUGH THE RANGE IS MADE TO DETERMINE SIZE OF SAVE
GETSIZE1 SR    R2,R2               INITIALIZE
         STH   R2,DSAVCNT             SIZE OF SAVE TO
         STH   R2,DSAVBLK             NOTHING
         LA    R2,2                SET COUNT BYTES USED
         ST    R2,DSAVSPA
         ST    R15,CPNWCT          SAVE BLOCKSIZE OF SAVE
         L     R15,WORKCTAD        GET ADDRESS OF COUNT ROUTINE
         TM    CPLFLG5,CPFSELOC    IS IT ACTIVE OR EXEC RANGE
         BZ    *+8                 BRANCH IF ACTIVE
         O     R15,=AL1(LEXATRTN,0,0,0) SET FOR EXEC RANGE
         OI    CPLFLG5,CPFNCUR     SET NOT TO CHANGE CURRENT
         CVCALL DESPOT             RUN THRU RANGE TO GET SIZE
         LH    R15,DSAVBLK
         LA    R15,1(,R15)
         STH   R15,DSAVBLK
         LH    R15,DSAVCNT         GET FINAL LINE COUNT
GETSIZEX XEXIT 2,8,LTR             RETURN
         SPACE 3
* DESPOT WORK ROUTINE TO COUNT LINES IN SAVE, BYTES IN EDIT
* SAVE, AND MAXIMUM LENGTH EDIT LINE
WORKCT   DS    0H
         SENTER 6,8
         LH    R6,DSAVCNT
         LA    R6,1(,R6)
         STH   R6,DSAVCNT
         SR    R6,R6               ZERO FOR IC
         IC    R6,4(,R15)          GET SIZE OF LINE
         LA    R1,5(,R6)           SET R1 TO TRUE BYTE COUNT
         A     R1,DSAVSPA          ADD IN COUNT SO FAR
         C     R1,CPNWCT           STILL MORE ROOM IN BUFFER
         BNH   WORKCTX             YES, GO ON
         LA    R1,7(,R6)           NO, SET R1 TO NEW COUNT + HEAD
         LH    R6,DSAVBLK
         LA    R6,1(,R6)
         STH   R6,DSAVBLK
WORKCTX  ST    R1,DSAVSPA          SAVE NEW BYTE COUNT
         SEXIT 6,8                 EXIT
         TITLE 'GOREN ROUTINE'
GOREN    DENTER SDSNDSZ
RENAME   NI    SDSNQUB+18,X'00'   CLEAR TO ADD NOVER
         CVCALL DODSNM             GET FIRST DSNAME
         MVC   DSNWAF3(2),SDSNQUB+18  MOVE IN FLAGS
RENT     TM    DSNWAF3,X'06'      ADD OR TO
         BM    RENC               OK
         BZ    CVABSENT           NO TO OR ADD
         B     CVNVALID
         SPACE
RENC     TM    CPLFLG3,CPFSET      SET SPEC
         BZ    RENDSN             NO
         CVCALL SETPFXNS
RENDSN   MVC   SDSNQLB(68),DSNWADSN     SAVE DSNAME  AND FLAGS
         SCANRSTR  ,
         CLI   DSNWAMBR,C' '      IS MEMBER SPEC
         BNE   RENPSN             YES, PDS
         NI    CPLFLG3,X'7F'      CLEAR SET
         CVCALL DODSNM             GET REST OF DATA
         MVC   DSNWAF3(2),SDSNQUB+18   UPDATE FLAGS
         CLI   DSNWAMBR,C' '         IS MEMBER SPEC
         BNE   RENR1                 YES, ERROR
RENSET   TM    CPLFLG3,CPFSET     IS SET SPEC
         BZ    RENV1              NO
         CVCALL SETPFXNS
RENV1    TM    DSNWAF3,X'01'         NOVER SPEC
         BNO   RENV3                 NO,ASK USER
         BAL   R14,NOVER             CHECK PRIV
RENV3    TM    DSNWAF1,DSNFMYDS      BELONG TO USER
         BO    REN55                 YES
         BAL   R14,NOTMYDS           NO,CHECK
REN55    CLI   DSNWAVOL,C' '         IS VOL SPEC
         BE    REN5                  NO
         MVC   SDSNQUB+8(6),DSNWAVOL MOVE VOL INTO 1ST
REN5     XC    DSNWADSN(68),SDSNQLB  SWAP BOTH FIELDS
         XC    SDSNQLB(68),DSNWADSN  DITTO
         XC    DSNWADSN(68),SDSNQLB    "
         TM    DSNWAF3,X'01'         NOVER SPEC
         BNO   RENV5                 NO,CHECK DSN & PRIV
         BAL   R14,NOVER             CHECK PRIV
RENV5    TM    DSNWAF1,DSNFMYDS      BELONG TO USER
         BO    RENV66                YES
         BAL   R14,NOTMYDS           NO,CHECK
RENV66   CVCALL VOLCHEK               CHECK FOR VOLUME
RENV6    CLI   DSNWAMBR,C' '         PDS PROCESS
         BNE   REOPEN                YES
         TM    DSNWAF3,X'02'         IS THIS ADD
         BO    RENR2                 YES, ERROR
         CLI   DSNWAVOL,C'C'         IS IT CAT
         BNE   REOPEN                NO
         OI    DSNWAF1,X'02'         SET UNCAT FLAG
REOPEN   MVI   DSNWAF2,X'82'         SET FOR RENAME AND SAVE
         L     14,CVDOPEN
         BALR  14,14
         LTR   15,15                 ERRORS
         BZ    WTMSGR                WRITE RESULTS
         CH    R15,=Y(RTNDUPDS)      CHECK FOR DSN OR MEMB
         BNE   RNTG                  NO
         TM    DSNWAF2,DSNFPDS       PDS USED
         BNO   EXSQ                  PDS NOT USED
         TSEG  'MEMBER',,B
         MVC   DSNWAMBR(8),SDSNQUB   MOVE MEMBER
         XCALL MEMBERED              TSEG MEMBER
EXSQ2    TSEG  'ALREADY EXISTS',,B
         B     CVQTYPE
EXSQ     DS    0H
         MVC   DSNWADSN(61),SDSNQLB   MOVE IN CAT DSN
         XCALL DSNAMED
         B     EXSQ2
RNTG     PCALL NTGDOPN            GO TO ERROR ROUTINE
         SPACE
RENPSN   SCAN  RENMBR
         B     CVABSENT           NO MEMBER
         SPACE
WTMSGR   CLI   DSNWAMBR,X'FF'      DIRECTORY
         BNE   WTMSGP             YES
         XCALL DSNAMED
         TSEG  'ON',,B
         LA    1,DSNWAVOL         VOLUME
         LA    0,6
         TSEG  (1),(0),B
         TM    DSNWAF1,X'03'      UNCAT,NOT UNCAT
         BO    WRM1               NOT UNCAT
         BZ    WRM2               NOT CALLED
         TSEG  'UNCATLG''D',,B
         B     WRM2
WRM1     TSEG  'NOT UNCATLG''D',,B
WRM2     TSEG  'RENAMED',,B
         MVC   DSNWADSN(61),SDSNQLB   MOVE IN DSN  AND LENGTH
         XCALL DSNAMED
         TM    SDSNQUB+16,X'06'       ANY CAT CMDS
         BZ    GETCOM                 NO
         NI    SDSNQUB+16,X'0F'       CLEAR UPPER NIBBLE
         CLI   SDSNQUB+16,X'06'       RECAT
         BNE   WRM3                   NO
         TSEG  'RECATLG''D',,B
         B     GETCOM
         SPACE
WRM3     TM    SDSNQUB+16,X'0C'       NOT CAT,CAT
         BZ    WRM6                   NEITHER
         BM    WRM5                   CAT
         TSEG  'NOT CATLG''D',,B
         B     CVQTYPE
         SPACE
WRM5     TSEG  'CATLG''D'
         B     GETCOM
         SPACE
WRM6     TM    SDSNQUB+16,X'03'       NOT UNCAT,UNCAT
         BM    WRM7                   UNCAT
         TSEG  'NOT UNCATLG''D',,B
         B     CVQTYPE
         SPACE
WRM7     TSEG  'UNCATLG''D',,B
         B     GETCOM
         SPACE
WTMSGP   TM    DSNWAF3,X'02'          ALIAS
         BO    WTMSGA                 YES
         TSEG  'MEMBER',,B
         XCALL MEMBERED
         TSEG  'IN',,B
         XCALL DSNAMED
         TSEG  'RENAMED TO',,B
         MVC   DSNWAMBR(8),SDSNQUB    MOVE IN MEMBER
         XCALL MEMBERED
         B     GETCOM
         SPACE
WTMSGA   TSEG  'ALIAS',,B
         XC    DSNWAMBR(8),SDSNQUB     SWAP MEMBERS
         XC    SDSNQUB(8),DSNWAMBR
         XC    DSNWAMBR(8),SDSNQUB
         XCALL MEMBERED
         TSEG  'FOR MEMBER',,B
         MVC   DSNWAMBR(8),SDSNQUB     MOVE BACK MEMBER
         XCALL MEMBERED
         TSEG  'ADDED TO',,B
         XCALL DSNAMED
         B     GETCOM
         SPACE
MBRF     LR    R5,R0              SAVE LENGTH
         CLI   0(R1),C'#'         IS FIRST CHAR #
         BNE   MBRF1              NO
         LA    R4,1(R1)           MOVE POINTER
         SH    R5,=H'1'           DEC LENGTH
         TSEG  '#: IGNORED',,W
         LR    R1,R4
MBRF1    CH    R5,=H'8'           LENGTH >8
         BH    CVNVALID           YES
         MVI   DSNWAMBR,X'40'     CLR MEMBER
         MVC   DSNWAMBR+1(7),DSNWAMBR
         BCTR  R5,0               DEC FOR EX
         EX    R5,MVEMBR          MOVE INTO DSNWA
         SCAN  RENDS2
         B     RENV1              RETURN TO MAIN STREAM
         SPACE
MVEMBR   MVC   DSNWAMBR(0),0(R1)
         SPACE
RENMBR   SCKW  ,MBRF
RENDS2   SCKW  ON,RON,P
         SCKW  NOVERIFY,NOVAR,A
         SCKW  ,INVALID
         SPACE
RON      CH    R0,=Y(6)           LENGTH >6
         BH    CVNVALID           YES
         MVC   DSNWAVOL(6),0(15)  MOVE INTO DSNWA
         BR    R14
         SPACE
NOVAR    OI    DSNWAF3,X'01'      SET NOV
         BR    R14
         SPACE
RENR1    TSEG  'SECOND DSNAME INVALID',,B
         B     CVQTYPE
         SPACE
RENR2    TSEG  'MEMBER NOT SPECIFIED',,B
         B     CVQTYPE
         TITLE 'GOSCRT ROUTINE'
GOSCRT   DENTER DSSIZ
SCRTBASE CVCALL DODSNM         GO GET THEM
         SCAN  SCRSCAN             SCAN FOR OTHER STUFF
         CVCALL VOLCHEK                  MAKE SURE VOL SPECIFIED
         TM    CPLFLG3,CPFSET      TEST "SET SPECIFIED
         BZ    GOSCRT2             BR IF NO
         CVCALL SETPFXNS            GO DO SET
GOSCRT2  TM    DSNWAF1,DSNFMYDS        BELONG TO USER?
         BO    SCRTOK              YES - PROCEED
         BAL   R14,NOTMYDS         GO SEE IF OK TO SCRATCH
SCRTOK   DSCRATCH ,                GO SCRATCH IT
         LR    R2,R15              SAVE RETURN CODE
         LR    R3,R0               SAVE SECOND RETURN CODE
         LH    R0,RTBWC            SEE IF ANYTHING TO WRITE
         LTR   R0,R0
         BZ    SCRTOK2             BRANCH NO
         TWRITE ,                  WRITE OUT LINE
SCRTOK2  LR    R0,R3               RESTORE SECOND RETURN CODE
         LTR   R15,R2              RESTORE AND TEST RETURN
         BZ    SCRDONE             GOOD OPEN
         CH    R15,=Y(C12)         TEST UNCATLG ERROR
         BE    SCRDONE             BR IF YES
         CH    R15,=Y(RTNBDMBR)    WAS IT MEMBER ERROR
         BNE   SCRBAD              NO, GO GIVE ERROR MESSAGE
         TM    DSNWAMBR,X'BF'      WAS MEMBER SPECIFIED
         BNE   SCRBAD              YES, GO GIVE ERROR MESSAGE
         TSEG  'MEMBER NOT SPECIFIED',,W
         TSEG  'OK TO SCRATCH',,BLANK
         CVCALL DSNAMED            PUT DSNAME IN MESSAGE
         SYSQS 1,0,'PDS'           SET POSITIVE PROMPT PART
         XCALL YESREQ              GO PROMPT USER
         MVI   DSNWAMBR,X'FF'      SET FLAG FOR DSCRATCH
         B     SCRTOK              GO DO SCRATCH
         SPACE
SCRBAD   PCALL NTGDOPN                 PROCESS ERROR
         SPACE
SCRDONE  TM    DSNWAF2,DSNFPDS     WAS IT A PDS MEMBER SCR?
         BNZ   SCRMDONE            BR IF YES
         XCALL CHKMBRIG            CHECK MEMBER IGNORED
         CVCALL DSNAMED             GO TSEG DSNAME
         TSEG  'SCRATCHED',,B
         TM    CPLFLG3,CPFUNCLG    WAS UNCATLG ATTEMPTED?
         BZ    GOSCVOL             BR IF NO
         LTR   R2,R2               WAS IT SUCCESSFUL?
         BNZ   GOSCNOUC            BR IF NO
         TSEG  'AND',,B
         B     GOSCUC
         SPACE
GOSCNOUC TSEG  'BUT NOT',,B
GOSCUC   TSEG  'UNCATLG''D',,B
GOSCVOL  TSEG  'ON',,B
         TSEG  DSNWAVOL,6          TSEG VOL SER NO
         B     GETCOM
         SPACE 3
* MEMBER SCRATCHED SUCCESSFULLY
         SPACE
SCRMDONE TSEG  'MEMBER',,B
         XCALL MEMBERED            GO TSEG MEMBER NAME
         TSEG  'SCRATCHED FROM',,B
         CVCALL DSNAMED             GO TSEG DSNAME
GETCOM   BALR   R14,0
         USING *,R14
         B     CVGETCOM            EXIT
         DROP  R14
         SPACE 3
SCRPDS   TM    DSNWAMBR,X'BF'      TEST IF MEMBER SPECIFIED
         BM    SCRPDSIG            BR YES TO IGNORE PDS OPERAND
         MVI   DSNWAMBR,X'FF'      SO INDICATE
         BR    R14
         SPACE
SCRPDSIG LR    R2,R14              SAVE RETURN ADDRESS
         TSEG  'MEMBER SPECIFIED, PDS IGNORED',,W
         BR    R2                  RETURN
         SPACE
SETUNC   OI    CPLFLG3,CPFUNCLG
         BR    R14
         SPACE 3
* THE FOLLOWING CODE ALLOWS A USER WITH SYSTEM PRIVILEGES
* TO SCRATCH, CATALOG, OR UNCATALOG A DATA SET WITHOUT THE
* MSG--XXX NOT YOURS. OK?--- COMING OUT. HE DOES THIS BY
* SAYING SCR CUCC.X NOVER
         SPACE
NOVER    TM    JCBAFL,JCBSYSPR     SYS PRIV?
         BNOR  R14
         OI    DSNWAF1,DSNFMYDS
         BR    R14
         SPACE
VER      TM    JCBAFL,JCBSYSPR     SYS PRIV?
         BNOR  R14
         NI    DSNWAF1,255-DSNFMYDS
         BR    R14
         SPACE 3
SETEXPDT OI    DSNWAF3,DSNFEXP     SET EXPIRATION DATE OVERRIDE
         TM    JCBAFL,JCBSYSPR     SYS PRIV?
         BNO   CVNVALID            NO, CANN'T USE OPTION
         BR    R14                 SCAN ON
         TITLE 'ROUTINE TO TEST FOR PRIV USER FOR SCR/UNCAT'
* ALLOW TO SCRATCH SYSMSG, CB AND AC DATA SETS
         SPACE
NOTMYDS  SENTER R14,R8,C44
         AIF   ('&DCEC' EQ '1').LBL04                           JEP00X
         LA    R2,DSNWADSN+7       USER ID LOC IN SYSMSG DSN
         CLC   =C'SYSMSG.',DSNWADSN     IS IT SYSMSG?
         BE    CHKID               BR IF YES - GO CHECK ID
         LA    R2,DSNWADSN+3       USER ID LOC IN CB DSN
         CLC   =C'AC.',DSNWADSN    IS IT AC?
         BE    CHKID
         CLC   =C'CB.',DSNWADSN    IS IT CB?
         BNE   NOTMYDS2            BR IF NO
CHKID    CLC   CPUSER(5),0(R2)     IS IT FOR THIS USER?
         AGO   .LBL05                                           JEP00X
.LBL04   DS    0H                                               JEP00X
         XR    R1,R1               ZERO OUT R1                  JEP001
         IC    R1,CVUSRFLD         PICK UP LEN OF ID            JEP001
         BCTR  R1,0                DOWN 1 FOR EXECUTE           JEP001
         LA    R2,DSNWADSN         PICK UP USER ID              JEP001
CHKID    CLC   CPUSERSV(0),0(R2)   IS IT THIS USER?             JEP001
         EX    R1,*-6              EXECUTE ABOVE COMPARE        JEP001
.LBL05   DS    0H                                               JEP00X
         BE    SCRALL              BR IF YES - OK TO SCRATCH
NOTMYDS2 CVCALL DSNAMED            PUT OUT DSNAME
         TSEG  'NOT YOURS',,W
         TM    JCBAFL,JCBSYSPR     SYS PRIV?
         BZ    CVQTYPE             BR IF NO
         SYSQS 1,0,'OK'            SET PROMPT PART
         XCALL YESREQ              GO CHECK IF OK
SCRALL   OI    DSNWAF1,DSNFMYDS    INDICATE SCR IS OK
         SEXIT R14,R8,FOOP
         TITLE 'SCKWS AND REMOTE MVCS'
* FOR SCRATCH
         SPACE
SCRSCAN  SCKW  UNCATLG,SETUNC,A
         SCKW  PDS,SCRPDS
         SCKW  NOVERIFY,NOVER,A
         SCKW  VERIFY,VER,A
         SCKW  EXPDT,SETEXPDT,A
         SCKW  ,IGDSNPRT,PUSH
         SCKW  ,INVALID
         SPACE 3
* FOR SAVE
         SPACE
MOVSV1   MVC   0(0,5),C32(8)
MOVSV2   MVC   0(0,5),0(15)
MOVSV3   MVC   0(0,R15),0(R1)
MVCPMVC  MVC   C32(0,R8),0(R15)
         SPACE
         DS    0F
WORKXD   DC    AL1(DESRTRN+LOCATRTN+DESMATCH+PREST),AL3(WORKX)
WORKCTAD DC    AL1(DESRTRN+LOCATRTN+DESMATCH+PREST),AL3(WORKCT)
         TITLE 'LITERALS'
         LTORG ,
         TITLE 'GOUSE ROUTINE'
* GOUSE IS ENTERED FROM PRIMARY SCAN ON USE -
* USE IS PROCESSED HERE - ERRORS CALL EXTERNAL RTNS
* PRIMARY SCAN ONLY REACHES HERE AT START OF JOB - OR AFTER CLEAR
         SPACE
GOUSE    DENTER DSSIZ,SZR
         MVC   CPCMNM(3),=C'USE'   SET TO'USE'IN CASE IT IS'U'
         OI    CPLFLG3,CPFSET      SET IS DEFAULT ON USE
         MVC   CPSEQFLD(4),=H'-1,8'    INITIALIZE SEQFLDS
         CVCALL DODSNM         GET DSNAME (AND MAYBE VOLUME)
         XCALL FMTCHK R0=0,EDIT - RO=POS,LRECL - R0=NEG,NOT SPEC
         LR    5,0            SAVE IN R5
         LA    4,1(1)         SAVE SKIP COUNT
         BAL   R14,CLEARCK              CLEAR, IF POSSIBLE
         BAL   R14,VOLCHEK              MAKE SURE VOL SPECIFIED
         TM    CPLFLG3,CPFSET      TEST "SET SPECIFIED
         BZ    USEOPEN             BR IF NOT
         CVCALL SETPFXNS            DO SET PREFIX AS SUBROUTINE
*        TM    DSNWAF1,DSNFMYDS    DOES IT BELONG TO USER
*        BO    USEOPEN             BRANCH YES
*        L     R14,=A(NOTMYDS)
*        BALR  R14,R14
USEOPEN  OI    CPSYSFLG,CPFRNGCM+CPFNTYPD+CPFTUSXC
         DOPEN (R5),,USE           OPEN DATA SET
         BZ    OPNISGD        GOOD OPEN
         PCALL NTGDOPN        GO DO OPEN ERROR MESSAGE
         SPACE 3
* GOOD OPEN -- SET CPGFLG FOR NO RECOVERY, IGNORE DIRECTORY
*              CHANGES IN STOWIT AND EXTERNAL DATA SET OPEN
         SPACE
OPNISGD  OI    CPGFLG,CPFOPN
         ST    1,CPDRED       SAVE START INPUT BUFFER
         LTR   R5,R5               TEST FORMAT SPECIFIED
         BNM   *+6                 BR IF YES
         LR    R5,R0               LRECL PLUGGED IN BY DOPEN
         XCALL CHKMBRIG            CHECK MEMBER IGNORED
         TM    CPLFLG5,CPFUNUM     TEST UNNUMBERED
         BO    NXREDE              BR IF YES
         OI    CPSEQLN,FNEGBT   TURN ON FLAG TO DETERMINE POINT
         LTR   R5,R5               TEST FORMAT
         BNZ   NXREDE                  OKAY IF NOT EDIT
         DCLOSE ,                      CLOSE FILE
         NI    CPGFLG,255-CPFOPN  SET EXTERNAL DATA SET CLOSED
         TSEG  'NUMBERED'
         CVCALL UNLEGAL                                          *
         EJECT
NXREDE   TM    JCBAFL,JCBAFIA          TEST FOR IDLE ATTN
         BZ    NXREDE2                 NO, READ NEXT RECORD
         DCLOSE ,                      CLOSE DATA SET
         NI    CPGFLG,255-CPFOPN       SET DATA SET CLOSED
         TSEG  'ABORTED -- USE INCOMPLETE'
         OI    CPGFLG,CPFDIRCH         SET DIRECTORY CHANGED
         B     CVQTYPE
         SPACE
NXREDE2  DREAD (0)                     READ NEXT RECORD
         BP    EOFNOW         FINI
         BZ    NDSKERI        B IF DISK I/O OK
         XCALL RDSKER         GO DO MESSAGE ON DISK READ ERROR
NDSKERI  L     6,CPDRED       ADDR 1ST BYTE OF INPUT THIS READ
         LTR   2,5            FORMAT CODE (0-ED, 80-CD, 132-PR)
         BNZ   NOTEDT         NOT EDIT
         LR    15,6           ADDR INPUT BUFFER
         LH    3,0(15)        BYTE COUNT IN BUFFER
         LTR   3,3            TEST FOR GOOD COUNT HALF-WORD
         BNP   NOGGODY
         CR    3,0            MAKE SURE COUNT MAKES SENSE
         BH    NOGGODY
         LA    15,2(15)       POINT AT 1ST LINE
         AR    R3,R6                   SET ENDING ADDRESS
         SR    R2,R2
ICAGEN   IC    2,4(15)        GET NEXT PREST-COUNT
         CH    R2,=AL2(SZR)       PREST COUNT TOO LARGE?
         BH    NOGGODY        YEP .... REJECT
         CLC   0(4,R15),CPHIPS          HIGHEST?
         BH    GOODY                    YES
         CLC   CPAGCT(2),=D'0'          ANYTHING YET?
         BNE   NOGGODY                  YES, NG
GOODY    LA    15,5(,15)      SKIP LINE # AND LINE SIZE
         LTR   R2,R2          NULL LINE?
         BZ    NULLLINE
PRESSCHK IC    R1,0(R15)      GET PRESSED BYTE INFO
         LA    R14,15         MASK OF X'0F'
         NR    R14,R1         NONBLANK CHAR COUNT
         SRL   R1,4           BLANK COUNT IN R1
         SR    R2,R14         DECREMENT LINE SIZE
         BM    NOGGODY        TSK TSK .. BAD EDIT FORMAT
         LA    R15,1(R14,R15)      SKIP TO NEXT PRESSED BYTE
         BCT   R2,PRESSCHK         KEEP UNPRESSING
NULLLINE CR    R15,R3                  SEE IF MORE IN RECORD
         BL    ICAGEN
         BH    NOGGODY
         LA    6,2(6)         POINT OVER COUNT IN RECORD
DONEXE   IC    2,4(6)         PREST COUNT TO R2
         LR    1,6            CURRENT INPUT POINTER
         LR    0,2            COUNT FOR STOW
         BCT   R4,EUSESKP              SKIP IF CALLED FOR
         LA    R4,1                    RESET FOR DROP THRU
         CVCALL STOWIT         STOW IT AWAY
EUSESKP  LA    6,5(6,2)       KICK POINTER
         CR    R6,R3                   AT END OF THIS RECORD YET
         BL    DONEXE         NO - DO NEXT
         B     NXREDE         READ NEXT RECORD
         EJECT
NOTEDT   AR    0,6            ADDRESS 1ST BYTE PAST INPUT
         ST    0,CPNWCT       STORE IT
         LTR   R5,R5               TEST FIXED OR VARIABLE
         BP    NOTIDT              BR IF FIXED
         SR    R0,R6               RESTORE ORIG LENGTH
         CH    R0,0(R6)            VALIDATE BLOCK LENGTH
         BNE   INVARDS             INVALID BLOCK LENGTH
         LA    R6,4(R6)            BUMP PAST BLOCK COUNT
NOTIDT   LTR   R2,R5               TEST FIXED OR VARIABLE
         BP    NOTIDT2             BR IF FIXED
         L     R0,CPNWCT           ADDR OF END OF BLOCK
         SR    R0,R6               REMAINING LENGTH
         BZ    NXREDE              BR IF AT END OF BLOCK
         BM    INVARDS             BR IF AN ERROR
         MVC   CPHFWRD,0(R6)       MOVE RECORD LENGTH
         LH    R2,CPHFWRD          LOAD IT
         CR    R2,R0     IS REC LONGER THAN REMAINING IN BLOCK?
         BH    INVARDS             BR IF YES
NOTIDT2  LA    R3,0(R2,R6)         ADDR OF NEXT RECORD
         C     R3,CPNWCT           CHECK FOR END OF BLOCK
         BH    NXREDE              BR IF YES
         LTR   R5,R5               TEST FIXED/VARIABLE
         BP    NOTVAR              BR IF FIXED
         LA    R6,4(R6)            PAST RECORD LENGTH FIELD
         SH    R2,*-2              DECR LENGTH TO ACTUAL DATA
         BM    INVARDS             INVALID VAR REC IF NEG
         BZ    USESKP              NULL RECORD IF ZERO
NOTVAR   CH    R2,=Y(MXPRTSZ)      CHECK OVER MAXIMUM
         BNH   *+8                 OK
         LH    R2,=Y(MXPRTSZ)      USE MAXIMUM
         BCT   4,USESKP       SKIP IF CALLED FOR
         LA    4,1            RESET FOR DROP THRU
         TM    CPLFLG5,CPFUNUM NUMBERED USE?
         BZ    DOUSNMB        YES
         L     0,CPHIPS       GET LAST-TIME HIGHEST POSITION
         L     1,CPGLDL       ADD TO IT DELTA
         CVCALL ADDER          ADD THEM
         BM    USERRB         NEED A SMALLER DELTA
         LR    R15,R0                   LINE NO.
CUTTIN2  LR    R1,R8                    PTR TO WORK AREA
         EX    2,USEMVC       MOVE TO WORK AREA FOR PRESS
         LR    0,2            MAX COUNT FOR PRESS
USEPRS   CVCALL PRESS          PRESS IT
         CVCALL STOWIT         STOW IT AWAY
USESKP   LR    6,3            RESET POINTER FOR NEXT LINE
         B     NOTIDT         GO GET NEXT CARD OR LINE
         EJECT
DOUSNMB  TM    CPSEQLN,FNEGBT   NEED TO DETERMINE POINT/NOPOINT
         BE    DOUSNM3                 NO
         NI    CPSEQLN,255-FNEGBT      TURN OFF FLAG
         LH    R15,CPSEQLN             GET COUNT
         NI    CPLFLG5,255-CPFINT      ASSUME DECIMAL POINT
         TM    CPSEQFLD,FNEGBT         TEST SEQFLD AT END
         BE    DOUSNM2                 NO
         LA    R1,0(R2,R6)             POINT TO
         SR    R1,R15                          SEQFLD
         B     DOUSNM1                 GO LOOK FOR DECIMAL PNT
         SPACE
DOUSNM2  LH    R1,CPSEQFLD             POINT
         BCTR  R1,0                         TO
         AR    R1,R6                          SEQFLD
DOUSNM1  CLI   0(R1),C'.'              DECIMAL POINT IN SEQFLD
         BE    DOUSNM3                 YES, GO ON
         LA    R1,1(,R1)               POINT TO NEXT POSITION
         BCT   R15,DOUSNM1             LOOP TILL DONE
         OI    CPLFLG5,CPFINT          SET NO DECIMAL POINT
DOUSNM3  LH    R0,CPSEQLN              GET SEQFLD LENGTH
         TM    CPSEQFLD,FNEGBT         SEQ FLD AT END
         BO    DOUSNMB1                YES
         LH    R1,CPSEQFLD             GET SEQFLD POSITION
         BCTR  R1,0                    SET MACHINE POSITION
         LR    R15,R0                  CHECK
         AR    R15,R1                     SEQFLD
         CR    R2,R15                        IN RECORD
         BL    USERRC                  NO
         AR    R1,R6                   POINT TO SEQFLD POSITION
         B     CUTTIN1                 GO SCAN
         SPACE
DOUSNMB1 CH    R2,CPSEQLN              CHECK SEQFLD IN RECORD
         BL    USERRC                  NO
         LA    R1,0(R2,R6)             POINT TO
         SR    R1,R0                         SEQFLD POSITION
CUTTIN1  SCINIT (1),(0)                 SCAN INIT
         LA    R1,USNMPRT              ASSUME DECIMAL LINENOS
         TM    CPLFLG5,CPFINT          IS IT NOPOINT
         BE    DOUSNMBA                NO, DECIMAL CORRECT
         LA    R1,USNMPRT2             SET FOR NO DECIMAL POINT
DOUSNMBA SCAN  (1)                     SCAN SEQ FLD
         B     USERRC                  NOTHING FOUND
         SPACE
HVUSNMB1 CL    R15,=F'99999999'        TEST MAX VALUE
         BH    USERRC                  ERROR IF HIGH
HVUSNMB  C     R15,CPHIPS               LEGAL LINE NO?
         BNH   USERRC                  NO
         SH    R2,CPSEQLN              SET RECORD SIZE
         TM    CPSEQFLD,FNEGBT         SEQFLD AT END
         BO    CUTTIN2                 YES DONE
         LH    R1,CPSEQFLD             GET SEQFLD POSITION
         BCTR  R1,0                    SET FOR MACHINE POSITION
         LA    R1,0(R6,R1)             SET R1 TO SEQFLD START
         LR    R14,R1                  SET R14 TO TEXT
         AH    R14,CPSEQLN                  AFTER SEQFLD
         LR    R0,R2               SAVE R2
         SH    R2,CPSEQFLD         LENGTH - POSIT OF SEQ FLD
         BM    *+8                 BR IF REALLY IS AT END
         EX    R2,USEMVC2              MVC 0(0,R1),0(R14)
         LR    R2,R0               RELOAD R2
         B     CUTTIN2
         SPACE
USERRC   TSEG  'USE OPTION ERROR,',,BLANK
         B     GOCLRNW
         SPACE 3
EOFNOW   DCLOSE ,             CLOSE FILE
         NI    CPGFLG,255-CPFOPN  SET EXTERNAL DATA SET CLOSED
OTHOUT   OI    CPGFLG,CPFDIRCH         SET DIR CHNGED FOR RCVY
         B     CVGETCOM            EXIT
         SPACE 3
USERRB   DCLOSE ,             CLOSE FILE
         NI    CPGFLG,255-CPFOPN  SET EXTERNAL DATA SET CLOSED
         TSEG  'DELTA TOO BIG, USE ABORTED',,B
         B     OTHOUT                   GO SEE IF OTHER PARTITION WANTS
         SPACE
NOGGODY  TSEG  'INVALID EDIT FORMAT BLOCK,',,B
GOCLRNW  DCLOSE  ,                 CLOSE FILE
         NI    CPGFLG,255-CPFOPN   SET EXTERNAL DATA SET CLOSED
         TSEG  'USE INCOMPLETE'
         B      CVQTYPE
         SPACE
INVARDS  TSEG  'INVALID VARIABLE LENGTH BLOCK,',,B
         B     GOCLRNW
         TITLE 'CLEAR ROUTINE FOR FETCH - USE'
CLEARCK  XENTER R7,R8,*
         CLC   CPAGCT(2),=D'0'         ARE THERE ANY PAGES
         BE    FIXCLR2                 NO
         TM    CPLFLG2,CPFCLEAR    WAS "CLEAR" SPECIFIED?
         BO    FIXCLR              BR IF YES
         TSEG  'OK TO',,B          SET FIRST PART OF PROMPT
         SYSQS 1,0,'CLEAR'         SET POSITIVE PART OF PROMPT
         BAL   R14,YESREQ          GO PROMPT USER FOR PERMISSION
FIXCLR   CVCALL DOCLEAR                  CLEAR
FIXCLR2  MVI   CPLSTCOL,FNEGBT   SET FOR FIRST COLLECT
         MVI   CPCURRL,X'F0'       SET CURRENT LINE POINTER INV
         XEXIT R7,R8                    USE-FETCH NOW OK
         TITLE 'PROMPT FOR YES PROCESSOR'
* YESREQ PROCESSES VARIOUS PROMPT REQUESTS FOR THE USER
* IF THE USER RESPONDS WITH 'YES', 'OK', OR THREE OR MORE
* CHARACTERS OF THE PROMPT PASSED IN R0 AND R1, THEN IT
* IS CONSIDERED TO BE A POSITIVE RESPONSE AND CONTROL IS
* RETURNED TO THE CALLER.  ANY OTHER RESPONSE CAUSES A
* REQUEST ABORTED MESSAGE BY CALLING THE NOT GOOD OPEN ROUTINE
* WITH THE ABORT CODE.
         SPACE
YESREQ   XENTER 5,8,*              DEFINE ENTRY
         LR    R6,R13              MAKE POINTER TO MOVED PROMPT
         LTR   R5,R0               SAVE PROMPT LENGTH & TEST
         BNP   YESREAD             GO READ IF NO MOVE NEEDED
         EX    R5,YESMVC           MOVE PROMPT TO WORK AREA
         LA    R13,4(R5,R13)       RESET R13
         N     R13,=F'-4'          INSURE WORK BOUNDARY
YESREAD  TREADR (1),(0)            GO PROMPT USER
         SCINIT (1),(0)
         SCAN  YESRQPRT            SCAN FOR YES, OK OR OTHER
YESABORT LA    R15,ABRTCODE        SET ABORT CODE
         PCALL NTGDOPN             GO ABORT REQUEST
         SPACE
* COMPARE RETURN TO PROMPTED TEXT TO SEE IF POSITIVE RESPONSE
YESTEST  CR    R0,R5               TEST LENGTHS
         BH    YESABORT            TO LONG -- ABORT IT
         BE    YESCOMP             EQUAL -- GO COMPARE
         LR    R5,R0               SMALLER -- USE SMALLER VALUE
         CH    R5,=H'3'            IS IT AT LEAST THREE
         BL    YESABORT            NO, ABORT REQUEST
YESCOMP  BCTR  R5,0                SET LENGTH FOR CLC
         EX    R5,YESCLC           DO COMPARE
         BNE   YESABORT            NOT EQUAL -- ABORT REQUEST
YESDO    XEXIT R5,R8               POSITIVE REPLY -- RETURN
         SPACE
YESCLC   CLC   0(0,R1),0(R6)       EXECUTED CLC INSTRUCTION
YESMVC   MVC   0(0,R6),0(R1)       EXECUTED MVC INSTRUCTION
         SPACE
YESRQPRT SCKW  YES,YESDO
         SCKW  OK,YESDO
         SCKW  ,YESTEST
         TITLE 'DSNAME MESSAGE ROUTINE (DSNAMED)'
* ROUTINE TO TSEG DSNAME WITH TRAILING BLANK
*     FORMAT OF TSEG DEPENDS ON SETTING OF TERSE FLAG
         SPACE
DSNAMED  XENTER 2,8,*
         LA    R3,DSNWADSN         ADDR OF DSNAME
         LH    R2,DSNWANL          LENGTH OF DSNAME
         LTR   R2,R2               TEST LENGTH ZERO
         BZ    DSNOTWYL            BR IF SO
         TM    CPGFLG,CPFCMOFF     TEST TERSE
         BZ    DSREDY              BR IF NOT
* TERSE
         TM    DSNWAF1,DSNFQDSN    IS IT QUOTED DSNAME?
         BO    DSNOTWYL            BR IF YES
         TM    DSNWAF1,DSNFSTD     IS IT A STD WYL DSN?
         BZ    DSNOTWYL            BR IF NOT
         AIF   ('&USPS' EQ '1').XLBL03                          USPS01
         CLC   CPGRPSV,DSNXG+DSNWADSN   IS IT DEFAULT GROUP?
         BE    DSSMGRP             BR IF YES
         TSEG  '@'
         SYSQS R1,R0,DSNXG+DSNWADSN,DSNXGL
         CLC   CPGRP,0(R1)         IS IT SIGNED ON GROUP?
         BNE   DSOGRP              BR IF NO
         LA    R1,DSNXGL-1(R1)     BUMP TO "."
         SH    R0,*-2              AND ADJUST LENGTH
DSOGRP   TSEG  (1),(0)
.XLBL03   DS   0H                                               USPS01
         AIF   ('&USPS' NE '1').XLBL04                          USPS01
DSSMGRP  EQU   *                                                JEP001
         SR    R4,R4               CLEAR                        JEP001
         IC    R4,CVUSRFLD         PICK UP ID LENGTH            JEP001
         BCTR  R4,0                DOWN FOR COMPARES            JEP001
         CLC   CPUSERSV(0),DSNWADSN   DEFAULT ID???             JEP001
         EX    R4,*-6              EXEC ABOVE INST              JEP001
         BE    DSSMUSER            SAME USER                    JEP001
         TSEG  '&&'                PUT OUT DEFAULT USED         JEP001
         LR    R1,R3               POINT TO DSN WORK AREA       JEP001
         LR    R0,R4               PICK UP ID LEN               JEP001
         LA    R0,1(R0)            MAKE REAL LENGTH             JEP001
         CLC   CPUSER(0),0(R1)   FIND OUT IF LOGON ID           JEP001
         EX    R4,*-6              SAME AS LOGON????            JEP001
         BNE   DSOUSER             NOPE, SEND ID                JEP001
         LA    R1,0(R4)            BUMP PAST ID                 JEP001
         SR    R0,R4               ADJUST LENGTH                JEP001
DSOUSER  TSEG  (1),(0)             SEND IT                      JEP001
DSSMUSER LA    R4,1(R4)            BUMP PAST PERIOD             JEP001
         LA    R4,1(R4)            ONE TAKEN FOR COMPARE        JEP001
         AR    R3,R4               PAST ID OR DEFAULT           JEP001
         SH    R2,R4               CORRECT LENGTH               JEP001
         B     DSREDY              SET UP DONE .... PUT DSN     JEP001
         AGO   .XLBL05                                          USPS01
.XLBL04   DS   0H                                               USPS01
DSSMGRP  CLC   CPUSERSV,DSNXU+DSNWADSN  DEFAULT ID?
         BE    DSSMUSER            BR IF SAME USER ID
         TSEG  '&&'
         SYSQS R1,R0,DSNXU+DSNWADSN,DSNXUL
         CLC   CPUSER,0(R1)        IS IT SIGNED ON USER?
         BNE   DSOUSER             BR IF NO
         LA    R1,DSNXUL-1(R1)
         SH    R0,*-2              AND ADJUST LENGTH
DSOUSER  TSEG  (1),(0)
DSSMUSER LA    R3,DSNXN+DSNWADSN    PAST JUNK
         SH    R2,=Y(DSNXN)        ADJUST LENGTH
         B     DSREDY
         SPACE
.XLBL05   DS   0H                                               USPS01
DSNOTWYL TSEG  '$'
         B     DSREDY
         SPACE 3
* ROUTINE TO TSEG VARIABLE LENGTH MEMBER WITH TRAILING BLANK
         SPACE
MEMBERED XENTER R2,R8,*
         LA    R3,DSNWAMBR         GET MEMBER ADDR
         LR    R2,R3
         LA    R15,8               MAX SIZE OF MEMBER
MEMBEDLP CLI   0(R2),X'40'         IS CHAR BLANK?
         BE    MEMBEDHL            BR IF YES - END OF NAME
         LA    R2,1(R2)            ONWARDS
         BCT   R15,MEMBEDLP        UNLESS OUT OF THE END
MEMBEDHL SR    R2,R3               GET LENGTH
         SPACE
         DROP  R7
         SPACE
* EXIT FROM DSNAMED/MEMBERED - NO ADDRESSABILITY ON R7
DSREDY   TSEG  (R3),(R2),B
         LR    R1,R3
         LR    R0,R2
         XEXIT 2,8            RTRN
         TITLE 'CATLG FUNCTION MESSAGE ROUTINE (CTLGED)'
* ROUTINE TO TSEG THE CATLG FUNCTION WHICH WAS CALLED.
         SPACE
CTLGED   XENTER R2,R8,*
         TM    CPLFLG3,CPFRECLG    TEST VALID BITS
         BZ    CTLGEDC             BR IF NOT
         BM    CTLGEDM             BR IF NOT RECATLG
         TSEG  'RE'
         B     CTLGEDC             GO TO COMMON STUFF
         SPACE
CTLGEDM  TM    CPLFLG3,CPFUNCLG    TEST UNCATLG
         BZ    CTLGEDC
         TSEG  'UN'
CTLGEDC  TSEG  'CATLG''D',,B
CTLGEDX  XEXIT R2,R8
         TITLE 'MOVE IN DEFAULT VOL OR GET VOL RTN'
* 1 - VOL ALREADY GIVEN?  RETURN
* 2 - VOL NOT GIVEN, DEFAULT EXISTS?  SET DEFAULT
* 3 - VOL NOT GIVEN, NO DEFAULT?  GET VOL FROM USER
* 4 - IF VOL="CATLG" SET FLAG
         SPACE
VOLCHEK  LA    R1,CPDSNWA
VOLCHKNL SENTER 14,8,C44      ENTRY IN CASE R1 ALREADY LOADED
         CLI   DSNWAVOL,C' '       SET?
         BNE   VOLCKCAT            YES
         LTR   R1,R1               MANDATORY PROMPT?
         BNP   VOLPRMT             BR IF YES
         TM    CPGFLG,CPFVOLM           DEFAULT?
         BZ    VLNODFLT                 NO
         MVC   DSNWAVOL(6),CPVOLSV  MOVE IN DEFAULT
VOLCKCAT SCINIT DSNWAVOL,6         SCAN VOLUME NAME
         SCAN  CATLGPRT            FOR 'CATLG' AND ABBREV
CATLGMVC MVC   DSNWAVOL,=C'CATLG '    SET CATLG IN VOL NAME
         OI    CPLFLG1,CPFUSCAT    SET FLAG TO USE CATALOG
VOLEXIT  MVC   CPDOUB(8),CPDRED
         SEXIT 14,8,*                   SCRAM
         SPACE
VLNODFLT TM    DSNWAF1,DSNFWLIB    IS IT A WYLBUR LIB?
         BO    CATLGMVC            BR IF YES - USE CATLG
VOLPRMT  TREADR 'VOLUME'
         BP    CVQTYPE             ABORT IF ATTENTION
         SCINIT (1),(0)
         SCAN  VOLPRT
         B     CVABSENT
         SPACE
VOLGOT   CH    R0,=Y(6)                 TOO LONG?
         BH    CVNVALID                 YES
         MVC   DSNWAVOL(6),0(R15)     SET IT
         SCAN  VOLPRT2             SCAN FOR "SET"
         B     VOLCKCAT
         SPACE
VOLSET   MVC   CPVOLSV,DSNWAVOL       SAVE VOLUME SPECIFIED
         OI    CPGFLG,CPFVOLM      INDICATE DEFAULT VOLUME SET
         B     VOLCKCAT
         TITLE 'INFORM USER IF SPECIFIED MEMBER WAS NOT NEEDED'
CHKMBRIG SENTER R14,R8,C44
         TM    DSNWAF2,DSNFPDS     WAS PDS ACCESSED?
         BO    CHKMIX              EXIT IF SO
         TM    DSNWAMBR,X'BF'      WAS A MEMBER SPECIFIED?
         BNM   CHKMIX              BR IF NOT OR IF X'FF'
         XCALL MEMBERED            GO TSEG MEMBER NAME
         TSEG  'IGNORED',,W
CHKMIX   SEXIT R14,R8,*
         TITLE 'SCKW''S'
* FOR USE
         SPACE
USNMPRT  SCKW  ,HVUSNMB,LN
         SCKW  ,USERRC
         SPACE
USNMPRT2 SCKW  ,HVUSNMB1,PI
         SCKW  ,USERRC
         SPACE 3
* FOR VOLUME CHECK
         SPACE
VOLPRT   SCKW  ,VOLGOT
VOLPRT2  SCKW  SET,VOLSET
         SCKW  ,VOLCKCAT
CATLGPRT SCKW  CATLG,CATLGMVC,A
         SCKW  ,VOLEXIT
         TITLE 'UTILITY ROUTINES - REMOTE MVC''S'
* FOR USE
         SPACE
USEMVC   MVC   0(0,1),0(6)
USEMVC2  MVC   0(0,R1),0(R14)
         TITLE 'LITERALS'
         LTORG ,
         TITLE 'UTILITY ROUTINES'
NOMORPG  GENTER ,NO                PCALL ENTRY FOR OUT OF PAGES
         PCALL NOMORPG
         SPACE 3
ADDBUF   BTD   CPDOUB,0,(15)           CONVERT TO DECIMAL
         TSEG  (1),(0),B               ADD TO BUFFER
         BR    R6                      RETURN
         EJECT
* TPROT ROUTINE IN CVCALLED TO DISPLAY PROTECTION BITS
* WHILE DOING A SHO DSNAMES.
         SPACE
TPROTF   XENTER R5,R8,*
         USING SDSNBUF,R4
         TM    SBPROTF,X'01'           DOES THIS DSCB HAVE IT?
         BO    *+8
         MVI   SBPROTF,X'20'           OTHERWISE DEFAULT
         TM    SBPROTF,X'03'           DPO?
         BNO   TPNODPO
         TSEG  'DPO/'
TPNODPO  LA    R0,12
         IC    R1,SBPROTF              GET THE BYTE
         LR    R5,R1
         SRL   R1,4
         SRL   R5,2
         NR    R5,R0
         NR    R1,R0
         TM    DSNWAF1,DSNFSTD         STANDARD WYL DSN?
         BO    TPUSERDS
         CLC   =C'AC.',SBDSN           ACDS STUFF
         BE    TPUSERDS
         CLC   =C'SYSMSG.',SBDSN       OS SYSMSG?
         BE    TPUSERDS
         LA    R1,16(,R1)
         LA    R5,16(,R5)              ADD 16 MORE FOR SYS DSN
TPUSERDS LA    R1,4(,R1)
         LA    R5,4(,R5)
         CR    R1,R5
         BNE   *+6
         LNR   R5,R5
         BAL   R6,GETPROT
         LTR   R5,R5
         BM    TPROTEX
         TSEG  '/'
         LR    R1,R5
         BAL   R6,GETPROT
TPROTEX  XEXIT R5,R8,*
         SPACE
GETPROT  B     *(R1)
         B     TPPUBLIC
         B     TPGROUP
         B     TPUSER
         B     TPBLOCK
         B     TPPUBLIC
         B     TPCLASS3
         B     TPCLASS2
         SYSQS 1,0,'CLASS-1'
TPTSEG   TSEG  (1),(0)
         BR    R6
TPPUBLIC SYSQS 1,0,'PUBLIC'
         B     TPTSEG
TPGROUP  SYSQS 1,0,'GROUP'
         B     TPTSEG
TPUSER   SYSQS 1,0,'USER'
         B     TPTSEG
TPBLOCK  SYSQS 1,0,'BLOCK'
         B     TPTSEG
TPCLASS2 TM    SBPROTF,X'01'         WAS IT SPECIFIED OR DEFLT
         BZ    TPCLASS3              IF DEFLT ASSUME CLASS 3.
         SYSQS 1,0,'CLASS-2'
         B     TPTSEG
TPCLASS3 SYSQS 1,0,'CLASS-3'
         B     TPTSEG
         AIF   ('&USPS' NE '1').XLBL06                          USPS01
         LTORG                                                  USPS01
.XLBL06   DS   0H                                               USPS01
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
         EJECT
         COPY  RTNCODES
         TITLE 'COPY MODS'
SDSNBUF  DSECT
         COPY  SDSNBUF
         SPACE 3
         COPY  SCATBUF
         EJECT
         COMMON
         SPACE
         END
./ ADD NAME=PGOP,SSI=00000002
PGOP     TITLE 'START OF PAGED CODE -- PAGE 7'
* PROPERTY OF C. U. C. C. A.
         SPACE  3
         GBLC    &DCEC             SWITCH FOR DCEC MODS         JEP00X
&DCEC    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE DCEC MODJEP00X
         AIF   ('&DCEC' NE '1').LBL01                           JEP00X
*  JERRY PITTENGER DEF COMM ENG CTR                             JEP003
*                                                               JEP003
*                                                               JEP003
* MOD  JEP003                                                   JEP003
*  FIX BUG IN ALTERS COMMAND.  DENOTED  JEP003 IN 66/71.        JEP003
*  MODULES AFFECTED: PDOS, PGOP                                 JEP003
*                                                               JEP004
*                                                               JEP004
* MOD JEP004                                                    JEP004
*  MODIFIED CODE FOR VERIFYING PHYSICAL TABS TO PREVENT MESSED UJEP004
*  3277 SCREEN DISPLAY.                                         JEP004
*  MODULES AFFECTED: INIT, WTR, PGOP, PDOS, MACRO(CPTSO)        JEP004
*                                                               JEP004
*                                                               JEP004
.LBL01   DS    0H                                               JEP00X
P007     PAGECDE  MODGO
         WIDENT 001
         USING CPAREA,R12
         TITLE 'MODIFY/EDIT COMMAND PROCESSOR -- PAGE 7'
* REGISTER USAGE FOR MODIFY/EDIT
         SPACE
PR       EQU   5                       BUFFER POINTER REG
RR       EQU   4
TR       EQU   3
SR       EQU   2
         SPACE
         USING WA,8
         SPACE 3
PMODGO   GENTER ,
         TM    CPGFLG,CPFRETRY     IS RETRY GOING ON
         BO    PROCESS             YES NO OTHER STUFF
         OI    CPLFLG1,CPFALL          ALLOW DEFAULT ALL
         CVCALL DETRNG                 SCAN THE RANGE
         CLI   CPCMNM,C'E'         IS IT EDIT COMMAND
         BE    SCANPRM             YES GO LOOK AT PARMS
         OI    CPLFLG2,CPFMODCD    SET MODIFY COMMAND FLAG
SCANPRM  SCAN  MODPRT              SCAN FOR PARAMETERS
         TM    CPLFLG5,CPFUNUM     TEST IF UNNUMBERED
         BZ    CHKNTEX             NO, CHECK OTHER OPTIONS
         OI    CPLFLG5,CPFNONUM    MAKE IT NONUMBERED
         B     MODSPOT             CONTINUE NORMALLY
CHKNTEX  TM    CPLFLG5,CPFNONUM    CAN IT POSSIBLY BE NOTEXT
         BNM   MODSPOT             NO, ALLOW WHATEVER OPTION
         NI    CPLFLG5,255-CPFNONUM NO, MAKE NOTEXT BE NOLIST
         OI    CPLFLG5,CPFNLST     AND SET NOLIST IF NOTEXT
MODSPOT  L     15,ROUTINE          LOAD ROUTINE ADDRESS
         CVCALL DESPOT             GO DO COMMAND
         SPACE 3
MODPRT   SCKW  SINGLE,SCNSIN,A
         SCKW  S,SCNSIN
MODPRT1  SCKW  ,,PUSH         FILLED IN AT INIT TO LTNPRT
         SCKW  ,BADMOD
         SPACE 3
SCNSIN   OI    CPLFLG2,CPFSING     SET SINGLE PROMPT FLAG
         BR    14                  SCAN ON
         SPACE 3
* ENTRY FROM DESPOT
         SPACE
PROCESS  DS    0H
         XENTER 2,8,WASIZE
         TM    CPGFLG,CPFRETRY         IS RETRY GOING ON?
         BZ    NORMAL                  NO
         LA    R1,CPCMSAV              POINT TO SAVED COMMAND
         AIF   ('&DCEC' NE '1').LBLX1                           JEP003
         LH    R0,CPCTSAV         COUNT OF COMMAND              JEP003
         LTR   R0,R0              NORMAL COMMAND???             JEP003
         BNZ   PROCESS1           NO....MESSED UP COUNT IS THEREJEP003
         L     R0,CPCTSAV         COUNT OF COMMAND  ON NORMAL   JEP003
PROCESS1 EQU   *                                                JEP003
         AGO   .LBLX2                                           JEP003
.LBLX1   DS    0H                                               JEP003
         L     R0,CPCTSAV              COUNT OF COMMAND
.LBLX2   DS    0H                                               JEP003
         NI    CPLFLG2,255-CPFSING     SET NOT SINGLE
         OI    CPLFLG2,CPFMODCD        SET MODIFY COMMAND
         OI    CPLFLG5,CPFNONUM        SET NONUMBERED
         NI    CPLFLG5,255-CPFNLST     CLEAR NOLIST FLAG
         C     R0,=F'133'              IS IT LONG ENUF?
         BH    ABNORMAL             NO, CANNOT MODIFY
         LTR   TR,R0
         BZ    FILLALL
         BCTR  TR,0
         EX    TR,TRGOOD            SEE IF GOOD CHARS???
         BNZ   ABNORMAL             TOO BAD...
         C     R0,=F'133'
         BE    NORMAL
FILLALL  LR    TR,R1                START
         AR    TR,R0                   POINT TO END
         MVI   0(TR),C' '              MOVE IN A BLNK
         LA    SR,1(,TR)               1 PLACE RIGHT
         L     R14,=F'133'             TOTAL LEN
         SR    R14,R0                  LEN TO BLANK OUT
         EX    R14,DEL                 GO PROPAGATE BLNK
NORMAL   LR    PR,1                    SAVE BUFFER POINTER
         ST    0,LEN                   SAVE LENGTH
         CVCALL LISTLINE           LIST OUT THE LINE
         MVC   AFL,CPLFLG2         SET FLAG FOR FIRST TIME
         EJECT
* ALTER OR EDIT LOOP
         SPACE
ALTER    TM    AFL,CPFMODCD        EDIT OR MODIFY
         BO    ALTER1              BRANCH IF MODIFY
         SYSQS 1,0,'   EDITS'      SET PROMPT
         BAL   RR,MODEDRD          GO READ IN LINE
         LTR   R0,R0               ANYTHING TO DO
         BNH   ENDALT              NO GO END THIS LINE
         LR    SR,PR               SET SR TO START OF LINE
         CLI   0(1),C' '           CONTROL CHAR FIRST
         BE    EDITSTRT            NO, GO START EDIT
         OI    0(1),C' '           SET TO UPPER
         CLI   0(1),C'L'           IS TI LIST
         BNE   EDCHKNL             NO, CHECK IF NOLIST
         NI    AFL,255-CPFNLST     TURN OFF NOLIST
         B     EDITSTRT            GO START EDIT
         SPACE
EDCHKNL  CLI   0(1),C'N'           IS IT NOLIST
         BNE   ILLCH               NO, ILLEGAL CHARACTER
         OI    AFL,CPFNLST         SET NOLIST
         B     EDITSTRT            GO START EDIT
         SPACE
EDITL    CLI   0(1),C' '           IS IT A BLANK CHAR
         BE    EDITLE              YES, GO ON TO NEXT CHAR
         CLI   0(1),C'|'           IS IT VERTICAL BAR
         BNE   EDITM               NO, GO MOVE CHAR
         CLI   0(SR),C' '          IS THERE CHAR TO BLANK
         BE    EDITM               NO, GO MOVE VERTICAL BAR
         MVI   0(1),C' '           BLANK OUT VERTICAL BAR
EDITM    MVC   0(1,SR),0(R1)       MOVE CHAR TO EDITED LINE
EDITLE   LA    SR,1(,SR)           STEP FORWARD IN EDITED LINE
EDITSTRT LA    R1,1(,R1)           STEP FORWARD IN MASK LINE
         BCT   R0,EDITL            LOOP UNTIL DONE
         B     NOI                 GO END LINE
         SPACE
ALTER1   SYSQS 1,0,'   ALTERS'     SET UP TO PROMPT FOR MOD LINE
         BAL   RR,MODEDRD          GO GET NEXT LINE
         LTR   0,0
         BNP   ENDALT                  BR IF END
         LA    SR,1                    SET COL. PTR
BLS      CLI   0(1),C' '               SKIP LEADING BLANKS
         BNE   NBL
BLN      LA    SR,1(,SR)               NEXT COL.
         LA    1,1(,1)
         BCT   0,BLS
         B     DO
         SPACE
NBL      ST    SR,LPTR                 SAVE COL.
         ST    SR,UPTR
         OI    0(1),X'40'              MAKE UPPER CASE
         CLI   0(1),C'N'               NOTEXT?
         BE    N                       BR IF SO
         CLI   0(1),C'L'           LIST
         BE    L                   YES
         CLI   0(1),C'D'               DELETE?
         BE    D                       BR IF SO
         CLI   0(1),C'I'               INSERT?
         BE    I                       BR IF SO
         CLI   0(1),C'R'               REPLACE?
         BE    R                       BR IF SO
         CLI   0(1),C'B'               BLANK?
         BE    B                       BR IF SO
         SPACE
ILLCH    TSEG  (1),1
         TSEG  ': ILLEGAL, RETYPE LINE',,M
         B     ALTER
         SPACE
N        OI    AFL,CPFNLST             SET NOTEXT
         B     BLN
         SPACE
L        NI    AFL,255-CPFNLST     TURN OFF NOLIST
         B     BLN
         SPACE
B        LA    SR,0(SR,PR)             POINT TO
         BCTR  SR,0                         TEXT
         MVI   0(SR),C' '              BLANK IT OUT
         L     SR,LPTR                 RESTORE COL.
         B     BLN                     GO ON
         SPACE
D        OI    AFL,AFD                 SET DELETE
DL       OI    0(1),X'40'              MAKE UPPER CASE
         CLI   0(1),C'D'               DETERMINE DELETE RANGE
         BE    DLL
         CLI   0(1),C' '
         BNE   DEND
DLL      LA    SR,1(,SR)               NEXT COL.
         LA    1,1(,1)
         BCT   0,DL
DEND     ST    SR,UPTR                 SAVE UPPER LIMIT
         LTR   0,0
         BNP   DO                      BR IF END OF LINE
         OI    0(1),X'40'              MAKE UPPER CASE
         CLI   0(1),C'I'               INSERT?
         BE    I                       BR IF SO
         CLI   0(1),C'R'               REPLACE?
         BNE   ILLCH                   BR IF NOT
         SPACE
R        LA    1,1(,1)                 SKIP OVER R
         BCT   0,*+8
         B     DO                      BR IF NOTHING TO REPLACE
         AR    SR,0                    ALLOW FOR EXTRA DELETE
         ST    SR,UPTR
         OI    AFL,AFD+AFI             SET DELETE AND REPLACE
         B     IR
         SPACE
I        LA    1,1(,1)                 SKIP OVER I
         BCT   0,*+8
         B     DO                      BR IF NOTHING TO INSERT
         OI    AFL,AFI                 SET INSERT
IR       STM   0,1,ILEN                SAVE LOC AND LENGTH
         EJECT
*  PERFORM THE REQUESTED ALTERATION
         SPACE
DO       L     SR,LEN                  PAD LINE WITH BLANKS
         LA    TR,133-2
         SR    TR,SR
         AR    SR,PR
         MVI   0(SR),C' '
         LTR   TR,TR
         BM    *+8
         EX    TR,PAD
         TM    AFL,AFD                 DELETE?
         BZ    NOD                     BR IF NOT
         L     TR,UPTR                 LIMITS OF DELETE
         L     SR,LPTR
         LA    RR,133
         SR    RR,TR
         AR    SR,PR
         BCTR  SR,0
         AR    TR,PR
         BCTR  TR,0
         LTR   RR,RR
         BM    *+8
         EX    RR,DEL                  DO THE DELETE
         LA    SR,133(PR)
         L     RR,UPTR
         S     RR,LPTR
         SR    SR,RR                   COMPUTE ADDR
         MVI   0(SR),C' '
         BCTR  RR,0
         LTR   RR,RR
         BM    *+8
         EX    RR,PAD
NOD      TM    AFL,AFI                 INSERT?
         BZ    NOI                     BR IF NOT
         LM    0,1,ILEN                PICK UP INSERT PTR
         LA    SR,132(PR)
         LR    TR,0
CHOP     CLI   0(SR),C' '              LAST N CHAR SHOULD BE BLANK
         BE    *+8
         OI    AFL,AFCHOP              NOTE IF NOT
         BCTR  SR,0
         BCT   TR,CHOP
         LA    TR,132(PR)              SHIFT BUF TO RIGHT
         L     RR,LPTR
         AR    RR,PR
         BCTR  RR,0
         B     MC
         SPACE
MOVE     MVC   0(1,TR),0(SR)
         BCTR  SR,0
         BCTR  TR,0
MC       CR    SR,RR
         BNL   MOVE
         LR    SR,0
         BCTR  SR,0
         EX    SR,INS                  DO THE INSERT
NOI      LR    1,PR                    STRIP TRAILING BLANKS
         LA    0,133
         L     15,CPLCNO
         TM    AFL,AFCHOP              CHOPPED?
         BZ    NCHOP                   BR IF NOT
         LA    0,134                    FORCE TRUNCATION MESSAGE
         MVI   133(1),C'*'              NON-BLANK
NCHOP    CVCALL LENCHK
         ST    0,LEN
         TM    AFL,CPFNLST             NOTEXT?
         BO    TESTEND                 BR IF SO
         CVCALL LISTLINE            LIST THE LINE
         TM    AFL,CPFSING+AFATTNC      TEST ATTN FLAGS
         BZ    ALTER                    B IF NOT @ATTN
         SPACE 3
* END OF ALTER SEQUENCE
         SPACE
ENDALT   LR    1,PR                    PREST THE LINE
         L     0,LEN
         TM    CPGFLG,CPFRETRY     IS RETRY GOING ON?
         BZ    NOTRETRY            NO, NORMAL RETURN
         ST    R0,CPCTSAV          SAVE NEW COMMAND LENGTH
         B     CVGETCOM            RETURN TO EXECUTE COMMAND
         SPACE
NOTRETRY L     15,CPLCNO
         CVCALL PRESS
         CVCALL STOWIT                  REPLACE THE LINE
         TM    AFL,AFATTNC              TEST $-ATTN FLAG
         BO    CVGETCOM                 STOP IF $-ATTN
         XEXIT 2,8                     RETURN TO DESPOT
         SPACE 3
TESTEND  TM    AFL,CPFSING+AFATTNC      TEST ATTN FLAGS
         BZ    ALTER                    B IF NOT @ATTN
         B     ENDALT                   BR IF END
         EJECT ,
* READ IN LINE FROM TERMINAL FOR EDIT OR MODIFY
         SPACE
MODEDRD  SLR   RR,R10              MAKE RETURN RELATIVE
         NI    AFL,CPFMODCD        RESET FLAGS FOR NEXT PASS
         TM    CPLFLG5,CPFNLST     NOLIST OPTION DEFAULT
         BNO   *+8                 BRANCH NO
         OI    AFL,CPFNLST         SET NOLIST FOR THIS PASS
         TM    CPLFLG2,CPFSING     SINGLE PROMPT DEFAULT
         BE    *+8                 BRANCH NO
         OI    AFL,CPFSING         SET SINGLE PROMPT
         L     R15,=X'005A5B7C'  ALLOW !, $ OR @ BEFORE ATTN
         LCR   R15,R15             COMPLEMENT FOR ROUTINE
         CVCALL TRDRTN             CALL READ ROUTINE
         BZ    0(RR,R10)           RETURN IF NO ATTN
         ALR   RR,R10              MAKE RETURN ABSOLUTE AGAIN
         LTR   R0,R0               ANY CHARACTERS BEFORE ATTN
         BZ    CVQTYPE             NO, ABORT THE COMMAND
         BCT   R0,MODEDRD1         SUBTRACT 1 FOR ATTN CHAR
         LA    RR,NOI              SET OTHER RETURN IF ONLY CHAR
MODEDRD1 LR    SR,R0               POINT TO
         LA    SR,0(SR,R1)              ATTN CHAR
         CLI   0(SR),C'@'          IS IT @
         BNE   TSTDOLL             NO
         XI    AFL,CPFSING         YES, FLIP SINGLE PROMPT SW
         BR    RR                  RETURN
         SPACE
TSTDOLL  CLI   0(SR),C'$'          IS IT $
         BE    HAVDOLL             YES
         XI    AFL,CPFMODCD        FLIP COMMAND TYPE SWITCH
         NI    AFL,255-CPFSING     FORCE ANOTHER PROMPT LINE
         BR    RR                  RETURN
         SPACE
HAVDOLL  OI    AFL,AFATTNC         SET $ ATTN FLAG
         BR    RR                  RETURN
         TITLE 'REMOTE INSTRUCTIONS -- PAGE 7'
*
* FOR MODIFY
*
PAD      MVC   1(0,SR),0(SR)
INS      MVC   0(0,RR),0(1)
DEL      MVC   0(0,SR),0(TR)
         SPACE ,
TRGOOD   TRT   0(0,R1),TRTAB
         SPACE ,
TRTAB    DC    X'FF',254X'00',X'FF'
         SPACE ,
ABNORMAL TSEG  'COMMAND CANNOT BE RETRIED'
         B     CVQTYPE
         SPACE ,
BADMOD   B     CVNVALID
ROUTINE  DS    0F
         DC    AL1(DESNRTN+LOCATRTN+DESMATCH+UNPRST+DESRELA)
         DC    AL3(PROCESS-P007)  RELATIVE ADDR FOR DESPOT
         TITLE 'END OF PAGED CODE -- PAGE 7'
         PINIT
         MVC   MODPRT1+1(3),CVLTNPR+1  SET TO LTNPRT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 8'
P008     PAGECDE GOCOLL,GOINS,GOREPL
         WIDENT 001
         TITLE 'GOCOLL ROUTINE -- PAGE 8'
PGOCOLL  GENTER SZR
         OI    CPLFLG4,CPFSTSPL+CPFSTINS   SET SO STOWIT WILL
*              ONLY INSERT LINES AND WILL SPLIT PAGE AT LINENO
         OI    CPLFLG5,CPFNLST     SET NOLIST DEFAULT
         TM    CPLSTCOL,FNEGBT          USER'S FIRST COLLECT?
         BZ    SCNAPRTC                 NO
COLLEND  L     R0,CPHIPS                HIGHEST LINE NO. YET
         L     R1,CPGLDL                GLOBAL DELTA
         CVCALL LOWMULT                 GET MULTIPLE
         CVCALL ADDER                   ADD
         STM   R0,R1,CPLSTCOL           SAVE NEXT LINE NO. & DELT
SCNAPRTC LA    R6,GOTLNENO-P008    SET LINE NUMBER RETURN
         LCR   R6,R6               SET NEGATIVE TO FLAG RELATIVE
         SCAN  APRTC               SCAN FOR PARMS
         TM    CPLFLG2,CPFCLEAR    WAS CLEAR SPECIFIED
         BE    TRYOUT              BRANCH NO
         L     R3,CPGLDL           SET DELTA TO USE
         B     COLCLEAR            GO CLEAR
         SPACE
GOTLNENO STM   R0,R1,CPLSTCOL         SET NEW LINE NO. & DELTA
         SR    R6,R6               FLAG HAVE LINE NUMBER
         SCAN  BPRTC                    SCAN FOR DELTA
         B     TRYCLR                   ALL SCANNED
         SPACE
GOTDLL   LTR   R15,R15                  ZERO NG
         BZ    CVNVALID                 NG
         ST    R15,CPDLTCOL             STORE COLLECT DELTA
         SCAN  CPRTC               FINISH SCAN
TRYCLR   TM    CPLFLG2,CPFCLEAR    WAS CLEAR SPECIFIED
         BE    TRYOUT              BRANCH NO
         LM    R2,R3,CPLSTCOL      SAVE COLLECT VALUES
COLCLEAR CVCALL DOCLEAR            GO CLEAR ACTIVE FILE
         LTR   R6,R6               WAS A LINE NUMBER GIVEN
         BZ    TRYCLR1             BRANCH YES
         L     R2,CPGLDL           NO, SET START TO DELTA
TRYCLR1  STM   R2,R3,CPLSTCOL      RESET COLLECT VALUES
TRYOUT   MVC   CPNXPS(4),=F'100000000' SET COMPARAND TOO HIGH
         TM    CPLSTCOL,FNEGBT          ILLEGAL LINE NO.?
         BO    BADLINE                  YES
         LA    R1,CPLSTCOL              1ST LINE NO. FOR LOCATE
         CVCALL LOCATE                  LOCATE
         TM    CPDRPT,CPFMTCH           MATCHING LINE NO.?
         BO    GOTERCB                  YES
         TM    CPDRPT,CPFNTYT+CPFHIGH   OK TO COLLECT TILL 9999.999
         BNZ   DOLIST                   YES
         MVC   CPNXPS(4),CPLCNO         SET COMPARAND TO NEXT LINE
DOLIST   TM    CPLFLG5,CPFNLST     LIST LINE BEFORE COLLECT
         BO    DONEXT              NO
         LA    R1,CPLSTCOL         POINT TO LINE NO
         CVCALL LOCLIST            GO LOCATE PRE AND FORMAT IT
         BP    ENDCOLCT            IF ATTN END COLLECT.
DONEXT   L     R0,CPLSTCOL              LINE NO. TO COLLECT
         ST    R0,CPCURRL          SET CURRENT LINE
         C     R0,CPNXPS                STILL SMALL ENOUGH?
         BNL   GOTERC                   NO
         CVCALL SETPRMPT           GO SET PROMPT
         CVCALL TRDRTN             GO PROMPT AND READ
         BP    ENDCOLCT            END COMMAND IF ATTENTION ONLY
         MVC   0(133,R8),0(R1)          INTO WORK AREA
         LR    R1,R8                    SET POINTER
         L     R15,CPLSTCOL             LINE NO. INTO R15
         CVCALL LENCHK                  CHECK LENGTH
         CVCALL PRESS                   PRESS
         CVCALL STOWIT                  STOW IT AWAY
         L     R0,CPLSTCOL              LINE NO.
         L     R1,CPDLTCOL              DELTA
         CVCALL ADDER                   ADD
         BM    GOTERD                   TOO BIG
         ST    R0,CPLSTCOL              SAVE NEXT LINE NO.
         B     DONEXT                   DO NEXT
         SPACE
ENDCOLCT NI    JCBAFL,X'FF'-JCBAFIA CLEAR ATTN FLAG
         B     CVGETCOM
         EJECT
GOTERC   BE    GOTERCA             NO REPLACE EVER
         TM    CPLFLG2,CPFMERG     MERGE OPTION
         BO    TRYOUT              YES, ALLOW INTERLEAVE
GOTERCA  TSEG  'NO REPLACE',,B     SET FIRST PART OF MESSAGE
         TM    CPLFLG2,CPFMERG     MERGE OPTION?
         BO    CVQTYPE             YES, MESSAGE IS DONE
         TSEG  'OR INTERLEAVE'     NO, SET REST OF MESSAGE
         B     CVQTYPE
         SPACE
GOTERD   TSEG  '99999.999 EXCEEDED'
         B     CVQTYPE
         SPACE
GOTERCB  TM    CPLFLG2,CPFMERG     MERG OPTION
         BO    GOTERCA             YES, GIVE NO REPLACE MSG
         B     BADLINEL            NO, GIVE BAD LINE MESSAGE
         SPACE 3
* FOR COLLECT
         SPACE
APRTC    SCKW  ,,PUSH        FILLED IN AT INIT TO LNENOPRT
BPRTC    SCKW  BY,GOTDLL,(P,LN)
CPRTC    SCKW  MERGE,SCNMRGE,A
         SCKW  NOMERGE,SCNNMRGE,A
DPRTC    SCKW  ,,PUSH        FILLED IN AT INIT TO CLRPRT
EPRTC    SCKW  ,,PUSH        FILLED IN AT INIT TO LTNPRT
         SCKW  ,BADCOL
         SPACE 3
SCNMRGE  OI    CPLFLG2,CPFMERG     SET MERGE OPTION
         BR    R14                 SCAN ON
         SPACE
SCNNMRGE NI    CPLFLG2,255-CPFMERG-CPFCOMB RESET MERGE OPTION
         BR    R14
         SPACE
BADCOL   B     CVNVALID
         TITLE 'GOINS ROUTINE -- PAGE 8'
PGOINS   GENTER SZR+C80
         OI    CPLFLG5,CPFNLST     SET NOLIST AS DEFAULT
         SR    R4,R4                    ZERO COUNT
         LA    R5,SZR(,R8)              SET PTR
         LA    R6,GOTIT-P008       SET LINE NO RETURN ADDR
         LCR   R6,R6               SET NEG TO FLAG RELATIVE ADDR
INSCAN   SCAN  INSPRT                   SCAN FOR LINE NO.
         LTR   R4,R4                    ANY LINES GIVEN?
         BZ    CVABSENT                 NO
         LA    R5,SZR(,R8)              SET PTR
NXTPRMPT TM    CPLFLG5,CPFNLST     LIST OPTION
         BO    NXTPRMP2            BRANCH NO
         LR    R1,R5               POINT TO LINE NUMBER
         CVCALL LOCLIST            GO LOCATE AND DO PREV LINE
NXTPRMP2 L     R0,0(,R5)                LINE NO. INTO R0
         ST    R0,CPCURRL          SET CURRENT LINE
         CVCALL SETPRMPT           GO SET PROMPT
         CVCALL TRDRTN             GO PROMPT AND READ
         BP    CVQTYPE             ABORT IF ATTENTION
         L     R15,0(,R5)               LINE NO. TO R15
         MVC   0(133,R8),0(R1)          INTO WORK AREA
         LR    R1,R8                    SET PTR R1
         CVCALL LENCHK                  CHECK LENGTH
         CVCALL PRESS                   PRESS LINE
         STM   R0,R1,CPSAVE             SAVE
NXTSTW   CVCALL STOWIT                  STORE THE LINE
         BCT   R4,NUTHER1               ANOTHER?
         B     CVGETCOM                 NO
         SPACE
NUTHER1  LA    R5,4(,R5)                KICK PTR
         TM    CPLFLG2,CPFDITTO    DITTO OPTION
         BE    NXTPRMPT            NO, GO PROMPT FOR NEXT INSERT
         TM    CPLFLG5,CPFNLST     LIST OPTION
         BO    NUTHER2             BRANCH NO
         LR    R1,R5               POINT TO LINE NUMBER
         CVCALL LOCLIST            GO LOCATE AND FORMAT PREV LINE
         BNP   NUTHER2             BRANCH IF NO ATTENTION
         LA    R4,1                SET COUNT TO STOP AFTER THIS
NUTHER2  L     R0,0(,R5)           GET NEXT LINE NUMBER
         ST    R0,0(,R8)           PUT IT IN THE LINE IMAGE
         ST    R0,CPCURRL          UPDATE CURRENT LINE POINTER
         LM    R0,R1,CPSAVE             RESET
         B     NXTSTW                   STOW NEXT
         SPACE 3
GOTIT    CH    R4,=Y(20)                TOO MANY?
         BH    CVNVALID                 YES
         ST    R0,0(,R5)           SAVE LINE NUMBER
         LR    R1,R5                    POINT TO LINE NO.
         CVCALL LOCATE                  LOCATE IT
         TM    CPDRPT,CPFMTCH           SAME NO. LOCATED?
         BO    GOTBAD                   YES, ERROR (REPLACE)
         LA    R5,4(,R5)                KICK PTR
         LA    R4,1(,R4)                KICK COUNTER
         B     INSCAN                   MORE?
         SPACE
GOTBAD   L     R0,0(,R5)           GET BAD LINE NUMBER
         CVCALL CVEXNO             CONVERT IT
         TSEG  (1),(0),B           PUT IN OUTPUT BUFFER
         TSEG  'IN FILE, NO INSERT'
         B     CVQTYPE
         SPACE 3
* SCAN TABLES FOR INSERT
         SPACE
INSPRT   SCKW  ,,PUSH        FILLED IN AT INIT TO LNENOPRT
         SCKW  ,DITTPRT,PUSH
INSPRT1  SCKW  ,,PUSH        FILLED IN AT INIT TO LTNPRT
         SCKW  ,BADCOL
         TITLE 'GOREPL ROUTINE -- PAGE 8'
PGOREPL  GENTER SZR           ASSURE SPACE HERE FOR DOREPL
         OI    CPLFLG1,CPFALL          ALLOW DEFAULT ALL
         CVCALL DETRNG
         OI    CPLFLG5,CPFNLST     SET NOLIST DEFAULT
         SCAN  REPLPRT             SCAN FOR OTHER OPTIONS
         L     15,VDOREPL     LOAD PROPERLY FLAGGED WORK ADDR FOR D
         TM    CPLFLG5,CPFNLST     NOLIST OPTION?
         BO    *+8                 YES, NO NEED TO UNPRESS
         L     R15,VDOREPL1        SET UNPRST FOR FWORK ROUTINE
         CVCALL DESPOT         GO TO IT
         SPACE 3
         DS    0F
VDOREPL  DC    AL1(DESNRTN+LOCATRTN+DESMATCH+PREST+DESRELA)
         DC    AL3(DOREPL-P008)    RELATIVE ADDR FOR DESPOT
VDOREPL1 DC    AL1(DESNRTN+LOCATRTN+DESMATCH+UNPRST+DESRELA)
         DC    AL3(DOREPL-P008)    RELATIVE ADDR FOR DESPOT
         SPACE 3
REPLPRT  SCKW  ,,PUSH        FILLED IN AT INIT TO LTNPRT
DITTPRT  SCKW  DITTO,DITSET,A
         SCKW  NODITTO,NDITSET,A
         SCKW  ,,POP               NO-OP FOR REP CMD
         SCKW  ,BADCOL
         SPACE 3
DITSET   OI    CPLFLG2,CPFDITTO    SET DITTO OPTION
         BR    R14                 SCAN ON
         SPACE
NDITSET  NI    CPLFLG2,255-CPFDITTO    TURN OFF DITTO OPTION
         BR    R14                 SCAN ON
         TITLE 'DOREPL ROUTINE -- PAGE 8'
DOREPL   XENTER 2,8,*         SAVE
         TM    CPLFLG5,CPFNLST     ANYTHING TO LIST
         BO    DOREPL1             NO
         CVCALL LISTLINE           FORMAT LINE FOR LIST
         BP    CVQTYPE             ABORT IF ATTN HIT.
DOREPL1  TM    CPLFLG2,CPFREP1     HAVE A REPL LINE FOR DITTO
         BZ    FIRST               NO
         TM    CPLFLG2,CPFDITTO    DITTO OPTION
         BO    SAMEREP             YES, GO DO REPLACE
FIRST    L     0,CPLCNO      GET LOCATED NO
         CVCALL SETPRMPT           GO SET PROMPT
         CVCALL TRDRTN             GO PROMPT AND READ
         BP    CVQTYPE             ABORT COMMAND IF ATTENTION
         L     15,CPLCNO     LINE NO TO 15
         LTR   0,0            TEST IF A REPLACE WANTED
         BZ    REPEXIT        NO, LEAVE LINE ALONE
         OI    CPLFLG2,CPFREP1     SET HAVE REPL LINE
         MVC   CPWA(SZR),0(R1)          MOVE TEXT
         LA    R1,CPWA                  WA RESERVED BY GOREPL
         CVCALL LENCHK        COMPARE TO CURRENT LENGTH OPTION
         CVCALL PRESS         PREST TEXT
         CVCALL STOWIT        GO DO THE REPLACE
REPEXIT  XEXIT 2,8           SCRAM
         SPACE 3
SAMEREP  LA    R1,CPWA                  POINT R1 TO REPLACING LIN
         MVC   0(4,R1),CPLCNO      SET NEW LINE NO.
         SR    R0,R0               ZERO FOR IC
         IC    0,4(1)         PREST COUNT TO ZERO
         CVCALL STOWIT             REPLACE THE LINE
         B     REPEXIT             NORMAL EXIT
         TITLE 'UTILITY ROUTINES -- PAGE 8'
BADLINEL L     R0,CPLCNO           GET BAD LINE NUMBER
         CVCALL CVEXNO             CONVERT TO EXTERNAL FORM
         TSEG  (1),(0),B           PUT IT IN MESSAGE
         SPACE
BADLINE  TSEG  'LINE NO.'
         B     CVUNLEGL
         TITLE 'END OF PAGED CODE -- PAGE 8'
         PINIT
         MVC   APRTC+1(3),CVLNENO+1  SET TO LNENOPRT
         MVC   DPRTC+1(3),CVCLRPR+1  SET TO CLRPRT
         MVC   EPRTC+1(3),CVLTNPR+1  SET TO LTNPRT
         MVC   INSPRT+1(3),CVLNENO+1 SET TO LNENOPRT
         MVC   INSPRT1+1(3),CVLTNPR+1  SET TO LTNPRT
         MVC   REPLPRT+1(3),CVLTNPR+1  SET TO LTNPRT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 9'
P009     PAGECDE GONUMB,GOALINE
         WIDENT 001
         TITLE 'GONUMB ROUTINE -- PAGE 9'
PGONUMB  GENTER NUMWORKL
         USING NUMWORK,R8
         PFREE R9                  FREE ANY PAGE IN R9 (FOR ALIGN)
         XC    NUMWORK(NUMWORKL),NUMWORK CLEAR WORK AREA
NUMISOK  MVI   CPLSTCOL,FNEGBT          RESET FIRST COLLECT
         SR    R3,R3               SET NO E-O-RANGE GIVEN
         LH    R5,CPAGCT           GET PAGE COUNT
         LTR   R5,R5               ANY ACTIVE FILE?
         BZ    NUMNIL              NO
         L     R2,CPGLDL           SET DEFAULT 1ST POSITION
         ST    R2,CPWKPS           SET DEFAULT START POSITION
         ST    R2,CPWKDL           SET DEFAULT DELTA
         MVC   NUMLPOS,=F'99999999' SET LAST FOR RANGE ALL
         MVC   NUMHIGH,CPHIPS      SET WITH HIGHEST LINE NO
         LA    R6,GOTPOS-P009      SET FOR LINE NUMBER RETURN
         LCR   R6,R6               MAKE REL ADDR NEGATIVE AS FLAG
         SCAN  APRTA                    SCAN FOR POSIT OR DELTA
         B     FINITO                   GO PROCESS
         SPACE
GOTPOS   LR    R2,R0                    SET WORKING POSITION
         ST    R2,CPWKPS           SET START POSITION
         SCAN  CPRTA                    SCAN FOR DELTA
         B     FINITO                   ALL SCANNED
         SPACE
GOTSLA   LA    R6,GOTPOSL-P009     SET FOR LAST LINENO
         LCR   R6,R6               MAKE REL ADDR NEGATIVE AS FLAG
         SCAN  DPRTA               SCAN FOR LAST LINE NO
         B     CVABSENT            ERROR IF MISSING
         SPACE
GOTPOSL  LTR   R3,R0               SAVE LAST LINE NO
         BNP   CVNVALID            ERROR IF NOT POSITIVE
         CR    R3,R2               LAST MUST BE > FIRST
         BL    CVNVALID            BRANCH NO
         STM   R2,R3,NUMFPOS       SAVE FIRST & LAST
         SCAN  BPRTA               SCAN FOR DELTA
         B     FINITO
         SPACE
GOTTIMES LTR   R15,R15                 ZERO
         BNP   CVNVALID                NOT ALLOWED
         C     R15,=F'1000'            MULTIPLY BY 1
         BE    CVGETCOM                DONE
         ST    R15,CPWKDL              SAVE OPTION
         XC    CPWKPS(4),CPWKPS        ZERO LINE NUMBER
         M     R14,CPHIPS              WOULD
         D     R14,=F'100000000'            LINE NUMBERS
         CL    R15,=F'1000'                      OVERFLOW
         BNL   TIMTOHGH                YES
         OI    CPLFLG1,CPFTIMES        SET TIMES OPTION FLAG
         B     FINITOC                 GO CHECK REST OF LINE
         SPACE
GOTDEL   LTR   R15,R15                  ZERO NG
         BNP   CVNVALID                 DELTA ERROR
         ST    R15,CPWKDL               RESET WORKING DELTA
FINITOC  SCAN  ,                       CHECK REST OF LINE BLANK
         BP    CVNVALID            INVALID IF ANYTHING FOUND
FINITO   ST    R3,CPLCNO           SET FOR LOCATE ALL
         LTR   R3,R3               WAS E-O-RANGE GIVEN
         BZ    ALLNUMB             NO, RENUMBER ALL
         ST    R2,CPLCNO           YES, RESET LOCATE LINE
ALLNUMB  LA    R1,CPLCNO           LOCATE FIRST
         CVCALL LOCATE                   LINE
         TM    CPDRPT,CPFNTYT+CPFHIGH AFTER LAST?
         BNZ   NUMNIL              YES, RANGE IS NULL
         TM    CPDRPT,CPFMTCH      LINE NO MATCH?
         BZ    ALLNUMB             NO, DO LOCATE AGAIN
         CLC   CPLCNO,NUMLPOS      ANY NUMBERS IN RANGE
         BH    NUMNIL              NO, RANGE IS NULL
         L     R4,CPDRPT           GET DIRECTORY POINTER
         LR    R3,R15              GET DISPLACEMENT
         SR    R3,R11                  TO FIRST LINE
         STM   R3,R4,NUMDISP       SAVE DISP & DIR FOR FIXIT
         SR    R6,R6               ZERO FOR IC
         LR    R3,R15              POINT R3 TO FIRST LINE
         B     BNUMBB              ENTER LOOP
         SPACE
NXPAG    LA    R4,6(,R4)           POINT TO NEXT DIR ENTRY
         LH    0,4(4)         WANTED PAGE NO.
         PGET  11,(0)         GET IT
         LA    3,2(11)       ADDR 1ST LINE NO ON PAGE
BNUMBB   PMARK 11                  MARK PAGE AS CHANGED
         LH    2,0(11)        PAGE BYTE COUNT
         LA    2,0(2,11)     ADDR FIRST FREE BYTE ON PAGE
         TM    CPLFLG1,CPFTIMES        IS IT TIMES OPTION
         BO    DOTIMES                 YES
NXLIN    L     R1,CPWKPS           GET NEXT NUM TO USE
         TM    NUMFLG,X'FF'        RECOVERING FROM FIXIT
         BNZ   GOALONG             YES, DON'T CHECK RANGE
         CLC   0(4,R3),NUMLPOS     END OF RANGE
         BH    ALLDONE             BRANCH YES
         CL    R1,NUMLPOS          NEW NUMBER STILL IN RANGE
         BH    FIXIT               NO, GO FIX NUMBERS
GOALONG  ST    R1,CPWORK1          SAVE LAST NO USED
         CLC   0(4,R3),NUMHIGH     HIGHEST LINE RENUMBER
         BL    NOTHIGH             NO
         TM    NUMFLG,X'FF'        FIXIT RECOVERY
         BZ    REALHIGH            NO, MUST BE END OF FILE
         MVC   NUMHIGH,CPHIPS      YES, RESET TO END OF FILE
         MVI   NUMFLG,X'00'        MARK FIXIT FINISHED
         B     NOTHIGH             CONTINUE
         SPACE
REALHIGH MVC   CPHIPS,CPWORK1      RESET HIGH LINE NO
         LA    R5,1                FORCE FINISH
NOTHIGH  MVC   0(4,R3),CPWORK1     MOVE IN NEW LINE NO.
         A     R1,CPWKDL           ADD DELTA
         ST    R1,CPWKPS           SAVE NEXT LINE NO TO USE
         IC    6,4(3)        GET PREST COUNT FOR THE LINE
         LA    3,5(3,6)      SPACE TO LINE-NO POSITION NEXT LINE
         CR    3,2           MORE LINES ON PAGE
         BL    NXLIN         YES
FIXLIN1  MVC   0(4,R4),2(R11)      FIX FIRST LINE NO IN DIRECTORY
         BCT   5,NXPAG       MORE PAGES?
ALLDONE  EX    0,FIXLIN1           FIX 1ST LINE NO IN DIRECTORY
         LA    R6,CVGETCOM         SET EXIT FOR LSLNMSG
         MVC   CPCURRL,CPWORK1     SET CURRENT LINE NO
         OI    CPGFLG,CPFDIRCH         SET DIR CHNGED FOR RCVY
         TM    CPLFLG1,CPFNMOD         WAS THERE ANY ADJUSTMENT
         BE    ALLDONE1                NO
         TSEG  'LINE NUMBER(S) ADJUSTED',,M
ALLDONE1 CVCALL LSLNMSG,PFREE      GO DO LAST LINE MESSAGE
         SPACE 3
FIXIT    EX    0,FIXLIN1           FIX 1ST LINE NO IN DIRECTORY
         L     R1,CPWKDL           GET CURRENT DELTA
         SRA   R1,1                HALVE IT
         CVCALL SELDELTA           GO SELECT PROPER DELTA
         ST    R1,CPWKDL           SAVE NEW DELTA
         LH    R5,CPAGCT           RESET PAGE COUNT
         LM    R3,R4,NUMDISP       GET 1ST DISP & DIRECTORY POINTER
         LH    R0,4(,R4)           GET PAGE NO.
         PGET  R11,(0)             GET PAGE IN R11
         MVC   CPWKPS,NUMFPOS      SET FIRST LINE NO TO USE
         AR    R3,R11              POINT TO FIRST LINE
         MVC   NUMHIGH,CPWORK1     SET FOR FIXIT RECOVERY
         MVI   NUMFLG,X'FF'        SET FIXIT BEING DONE
         TM    NUMMSG,X'FF'        FIRST FIXIT?
         BO    BNUMBB              NO, MSG ALREADY DONE
         MVI   NUMMSG,X'FF'        SET NOT FIRST FIXIT
         TSEG  'LINE NO. TOO BIG, REDONE.',,M
         B     BNUMBB              GO FIX LINE NUMBERS
         SPACE
NUMNIL   CVCALL ITSNIL              NULL RANGE
         SPACE
DOTIMES  MVC   CPDOUB(4),0(R3)         GET LINE
         L     R1,CPDOUB                   NUMBER
         M     R0,CPWKDL               MAKE NEW
         D     R0,=F'1000'                 LINE NUMBER
         CL    R1,CPWKPS               TEST HIGHER THAN LAST
         BNH   DOTIM1                  NO, MUST INCREMENT
         LTR   R0,R0                   IS THERE A REMAINDER
         BE    DOTIMOK                 NO
         B     DOTIM2
         SPACE
DOTIM1   LA    R0,1                    PUT INCR IN R0
         L     R1,CPWKPS           SET TO LAST USED
         CVCALL ADDER                  ADD TO LINE NO
         LTR   R1,R0                   PUT RESULT IN R1
         BP    DOTIM2                  POSITIVE OKAY
         DIE   ,              SHOULD NOT HAPPEN
         SPACE
DOTIM2   OI    CPLFLG1,CPFNMOD         SET REMAINDER OR INCR
DOTIMOK  ST    R1,CPWKPS               SAVE NEW HIGH LINE NO
         ST    R1,CPWORK1          SET LAST LINE NO USED
         MVC   0(4,R3),CPWKPS          PUT LINE NO IN RECORD
         IC    R6,4(,R3)               GET PREST COUNT FOR LINE
         LA    R3,5(R3,R6)             SPACE TO NEXT LINE
         CR    R3,R2                   MORE LINES
         BL    DOTIMES                 YES
         MVC   CPHIPS,CPWKPS           SET NEW CPHIPS
         B     FIXLIN1                 GO DO NEXT PAGE
         SPACE
TIMTOHGH TSEG  'TIMES OPTION TOO LARGE'
         B     CVQTYPE
         SPACE
BADNUM   B     CVNVALID
         SPACE 3
* SCAN TABLES FOR NUMBER
         SPACE
APRTA    SCKW  ,,PUSH          FILLED IN AT INIT TO LNENOPRT
         SCKW  TIMES,GOTTIMES,(P,LN,A)
BPRTA    SCKW  BY,GOTDEL,(P,LN)
         SCKW  ,BADNUM
         SPACE
CPRTA    SCKW  /,GOTSLA
         SCKW  ,BPRTA,PUSH
         SPACE
DPRTA    SCKW  ,,PUSH          FILLED IN AT INIT TO LNENOPRT
DPRTA1   SCKW  ,BADNUM
         TITLE 'ALIGN ROUTINE -- PAGE 9'
PGOALINE GENTER ALWALEN      SPACE FOR OTBF=2*SZR-24
ALGNOK   MVI   CPLSTCOL,FNEGBT          RESET FIRST COLLECT
         USING ALWA,R8             ESTABLISH ADDRESSABILITY
         ST    R8,CPNAWAPT         SAVE WORK AREA POINTER
         XC    ALWA(ALCLRLEN),ALWA CLEAR FIRST PART OF WORK AREA
         MVI   ALWBL,C' '          INITIALIZE BLANK
         MVC   ALWBC(4),BCINST     INITIALIZE BRANCH INSTR
         MVI   ALMODSV,FNEGBT      SET TO FORCE NEW PARAGRAPH
         OI    CPLFLG5,CPFNONUM    SET DEFAULT TO NOT RENUMBER ALL
         CVCALL DETRNG         GET (EXPLICIT) RANGE
         MVC   ALLNMAX(2),CPLNGTH  SET DEFAULT LENGTH
ALGNSCN  SCAN  ALIPRT                   SCAN FOR OPTIONS
ALNRDY   LH    R1,ALINDST          CHECK INDENT PARMS
         CH    R1,ALLNMAX          LESS THAN LENGTH
         BNL   BADINDNT            NO, ERROR
         LA    R0,ALBUFF(R1)       JUSTIFY STARTING POINT
         ST    R0,ALWJPT           SAVE IT
         AH    R1,ALINDPA          ADD IN EXTRA PARAGRAPH INDENT
         BM    BADINDNT            ERROR IF < 0
         CH    R1,ALLNMAX          LESS THAN LENGTH
         BNL   BADINDNT            NO, ERROR
         STH   R1,ALINDPA          SET PARAGRAPH INDENT
         STH   R1,ALINDNT          SET FIRST INDENT
         TM    ALFLAGS,ALFEVEN     EVEN OPTION SPECIFIED
         BE    *+8                 NO, SKIP NEXT
         MVI   ALWBC+1,0           SET NOT TO BR EVER
         MVI   CPWKPS,FNEGBT       SET TO AVOID NUMBERING FIRST
         MVI   CPCURRL,X'F0'       SET CURRENT LINE INVALID
         OI    CPLFLG5,CPFNCUR     SET SO DESPOT WON'T CHANGE CURRE
         PCALL DOALINE             GO TO NEXT PAGE TO EXECUTE
         SPACE
BCINST   BNE   DIFLEAD-P011(,R10)  NOP OR BNE
         SPACE 3
HAVLENE  STH   R15,ALLNMAX              STORE
         BR    R14                      MORE?
         SPACE
HAVMARK  BNPR  14
         OI    ALFLAGS,ALFMRKN          SET MARKER MODE
         MVC   ALLNMRK(1),1(R1)
         CLI   0(R1),C''''             QUOTED?
         BER   R14                      BR IF SO
         CLI   0(R1),C'"'
         BER   R14
         MVC   ALLNMRK(1),0(R1)         SET MARKER
         BR    R14                      MORE?
         SPACE
HAVSPACE OI    ALFLAGS,ALFSPCE     SET SPACE OPTION
         BR    R14                 SCAN ON
         SPACE
HAVEVEN  OI    ALFLAGS,ALFEVEN     SET EVEN OPTION
         BR    R14                 SCAN ON
         SPACE
ALINDENT STH   R15,ALINDST         SAVE INDENT VALUE
         SCANSAVE ,                SAVE SCAN POINTERS
         SCAN  INDPRT              SCAN FOR PARAGRAPH INDENT
         B     ALNRDY              DONE IF NONE
         SPACE
ALNPA1   LCR   R15,R15             COMPLEMENT THE VALUE
ALNPA2   STH   R15,ALINDPA         SAVE THE PARAGRAPH INDENT
         B     ALGNSCN             SCAN ON
         SPACE
ALCONT   SCANRSTR ,                RESTORE SCANNER
         B     ALGNSCN             SCAN ON
         SPACE
BADINDNT TSEG  'ILLEGAL INDENTATION'
         B     CVQTYPE
         DROP  R8
         SPACE 3
* SCAN TABLES FOR ALIGN
         SPACE
ALIPRT   SCKW  LENGTH,HAVLENE,(P,A,PI),133
         SCKW  MARKER,HAVMARK,(P,A)
         SCKW  SPACE,HAVSPACE,A
         SCKW  EVEN,HAVEVEN,A
ALIPRT1  SCKW  ,,PUSH              FILLED IN AT INIT TO NUMPRT
         SCKW  INDENT,ALINDENT,(P,I,A),50
         SCKW  ,BADNUM
         SPACE
INDPRT   SCKW  +,ALNPA2,(P,I),50
         SCKW  -,ALNPA1,(P,I),50
         SCKW  ,ALNPA2,(I),50
         SCKW  ,ALCONT
         TITLE 'END OF PAGED CODE -- PAGE 9'
         PINIT
         MVC   APRTA+1(3),CVLNENO+1   SET TO LNENOPRT
         MVC   DPRTA+1(3),CVLNENO+1   SET TO LNENOPRT
         MVC   ALIPRT1+1(3),CVNUMPR+1 SET TO NUMPRT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 10'
P010     PAGECDE GOTAB,GOCENTR,SHOCOL
         AIF   ('&DCEC' NE '1').LBL21                           JEP004
         ENTRY P010001                                          JEP001
P010001 EQU   *                                                 JEP004
         AGO   .LBL22                                           JEP004
.LBL21   DS    0H                                               JEP004
         WIDENT 001
.LBL22   DS    0H                                               JEP004
         TITLE 'TAB ROUTINES -- PAGE 10'
PGOTAB   GENTER ,            ENTRY FOR SET/SHO TABS
         CLI   CPCMNM+1,C'H' IS THIS SHOW TABS
         BE    SHOTAB              BR YES
         LA    2,8            MAY SET UP TO 8 TABS
         MVC   0(8,R8),=D'0'            SET NO TABS
         NI    RTBUFL,255-RTBURELT-RTBUTBUN NOT REL OR UNN
         LR    R3,R8                    POINT AT TABS SAVE AREA
         SR    6,6            WILL NEED LATER
         NI    CPLFLG5,255-CPFUNUM ASSUME NUMBERED
         SCAN  TBNPRT2        SEE IF EXPLICIT TAB SETTINGS GIVEN
         AIF   ('&DCEC' NE '1').LBL23                           JEP004
         TSEG  'TYPE A "1" AT EACH COLUMN THAT YOU WANT A TAB, LEAVE OTX
               HERS BLANK:',,W                                  JEP004
         AGO   .LBL24                                           JEP004
.LBL23   DS    0H                                               JEP004
         TSEG  'TYPE A "1" AT EACH COLUMN THAT YOU WANT A TAB, LEAVE OTH
               HER SPACES BLANK:',,W
.LBL24   DS    0H                                               JEP004
         XCALL SHOWCOL         GO SHOW COLUMNS FOR TAB
         TMARK ,              MARK IT
         SR    R0,R0
         LA    R1,=C'           '
         TM    CPLFLG5,CPFUNUM
         BO    *+8                 SKIP THE PROMPT IF UNNUM
         LA    R0,11
         L     R15,CVTRDRTN
         BALR  R14,R15
         BP    CVQTYPE             ABORT IF ATTENTION
         LR    6,1            SAVE START
         SCINIT (1),(0)       INIT SCAN
         SCAN  ONEPRT                   SCAN FOR "1'S"
         B     TABSOFF                  NONE SET MSG
         SPACE
HAVONE   LR    R5,R1                   SAVE ITEM ADDR
         SR    R1,R6                   GET A TAB POSITION
         TM    CPLFLG5,CPFUNUM         UNNUMBERED?
         BO    *+8                     DON'T ADD 11
         LA    R1,11(,R1)              ADJUST TAB POSITION
         LA    R1,1(,R1)
         LR    R4,R0                   LENGTH OF ITEM
TABCMP   CLI   0(R5),C'1'              MUST BE ALL ONES
         BNE   TABERR                  NG
         LA    R5,1(R5)                KICK POINTER
         BCT   R4,TABCMP               CHECK ALL
SETATAB  STC   R1,0(R3)                STORE TAB POSITION
         BCT   R2,TRYATAB              MORE SETTINGS POSSIBLE?
         B     TABSET                   DO TAB SET
         SPACE
TRYATAB  LA    R3,1(R3)                POINT TO NEXT TAB TO SET
         LA    R1,1(R1)                SET NEXT POSITION
         BCT   R0,SETATAB              SET IT
         SCAN  ONEPRT                   SCAN FOR "1'S"
         MVC   RTBTABS(8),0(R8)        PLANT TABS
         TM    CPLFLG1,CPFTNOV     VERIFY TABS?
         BO    CVGETCOM            NO.
         B     TABVWR2             GO VERIFY TAB SETTINGS
         SPACE 3
STABVER  NI    CPLFLG1,255-CPFTNOV RESET NOVERIFY SWITCH
         BR    R14                 SCAN ON
         SPACE
STABNOV  OI    CPLFLG1,CPFTNOV     SET NO TAB VERIFY FLAG
         BR    R14                 SCAN ON
         SPACE
STABREL  OI    RTBUFL,RTBURELT     SET RELATIVE TABS
         SPACE
STABUNUM OI    CPLFLG5,CPFUNUM     SET UNNUMBERED
         OI    RTBUFL,RTBUTBUN     SET TABS UNNUMBERED
         BR    R14
         SPACE
TABNOS   LTR   R2,R2               ANY MORE TABS ALLOWED
         BCTR  R2,0           DECREMENT COUNT
         BNPR  R14                 NO, IGNORE TAB AND SCAN ON
         CR    R15,R6                   GTR 0 OR LAST
         BNH   TABCHK                   ERROR
         LR    R6,R15                   SAVE FOR NEXT COMPARE
         LR    R0,R6
         TM    CPLFLG5,CPFUNUM
         BO    *+8
         LA    0,11(,6)                GET INTERNAL COUNT
         STC   0,0(3)         SAVE
         LA    3,1(3)         MOVE TAB POINTER
TABMOR   SCAN  TBNPRT         SEE IF ANOTHER TOKEN
         LTR   R2,R2               SEE IF ANY TABS IGNORED
         BNM   TABSET              BRANCH NO
         TSEG  'ONLY FIRST 8 TABS USED',,W WRITE OUT MESSAGE
         B     TABSET                   DO TAB SET
         SPACE
TABCHK   LTR   6,6            IS IT FIRST ONE & ZERO
         BZ    TABSOFF        UNSET TABS
TABERR   TSEG  'TABS ERROR, '
TABSOFF  TSEG  'NO TABS SET'
         XC    RTBTABS(8),RTBTABS      CLEAR TABS
         B     CVGETCOM
         SPACE
TABSET   MVC   RTBTABS(8),0(R8)        SET TABS
         TM    CPLFLG1,CPFTNOV     VERIFY TABS?
         BO    CVGETCOM            NO.
TABVER   LA    R2,RTBTABS
         LA    R3,8
         LA    R4,1
TABLP    SR    R5,R5
         IC    R5,0(,R2)               GET A TAB
         LTR   R5,R5                   ANY LEFT?
         BNP   TABVWR                  BR IF NOT
         LR    R6,R5
         SR    R5,R4                   COMPUTE NO. OF BLANKS
         BNP   TAB1                    BR IF NONE
TABBL    TSEG  ' '
         BCT   R5,TABBL
TAB1     TSEG  '1'
         LA    R4,1(,R6)               SET NEW POSITION
         LA    R2,1(,R2)               NEXT TAB
         BCT   R3,TABLP
TABVWR   OI    RTBMFL,RTBMFNTO         SET NO TABS
         TWRITE ,
         BNZ   CVGETCOM                BR IF ATTN
         AIF   ('&DCEC' NE '1').LBL02                           JEP00X
TABVWR2  TM    LFLG1,CPF3277       IS IT A TUBE???              JEP004
         BO    TAB3277                                          JEP004
         B     NOT3277             GO AROUND 3277 CODE          JEP004
TAB3277  TSEG  'PHYS TABS NO-VER ON 3277',,WRITE                JEP004
         B     TABVWR3             GO AROUND TTY TYPE CODE      JEP004
NOT3277  EQU   *                                                JEP004
         AGO   .LBL03                                           JEP00X
.LBL02   DS    0H                                               JEP00X
TABVWR2  LA    R2,RTBTABS
         AGO   .LBL11                                           JEP00X
.LBL03   DS    0H                                               JEP00X
         LA    R2,RTBTABS                                       JEP004
.LBL11   DS    0H                                               JEP00X
         AIF   ('&DCEC' NE '1').LBL04                           JEP00X
TABVWR3  EQU   *                                                JEP00X
.LBL04   DS    0H                                               JEP00X
         LA    R3,8
TABVLP   CLI   0(R2),0                 LAST TAB?
         BE    CVGETCOM                BR IF SO
         TSEG  =X'05F1',2              TAB 1
         LA    R2,1(,R2)
         BCT   R3,TABVLP
         B     CVGETCOM                 GET NEXT COMMAND
         SPACE 3
BADTAB   B     CVNVALID
         EJECT
SHOTAB   OI    CPLFLG1,CPFTNOV     SET NOVERIFY AS DEFAULT
         SCAN  VERPRT              SCAN FOR VERIFY
         CLC   RTBTABS(8),=D'0'         ANY TABS SET?
         BNE   SOME                     YES
         TSEG  'NO TABS'                NONE
         B     CVGETCOM
         SPACE
SOME     LA    R4,8                     8 POSSIBLE TAB SETTINGS
         LA    R3,RTBTABS               POINT AT FIRST
OVRA     SR    R15,R15                  ZERO FOR IC INST
         IC    R15,0(R3)                GET NEXT TAB BYTE
         LA    R3,1(R3)                 MOVE POINTER
         LTR   R15,R15                  IS IT ZERO?
         BZ    SSSSQK                   YES, NONE SET FOR THIS BYTE
         TM    RTBUFL,RTBURELT+RTBUTBUN UNNUM OR RELATIVE?
         BNZ   *+8                      IF EITHER DON'T SUBTRACT 11
         SH    R15,=Y(11)              EXTERNAL VALUE THIS TAB
         SR    R0,R0                    SET TO RETURN CHAR COUNT
         BTD   CPDOUB,(0),(15)          CONVERT TO EXTERNAL NO.
         TSEG  (1),(0),B            INTO MESSAGE
         TSEG  '-',,B               INSERT DASH INTO MESSAGE
SSSSQK   BCT   R4,OVRA                  DO ANY MORE
         TM    RTBUFL,RTBURELT      TABS RELATIVE?
         BNO   CHKUNNTB
         TSEG  'RELATIVE',,B
         B     SSSOPT
CHKUNNTB TM    RTBUFL,RTBUTBUN      UNNUMBERED TABS?
         BNO   SSSOPT
         TSEG  'UNNUMBERED',,B
SSSOPT   TSEG  'TABS W/'           PUT IN TAB MESSAGE
         LA    R0,4
         LA    R1,=C'SLOW'
         TM    RTBUFL,RTBUFAST      FAST LIST?
         BZ    *+8
         LA    R1,=C'FAST'
         TSEG  (1),(0)
         TSEG  'LIST',,W
         TM    CPLFLG1,CPFTNOV     IS IT VERIFY OR NOVERIFY
         BO    CVGETCOM            BR IF NOVERIFY
         B     TABVER              GO VERIFY
         TITLE 'SHOW COLUMNS -- PAGE 10'
PSHOCOL  GENTER ,
         OI    CPLFLG5,CPFUNUM     ASSUME UNNUMBERED
         SCAN  SCU                 GO SCAN UNNUMBERED
CLN      NI    CPLFLG5,255-CPFUNUM NOT UNNUMBERED
CNU      XCALL SHOWCOL             USE SUBROUTINE TO SHO COL
         B     CVGETCOM            GO GET NEXT COMMAND
         SPACE 3
* SHOW COLUMNS ROUTINE FOR SET TABS AND SHOW COLUMNS
         SPACE
SHOWCOL  XENTER R7,R8,*
         TM    CPLFLG5,CPFUNUM     UNNUMBERED?
         BO    CNUU                SKIP THE BLANKS
         TSEG  '           '           11 BLAMKS
CNUU     LA    4,13                13 TIMES
         LA    5,COLPAT
AGIN     TSEG  '123456789'    REPEAT THIS
         LR    1,5            POINTER INTO REG 1
         AIF   ('&DCEC' NE '1').LBLX5                           USPS01
         LA    5,1(5)                                           USPS01
         LA    0,1                                              USPS01
         AGO   .LBLX6                                           USPS01
.LBLX5   DS    0H                                               USPS01
         LA    5,3(5)         KICK TO NEXT
         LA    0,3            COUNT
.LBLX6   DS    0H                                               USPS01
         TSEG  (1),(0)
         BCT   4,AGIN         ANOTHER?
         AIF   ('&DCEC' NE '1').LBL31                           USPS01
         LA    1,=C'123456789'                                  USPS01
         LA    0,3                                              USPS01
         TSEG  (1),(0)                                          USPS01
         TWRITE ,                                               USPS01
         AGO   .LBL32                                           USPS01
.LBL31   DS    0H                                               USPS01
         OI    RTBMFL,RTBNOCR SET NO CR/LF FLAG
         TWRITE ,
         NI    RTBMFL,255-RTBNOCR
         LA    1,=C'123456789'
         LA    0,3
         TSEG  (1),(0)
.LBL32   DS    0H                                               USPS01
         OI    RTBMFL,RTBMFNTO     SET NOT TO USE TABS ON OUTPUT
         XEXIT R7,R8
         SPACE
         AIF   ('&DCEC' NE '1').LBLX7                           USPS01
COLPAT   DC    C'ABCDEFGHIJKLM'                                 USPS01
         AGO   .LBLX8                                           USPS01
.LBLX7   DS    0H                                               USPS01
COLPAT   DC    C'1',X'16',C'_'
         DC    C'2',X'16',C'_'
         DC    C'3',X'16',C'_'
         DC    C'4',X'16',C'_'
         DC    C'5',X'16',C'_'
         DC    C'6',X'16',C'_'
         DC    C'7',X'16',C'_'
         DC    C'8',X'16',C'_'
         DC    C'9',X'16',C'_'
         DC    C'A',X'16',C'_'
         DC    C'B',X'16',C'_'
         DC    C'C',X'16',C'_'
         DC    C'D',X'16',C'_'
.LBLX8   DS    0H                                               USPS01
         TITLE 'SCKW''S FOR SHOW TABS/COLS -- PAGE 10'
* FOR SET TABS
         SPACE
ONEPRT   SCKW  ,HAVONE
TBNPRT2  SCKW  NOVERIFY,STABNOV,A
         SCKW  VERIFY,STABVER,A
         SCKW  UNNUMBER,STABUNUM,A
         SCKW  RELATIVE,STABREL,A
TBNPRT   SCKW  ,TABNOS,PI,133
         SCKW  ,TABERR
         SPACE 3
* FOR SHOW TABS VERIFY
         SPACE
VERPRT   SCKW  VERIFY,STABVER,A
         SCKW  NOVERIFY,STABNOV,A
         SCKW  ,BADTAB
         SPACE 3
* FOR SHOW COLUMNS
         SPACE
SCU      SCKW  UNNUMBER,CNU,A
         SCKW  ,CLN
         TITLE 'CENTER ROUTINE -- PAGE 10'
PGOCENTR GENTER ALWALEN
         CVCALL DETRNG             SCAN FOR RANGE
         USING ALWA,R8
         ST    R8,CPWK1
         XC    ALWA(ALCLRLEN),ALWA CLEAR WORK AREA
         MVC   ALLNMAX(2),CPLNGTH  SET DEFAULT LENGTH
         SCAN  CENPRT              SCAN FOR OTHER VALUES
         LH    R0,ALLNMAX          TEST INDENT AGAINST LENGTH
         CH    R0,ALINDST          INDENT MUST BE LESS
         BNH   CENSH               BR IF NOT
         L     R15,CENWKAD         WORK ROUTINE ADDRESS
         CVCALL DESPOT             GO DO COMMAND
         SPACE
CENLEN   STH   R15,ALLNMAX         SAVE LENGTH
         BR    R14                 SCAN ON
         SPACE
CENIND   STH   R15,ALINDST         SAVE INDENT VALUE
         BR    R14                 SCAN ON
         SPACE
CENSH    TSEG  'ILLEGAL INDENTATION'
         B     CVQTYPE
         DROP  R8
         SPACE 3
CENWORK  DS    0H
         XENTER 2,8,*
         L     R6,CPWK1            GET WORK AREA ADDR
         USING ALWA,R6
         LTR   R0,R0               BLANK LINE
         BNP   CENEXIT             BRANCH YES
CENBL    CLI   0(R1),C' '          LEADING BLANK?
         BNE   CENNBL              BRANCH NO
         LA    R1,1(,R1)           TO NEXT CHAR
         BCT   R0,CENBL
CENNBL   LH    R3,ALLNMAX          LENGTH
         LH    R4,ALINDST          INDENT
         SR    R3,R0               COMPUTE NO. OF BLANKS
         SR    R3,R4               ALLOW FOR INDENT
         BNM   CENPOS              BR IF OK
         AR    R4,R3               REDUCE INDENTATION
         BNM   *+6                 BUT NOT TOO MUCH
         SR    R4,R4
         SR    R3,R3               SET BLANK COUNT
CENPOS   SRA   R3,1                COMPUTE BLANKS FOR LEFT SIDE
         AR    R3,R4               ADD ADJUSTED INDENTATION
         MVI   ALBUFF,C' '         BLANK OUT
         EX    R3,CENMVBL              FIRST PART
         LR    R2,R0               SAVE LENGTH
         AR    R0,R3               COMPUTE FINAL LENGTH
         LA    R3,ALBUFF(R3)       COMPUTE TEXT ADDRESS
         EX    R2,CENMVTXT         MOVE TEXT TO BUFFER
         LA    R1,ALBUFF           POINT AT NEW LINE
         L     R15,CPLCNO          GET LINE NO.
         CVCALL PRESS              PRESS THE LINE
         CVCALL STOWIT             REPLACE THE LINE
CENEXIT  XEXIT 2,8                 RETURN TO DESPOT
         SPACE 3
CENMVBL  MVC   ALBUFF+1(0),ALBUFF
CENMVTXT MVC   0(0,R3),0(R1)
         DROP  R6
         SPACE 3
* FOR CENTER
         SPACE
CENPRT   SCKW  LENGTH,CENLEN,(P,PI,A),133
         SCKW  INDENT,CENIND,(P,I,A),132
         SCKW  ,BADTAB
         SPACE 3
         DS    0F
CENWKAD  DC    AL1(DESNRTN+LOCATRTN+DESMATCH+UNPRST+DESRELA)
         DC    AL3(CENWORK-P010)    WORK ADDRESS
         TITLE 'END OF PAGED CODE -- PAGE 10'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 11'
P011     PAGECDE DOALINE
         WIDENT 001
         TITLE 'DO ALIGN/JUSTIFY ROUTINE -- PAGE 11'
         USING  ALWA,R8            SET UP FOR WORK AREA
PDOALINE GENTER ,
         L     15,ALNWKAD     SETUP ADDR AND CODES FOR DESPOT
         CVCALL DESPOT                 GO DO ALIGN
         OI    CPGFLG,CPFDIRCH         SET DIRECTORY CHANGED
         LR    R6,R8               PUT WORK AREA ADDR IN R6
         TM    ALFLAGS,ALFSOME     ANYTHING LEFT IN BUFFERS
         BZ    ALISDON        NO
         LA    R5,ALBUFF      POINT TO TEXT
         LM    R3,R4,ALWSAVE  GET COUNT
         SH    R4,ALWBUFL        INTO R4
         LCR   R4,R4                  FOR OTALIN
         XCALL OTALIN         OUTPUT LAST
ALISDON  TM    CPLFLG5,CPFNONUM    SKIP NUMBER COMMAND?
         BNZ   DOLAST              YES, GO LOCAL RENUMBER LAST PART
         LA    1,=C'  '       BLANKSOMMAND
         LA    0,2            COUNT
         SCINIT (1),(0)       INIT
         XC    CPLFLG1(5),CPLFLG1      RESET FLAGS FOR NUMBER
         PCALL GONUMB         RENUMBER
         SPACE
DOLAST   CLC   CPWKPS,CPHIPS       WAS LAST LINE IN FILE DONE
         BNH   *+10                NO, USE RANGE DETERMINED
         MVC   ALLNOSV,=F'99999999' YES, UP TO THIS CAN BE USED
         XCALL RENUMB              GO FIX LINE NUMBERS
         B     CVGETCOM
         DROP  R8
         SPACE 3
WRKALIN  DS    0H                  NO ENTRY
         XENTER 2,8,*              SAVE REGS
         L     R6,CPNAWAPT         POINT TO WORK AREA
         USING ALWA,R6
         LM    R3,R5,ALWSAVE       RESTORE POINTERS
         L     R2,CPLCNO           GET CURRENT LINE NO
         STM   R0,R2,ALWSAVE       SAVE POINTERS TO LINE & LINENO
         PFLIP R9,R11              FLIP PAGE TO R9 FOR DELETE
         CVCALL DODELE             DELETE THE LINE
         LNR   R0,R12              SET R0 NEG IN CASE END OF RNGE
         CLC   ALMODSV,CPMDLN      IS IT FIRST LINE OF NEXT RANGE
         BNE   BLINE               YES, GO FINISH OLD RANGE FIRST
NEWRNGEC LM    R0,R2,ALWSAVE       RESTORE POINTERS TO LINE
         ST    R2,ALLNOSV          SAVE HIGHEST LINE NO. YET
         LTR   R0,R0               NULL LINE
         BNP   BLINE               BR YES
         TM    ALFLAGS,ALFMRKN     MARKER OPTION
         BZ    DOLEAD              BR NO
         CLC   ALLNMRK(1),0(R1)    MARKER LINE
         BE    ALMAR               BR YES
DOLEAD   LR    R2,R1               FIND BLANK COUNT
BLCHOP   CLI   0(R2),C' '          IS THIS BLANK
         BNE   ENDLEAD             NO, AT END OF BLANKS
         LA    R2,1(,R2)           STEP PAST BLANK
         BCT   R0,BLCHOP           LOOP TILL NON-BLANK
         B     BLINE
         SPACE
ENDLEAD  SR    R2,R1               COMPUTE BLANK COUNT
         CH    R2,ALWPBC           TEST AGAINST PREVIOUS
         MVC   ALWPBC,ALINDST      SET COUNT FOR NEXT COMPARE
         EX    0,ALWBC             EXEC CONDITIONAL BR OR NOP
         B     NEXTWORD            BR IF SO
         SPACE
DIFLEAD  CH    R2,ALINDPA          IS THIS NORMAL NEW PARAGRAPH
         BE    BLINEI              YES, GO FLUSH BUFF AND RESTART
         CH    R2,ALINDST          IS THIS NORMAL INDENT
         BNE   ALMAR1              NO, TREAT AS IF MARKER LINE
         SPACE
* A NEW PARAGRAPH HAS STARTED WITH THE NORMAL INDENTATION INSTEAD
* OF THE PARAGRAPH INDENTATION.  MAINTAIN THE INDENTATION AND
* PROCESS THE LINE.
         SPACE
         MVC   ALINDNT,ALINDST     SET NORMAL INDENT VALUE
         B     NEXTWORD            GO PROCESS LINE NORMALLY
         SPACE
GETWORD  LTR   R0,R0               MORE INPUT TEXT
         BNP   NEXTLINE            BR NO
         LR    R2,R1               START OF WORD
         CLI   0(R2),C' '          BLANK
         BNE   NONDO               BR IF NOT
         B     BDO                 BR IF SO
         SPACE
BLOOP    CLI   0(R2),C' '          NEXT CHAR. BLANK
         BNE   BEND                BR NO
BDO      LA    R2,1(,R2)           NEXT
         BCT   R0,BLOOP
         B     NEXTLINE            BR IF NO MORE IN LINE
         SPACE
BEND     SR    R2,R1               COMPUTE LENGTH
         TM    ALFLAGS,ALFSPCE      SPACE OPTION
         BZ    DOWORD              BR NO
         CL    R5,ALWJPT           PAST JUSTIFY POINT
         BL    DOWORD              BR IF NOT
         B     NEXTWORD            SKIP THE BLANKS
         SPACE
NONLOOP  CLI   0(R2),C' '          END OF WORD
         BE    NONEND              BR IF SO
NONDO    LA    R2,1(,R2)
         BCT   R0,NONLOOP
NONEND   SR    R2,R1               COMPUTE LENGTH
         TM    ALFLAGS,ALFSOME     ANYTHING IN LINE
         BZ    DOWORD              BR NO
         LR    R15,R5              END OF OUT BUFFER
         BCTR  R15,0
         CLI   0(R15),C' '         LAST CHAR BLANK
         BE    DOWORD              BR YES
         MVC   0(2,R5),=C'  '      PUT 2 BLANKS AT END
         LA    R14,2               SET COUNT
         CLI   0(R15),C'.'         IS IT PERIOD
         BE    ADDIN               YES, COUNT IS CORRECT
         CLI   0(R15),C'?'         IS IT QUESTION MARK
         BE    ADDIN               YES, COUNT IS CORRECT
         CLI   0(R15),C':'         IS IT COLON
         BE    ADDIN               YES, COUNT IS CORRECT
         CLI   0(R15),CHEXCLAM     IS IT EXCLAMATION POINT
         BE    ADDIN               YES, COUNT IS CORRECT
         BCTR  R14,0               RESET COUNT TO 1
ADDIN    CR    R4,R14              ROOM FOR BLANKS
         BNH   FULL                BR IF NOT
         ST    R14,ALWLAST         SAVE WORD LENGTH
         AR    R5,R14              UPDATE POINTER AND COUNT
         SR    R4,R14
         OI    ALFLAGS,ALFSOME     SET SOMETHING IN BUFFER
         CL    R5,ALWJPT           PAST JUSTIFY POINT
         BNH   *+8                 BR IF NOT
         LA    R3,1(,R3)           BUMP WORD COUNT
DOWORD   CR    R4,R2               ROOM IN LINE
         BNL   ROOM                BR IF SO
FULL     TM    ALFLAGS,ALFSOME     ANY WORDS IN LINE
         BZ    NOWORDS             BR NO
         CLI   CPCMNM,C'J'         JUSTIFY OR ALIGN
         BNE   UNJUST              BR IF ALIGN
         LR    R15,R5              OUTPUT POINTER
         BCTR  R15,0
         CLI   0(R15),C' '         LAST TOKEN BLANK
         BNE   NBT                 BR IF NOT
         S     R5,ALWLAST          BACK UP
         A     R4,ALWLAST
         BCTR  R3,0                DECREMENT WORD COUNT
NBT      BCTR  R3,0                COMPUTE NO. OF GAPS
         SRA   R3,1
         BNP   UNJUST              BR IF NONE
         STM   R0,R2,ALWSAVE       NEED A FEW REGS
         LTR   R1,R4               NO OF SPACES TO INSERT
         BNP   JEND                BR IF NONE
         SR    R0,R0
         DR    R0,R3               COMPUTE SPACES/GAPS
         LTR   R0,R0
         BNP   EBR                 BR IF EVEN UP
         LA    R1,1(,R1)           START WITH EXTRA ON RIGHT
         TM    ALFLAGS,ALFEBL     RIGHT OR LEFT
         BZ    EBR                 BR IF RIGHT
         BCTR  R1,0                TAKE IT BACK
         SR    R0,R3        COMPUTE GAPS BEFORE EXTRA
         LCR   R0,R0
EBR      LA    R15,0(R4,R5)        LAST CHAR PLUS 1
EBLOOP   BCTR  R15,0               LOOK AT LAST
         BCTR  R5,0
EBLOOPX  MVC   0(1,R15),0(R5)      MOVE ONE CHAR
         CLI   0(R15),C' '         WAS IT BLANK
         BNE   EBLOOP              BR IF NOT
BSLOOP   BCTR  R15,0               MOVE REST OF BLANKS
         BCTR  R5,0
         MVC   0(1,R15),0(R5)
         CLI   0(R15),C' '         END OF GAP
         BE    BSLOOP              BR IF NOT
         LTR   R2,R1               NO. OF BLANKS
         BNP   NEB                 BR IF NONE
EBPUT    MVI   0(R15),C' '         A BLANK
         BCTR  R15,0
         BCT   R2,EBPUT
NEB      BCT   R0,JENDT            BR IF MORE GAPS TO DO
         BCTR  R1,0                ASSUME EXTRA ON RIGHT
         TM    ALFLAGS,ALFEBL     RIGHT OR LEFT
         BZ    *+8                 BR IF RIGHT
         LA    R1,2(,R1)           TAKE IT BACK
         XI    ALFLAGS,ALFEBL     FLIP SWITCH
         LTR   R1,R1               ANYTHING MORE TO DO
         BNP   JEND                BR IF NOT
JENDT    BCT   R3,EBLOOPX          BR IF MORE GAPS
JEND     LM    R0,R2,ALWSAVE       RESTORE REGS
         SR    R4,R4               SET BUFFER FULL
UNJUST   LA    R3,1                SET SWITCH
         LA    R5,ALBUFF
         SH    R4,ALWBUFL          COMPUTE LENGTH
         LCR   R4,R4
         XCALL OTALIN              PUT OUT LINE
NOWORDS  LA    R5,ALBUFF           RESET BUFFER POINTER
         LH    R15,ALINDNT          INDENTATION
         EX    R15,MVBL            BALNK START OF LINE
         AR    R5,R15              POINT AT START OF TEXT
         LH    R4,ALLNMAX           SET UP LENGTH
         STH   R4,ALWBUFL          SAVE BUFFER SIZE
         SR    R4,R15
         LH    R14,ALINDST         RESET INDENTATION
         STH   R14,ALINDNT
         LR    R14,R3              SAVE WORD COUNT
         SR    R3,R3               SET NO WORDS IN LINE
         NI    ALFLAGS,255-ALFSOME
         CLI   0(R1),C' '          WAS WORD BLANK
         BNE   AGAIN               BR IF NOT
         LTR   R14,R14             ANYTHING IN PREV LINE
         BP    NEXTWORD            BR IF SO
AGAIN    CR    R4,R2               ROOM IN LINE NOW
         BNL   ROOM                BR IF SO
         CLI   0(R1),C' '          BLANKS
         BE    NEXTWORD            BR IF SO
         LA    R14,MXPRTSZ         MAX. LINE LENGTH
         SR    R14,R2              COMPUTE MAX INDENT
         CR    R14,R15             PICK MIN
         BNL   *+6
         LR    R15,R14
         LA    R5,ALBUFF           COMPUTE START OF LINE
         AR    R5,R15
         LR    R4,R2               SET REMAINING COUNT
         AR    R15,R2              COMPUTE BUFFER LENGTH
         STH   R15,ALWBUFL
ROOM     EX    R2,MVWORD           MOVE WORD INTO BUFFER
         ST    R2,ALWLAST          SAVE LENGTH OF WORD
         AR    R5,R2               UPDATE POINTER
         SR    R4,R2
         OI    ALFLAGS,ALFSOME     SET SOMETHING IN LINE
         CL    R5,ALWJPT           PAST JUSTIFY POINT
         BNH   *+8                 BR IF NOT
         LA    R3,1(,R3)           BUMP WORD COUNT
NEXTWORD AR    R1,R2               BUMP INPUT POINTER
         B     GETWORD
         SPACE
ALMAR1   AR    R0,R2               RESTORE COUNT
ALMAR    BAL   R2,BLINEX           SET SW AND OUTPUT MARKED LINE
BLINEI   AR    R0,R2               RESTORE COUNT
BLINE    SR    R2,R2               SET SWITCH
BLINEX   TM    ALFLAGS,ALFSOME     ANYTHING IN BUFFER
         BZ    NULLBUF             BR IF NOT
         LA    R5,ALBUFF           BUFFER ADDR
         SH    R4,ALWBUFL          COMPUTE LENGTH
         LCR   R4,R4
         XCALL OTALIN              EMPTY BUFFER
NULLBUF  SR    R4,R4               CLEAR OUTPUT COUNT
         SR    R3,R3               SET NO WORDS
         NI    ALFLAGS,255-ALFSOME
         LH    R15,ALINDPA         SET FOR PARAGRAPH
         STH   R15,ALINDNT
         STH   R15,ALWPBC          ALSO SET INDENT VALUE ALLOWED
         NI    ALFLAGS,255-ALFEBL RESET EXTRA BLANKS SW
         LTR   R2,R2               MARKER
         BNZ   LNOUT               BR IF SO
         LTR   R0,R0               TEST INPUT LINE
         BP    DOLEAD              BR IF INDENTED LINE
         BZ    LNOUT               BR IF BLANK LINE
         SPACE
* PROCESS END OF RANGE
         XCALL RENUMB              RENUMBER THE OLD RANGE
         MVC   ALMODSV,CPMDLN      SET MOD COUNT FOR THIS RNGE
         MVC   CPNWLN(4),ALWSAVE+8 SET FOR DESPOT
         L     R0,CPFSLN           GET FIRST LINE IN RANGE
         ST    R0,ALFRSTSV         SAVE AS FIRST LINE NO USED
         ST    R0,CPWKPS           SET NEW WORK LINE NO.
         B     NEWRNGEC            GO PROCESS LINE FOR NEW RNGE
         SPACE
LNOUT    LR    R5,R1               POINT AT TEXT
         LR    R4,R0
         XCALL OTALIN              OUTPUT LINE
         SR    R4,R4               SET BUFFER EMPTY
NEXTLINE STM   R3,R5,ALWSAVE       SAVE OUTPUT POINTERS
         XEXIT 2,8
         SPACE 3
MVBL     MVC   ALBUFF(0),ALWBL
MVWORD   MVC   0(0,R5),0(R1)
         EJECT
* OUTPUT ALIGNED LINES ROUTINE
*        POINTER - R5
*        COUNT - R4
*        RETURN - R14
*        R0,R1,R15 - FREE
         SPACE
OTALIN   XENTER 0,8,*
         MVC   CPLCNO,CPWKPS       SET CPLCNO IN CASE LAST
         LA    1,CPWKPS       SAVED LINE NO
         CVCALL LOCATE        SETUP FOR DORPIN & CHECK IF LINE N
         TM    CPDRPT,CPFMTCH MUSN'T ALREADY EXIST
         BO    BLASTA         NG
         MVC   CPNWLN,CPLCNO       SET NEXT LINE FOR DESPOT
         TM    CPDRPT,CPFNTYT+CPFHIGH SEE IF NEXT LINE EXISTS
         BNZ   NOLINE      BRANCH NO AROUND FLAG SET
         OI    CPLFLG4,CPFDESET    TELL DESPOT THAT LINE SET
NOLINE   L     15,CPWKPS      LINE NO TO R15
         ST    R15,CPCURRL         UPDATE CURRENT LINE POINTER
         LR    R1,R5               POINTER TO R1
         LR    R0,R4          COUNT TO R0
         CVCALL PRESS         PRESS
         CVCALL STOWIT        PUT AWAY
         L     0,CPWKPS       LINE NO USED
         LA    1,1            KICK MINIMUM
         CVCALL ADDER
         ST    0,CPWKPS       SAVE AS DEFAULT FOR NEXT
         XEXIT 0,8            BYE-BYE
         SPACE 3
BLASTA   LR    R0,R4
         LR    R1,R5
         TSEG  (1),(0),W
         TSEG  'ABOVE LOST BECAUSE NUMBER NEEDED',,M
         B     CVQTYPE
         EJECT
* DO A LOCAL RENUMBER OF LAST SECTION DONE BY ALIGN
RENUMB   TM    CPLFLG5,CPFNONUM    WILL NUMBER COMMAND BE CALLED
         BZR   R14                 YES, RETURN WITHOUT ACTION
         XENTER 5,8,*
         L     R5,CPWKPS           GET NEXT NUMBER TO USE
         LTR   R5,R5               IS IT STILL VALID
         BM    RENUMBEX            BRANCH NO TO EXIT
         BCTR  R5,0                REDUCE BY ONE
         ST    R5,CPWKPS           SET TO LAST NUMBER USED
         S     R5,ALFRSTSV         GET LINE COUNT - 1
         BNP   RENUMBEX            EXIT IF NOT POSITIVE
         L     R1,ALLNOSV          GET LAST LINENO THAT CAN BE USED
         S     R1,ALFRSTSV         GET VALUE RANGE THAT CAN BE USED
         SR    R0,R0               ZERO FOR DIVIDE
         DR    R0,R5               CALCULATE POSSIBLE DELTA
         CVCALL SELDELTA           CONVERT IT TO ACTUAL DELTA
         ST    R1,CPWKDL           SAVE DELTA TO USE
         L     R0,ALFRSTSV         SET FIRST LINE NO TO USE
         CVCALL FIXNUMB            GO FIX UP NUMBERS IN FILE
         ST    R0,CPCURRL          UPDATE CURRENT LINE POINTER
RENUMBEX XEXIT 5,8                 RETURN
         DROP  R6
         SPACE 3
         DS    0F
ALNWKAD  DC    AL1(DESRTRN+LOCATRTN+DESMATCH+UNPRST+DESRELA)
         DC    AL3(WRKALIN-P011)    WORK ADDRESS
         TITLE 'END OF PAGED CODE -- PAGE 11'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 12'
P012     PAGECDE SHOCAT
         WIDENT 001
         TITLE 'SHOW CATALOG AND SHOW DIRECTORY -- PAGE 12'
* SHOW/PUT DIRECTORY/CATALOG ROUTINE
*
* WORK AREA FORMAT SIMILAR TO SHOW DSNAMES EXCEPT THE FIRST
* 16 BYTES AFTER THE NORMAL DSNAME WORK AREA ARE USED FOR
* THE LOWER AND UPPER BOUND MEMBER NAMES AND THE FOLLOWING
* 20 BYTES USED AS WORK SPACE.
*    WORD 1 OF WORK SPACE CONTAINS ADDR OF RESCAN ROUTINE.
*    WORDS 2-5 USED TO SAVE REGS WHEN NECESSARY.
         SPACE 3
PSHOCAT  GENTER ,
         XC    CPWK6(4),CPWK6
         DENTER DSSIZ+SDSNQSZ,C20,,NO
         XC    CPDSNWA+DSSIZ(8),CPDSNWA+DSSIZ     CLEAR FROM
         MVI   CPDSNWA+DSSIZ+8,X'FF'           TO/THRU FIELD
         MVC   CPDSNWA+DSSIZ+9(7),CPDSNWA+DSSIZ+8 THRU FIELD
         CLI   CPCMNM,C'C'
         BNE   DSNMDFLT
         OI    CPLFLG3,CPFTYPE      DEFAULT 'TYPE' FOR SHO CAT
         OI    CPLFLG2,CPFDSNMS     NULL/NO DEFAULT DSN OK
         SPACE 3
DSNMDFLT SCTELL ,
         SH    R1,=H'2'            GO BACK TWO CHARS
         AH    R0,=H'2'            ADJUST LENGTH
         ST    R1,0(,R13)          SAVE BUFFER POINTER
         MVC   4(2,R13),0(R1)      SAVE WHATEVER WAS THERE
         LA    R13,8(,R13)         STEALING 8 BYTES
         MVC   0(2,R1),=C'# '      MOVE IN DUMMY OPERAND
         SCINIT (1),(0)            REINIT SCANNER
         CVCALL DODSNM       GO CONSTRUCT DEFAULT LIKE PATTERN
         S     R13,=F'8'
         L     R14,0(,R13)
         MVC   0(2,R14),4(R13)     MOVE BACK WHATEVER WAS THERE
         SPACE 3
MBRESCAN TM    CPLFLG3,CPFPUT
         BO    FIRSTDID
         SCAN  COMPRT
         B     POLCHEK
         SPACE
FIRSTDID NI    CPLFLG5,255-CPFNLST
         L     R0,CPHIPS                HIGHEST LINE NO. YET
         L     R1,CPGLDL                GLOBAL DELTA
         CVCALL LOWMULT                 GET MULTIPLE
         CVCALL ADDER                   ADD
         STM   R0,R1,CPWKPS
         OI    CPWKDL,FNEGBT       SET DELTA NOT SPEC. YET
NOTFIRST SCAN  PUTSTUFF
PRYPRY   TM    CPLFLG2,CPFCLEAR    WAS CLEAR SPECIFIED
         BZ    PRYOUT              BRANCH NO
         CVCALL DOCLEAR            GO CLEAR ACTIVE FILE
         LM    R2,R3,CPWKPS        SAVE COLLECT VALUES
         LTR   R6,R6               WAS A LINE NUMBER GIVEN
         BZ    PRYCLR2             BRANCH YES
         L     R2,CPGLDL           NO, SET START TO DELTA
PRYCLR2  TM    CPWKDL,FNEGBT             WAS DELTA SPE?
         BZ    PRYCLR1                   YES. BRANCH
         L     R3,CPGLDL
PRYCLR1  STM   R2,R3,CPWKPS        RESET COLLECT VALUES
PRYOUT   MVC   CPNXPS(4),=F'100000000' SET COMPARAND TOO HIGH
         OI    CPLFLG4,CPFSTSPL+CPFSTINS SET SO STOWIT WILL ONLY
         NI    CPWKDL,255-FNEGBT
         TM    CPWKPS,FNEGBT            ILLEGAL LINE NO.?
         BO    BADLINES                 YES
         LA    R1,CPWKPS                1ST LINE NO. FOR LOCATE
         CVCALL LOCATE                  LOCATE
         TM    CPDRPT,CPFMTCH           MATCHING LINE NO.?
         BO    BADLINEM                  YES
         TM    CPDRPT,CPFNTYT+CPFHIGH   OK TO COLLECT TILL 9999.9
         BNZ   POTCHEK                  YES
         MVC   CPNXPS(4),CPLCNO         SET COMPARAND TO NEXT LIN
POTCHEK  L     R0,CPWKPS                LINE NO. TO COLLECT
         ST    R0,CPCURRL          SET CURRENT LINE
         C     R0,CPNXPS                STILL SMALL ENOUGH?
         BNL   PUTERC                   NO
         ST    R0,CPLCNO                STILL SMALL ENOUGH?
         TM    CPLFLG2,CPFSCRTC
         BZ    PUTNOCHK
         NI    CPLFLG5,255-CPFNTEX-CPFNLST
PUTNOCHK TM    CPLFLG5,CPFNLST
         BZ    POLCHEK
         TM    JCBAFL,JCBSYSPR     SYSTEM PRIVILEGES?
         BO    POLCHEK             NO. CANT SET NOLIST
         NI    CPLFLG5,255-CPFNLST NO LIST
POLCHEK  XC    CPMDLN(4),CPMDLN    INDICATE NO PAGES
         TM    CPLFLG3,CPFSET      'SET'?
         BZ    POLCHEK2            NO SET.
         CVCALL SETPFXNS           GO SET PREFIX
POLCHEK2 CLI   CPCMNM,C'C'         CAT ?
         BE    SCATRSCN
         CVCALL VOLCHEK
DODPDSD  NI    CPLFLG3,255-CPFPMSG
         DPDSD ,                   CALL SHOW PDS
         B     DSMBRCOM            GO TO COMMON CODE
         SPACE 3
MBREXCL  CLI   CPDSNWA+DSSIZ,X'00'
         BNE   IGNEXOPT
         OI    CPLFLG3,CPFEXCL     EXCLUDE FLAG
         SPACE
MBRFROM  LA    R15,CPDSNWA+DSSIZ   ADDR OF FROM FIELD
         CLI   0(R15),X'00'
         BNE   IGNFROPT
         B     MBRFMTO
         SPACE
MBRTO    TM    CPDSNWA+DSSIZ+8,X'FF'
         BM    IGNTOOPT
         XC    CPDSNWA+DSSIZ+8(8),CPDSNWA+DSSIZ+8
         SPACE
MBRTHRU  LA    R15,CPDSNWA+DSSIZ+8    ADDR OF TO/THRU FIELD
         TM    0(R15),X'FF'
         BM    IGNTHOPT
         SPACE 3
MBRFMTO  CLI   0(R1),C'#'          POSSIBLE SAVED MEMBER USAGE?
         BE    MBRFMTO2            BR IF YES
         CLI   0(R1),C'*'          ALSO ACCEPT "*"
         BNE   NOFTSVM             BR IF NO
MBRFMTO2 BCT   R0,MBRNOISE         BR IF #/* IS NOISE
         CLI   CPCMNM,C'C'         IS IT SHOW CATALOG?
         BE    MBRNOISE            BR IF YES - */# NOT VALID
         CLI   CPMEMBSV,X'40'      IS THERE ONE?
         BER   R14                 BR IF NO - IGNORE
         LA    R1,CPMEMBSV         ADDR OF SOURCE
         LA    R4,7(R1)            ADDR OF LAST CHAR
         LA    R0,8                LENGTH
MBRFTLP  CLI   0(R4),X'40'         BLANK?
         BNE   NOFTSVM             BR IF YES - HAVE LENGTH
         BCTR  R4,0
         BCT   R0,MBRFTLP
NOFTSVM  LR    R4,R1
         CH    R0,=H'8'            CHECK LENGTH
         BH    CVNVALID            BR IF TOO LONG.
         LTR   R2,R0
         BZR   R14                 BR IF NULL
         BCTR  R2,0                FOR EX
         EX    R2,FMTOMVC          MOVE FIELD
         BR    R14
         SPACE 3
MBRNOISE LR    R2,R7               MUST SAVE R7
         STM   R14,R1,4(R8)        SAVE REGS
         TSEG  (1),1,B             TELL USER HIS #/*
         TSEG  'IGNORED',,M        WAS IGNORED.
         LM    R14,R1,4(R8)        RESTORE REGS
         LA    R1,1(R1)            BUMP PAST NOISE CHAR
         LR    R7,R2               RESTORE R7
         B     NOFTSVM
         SPACE 3
HAVTO    LA    R6,POTLNENO-P012    SET LINE NUMBER RETURN
         LCR   R6,R6               SET NEGATIVE TO FLAG RELATIVE
         SCAN  LINPRT              GO GET TO LINE
         B     CVABSENT            MISSING IF NOTHING FOUND
         SPACE
POTLNENO ST    R0,CPWKPS                SET NEW LINE NO. & DELTA
         TM    CPWKDL,FNEGBT             WAS DELTA SPE?
         BZ    POTDEL                    YES. BRANCH
         ST    R1,CPWKDL
POTDEL   SR    R6,R6               FLAG HAVE LINE NUMBER
         B     NOTFIRST
         SPACE
POTDLL   LTR   R15,R15                  ZERO NG
         BZ    CVNVALID                 NG
         ST    R15,CPWKDL               STORE COLLECT DELTA
         B     NOTFIRST
         SPACE 3
* BAD LINE NO. MESSAGE
         SPACE
BADLINEM L     R0,CPLCNO           GET BAD LINE NUMBER
         CVCALL CVEXNO             CONVERT TO EXTERNAL FORM
         TSEG  (1),(0),B           PUT IT IN MESSAGE
         SPACE
BADLINES TSEG  'LINE NO.'
         B     CVUNLEGL
         SPACE
PUTERC   TSEG  'NO REPLACE OR INTERLEAVE'
         B     CVQTYPE
         SPACE
FMTOMVC  MVC   0(0,R15),0(R4)      MOVE FROM/THRU STRING
         EJECT
* COME HERE IF COMMAND IS SHOW/PUT CATALOG
         SPACE
SCATRSCN LH    R15,DSNWANL         PATTERN LENGTH
         LTR   R15,R15             IS IT NULL
         BNP   SCATCALL            BR IF YES
         LA    R1,DSNWADSN-1(R15)  ADDR OF LAST CHAR IN PATTERN
         CLI   0(R1),C'.'          IS IT DELIMITER
         BNE   SCATCALL            BR IF NOT
         MVI   0(R1),X'40'         LOCATE BARFS ON TRAILING PER
         BCTR  R15,0               DECR LENGTH
         STH   R15,DSNWANL         STORE NEW LENGTH
SCATCALL DSHCAT ,                  GO DO CATALOG SEARCH
DSMBRCOM LTR   R9,R9              PAGE  9 IN?
         BZ    SKIPMRK            NO
         PMARK R9
SKIPMRK  LTR   R15,R15            BAD VOL., TALO, ABORT OR ERROR?
         BZ    WRIDSSP2           NO
         CH    R15,=Y(RTNPAGES)    NOT ENUF PAGES?
         BNE   ATTNHIT
         OI    CPLFLG3,CPFPMSG
         TSEG  'INSUFFICIENT PAGES FOR COMPLETE OUTPUT',,W
         B     WRIDSSP2
         SPACE
ATTNHIT  CH    R15,=Y(RTNSHERR)    SHOW RTN ERROR?
         BNE   CALLNGO             BR IF NOT
         TSEG  'PROCESSING BREAK',,W
         LTR   R9,R9                    ANYTHING?
         BZ    CVGETCOM                 NO - GET NEW COMMAND
WRIDSSP2 L     R4,CPWK6            STORED BY PDIO
         LTR   R4,R4
         BZ    WRIDSSP1
         L     R1,CPNXPS           GET FIRST ILLEGAL
         S     R1,CPWKPS           SUBT FIRST LINENO TO GET SIZE
         SR    R0,R0               ZERO FOR DIVIDE
         DR    R0,R4               CALCULATE MAXIMUM DELTA
         C     R1,CPWKDL           IS WORK DELTA LESS OR EQUAL
         BNL   WRIDSSP1            YES, USE WORK DELTA
         CVCALL SELDELTA           CONVERT IT TO ACTUAL DELTA
         ST    R1,CPWKDL           SAVE DELTA TO USE
WRIDSSP1 PCALL WRICTDR                 TO 2741'S
         SPACE
CALLNGO  PCALL NTGDOPN
         EJECT
DSNMTYPE CLI   CPCMNM,C'C'         CAT?
         BE    CVNVALID
         OI    CPLFLG3,CPFTYPE
         BR    R14
         SPACE
DSNMNTYP CLI   CPCMNM,C'C'
         BNE   CVNVALID
         NI    CPLFLG3,255-CPFTYPE
         BR    R14
         SPACE
DSNMSCRT DS    0H
         CLI   CPCMNM,C'C'              CAT?
         BE    CVNVALID
         OI    CPLFLG2,CPFSCRTC         SET "SCRATCH" MODE
         BR    R14                       LOOK FOR MORE
         SPACE
ADLIKE   MVC   4(6,R8),DSNWAVOL    SAVE VOLUME
         CVCALL DODSNM
         CLI   DSNWAVOL,C' '       WAS VOLUME FOUND IN SCAN?
         BNE   MBRESCAN            BR IF YES
         CLI   4(R8),C' '          WAS VOLUME THERE BEFORE?
         BE    MBRESCAN            GO START SCAN AGAIN
         MVC   DSNWAVOL(6),4(R8)   RESTORE OLD VOLUME
         B     MBRESCAN            GO START SCAN AGAIN
         SPACE
SETUNC   CLI   CPCMNM,C'C'         CAT?
         BNE   CVNVALID
         OI    CPLFLG3,CPFUNCLG    SET UNCATLG OPTION
         BR    R14                 SCAN ON
         SPACE
IGNEXOPT STM   R14,R1,4(R8)
         LR    R2,R7
         TSEG  'EXCLUDE',,B
IGNCOMM1 TSEG  'OPTION IGNORED',,W
         LM    R14,R1,4(R8)
         LR    R7,R2
         BR    R14
         SPACE
IGNFROPT STM   R14,R1,4(R8)
         LR    R2,R7
         TSEG  'FROM',,B
         B     IGNCOMM1
         SPACE
IGNTOOPT STM   R14,R1,4(R8)
         LR    R2,R7
         TSEG  'TO',,B
         B     IGNCOMM1
         SPACE
IGNTHOPT STM   R14,R1,4(R8)
         LR    R2,R7
         TSEG  'THRU',,B
         B     IGNCOMM1
         SPACE 3
* SCAN TABLES FOR SHOW DIRECTORY
         SPACE
PUTSTUFF SCKW  AT,HAVTO
         SCKW  BY,POTDLL,(P,LN)
DAPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO CLRPRT
LAPRC    SCKW  ,,PUSH        FILLED IN AT INIT TO LTNPRT
COMPRT   SCKW  ALL,DSNMTYPE
         SCKW  SCRATCH,DSNMSCRT,A
         SCKW  IN,ADLIKE
         SCKW  FOR,ADLIKE
         SCKW  UNCATLG,SETUNC,A
         SCKW  NOTYPE,DSNMNTYP,A
         SCKW  FROM,MBRFROM,(P,A)
         SCKW  EXCLUDE,MBREXCL,(P,A)
         SCKW  THROUGH,MBRTHRU,(P,A)
         SCKW  THRU,MBRTHRU,P
         SCKW  TO,MBRTO,P
COMPRT3  SCKW  ,,PUSH              FILLED IN AT INIT TO IGDSNPRT
         SCKW  ,BADPUT
         SPACE
LINPRT   SCKW  ,,PUSH          FILLED IN AT INIT TO LNENOPRT
         SCKW  ,BADPUT
         SPACE 3
BADPUT   B     CVNVALID
         TITLE 'GETTPAG ROUTINE'
GETTPAGY XENTER 15,8,44       SAVE SPACE (USED BY SHOW DSNAMES)
GETTPAG  EQU   GETTPAGY-P012        MAKE RELATIVE ADDRESS
         L     2,CPMDLN       NO PAGES ALREADY
         LTR   2,2            ANY?
         BNP   GETTNO1
         PMARK R9
         CH    R2,=Y(10)                10 MAX
         BNL   SENSAME
GETTNO1  PGET  R9
         BZ    SENSAME
         LA    2,1(2)         ONE MORE
         ST    2,CPMDLN       STORE
         SLL   2,2            POINT AT PLACE TO STORE PAGE NO
         ST    0,CPMDAD-4(2)  STORE PAGE NO
SENSAME  LTR   R9,R9
         XEXIT 15,8
         TITLE 'END OF PAGED CODE -- PAGE 12'
         PINIT
         MVC   COMPRT3+1(3),CVIGDSN+1 SET TO IGDSNPRT
         MVC   LINPRT+1(3),CVLNENO+1  SET TO LNENOPRT
         MVC   DAPRC+1(3),CVCLRPR+1   SET TO CLRPRT
         MVC   LAPRC+1(3),CVLTNPR+1  SET TO LTNPRT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 13'
P013     PAGECDE WRICTDR
         WIDENT 001
         TITLE 'WRITE OUTPUT FOR SHOW CAT/DIR -- PAGE 13'
* WRICTDR IS USED TO LIST INFORMATION PASSED FROM SHOW CATALOG
* AND SHOW DIRECTORY
*   CPMDLN CONTAINS THE NUMBER OF PAGES OF INFORMATION.
*   CPMDAD CONTAIN UP TO TEN PAGE NUMBERS.
*   THE FIRST HALF-WORD ON EACH PAGE IS THE PAGE BYTE-COUNT.
*   EACH FIRST BYTE IN A LINE IS THE CHARACTER COUNT FOR THE LINE.
*   A LINE CHARACTER COUNT OF ZERO INDICATES ALL DONE.
*
* THE WORD AFTER 'DSSIZ' (DSSIZ+4 BELOW) IS USED TO STORE
* THE SKIP COUNT FOR SHOW DSNAMES AND THE ORIGINAL
* PATTERN LENGTH FOR SHOW CATLG.
         SPACE
PWRICTDR DENTER DSSIZ+4,SDSNDSZ-DSSIZ+SBSZ
         NI     CPLFLG3,255-CPFPUTER
         L     R5,CPMDLN                NO. PAGES
         LA    R6,CPMDAD-4              4 BYTES B/4 1ST PAGE NO
         SR    R4,R4
         LTR   R5,R5                    ANY?
         BP    GTNXTPG             BR YES TO START OUTPUT
         PCALL NOMORPG             GO REPORT OUT OF PAGES
         SPACE
GTNXTPG  LA    R6,4(R6)                 POINT AT NEXT PAGE NO
         LTR   R9,R9                    PAGE IN?
         BZ    GETNXPG                  NO
         PNUM  R9                       WHICH PAGE IS IN?
         C     R0,0(R6)                 RIGHT ONE?
         BE    PROCPAG                  YES
GETNXPG  L     R0,0(R6)                 PAGE NO NEEDED
         PGET  R9,(0)                   GET IT
         LTR   R4,R4
         BNZR  R4
PROCPAG  LA    R3,2                     NO. BYTES PROCESSED ON PAGE
NEXTLINX CH    R3,0(R9)            MORE ON PAGE?
         BNL   GONXPAG                  NO
         TM    CPLFLG2,CPFSTOP          TEST IF MORE WANTED
         BNZ   GONXPAG                  NO MORE
         SR    R2,R2
         IC    R2,0(R3,R9)              LINE CHAR COUNT
         LTR   R0,R2                    ANY?
         BZ    ALLDONN                  NO
LOADAFC  LA    R1,1(R3,R9)         POINT AT 1ST CHAR IN LINE
         SPACE 3
* FORMAT AND WRITE INFORMATION FOR SHOW DIRECTORY COMMAND.
*
* REGISTERS ARE USED AS FOLLOWS:
*    R2    CHAR COUNT IN LINE OF DATA.
*    R3    NUMBER OF BYTES PROCESSED IN CURRENT PAGE.
*    R4    POINTS TO CURRENT INPUT LINE (SDSNBUF).
*    R5    NUMBER OF PAGES TO BE PROCESSED.
*    R6    PAGE INDEX POINTER.
         SPACE
         CH    R2,=H'6'            CHECK VOLUME ID MSG
         BH    WRMBR               WHICH IS USED AS A FLAG
         LH    R0,DSNWANL          TO WRITE THE DSNAME.
         STH   R0,CPDSNWA+DSSIZ    SAVE ORIG PATTERN LENGTH
         TSEG  DSNWADSN,(0)
         TM    CPLFLG3,CPFPUT
         BZ    LWRITE
         B     DIDNTADD
         SPACE
WRMBR    CLC   =C'CAT',CPCMNM      IS IT SHOW CATALOG?
         BE    WRCAT               BR IF YES
         MVC   DSNWAMBR(8),0(R1)    MOVE MEMBER IN CASE SCR
         TM    CPLFLG3,CPFTYPE     OTHER STUFF WANTED?
         BZ    WRMBONLY            BR IF NO
         TSEG  (1),8               FULL LENGTH FOR COL ALIGN
         LA    R4,8(R1)            POSIT PTR AFTER MEMBER
WRMBRLP  EX    0,LOADAFC           GET ADDR OF 1ST CHAR
         LR    R15,R1
         SR    R15,R4              -(LENGTH PROCESSED)
         AR    R15,R2              LENGTH REMAINING
         BNP   NOWWHAT             BR IF DONE
         TSEG  '  '
         CH    R15,=H'4'           IS IT GREATER THAN FULLWORD?
         BNH   *+8                 BR IF NO
         LA    R15,4               PROCESS FULLWORD ONLY
         LR    R0,R15              SAVE FOR LATER
         LA    R1,CPDOUB+4         END OF FULLWORD WORK AREA
         SR    R1,R0               ADDR OF LOW ORDER CHARS
         BCTR  R15,0               FOR EX
         EX    R15,WRMBRMVC        MOVE THEM
         SLL   R0,1                FOR BTX HEX LENGTH
         BTX   0(R8),(0),CPDOUB    CONVERT TO HEX
         TSEG  (1),(0)             TSEG THEM
         SRL   R0,1                RESTORE ACTUAL LENGTH
         AR    R4,R0               UPDATE POINTER
         B     WRMBRLP
         SPACE 3
* LIST MEMBER NAME ONLY
WRMBONLY CVCALL MEMBERED           GO TSEG MEMBER NAME
         B     NOWWHAT
         SPACE
WRMBRMVC MVC   0(0,R1),0(R4)
         SPACE 3
* FORMAT AND WRITE INFORMATION FOR SHOW CATALOG COMMAND
         SPACE
WRCAT    MVC   0(SCBSZ,R8),0(R1)   MOVE FOR ALIGNMENT
         USING SCBUF,R4
         LR    R4,R8               ADDR OF ITEM
         MVC   DSNWAMBR,SCBNM      GET LEVEL NAME
         SR    R0,R0               IN CASE DUMMY NAME
         CLI   SCBNM,X'FF'         IS IT DUMMY NAME?
         BE    WCNMDONE            BR IF YES - NAME SPECIFIED
         CVCALL MEMBERED
WCNMDONE STH   R0,DSNWANL          SAVE LENGTH OF LEVEL NM
         TM    CPLFLG3,CPFTYPE     WAS 'NOTYPE' SPECIFIED?
         BZ    WCDCOM              BR IF YES
         CLI   SCBCODE,C'D'        IS IT DSNAME ENTRY?
         BE    WCDD
         CLI   SCBCODE,C'I'        INDEX ENTRY?
         BE    WCDI
         CLI   SCBCODE,C'C'        CVOL ENTRY?
         BE    WCDC
         CLI   SCBCODE,C'G'        GDG ENTRY?
         BE    WCDG
         CLI   SCBCODE,C'A'        ALIAS ENTRY?
         BE    WCDA
         DIE   ,                   ERROR - ABEND
         SPACE 3
WCDD     TSEG  '- ON',,B
         CLI   SCBVOL,X'FF'        IS IT DUMMY VOL ENTRY?
         BE    WCDDGT5V            YES - MORE THAN 5 VOLS
         TSEG  SCBVOL,6,B
         LH    R15,SCBNVOLS        NUMBER OF VOLS
         CH    R15,=H'1'           IS IT ONE VOL?
         BNH   WCDCOM              YES - DON'T BOTHER
         B     WCDDNV
         SPACE
WCDDGT5V TSEG  '>'
         LA    R15,5
WCDDNV   BTD   CPDOUB,0,(15)
         TSEG  (1),(0),B
         TSEG  'VOLS'
         B     WCDCOM
         SPACE
WCDI     TSEG  '- INDEX'
         B     WCDCOM
         SPACE
WCDC     TSEG  '- CVOL',,B
         TSEG  SCBVOL,6
         B     WCDCOM
         SPACE
WCDG     TSEG  '- GDG',,B
         LH    R15,SCBNVOLS        NUMBER OF GDG ENTRIES
         BTD   CPDOUB,0,(15)
         TSEG  (1),(0),B
         SR    R15,R15
         IC    R15,SCBMAX          MAX NUMBER TO BE KEPT
         CH    R15,SCBNVOLS        IS MAX = ACTUAL?
         BE    WCDGMAX             BR IF YES
         TSEG  'OF',,B
         BTD   CPDOUB,0,(15)
         TSEG  (1),(0),B
WCDGMAX  TSEG  'GENS'
         B     WCDCOM
         SPACE
WCDA     TSEG  '- ALIAS FOR',,B
         MVC   DSNWAMBR,SCBNM2     ALIAS NAME
         CVCALL MEMBERED
         MVC   DSNWAMBR,SCBNM      RESTORE ORIG NAME
         SPACE
         DROP  R4
         SPACE 3
* COMMON ROUTINE FOR SHOW CATLG
         SPACE
WCDCOM   TM    CPLFLG3,CPFUNCLG    WAS UNCATLG SPECIFIED?
         BZ    NOWWHAT
         LA    R15,DSNWADSN
         LH    R0,CPDSNWA+DSSIZ    GET PATTERN LENGTH
         LA    R4,43               L'DSNAME-1
         AR    R15,R0              FIRST CHAR FOLL PATTERN
         SR    R4,R0               REMAINING AFTER DSN
         BM    WCDCMGTL            BR IF L'DSN=44
         MVI   0(R15),X'40'
         BZ    WCDCMGTL            BR IF L'DSN=43
         BCTR  R4,0
         EX    R4,WCDCMCLR         CLEAR AFTER PATTERN
         LH    R4,DSNWANL          LENGTH OF CURR INDEX NAME
         LTR   R4,R4               TEST IT
         BZ    WCDCMGTL            NO INDEX - PATTERN COMPLETE
         LTR   R0,R0               TEST NULL PATTERN
         BZ    WCDCOMNP            BR IF YES
         MVI   0(R15),C'.'         INSERT INDEX DELIMITER
         LA    R15,1(R15)          BUMP POINTER
         AH    R0,*-2              AND LENGTH
WCDCOMNP AR    R0,R4               TOTAL LENGTH
         BCTR  R4,0
         EX    R4,WCDCMMVC         MOVE CURR NAME
WCDCMGTL STH   R0,DSNWANL          SAVE TOTAL LENGTH
         CVCALL DSNSTDDO            GO SET DSN FLAGS
         CVCALL DSNUDSDO
         B     PPROMPTT            GO CHECK FOR PROMPT
         SPACE 3
WCDCMMVC MVC   0(0,R15),DSNWAMBR
WCDCMCLR MVC   1(0,R15),0(R15)
         EJECT
NEXTRY   LR    R15,R1                  GET ADDR OF LAST CHAR
         AR    R15,R0
NEXTRYX  BCTR  R15,0                   BACK UP ONE CHAR
         CLI   0(R15),C' '              BLANK?
         BNE   NOWTSEG             NO
         BCT   R0,NEXTRYX
NEXTLIN  LA    R3,1(R3,R2)             COUNT TO NEXT LINE
         B     NEXTLINX
         SPACE
NOWTSEG  TSEG  (1),(0)
NOWWHAT  TM    CPLFLG3,CPFPUT            PUT?
         BZ    DONTPUT                   NO. BRANCH.
PONEXT   LM    R0,R1,CPWKPS             LINE NO.
         CVCALL ADDER                   ADD
         BM    POTERD                   TOO BIG
         ST    R0,CPWKPS                SAVE NEXT LINE NO.
         ST    R0,CPLCNO                FOR LISTLINE ROUTIN
DIDNTADD MVC   0(133,R8),RTBTEXT        INTO WORK AREA
         LH    R0,RTBWC
         LR    R1,R8                    SET POINTER
         L     R15,CPWKPS               LINE NO. INTO R15
         CVCALL PRESS                   PRESS
         CVCALL STOWIT                  STOW IT AWAY
         BM    POTERC                   REPL ERR
         BNZ   BADFIT
         MVC   CPCURRL(4),CPWKPS
         PNUM  R9                       CHECK ON R9?
         C     R0,0(R6)
         BE    NOWWRIT
         BAL   R4,GETNXPG               GET IT BACK
         SPACE 3
NOWWRIT  LH    R0,RTBWC
         MVC   RTBWC(4),=XL4'0'
         TM    CPLFLG5,CPFNLST          NOLIST?
         BO    NEXTLIN                  YES   BRANCH.
         MVC   0(133,R8),RTBTEXT        INTO WORK AREA
         LR    R1,R8
         CVCALL LISTLINE
         BP    DSNMATTN         ATTN HIT BRANCH
DONTPUT  TM    CPLFLG2,CPFSCRTC         "SCRATCH" OPTION?
         BO    PPROMPTT                 YES
LWRITE   TM    CPLFLG3,CPFPUT           PUT?
         BO    NEXTLIN                  IF SO LINE PRINTED.
         TWRITE ,
         BP    DSNMATTN
         B     NEXTLIN
         SPACE 3
*
BADFIT   LR    R2,R15              NOT A FAIR TRADE..
         B     CALLPERR            HI HO...
*
POTERD   LA    R2,4
         B     CALLPERR
         SPACE
POTERC   LA    R2,8
CALLPERR OI    CPLFLG3,CPFPUTER
DSNMATTN OI    CPLFLG2,CPFSTOP          SET TO PRINT NO MORE
GONXPAG  PFREE R9,EMPTY                 SCRATCH PAGE
         SR    R4,R4
         BCT   R5,GTNXTPG               GET NEXT PAGE (IF ANY)
ALLDONN  PFREE R9,EMPTY                 SCRATCH LAST PAGE
         TM    CPLFLG3,CPFPUTER
         BZ    CVGETCOM                  AND AWAY WE GO...
PUTTYERR PCALL DSNERR
         EJECT
* PROMPT FOR SCRATCH IF DATA SET IS CANDIDATE FOR SCRATCHING
* BY THIS USER.  OTHERWISE, FORGET THE PROMPT.
         SPACE
PPROMPTT TM    JCBAFL,JCBSYSPR     SYSTEM PRIVILEGES?
         BO    PPETC2              YES..LET NOLIST STAY
         TM    DSNWAF1,DSNFMYDS    BELONG TO USER?
         BZ    LWRITE              BR IF NO
PPETC2   SR    R2,R2
         IC    R2,0(R3,R9)              LINE CHAR COUNT
         CH    R2,=H'6'            CHECK VOLUME ID MSG
         BNH   LWRITE              WHICH IS USED AS A FLAG
         TM    CPLFLG5,CPFPUT
         BO    NOPMARK
         TMARK
NOPMARK  SYSQS R1,R0,'SCRATCH'
PPCATCLC CLC   =C'CAT',CPCMNM
         BNE   PPETC3
         SYSQS R1,R0,'UNCATLG'
PPETC3   TREADR (1),(0)
         BP    DSNMATTN            ABORT IF ATTENTION
         SCINIT (1),(0)                 INIT SCAN
         SCAN  YESSPRT                  LOOK FOR "YES"
         B     NEXTLIN                   DO MORE
         SPACE
YESREPLY EX    0,PPCATCLC
         BE    SUNCAT
         CLI   0(R1),C'U'          DID USER SAY UNCATLG
         BE    NEXTLIN             YES,   DON'T SCATCH
         DSCRATCH ,                SCRATCH IT
         BZ    NEXTLIN                   ON TO NEXT
         L     R14,CVMEMBER        ADDR OF MEMBERED
         BALR  R14,R14             GO TO PROPER ROUTINE
         TSEG  'NOT SCRATCHED',,W
YESRETN  BP    DSNMATTN
         B     NEXTLIN                   ON
         SPACE
SUNCAT   CLI   0(R1),C'S'          DID USER SAY SCRATCH
         BE    NEXTLIN             YES, DON'T UNCATLG
         DCATLG ,
         BZ    NEXTLIN
         CVCALL DSNAMED
         TSEG  'NOT UNCATLG''D',,W
         B     YESRETN
         SPACE 3
YESSPRT  SCKW  YES,YESREPLY
         SCKW  OK,YESREPLY
         SCKW  SCRATCH,YESREPLY,A
         SCKW  UNCATLG,YESREPLY,A
         SCKW  ,NEXTLIN
         TITLE 'END OF PAGED CODE -- PAGE 13'
         PINIT
         PEND
         TITLE 'DSECTS'
*  WORK AREA
         SPACE
WA       DSECT
         XSA   2,8
LPTR     DS    A                       LOWER LIMIT
UPTR     DS    A                       UPPER LIMIT
ILEN     DS    A                       LEN OF INSERT
ILOC     DS    A                       LOC
LEN      DS    A
         SPACE
AFL      DS    X                       FLAGS
         SPACE
AFD      EQU   X'08'                   DELETE
AFI      EQU   X'04'                   INSERT
AFCHOP   EQU   X'02'                   CHOPPED OFF
AFATTNC  EQU   X'01'                   $ATTN
         SPACE
WASIZE   EQU   *-WA
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
CHEXCLAM EQU   X'5A'   EXCLAMATION POINT
         EJECT
         COPY  RTNCODES
         TITLE 'COPY MODS'
SDSNBUF  DSECT
         COPY  SDSNBUF
         SPACE 3
         COPY  SCATBUF
         EJECT
ALWA     DSECT          ALIGN WORK AREA DEFINITION
ALFLAGS  DS    X                   ALIGN FLAG BYTE
ALFMRKN  EQU   X'80'               MARKER SPECIFIED FLAG
ALFSPCE  EQU   X'10'               SPACE OPTION SPECIFIED
ALFEVEN  EQU   X'08'               EVEN OPTION SPECIFIED
ALFEBL   EQU   X'04'               EXTRA BLANKS ON LEFT FLAG
ALFSOME  EQU   X'02'               SOMETHING IN BUFFER FLAG
ALLNMRK  DS    CL1                 MARKER CHARACTER
ALMODSV  DS    H                   MOD COUNT TO TELL DISJOINT RNGE
ALLNMAX  DS    H                   LENGTH SAVE SPOT
ALINDST  DS    H                   ALIGN INDENT VALUE
ALINDPA  DS    H                       INDENT FOR NEW PARAGRAPH
ALINDNT  DS    H                   NEXT INDENT VALUE
ALWBUFL  DS    H                   BUFFER LENGTH
ALWPBC   DS    H                   PREVIOUS BLANK COUNT
ALWBC    BNE   0                   NOP OR BNE DIFLEAD
ALWSAVE  DS    3F                  SAVE AREA FOR OUTPUT POINTERS
ALWLAST  DS    A                   LENGTH OF LAST WORD
ALWJPT   DS    A                   POINT TO BEGIN JUSTIFICATION
ALLNOSV  DS    F                   WORK CELL FOR LINE NUMBER
ALFRSTSV DS    F                   FIRST LINE OF RANGE SAVE
ALCLRLEN EQU   *-ALWA              LENGTH TO CLEAR AT START
ALWBL    DS    C                   A BLANK
ALBUFF   DS    CL(SZR)             BUFFER WORK AREA
ALWALEN  EQU   *-ALWA              LENGTH OF WORK AREA
         EJECT ,
* NUMBER WORK AREA
         SPACE
NUMWORK  DSECT
NUMFLG   DS    C                   FLAG TO INDICATE FIXIT
NUMMSG   DS    C                   FLAG TO INDICATE NOT 1ST FIXIT
NUMFPOS  DS    A                   START RANGE & START LINE NO.
NUMLPOS  DS    A                   END OF RANGE
NUMDISP  DS    A                   1ST LINE DISPLACEMENT
NUMDRPT  DS    A                   1ST LINE DIRECTORY POINTER
NUMHIGH  DS    A                   FOR HIGH POSITION CHECKING
NUMWORKL EQU   *-NUMWORK           LENGTH OF DSECT
         EJECT
         COMMON
         SPACE
         END
./ ADD NAME=PGOS,SSI=00000002
PGOS     TITLE 'GO ROUTINES FOR WYLTSO'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
         GBLC    &DCEC             SWITCH FOR DCEC MODS         JEP00X
         GBLC  &USPS                                            USPS01
&USPS    SETC  '1'                                              USPS01
&DCEC    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE DCEC MODJEP00X
         AIF   ('&DCEC' NE '1').LBL01                           JEP00X
*                                                               JEP005
* MOD JEP005                                                    JEP005
*  ADDED CODE TO RECOGNIZE UPPER & LOWER OPERANDS ON            JEP005
*  THE CHANGE COMMAND. DENOTED JEP005 IN COL. 66/71.            JEP005
*             MODULES AFFECTED:                                 JEP005
*                       PDOS, PGOS, PUTB, AND MACRO CPTSO       JEP005
*                                                               JEP005
*                                                               JEP001
* MOD JEP001                                                    JEP001
*  IMPLEMENTED DCEC NAMING CONVENTIONS. DENOTED JEP001 IN 66/71 JEP001
*  MODULES AFFECTED: PDIO,PEDS,PUTB,INIT MACRO(DSNWA,CVTSO)     JEP001
*                                                               JEP001
*                                                               JEP001
*                                                               JEP017
* MOD JEP017                                                    JEP017
*  DELETED THE DEFAULT RANGE OF 'ALL' IN CHANGE COMMAND.        JEP017
*  MODULES AFFECTED: PGOS      DENOTED JEP017 IN 66/71.         JEP017
*                                                               JEP017
*                                                               JEP017
.LBL01   DS    0H                                               JEP00X
PGOS     CSECT
         SPACE
         WIDENT 001
         SPACE
         USING CPAREA,R12
         SPACE
         XTRNS ,
         TITLE 'GOCHNG ROUTINE'
* GOCHNG IS THE PRIMARY ENTRY POINT FOR THE CHANGE COMMAND.  THE SOURCE
*      AND TARGET FIELDS ARE SET UP, RANGE IS DEFINED AND CONTROL GIVEN
*      TO DESPOT WHICH CALLS DOCHNG WITH ALL LINES IN THE RANGE.
         SPACE
GOCHNG   GENTER ,
         AIF   ('&DCEC' NE '1').LBL02                           JEP00X
         NI    CPLFLG3,255-CPFCHALL  TURN OFF CHG ALL FLAG IF ONJEP005
.LBL02   DS    0H                                               JEP00X
         SR    R6,R6                    ZERO
         ST    R6,CPCHLN1               SET REPLACED LEN DEFAULT
         XC    CPFCOL(4),CPFCOL    CLEAR FILL AREA
         OI    CPLFLG1,CPFALL          ALLOW DEFAULT ALL
         SCAN  APRT                     SCAN 1ST STRING OR POSIT
         B     CVABSENT                 NEED SOMETHING
         SPACE
ASPOT    CLI   0(R1),C''''              SINGLE QUOTE?
         BE    AASPOT                   YES
         CLI   0(R1),C'"'               DOUBLE QUOTE?
         BNE   CVNVALID                 NG
AASPOT   CVCALL DQSCAN                  DEQUOTE QUOTE STRING
         LTR   R2,R0                    NEED SOME
         BNP   CVNVALID                 REPLACE WHAT?
         ST    R8,CPCHAD1               SAVE STRING ADDR
         BCTR  R2,0                     STRING LENGTH MINUS ONE
         ST    R2,CPCHLN1               SAVE STRING LEN (MINUS 1)
         EX    R2,MOVSTRNG              MOVE IT
         LA    R2,4(R2)                 MULTIPLE OF 4 GTR/EQU STRNG LEN
         N     R2,=F'-4'                TO RESET R8 & R13
         AR    R8,R2                    NEW R8
         LR    R13,R8                   NEW R13 (SAME AS R8 HERE)
         MVI   CPCHMOD,0                SET DEFAULT MOD
         LA    R3,BPRT             POINT TO SCAN TABLE
         BAL   R6,TELLSCAN         GO DO SCAN
         B     CVABSENT                 NEED SOMETHING
         EJECT
*  COME HERE IF COMMAND IS CH 'STRING1' / WHERE '/'
* / -- SHOULD BE FOLLOWED BY /Z
         SPACE
BSSZ     SCAN  BSLASH2Z            //Z -> BSSZ1
BSSZ1    BAL   R5,SSZ              PROCESS Z OF //Z
         B     BPOS1
         SPACE
BPOS     BAL   R5,DOPOSCH               HANDLE POSITIONAL ATTRIBUTE
BPOS1    L     R14,CPCHCLN         GET CURRENT COMPARE COUNT
         LTR   R14,R14             TEST VALUE
         BNP   BSTLIM              NO IMPROVEMENT IF NOT POSITIV
         S     R14,CPCHLN1         SUB LENGTH OF STRING
         BNP   CVNVALID            STRING TOO LONG IF LESS
         ST    R14,CPCHCLN         SAVE NEW COMPARE COUNT
BSTLIM   OI    CPLFLG2,CPFCHLIM         SET REPLACE STRING LIMIT
         LA    R3,BBPRT            POINT TO SCAN TABLE
         BAL   R6,TELLSCAN         GO DO SCAN
         B     CVABSENT                 NEED SOMETHING
         SPACE
BBSPOT   CLI   0(R1),C'('               IS LEAD PAREN THERE
         BNE   RESCAN              NO, RESET SCAN & SCAN ON
         BCTR  R0,0                     REDUCE COUNT FOR LEFT PAREN
         BCTR  R0,0                     REDUCE COUNT FOR RIGHT PAREN
         LA    R5,1(R1)                 POINT AT FIRST INTERIOR CHAR
         LTR   R2,R0                    SOMETHING?
         BNP   CVNVALID                 NO
         SCANSAVE ,                SAVE SCAN POINTERS
         SCINIT (5),(2)                 INIT MOD SCAN
         SCAN  MODPRT                   SCAN
         B     CVABSENT            ERRROR IF NOTHING
         SPACE
MODRTNR  STC   R15,CPCHMOD              STORE MODIFIER
         SCAN  ,                   SEE IF ANYTHING ELSE TYPED
         BP    CVNVALID            YES, IT IS INVALID
RESCAN   SCANRSTR ,                RESTORE SCAN POINTERS
SCNTO    SCAN  CCPRT                    SCAN FOR "TO"
         B     READYGO             GO SEE IF O.K.
         EJECT
* PROCESS CHANGE USING
         SPACE
USPOT    TM    CPLFLG3,CPFCHTO+CPFCHUS  WAS TO/USING GIVEN?
         BNZ   CVNVALID            BRANCH YES TO ERROR
         OI    CPLFLG3,CPFCHUS     SET CHANGE USING
         LR    R2,R13              SAVE WORK SPACE ADDR
         LA    R13,C24(,R13)       GET WORK SPACE
         ST    R2,CPCHAD2          SAVE ADDR OF SPACE
         SR    R14,R14             SET COLUMN POINTERS
         SR    R15,R15
         STM   R14,R15,C8(R2)
         LA    R1,UPRTLN1          SET SCAN TABLE FOR LINE 1
         BAL   R6,USLN             GO SCAN FOR LINE 1
         LR    R15,R0
         STM   R15,R0,0(R2)        SAVE START LINE NO.
         STM   R15,R0,16(R2)       ALSO SAVE FOR RANGE RESTART
         LA    R3,UPRTSL           SCAN FOR SLASH
         BAL   R6,TELLSCAN
         B     READYGO
         SPACE
USALL    SR    R14,R14             FIRST
         L     R15,CPHIPS          LAST
         STM   R14,R15,0(R2)       SET ALL
         STM   R14,R15,16(R2)      ALSO SET FOR RANGE RESTART
         B     USCOL
         SPACE
USSLASH  LA    R1,UPRTLN2          SCAN FOR LINE NO.
         BAL   R6,USLN             GO SCAN FOR LINE NO.
         C     R0,0(,R2)           TOO LOW
         BL    CVNVALID            BRANCH YES
         ST    R0,C4(,R2)          SAVE ENDING NO.
         ST    R0,C20(,R2)         ALSO SAVE FOR RANGE RESTART
USCOL    LA    R3,UPRTCOL1         SET SCAN TABLE FOR COLUMN
         BAL   R6,TELLSCAN         SCAN FOR IT
         B     READYGO
         SPACE
USCOL1   BCTR  R15,0               DECREASE COUNT
         ST    R15,C12(,R2)        SAVE STARTING COL.
         LA    R3,UPRTCOL2         SET SCAN TABLE FOR 2ND COL
         BAL   R6,TELLSCAN         GO SCAN FOR IT
         B     READYGO
         SPACE
USCOL2   S     R15,C12(,R2)        COMPUTE LENGTH
         BNP   CVNVALID
         ST    R15,C8(,R2)
         B     SCNTO               GO LOOK FOR OTHER PARMS
         SPACE
USLN     LA    R6,0(,R6)           MAKE ROUTINE ADDR POSITIVE
         SCAN  (1)                 SCAN FOR LINE NUMBER
         B     CVABSENT            MISSING IF NOTHING FOUND
         EJECT
CSPOT    TM    CPLFLG3,CPFCHTO+CPFCHUS
         BNZ   CVNVALID
         OI    CPLFLG3,CPFCHTO     SET "TO" FLAG
         SCAN  CCCPRT              SCAN FOR TO VALUE
         B     CVABSENT            MISSING IF NOTHING
         SPACE
PNMSPOT  LA    R3,C'+'             SET SIGN
         B     NNMSPOTX
         SPACE
NNMSPOT  LA    R3,C'-'             SET SIGN
NNMSPOTX STC   R3,12+10(,R8)       SAVE SIGN
         ST    R8,CPCHAD2          SAVE STRING ADDR
         LR    R2,R0               LENGTH
         EX    R2,MVCHSTR          MOVE STRING
         B     NMSPOTXX
         SPACE
CSPOTX   CLI   0(R1),C''''         SINGLE QUOTE?
         BE    CCSPOT              YES
         CLI   0(R1),C'"'          DOUBLE QUOTE?
         BNE   CVNVALID            NO, IT IS AN ERROR
CCSPOT   CVCALL DQSCAN             DEQUOTE QUOTE STRING
         OI    CPLFLG3,CPFCHNMI    SET EXPLICIT INCR. REQUIRED
NMSPOT   LTR   R2,R0               NEED SOME OR DEL
         BNP   CHDELL              ONLY DELETE
         ST    R8,CPCHAD2          SAVE STRING ADDR
         BCTR  R2,0                STRING LENGTH - 1
         ST    R2,CPCHLN2          SAVE LENGTH
         EX    R2,MOVCHSTR         MOVE IT
NMSPOTXX LA    R2,22+4(,R2)        MULTIPLE OF 4 >= STRING LEN
         N     R2,=F'-4'             TO RESET R8&R13
         AR    R13,R2              NEW R13
         LA    R3,DDPRT            SCAN FOR INCREMENT
         BAL   R6,TELLSCAN
NOINCR   SCANRSTR ,                RESTORE SCAN
         TM    CPLFLG3,CPFCHNMI    DEFAULT INCR O.K.
         BO    SCNTO               BRANCH NO
         SPACE
*  HANDLE INCREMENTS
         SR    R15,R15             SET DEFAULT INCR
         BCTR  R15,0
NEGDO    LCR   R15,R15             MAKE NUMBER NEGATIVE
PLUSDO   ST    R15,4(,R8)          SAVE INCR.
         MVC   12(10,R8),=X'40202020202020202020' SET UP PATTERN
         L     R1,CPCHLN2
         LA    R0,1(,R1)
         LA    R1,12+10(,R8)       SET UP TO SCAN STRING
         SR    R2,R2               DIGIT COUNT
         SR    R4,R4               NUMBER
         SR    R14,R14             SET PLUS
         ST    R14,8(,R8)          CLEAR SIGN CHAR.
         LA    R5,X'20'            PATTERN CHAR.
         LA    R6,12+10-1(,R8)     PREV PATTERN CHAR.
         LR    R3,R6
NUMLOOP  CLI   0(R1),C' '          A BLANK?
         BNE   NOTBLNK             NO, CHECK OTHERS
         C     R5,=XL4'21'         SIGN. STARTED YET?
         BNE   ISNUM               NO, LEAVE IT AS A PAD
         B     NEXTNUM             YES, BLNK IS JUST A CHAR
NOTBLNK  CLI   0(R1),C'0'          0 OR GREATER?
         BL    NOTNUM              NOP
         CLI   0(R1),C'9'          9 OR LESS?
         BH    NOTNUM              NOPE
SETSIGN  LA    R5,X'21'            START SIGNIFICANCE
ISNUM    IC    R15,0(,R1)          DIGIT
         N     R15,=XL4'F'         ISOLATE VALUE
ISNUMX   C     R4,=F'100000000'    TOO MANY DIGITS?
         BNL   ILLPAT              BR IF SO
         MH    R4,=H'10'           PUT IN NEW DIGIT
         AR    R4,R15
         STC   R5,0(,R6)           PLANT PATTERN CHAR.
         STC   R5,0(,R1)
         LR    R3,R6
         LR    R6,R1
         LA    R2,1(,R2)
NEXTNUM  LA    R1,1(,R1)           NEXT CHAR.
         BCT   R0,NUMLOOP
         LTR   R14,R14             NEGATIVE?
         BZ    *+6                 BR IF NOT
         LCR   R4,R4
         ST    R4,0(,R8)           SAVE NUMBER
         MVI   0(R6),X'21'         INSURE ONE DIGIT
         MVI   0(R3),X'21'
         LTR   R0,R2               ANY DIGITS?
         BZ    SCNTO               BR IF NOT
         LA    R1,12(,R8)          1ST PATTERN DIGIT
PATSET   LA    R1,1(,R1)           POINT AT PATTERN CHAR.
         CLI   0(R1),X'20'         PATTERN DIGIT?
         BE    ISPAT               BR IF SO
         CLI   0(R1),X'21'
         BNE   PATSET
ISPAT    MVI   0(R1),C' '          PLANT IT OUT
         BCT   R0,PATSET           DO NEXT
         LA    R6,12+1(,R8)        SET SIG. START
SIGTEST  LA    R1,1(,R1)
         CLI   0(R1),X'21'
         BNE   SIGTEST
         CLI   0(R6),X'21'         WAS PREVIOUS CHAR SIG.
         BE    ISSIG               BR IF SO
         LR    R6,R1               SAVE THIS CHAR.
         B     SIGTEST
         SPACE
ISSIG    SLR   R1,R8               COMPUTE DISPLACEMENT
         LA    R1,0(,R1)           BE SURE
         O     R1,8(,R8)           ADD SIGN CHAR.
         ST    R1,8(,R8)           SAVE SIG. START
         OI    CPLFLG3,CPFCHNM     SET CHANGE BY NUMBER FLAG
         B     SCNTO
         SPACE
         SPACE
NOTNUM   CLI   0(R1),C'-'          MINUS?
         BE    ISMINUS             BR IF SO
         CLI   0(R1),C'+'          PLUS?
         BE    ISPLUS              BR IF SO
         CLI   0(R1),C'$'          DOLLAR SIGN?
         BE    ISPLUS              BR YES
         CLI   0(R1),C'#'          NUMBER SIGN?
         BNE   NEXTNUM             BR IF NOT
ISPLUS   MVC   8(1,R8),0(R1)       SAVE SIGN CHAR.
         SR    R15,R15
         B     ISNUMX
         SPACE
ISMINUS  SR    R15,R15             TREAT AS ZERO
         BAL   R14,ISNUMX          SET SWITCH AND GO
ILLPAT   TSEG  'TOO MANY DIGITS IN PATTERN'
         B     CVQTYPE
         EJECT
         AIF   ('&DCEC' NE '1').LBL03                           JEP00X
UPSPOT   OI    CPLFLG4,CPFCHUP     SET TRANS TO UPPERCASE FLG   JEP005
         B     SCNTO              GO CHK FURTHER OPERANDS       JEP005
LOSPOT   OI    CPLFLG4,CPFCHLO     SET TRANS TO LOWERCASE FLG   JEP005
         OI    CPGFLG,CPFUPLW      SET UPLOW FLAG ON            JEP005
         B     SCNTO              GO CHK FURTHER OPERANDS       JEP005
CHALLSPT OI    CPLFLG3,CPFCHALL    TURN ON CHG WHOLE LINE FLAG  JEP005
         OI    CPGFLG,CPFUPLW      SET UPLOW FLAG ON            JEP005
         LA    R3,BPRT             ON TO THE SECOND PART        JEP005
         BAL   R6,TELLSCAN         GO SAVE SCAN POINTERS        JEP005
         B     CVABSENT            NEEDS SOMETHING ELSE         JEP005
.LBL03   DS    0H                                               JEP00X
DSPOT    OI    CPLFLG3,CPFCHIN     SET "IN" FLAG
         CVCALL DETRNG             GET RANGE DEFINED
         B     SCNTO               CONTINUE
         SPACE
READYGO  TM    CPLFLG3,CPFCHIN     RANGE GIVEN?
         BNZ   READYGO1            BRANCH YES
         CVCALL DETRNG             GO SET UP DEFAULT RANGE
READYGO1 TM    CPLFLG3,CPFCHTO+CPFCHUS TO OR USING GIVEN
         BZ    CVABSENT            BR IF NOT
         NI    CPLFLG3,255-CPFCHNMI  TURN OFF INCR FLAG
         OI    CPLFLG5,CPFNCUR     SET NO CURRENT LINE UPDATE
         MVI   CPCURRL,X'F0'       SET CURRENT LINE INVALID
         L     R15,VDOCHNG             LOAD DESPOT ADDR
         CVCALL DESPOT                 GO TO DESPOT
         XC    CPFCOL(4),CPFCOL    CLEAR FILL AREA
         TM    CPSTAD,CPFSOME      SOMETHING IN RANGE?
         BZ    CVGETCOM            BR IF NOT
         TM    CPLFLG2,CPFLNCHN        AT LEAST 1 LINE CHANGED
         BO    CVGETCOM                YES GET NEXT COMMAND
         TM    CPGFLG2,CPFEXEC+CPFEXTER IS IT EXEC MODE & TERSE
         BO    CVGETCOM            BR YES, SKIP MESSAGE
         TSEG  'VOID CHANGE'           TELL USER
         B     CVGETCOM                GET NEXT COMMAND
         SPACE
CHDELL   OI    CPLFLG2,CPFCHDEL         SET VOID REPLACE STRING
         B     SCNTO                    LOOK FOR EXPLICIT RANGE
         SPACE
LSPOT    OI    CPLFLG3,CPFCHLN     SET "LINE" OPTION
         BR    R14
         SPACE
CHREPT   OI    CPLFLG3,CPFCHREP    SET "REPEAT" OPTION
         BR    R14                 RETURN
         EJECT
* //Z -> 1/Z-1/Z
         SPACE
SLASH1   SCAN  SLASH1Z             SCAN FOR /Z
SLASH2Z  BAL   R5,SSZ              CHECK OUT Z
         B     ORPOSNAL
         SPACE
SSZ      SR    R1,R1               CHCST=0, SINCE X=1
         ST    R1,CPCHCST
         BCTR  R15,0
         ST    R15,CPCHCLN         CLN = 1/Z-1
         ST    R15,CPFCOL          SAVE FILL COL (-1)
         OI    CPFILLFG,CPFILL
         BR    R5
         SPACE
TRYPOST  BAL   R5,DOPOSCH               HANDLE POSITIONAL ATTRIBUTE
ORPOSNAL OI    CPLFLG2,CPFCHPOS         SET POSITIONAL CHANGE
         B     SCNTO                    NEED "TO"
         SPACE
DOPOSCH  BCTR  R15,0                    REDUCE TO NO CHARS B/4 INSERT
         CH    R15,=Y(MXPRTSZ)          STILL 133 CHARS?
         BNL   CVNVALID                 YES
         ST    R15,CPCHCST              STORE
         SCANSAVE ,                SAVE SCAN POINTERS
         SCAN  FPRT            LOOK FOR SLASH
ONESL    SCAN  FPRNUM
         SPACE 3
* X
         SPACE
FRESTOR  SCANRSTR ,                RESTORE SCAN POINTERS
         SR    R1,R1                    LEN OF DELETE STRING
         ST    R1,CPCHCLN               STORE
         BR    R5                       TO CALLER
         SPACE 3
* X/Y
         SPACE
FSLASH   LR    R2,R15              SAVE Y FOR COMPARE TO Z
         S     R15,CPCHCST         NO. DELETE CHARACTERS
         BNP   CVNVALID                 CHANGE WHAT?
         ST    R15,CPCHCLN              SAVE DELETE COUNT
         SCANSAVE ,
         SCAN  FPRTZ               X/Y -> FBACK, X/Y/Z -> XYZ
FBACK    SCANRSTR ,
         BR    R5                       TO CALLER
         SPACE 3
* X//Z -> CST=X-1,CLN=0,CPFCOL=Z-1
         SPACE
XSLASHZ  BCTR  R15,0
         C     R15,CPCHCST         Z > X ?
         BNH   CVNVALID            NO. ERROR. BR.
         ST    R15,CPFCOL
         SR    R1,R1
         ST    R1,CPCHCLN
         OI    CPFILLFG,CPFILL     SET FILL FLAG
         BR    R5
         SPACE 3
* X/Y/Z
         SPACE
XYZ      CR    R15,R2              Z > Y ?
         BNH   CVNVALID
         BCTR  R15,0
         ST    R15,CPFCOL
         OI    CPFILLFG,CPFILL
         BR    R5
         SPACE
TELLSCAN SCANSAVE ,                SAVE CURRENT SCAN POINTERS
         SCAN  (R3)                SCAN FOR OPTIONS
         BR    R6                  RETURN TO CALLER
         EJECT
* REMOTE MOVE INSTRUCTIONS FOR CHANGE
         SPACE
MOVSTRNG MVC   0(0,R8),0(R1)
MOVCHSTR MVC   12+10(0,R8),0(R1)
MVCHSTR  MVC   12+10+1(0,R8),0(R1)
         SPACE
         DS    0F
VDOCHNG  DC    AL1(DESRTRN+LOCATRTN+DESMATCH+UNPRST),VL3(DOCHNG)
         SPACE 3
APRT     SCKW  ,TRYPOST,PI,133
         SCKW  /,SLASH1
         AIF   ('&DCEC' NE '1').LBL04                           JEP00X
         SCKW  ALL,CHALLSPT,A                                   JEP005
.LBL04   DS    0C                                               JEP00X
         SCKW  ,ASPOT
         SPACE
SLASH1Z  SCKW  /,SLASH2Z,(P,PI),133
         SCKW  ,INVALID
         SPACE
BPRT     SCKW  ,BPOS,PI,133
         SCKW  /,BSSZ
BBPRT    SCKW  ,BBSPOT
         SPACE
BSLASH2Z SCKW  /,BSSZ1,(P,PI),133
         SCKW  ,INVALID
         SPACE
CCPRT    SCKW  TO,CSPOT
         SCKW  USING,USPOT,A
         SCKW  LINE,LSPOT,A
         SCKW  REPEAT,CHREPT,A
         SCKW  IN,DSPOT
         SCKW  ,LTNPRT,PUSH
         SCKW  ,INVALID
         SPACE
UPRTLN1  SCKW  ALL,USALL
UPRTLN2  SCKW  ,LNENOPRT,PUSH
         SCKW  ,INVALID
         SPACE
UPRTSL   SCKW  /,USSLASH
UPRTCOL1 SCKW  COLUMNS,USCOL1,(P,A,PI),133
         SCKW  COLS,USCOL1,(P,PI),133
         SCKW  ,RESCAN
         SPACE
UPRTCOL2 SCKW  /,USCOL2,(P,PI),133
         SCKW  ,RESCAN
         SPACE
CCCPRT   SCKW  +,PNMSPOT,(P,I)
         SCKW  -,NNMSPOT,(P,I)
         AIF   ('&DCEC' NE '1').LBL05                           JEP00X
         SCKW  UPPER,UPSPOT,A                                   JEP005
         SCKW  LOWER,LOSPOT,A                                   JEP005
.LBL05   DS    0C                                               JEP00X
         SCKW  ,NMSPOT,I
         SCKW  ,CSPOTX
         SPACE
DDPRT    SCKW  +,PLUSDO,(P,I)
         SCKW  -,NEGDO,(P,I)
         SCKW  ,PLUSDO,I
         SCKW  ,NOINCR
         SPACE
FPRT     SCKW  /,ONESL
         SCKW  ,FRESTOR
         SPACE
FPRNUM   SCKW  ,FSLASH,PI,133
         SCKW  /,XSLASHZ,(P,PI),133
         SCKW  ,INVALID
         SPACE
MODPRT   SCKW  ,MODRTNR,PI,133
         SCKW  ,INVALID
         SPACE
FPRTZ    SCKW  /,XYZ,(P,PI),133
         SCKW  ,FBACK
         SPACE
         LTORG
         TITLE 'GODEL ROUTINE'
* GODEL IS PRIMARY DELETE ENTRY - AFTER DEFINING RANGE,
*      WORK ADDR AND CONTROL ARE PASSED TO DESPOT.
         SPACE
GODEL    GENTER ,
         CVCALL DETRNG                  DEFINE RANGE
         MVI   CPWORK2,X'FF'           SET FOR 1ST LINE
         OI    CPLFLG5,CPFNLST     SET NOLIST AS DEFAULT
         SCAN  DELPRT                  SCAN  REST OF LINE
         TM    CPLFLG5,CPFFOPT     ANY FORMAT OPTION GIVEN
         BE    BOOMDEL             BRANCH NO
         NI    CPLFLG5,255-CPFNLST YES, MAKE SURE LIST IN EFFECT
         EJECT
BOOMDEL  XENTER 2,8,*
         TM    CPLFLG5,CPFNLST     NOLIST OPTION
         BE    NOTEXXP             BRANCH NO
         TM    CPSTAD,CPFEXPRG          EXPLICIT RANGE?
         BZ    NOTEXXP                  NO
         TM    CPSTAD,CPFDSJNT          DISJOINT RANGE?
         BO    ALLSOKK                  YES .. ACCEPT
         MVC   CPWK1(4),=D'0'           ZERO COUNT CELL
         L     R15,ADLKWNTR             ADDR COUNT RTN
         CVCALL DESPOT                  TO DESPOT
         L     R2,CPWK1                 COUNT
         LTR   R2,R2                    ZERO?
         BZ    CVGETCOM                 YES
         CLC   CPWK2+1(3),CPWK4+1       ONE PAGE?
         BNE   FASTDEL                  NO
ALLSOKK  L     R15,VDODELA              FLAGGED ADDR RTN FOR EXP RNG
DESCALL  CVCALL DESPOT                  GO DELETE
         TM    CPSYSFLG,CPFTUSXC        FROM ABORT?
         BO    DELEXIT                  YES
DFINISH  B     CVGETCOM                 NEW COMMAND
         SPACE
NOTEXXP  L     R15,VDODELE              FLAGGED ADDR RTN FOR ASSC RNG
         B     DESCALL                  GO TO DESPOT
         EJECT
FASTDEL  LH    R3,CPLNCT                LINE COUNT
         SR    R3,R2                    NEW LINE COUNT
         STH   R3,CPLNCT                NEW LINE COUNT
         SR    R2,R2                    ZERO
         TM    CPWK4,CPFPGND            LAST LINE ON PAGE?
         BZ    NTLLP                    NO
         L     R2,CPWK4                 PAGE PTR
         LA    R2,6(,R2)                PT AT NEXT
         B     DFSTP                    SKIP
         SPACE
NTLLP    LA    R1,CPWK5                 PTR AT LAST LINE NO.
         CVCALL LOCATE                  LOCATE IT
         LH    R6,0(,R11)               COUNT
         LH    R5,CPWK6                 COUNT TO LAST DELETE LINE
         IC    R2,4(,R15)               COUNT LAST DELETE LINE
         LA    R5,5(R2,R5)              COUNT PAST LAST DELETE LINE
         SR    R6,R5                    COUNT TO MOVE
         LA    R5,2(,R6)                NEW COUNT ON PAGE
         STH   R5,0(,R11)               STORE
         LA    R1,2(,R11)               TARGET
         LA    R15,5(R2,R15)            SOURCE
         BAL   R14,MOVITEM              MOVE IT UP
         L     R2,CPWK4                 PTR FIRST DIREC ENTRY TO MOVE
         MVC   0(4,R2),2(R11)           RESET 1ST LINE NO. IN DIREC
         PMARK 11                       MARK PAGE
DFSTP    L     R3,CPWK2                 POSSIBLE TARGET FOR DIREC MOVE
         TM    CPWK2,CPFPGLW            1ST LINE ON PAGE?
         BO    DIRFX                    DELETE WHOLE PAGE
         LA    R1,CPWK3                 LOCATE 1ST DELETE LINE
         CVCALL LOCATE                  LOCATE IT
         MVC   0(2,R11),CPWK6+2         SET NEW COUNT FOR PAGE
         PMARK 11                       MARK PAGE
         LA    R3,6(,R3)                PROPER TARGET FOR DIREC MOVE
DIRFX    LA    R5,0(,R3)                ZERO 1ST BYTE (INTO R5)
         LA    R6,0(,R2)                ZERO 1ST BYTE (INTO R6)
         CR    R6,R5                    DIREC SET?
         BNH   DONEDEL                  YES
         LH    R4,CPAGCT                PAGE COUNT
         LR    R2,R4                    SAVE OLD PAGE COUNT
JUNKER   LH    R0,4(,R5)                PAGE NO. TO JUNK
         PJUNK (0)                      JUNK PAGE
         LA    R5,6(,R5)                POINT AT NEXT
         BCTR  R4,0                     REDUCE PAGE COUNT
         CR    R6,R5                    MORE?
         BH    JUNKER                   YES
         STH   R4,CPAGCT                RESET PAGE COUNT
         LTR   R4,R4                    CLEAR?
         BP    NCLRDEL                  NO
         ST    R4,CPDREC                SET 1ST LINE NO. ZERO
         ST    R4,CPHIPS                SET HIGHEST LINE NO. ZERO
         MVI   CPLSTCOL,FNEGBT         SET FOR FIRST COLLECT
         B     DONEDEL
         SPACE
NCLRDEL  TM    CPWK4,CPFNDDS            LAST LINE OF WDS?
         BZ    DMOVDIR                  NO
         LA    R1,CPWK5                 PTR AT LAST LINE NO.
         CVCALL LOCATE                  LOCATE IT
         MVC   CPHIPS(4),CPREVLN        SET LAST LINE NO.
         B     DONEDEL                  READY TO GO
         SPACE
DMOVDIR  LA    R1,0(,R3)                TARGET
         LR    R15,R6                   SOURCE
         MH    R2,=Y(6)                 TOTAL DIREC DISPLACEMENT
         LA    R6,CPDREC(R2)            PTR PAST CPDREC
         SR    R6,R15                   COUNT
         BAL   R14,MOVITEM              MOVE DIREC ITEMS
DONEDEL  OI    CPGFLG,CPFDIRCH     SET DIRECTORY CHANGED
         TM    CPSYSFLG,CPFTUSXC        FROM ABORT?
         BO    DELEXIT                  YES
         MVC   CPWORK2(4),CPWK3        SET 1ST LINE NO.
         MVC   CPWORK1(4),CPWK5        SET LAST LINE NO.
         B     DFINISH                  SCRAM
         SPACE
DELEXIT  XEXIT 2,8                      RETURN TO ABORT
         EJECT
MOVITEM  LA    R5,256                   SET COMPARAND-INCREMENT
CHKMVC   CR    R6,R5                    A 256 BYTE MVC?
         BNH   FNNMVC                   NO
         MVC   0(256,R1),0(R15)         MOVE 256 BYTES
         AR    R1,R5                    NEW TARGET ADDR
         AR    R15,R5                   NEW SOURCE ADDR
         SR    R6,R5                    LEFT-OVER COUNT
         B     CHKMVC                   ANOTHER FULL MVC?
         SPACE
FNNMVC   BCTR  R6,0                     REDUCE FOR EX OF MVC
         EX    R6,LSSMVC                MVC   0(0,R1),0(R15)
         BR    R14                      RETURN TO CALLER
         SPACE
LSSMVC   MVC   0(0,R1),0(R15)
         TITLE 'GOMOVE AND GOCOPY ROUTINES'
* GOMOVE IS THE PRIMARY ENTRY FOR MOVE
* GOCOPY IS THE PRIMARY ENTRY FOR COPY
         SPACE
GOCOPY   DENTER DSSIZ,,,NO
         OI    CPLFLG1,CPFCPY+CPFALL   SET COPY & DEFAULT ALL
GOMOVE   GENTER ,
         OI    CPLFLG5,CPFNLST     SET NOLIST AS DEFAULT
         OI    CPLFLG4,CPFSTSPL+CPFSTINS SET SO STOWIT WILL ONLY
*                     INSERT LINES AND WILL SPLIT PAGE AT LINENO
         CVCALL SCNEXFR            SCAN TO SEE IF EXEC OR FROM
         OI    CPSYSFLG,CPFNTYPD        SET NOT TYPED COMMAND
         CVCALL DETRNG                   DEFINE RANGE
         L     R0,CPHIPS                HIGHEST LINE NO. YET
         L     R1,CPGLDL                GLOBAL DELTA
         CVCALL LOWMULT             GET MULTIPLE
         CVCALL ADDER                    ADD
         STM   R0,R1,CPWKPS             SET FOR "END" & NO "BY"
         SR    R5,R5               SET TO SHOW NO DELTA YET
         SR    R6,R6               SET TO SHOW NO TO YES
SCANTO   SCAN  TOPRT                    SCAN FOR "TO"
         TM    CPLFLG5,CPFFOPT     ANY FORMAT OPTION GIVEN
         BE    *+8                 BRANCH NO
         NI    CPLFLG5,255-CPFNLST YES, MAKE SURE LIST IN EFFECT
         TM    CPLFLG1,CPFCPY          DEFAULT "TO END" OKAY
         BO    READY                   YES, IT'S COPY
         LTR   R6,R6               WAS TO SPECIFIED
         BNZ   READY               YES, IT'S OKAY
         B     CVABSENT                 NEED SOMETHING
         SPACE
HAVTO    TM    CPLFLG2,CPFCOMB     COMBINE & TO INVALID
         BO    COPCOMTO            BRANCH IF COMBINE GIVEN
         LA    R6,HAVLNENO         SET ADDRESS FOR LINE NUMBER
         IC    R4,CPLFLG5          SAVE CPLFLG5
         NI    CPLFLG5,255-CPFSELOC CLEAR BITS SO ACTIVE USED
         SCAN  LINPRT              GO GET TO LINE
         B     CVABSENT            MISSING IF NOTHING FOUND
         SPACE
HAVLNENO STC   R4,CPLFLG5          RESTORE CPLFLG5
         STM   R0,R1,CPWKPS             SET LINE NO. & DEFAULT DELTA
         B     SCANTO
         SPACE
COPYEXE  TM    CPLFLG1,CPFCPY      IS IT COPY COMMAND
         BE    CVNVALID            NO, EXECUTE IS INVALID
         TM    CPLFLG5,CPFSELOC    EXTERNAL OPTION GIVEN
         BO    COPEXEFR            YES, EXECUTE CAN'T BE USED
         BR    R14
         SPACE
HAVBY    LTR   R5,R15                   ZERO NG
         BNP   CVNVALID                 DELTA ERROR
         TM    CPLFLG2,CPFCOMB     COMBINE & BY INVALID
         BO    COPCOMBY            BRANCH IF COMBINE GIVEN
         BR    R14                 SCAN ON
         SPACE
HAVCOMB  TM    CPLFLG1,CPFCPY      IS IT COPY COMMAND
         BZ    CVNVALID            NO, COMBINE OPTION IS INVALID
         LTR   R6,R6               HAS TO BEEN GIVEN
         BNZ   COPCOMTO            YES, COMBINE IS AN ERROR
         LTR   R5,R5               HAS BY BEEN GIVEN
         BNZ   COPCOMBY            YES, COMBINE IS AN ERROR
         OI    CPLFLG2,CPFCOMB+CPFMERG COMBINE OPTION + MERGE
         BR    R14                 GO SCAN ON
         EJECT
READY    LTR   R5,R5               BY SPECIFIED
         BZ    READY1              BRANCH NO
         ST    R5,CPWKDL           RESET BY
READY1   TM    CPWKPS,FNEGBT            ILLEGAL VALUE?
         BO    BADLINE                  YES
         LA    R1,CPWKPS                POINT AT 1ST LINE NO.
         CVCALL LOCATE                   LOCATE IT
         MVC   CPNDLN(4),=F'100000000' SET COMPARAND TOO HIGH
         TM    CPDRPT,CPFNTYT+CPFHIGH   NOTHING YET OR AFTER LAST?
         BNZ   NXTOGT                   YES
         TM    CPDRPT,CPFMTCH           EXACT MATCH?
         BO    BADLINEL                 COPY-MOVE WON'T REPLACE
         MVC   CPNDLN(4),CPLCNO         SET FIRST ILLEGAL LINE NO.
NXTOGT   MVC   CPBGLN(4),CPWKPS         SAVE START LINE NO.
         SR    R1,R1                    ZERO R1 FOR LATER
         OI    CPLFLG5,CPFNCUR     SET NOT TO UPDATE *
         MVI   CPCURRL,X'F0'       SET CURRENT LINE INVALID
         TM    CPLFLG5,CPFSELOC         EXTERNAL?
         BO    SETUP                    YES - BRANCH AROUND
         L     R15,KWNTAD          SET ADDR FOR DESPOT ACTIVE
         BZ    *+8                 BRANCH IF SELECT ACTIVE
         L     R15,KWNTADX         LOAD ROUTINE FOR EXEC SELECT
         ST    R1,CPWK4                 ZERO COUNT CELL FOR KOWNTER
         CVCALL DESPOT                   GO TO DESPOT
         L     R4,CPWK4            LINE COUNT IN MOVE/COPY
         LTR   R4,R4               ARE THERE ANY LINES
         BZ    CVGETCOM            NO, COMMAND IS DONE
         TM    CPLFLG2,CPFMERG     MERGE OPTION
         BO    GODSPT              DELTA O.K. IF MERGE
         L     R1,CPNDLN           GET FIRST ILLEGAL
         S     R1,CPWKPS           SUBT FIRST LINENO TO GET SIZE
         SR    R0,R0               ZERO FOR DIVIDE
         DR    R0,R4               CALCULATE MAXIMUM DELTA
         C     R1,CPWKDL           IS WORK DELTA LESS OR EQUAL
         BNL   GODSPT              YES, USE WORK DELTA
         BAL   R14,SELDELTA        NO, GO SELECT DELTA
         ST    R1,CPWKDL           SAVE DELTA TO USE
GODSPT   L     R6,WORKAD                ADDR FOR DESPOT (LOCATE)
         TM    CPLFLG5,CPFSELOC    SEE IF SELECT EXECUTE
         BNM   *+8                 NO, USE ACTIVE ROUTINE
         L     R6,WEXKAD           YES, LOAD EXEC SELECT
         TM    CPLFLG5,CPFNLST     NOLIST IN EFFECT
         BO    GODSPT1             YES, BRANCH
         O     R6,=AL1(UNPRST,0,0,0) SET UNPRESS OPTION FOR LIST
         TM    CPLFLG2,CPFCOMB     IS IT COMBINE OPTION
         BO    GODSPT1             YES, CANN'T LIST LINE BEFORE
         LA    R1,CPWKPS           POINT TO INSERT LINE NUMBER
         BAL   R14,LOCLIST         GO LIST LINE BEFORE
         BP    CVQTYPE             STOP IF ATTENTION
GODSPT1  LR    R15,R6              SET R15 FOR DESPOT
GOGO     MVC   CPWORK1(4),=F'-1'       SET NO LINE STORED
         MVC   CPWORK2(4),CPWKPS       START POSITION
         CVCALL DESPOT                   LET DESPOT RUN THE SHOW
         TM    CPLFLG5,CPFSELOC         WAS IT EXTERNAL
         BNO   LSLNMSGN                 NO
         DCLOSE ,                       CLOSE EXTERNAL DATA SET
         NI    CPGFLG,255-CPFOPN        SET EXTERNAL DATA SET CLOSED
         CLC   CPWORK1(4),=F'-1'       NEG=NOTHING
         BE    CVGETCOM                 NIX
         B     LSLNMSGN
         EJECT
SETUP    TM    CPLFLG5,CPFNLST     IS NOLIST IN EFFECT
         BO    SETUP1              YES, IT'S OK
         TSEG  'LIST OPTION IGNORED',,M
         OI    CPLFLG5,CPFNLST     SET NOLIST OPTION
SETUP1   CVCALL VOLCHEK                  MAKE SURE VOL SPECIFIED
         TM    CPLFLG3,CPFSET          TEST IF "SET" NECESSARY
         BZ    CPYOPEN             BR IF NO
         CVCALL SETPFXNS            GO SET PREFIX
CPYOPEN  DOPEN 0,,USE                   OPEN DS
         BZ    GDOPEN                   OPEN OK
         CVCALL NTGDOPN                  GO DO OPEN ERROR MESSAGE
GDOPEN   OI    CPGFLG,CPFOPN            SET EXTERNAL DATA SET OPENED
         ST    R1,CPDRED                BUFFER ADDR(BYTE 1=ZERO)
         XCALL CHKMBRIG            GO CHECK MBR IGNORED
         L     R15,WXRKAD               ADDR FOR DESPOT (LXCATE)
         B     GOGO                     GO TO IT
         SPACE
EXTRN    TM    CPLFLG1,CPFCPY           MUST BE COPY
         BZ    CVNVALID                 IT'S MOVE
         TM    CPLFLG5,CPFSELOC    EXECUTE OPTION GIVEN
         BM    COPEXEFR            YES, FROM CAN'T BE USED TOO
         OI    CPSYSFLG,CPFTUSXC        SET EXTERNAL COPY FLAG
         CVCALL DODSNM                   GET THEM
         B     SCANTO
         EJECT
* USER HAS USED COMBINE AND TO OPTIONS -- GIVE ERROR MSG
         SPACE
COPCOMTO SYSQS 1,0,'COMBINE'       SET FIRST PART OF MSG
         SYSQS 3,2,'TO'            SET LAST PART OF MSG
         B     COPERRMS            GO DO MSG
         SPACE 3
* USER HAS USED COMBINE AND BY OPTIONS -- GIVE ERROR MSG
         SPACE
COPCOMBY SYSQS 1,0,'COMBINE'       SET FIRST PART OF MSG
         SYSQS 3,2,'BY'            SET LAST PART OF MSG
         B     COPERRMS            GO DO MSG
         SPACE 3
* USER HAS USED FROM AND EXECUTE OPTIONS -- GIVE ERROR MSG
         SPACE
COPEXEFR SYSQS 1,0,'FROM'          SET FIRST PART OF MSG
         SYSQS 3,2,'EXECUTE'       SET LAST PART OF MSG
COPERRMS TSEG  (1),(0),B           PUT OUT FIRST PART
         TSEG  'INVALID WITH',,B   PUT OUT COMMON MIDDLE
         TSEG  (3),(2)             PUT OUT LAST PART OF MSG
         B     CVQTYPE             GO ABORT COMMAND
         EJECT
WORK     XENTER 0,8,C40+SZR+12 REGSAVE, BUFFER & FIXUPP WORK
         PFLIP 9,11                     FLIP PAGES
         SR    R0,R0
         IC    R0,4(R15)                GET PREST COUNT
         LR    R3,R0
         LA    R3,4(R3)                 TO MOVE LINE NO. ALSO
         EX    R3,MVCPMVC               MOVE LINE
TRYDEL   L     R2,CPWKPS                WORKING POSITION
         TM    CPLFLG2,CPFMERG+CPFCOMB  MERGE OR COMBINE OPTION
         BNZ   MRGECHK             BRANCH YES
         CL    R2,CPNDLN                LEGAL?
         BNL   FIXUPP                   TOO BIG - TRY TO FIX
WRKMRGE  TM    CPLFLG1,CPFCPY           IS IT MOVE?
         BO    GOTCPY                   NO
         CVCALL DODELE                   DELETE THE LINE
         L     R3,CPWK4                 LINE COUNT REMAINING
         SPACE
* THE FOLLOWING CODE AVOIDS PAGE THRASHING WHEN MOVE
* IS PROCESSING A LARGE RANGE IN THE MIDDLE OF A DATA SET.
* THE PAGE THRASHING WAS CAUSED BY LOCATE AFTER THE FIRST
* LINE OF THE PAGE HAD BEEN DELETED BY DODELE
         SPACE
         TM    CPDRPT,CPFNDDS+CPFFSLN  END OR BEGINNING OF FILE
         BNZ   GOTCPY              YES, THRASHING NO PROBLEM
         TM    CPDRPT,CPFPGLW      JUST DELETED FIRST ON PAGE
         BE    GOTCPY              NO, THRASHING NO PROBLEM
         L     R4,CPDRPT           GET DIRECTORY ENTRY
         MVC   CPDOUB(4),0(R4)     PUT NEW FIRST ON FULL WORD
         L     R6,CPDOUB           PUT NEW FIRST IN R6
         CR    R6,R2               MAKE SURE NO OVERLAY MOVE
         BL    UPDMVE              CAN'T BE IF LESS
         C     R2,CPLCNO           COMPARE TO LINE NUMBER DELETE
         BH    GOTCPY     OVERLAY MOVE IF HIGH, CAN'T FIX
UPDMVE   OI    CPLFLG4,CPFDESET    TELL DESPOT THAT CPNWLN SET
         ST    R6,CPNWLN           SET DESPOT TO USE THE LINE NO
GOTCPY   ST    R2,C40(R8)               SET NEW LINE NO.
         ST    R2,CPCURRL          UPDATE CURRENT LINE POINTER
         SPACE
* R0 HAS ALREADY BEEN SET FOR STOWIT -- FIXUPP RESTORED R0 ALSO
         LA    R1,C40(R8)               PREST LINE ADDR
         CVCALL STOWIT                   LINE INTO PAGE
         BM    BLASTER             ERROR IF TRY TO REPLACE
         TM    CPLFLG5,CPFNLST     LIST OPTION IN EFFECT
         BO    STORTST             BRANCH NO
         LM    R0,R1,4(R8)         RESTORE POINT TO UNPRESS LINE
         MVC   CPLCNO,C40(R8)      SET LINE NUMBER FOR LISTLINE
         CVCALL LISTLINE            FORMAT LINE FOR LISTING
         BP    LSLNMSGA            ABORT IF ATTENTION
STORTST  BCT   R3,STORT                 DECREMENT LINE COUNT LEFT
         B     LSLNMSGN                 STOP IT NOW
         SPACE
STORT    ST    R3,CPWK4                 RESET COUNT REMAINING (MOVE)
         LR    R0,R2                    POSITION USED INTO R0
         L     R1,CPWKDL                PLUS DELTA
         CVCALL ADDER                    GIVE
         ST    R0,CPWKPS                NEW POSITION
         XEXIT 0,8                      SCRAM
         EJECT
MRGECHK  BNO   *+8        BRANCH IF MERGE BUT NOT COMBINE
         L     R2,C40(,R8) USE OLD LINE NUMBER FOR COMBINE
         CL    R2,=F'100000000'    LINE NUMBER O.K.
         BL    WRKMRGE             BRANCH YES TO CONTINUE
FIXUPP   TM    CPLFLG5,CPFSELOC    EXTERNAL FILE SELECTION?
         BNO   BLASTER1            NO, ABORT THE MOVE/COPY
         TM    CPLFLG2,CPFMERG     MERGE OPTION?
         BO    TEARIT              YES, ABORT THE COPY
         L     R1,CPWKDL           GET CURRENT DELTA
         SRA   R1,1                HALVE IT
         BZ    TEARIT              ABORT IF ZERO
         BAL   R14,SELDELTA        CONVERT IT TO SUITABLE DELTA
         ST    R1,CPWKDL           SAVE NEW DELTA
         L     R0,CPBGLN           SET FIRST LINE NO. TO FIX
         MVC   CPWKPS,CPWORK1     SET LAST LINE TO RENUMBER
         XCALL FIXNUMB             GO FIX LINE NUMBERS
         ST    R0,CPWORK1         SAVE LAST LINE NO.
         A     R0,CPWKDL           CALCULATE NEXT LINE NO.
         ST    R0,CPWKPS           SAVE IT FOR NEXT LINE
         SR    R0,R0                    ZERO FOR IC
         IC    R0,C40+4(R8)             RESET PREST COUNT
         B     TRYDEL                   GO TO IT AGAIN
         EJECT
TEARIT   DCLOSE ,                       CLOSE IT
         NI    CPGFLG,255-CPFOPN        SET CLOSED
         TSEG  'COPY ABORTED BEFORE EXTERNAL LINE',,B
         L     R0,C40(R8)               NEXT LINE NO.
         CVCALL CVEXNO                   CONVERT IT
         TSEG  (1),(0)                  INTO MSG
         B     LSLNMSGA            GO DO LAST LINE MESSAGE
         SPACE
BLASTER  TM    CPLFLG5,CPFSELOC    SELECT FROM EXTERNAL?
         BO    TEARIT              YES, GO ABORT IT
BLASTER1 TSEG  'ABORTED BY ATTEMPT TO REPLACE',,B
         TM    CPLFLG2,CPFMERG     MERGE OPTION?
         BO    LSLNMSGA            YES
         TSEG  'OR INTERLEAVE'
         B     LSLNMSGA            GO DO LAST LINE MSG
         TITLE 'LOCATE PREVIOUS LINE AND FORMAT FOR LIST'
* LOCLIST LOCATES THE LINE IN THE FILE BEFORE THE LINE NUMBER
* POINTED TO BY R1 ON INPUT.  THE LOCATED LINE IS FORMATTED FOR
* LISTING ACCORDING TO THE SETTINGS OF THE FLAGS IN CPLFLG5 BY
* THE LISTLINE ROUTINE.
         SPACE
LOCLIST  XENTER 7,8,SZR+12         DEFINE BASE & WORK AREA
         CVCALL LOCATE             LOCATE THE CURRENT LINE
         TM    CPDRPT,CPFMTCH+CPFNTYT+CPFFSLN  IS THERE A LINE
         BNZ   LOCLISEX            BRANCH IF NO LINE
         LA    R1,CPREVLN          POINT TO PREVIOUS LINE NO.
         CVCALL LOCATE             LOCATE IT
         LA    R1,12(,R8)          POINT TO UNPRESS AREA
         CVCALL UNPRESS            UNPRESS LINE
         CVCALL LISTLINE            FORMAT LINE FOR OUTPUT
LOCLISEX XEXIT 7,8                 RETURN
         TITLE 'UTILITY ROUTINES AND DESPOT ADDRESSES'
* BAD LINE NO. MESSAGE
         SPACE
BADLINEL BALR  R7,0                SET BASE REGISTER
         USING *,R7
         L     R0,CPLCNO           GET BAD LINE NUMBER
         CVCALL CVEXNO             CONVERT TO EXTERNAL FORM
         TSEG  (1),(0),B           PUT IT IN MESSAGE
BADLINE  BALR  7,0                      SET BASE REG
         USING *,7
         TSEG  'LINE NO.'
         B     CVUNLEGL
         SPACE 3
* FOR DELETE
         SPACE
         DS    0F
VDODELA  DC    AL1(DESRTRN+LOCATRTN+DESMATCH+PREST),VL3(DODELEL) DELETE
VDODELE  DC    AL1(DESNRTN+LOCATRTN+DESMATCH+PREST),VL3(DODELEL) DELETE
ADLKWNTR DC    AL1(DESRTRN+LOCATRTN+DESMATCH+PREST),AL3(DELKWNT) COUNT
         TITLE 'SCKW''S FOR DELETE'
DELPRT   SCKW  ,LTNPRT,PUSH
         SCKW  ,INVALID
         SPACE 3
         LTORG
         TITLE 'UTILITY ROUTINES'
* USED BY DELETE
         SPACE
DELKWNT  SR    R15,R11                  COUNT TO DELETE LINE
         STH   R15,CPWK6                SAVE IT
         L     R15,CPWK1                COUNT CELL
         LA    R1,1(,R15)               KICK
         ST    R1,CPWK1                 RESET COUNT
         MVC   CPWK4(8),CPDRPT          LAST LINE SAVE
         LTR   R15,R15                  FIRST?
         BPR   R14                      NO
         MVC   CPWK2(8),CPDRPT          FIRST LINE SAVE
         MVC   CPWK6+2(2),CPWK6         COUNT TO 1ST DELETE LINE
         BR    R14                      SCRAM
         SPACE 3
* USED BY MOVE-COPY
         SPACE
KOWNTR   L     1,CPWK4        GET PREV TOTAL
         LA    1,1(1)         ADD ONE
         ST    1,CPWK4        SAVE IT
         BCR   15,14          RETURN
         SPACE 3
* FOR MOVE-COPY-SAVE
         SPACE
MVCPMVC  MVC   C40(0,R8),0(R15)
         SPACE 3
* FOR MOVE-COPY
         SPACE
         DS    0F
KWNTAD   DC    AL1(DESRTRN+LOCATRTN+DESMATCH+PREST),AL3(KOWNTR) WORK
KWNTADX  DC    AL1(DESRTRN+LEXATRTN+DESMATCH+PREST),AL3(KOWNTR) WORK
WORKAD   DC    AL1(DESRTRN+LOCATRTN+DESMATCH+PREST),AL3(WORK) WORK
WEXKAD   DC    AL1(DESRTRN+LEXATRTN+DESMATCH+PREST),AL3(WORK) WORK
WXRKAD   DC    AL1(DESRTRN+LXCATRTN),AL3(WORK) WORK
         TITLE 'SCKW''S FOR MOVE-COPY'
LINPRT   SCKW  ,LNENOPRT,PUSH
         SCKW  ,INVALID
         SPACE
TOPRT    SCKW  TO,HAVTO
BYPRT    SCKW  BY,HAVBY,(P,LN)
         SCKW  FROM,EXTRN,A
         SCKW  EXECUTE,COPYEXE,A
         SCKW  ,IGDSNPRT,PUSH
         SCKW  ,MRGEPRT,PUSH
         SCKW  ,LTNPRT,PUSH
         SCKW  COMBINE,HAVCOMB,A
         SCKW  ,INVALID
         SPACE
MRGEPRT  SCKW  MERGE,SCNMRGE,A
         SCKW  NOMERGE,SCNNMRGE,A
         SCKW  ,,POP
         SPACE
SCNMRGE  OI    CPLFLG2,CPFMERG     SET MERGE OPTION
         BR    R14                 SCAN ON
         SPACE
SCNNMRGE NI    CPLFLG2,255-CPFMERG-CPFCOMB RESET MERGE OPTION
         BR    R14
         TITLE 'LAST LINE MESSAGE ROUTINE'
* LAST LINE MESSAGE HERE - THEN ON TO COMMAND PROMPT
         SPACE
LSLNMSGA GENTER ,                  SET BASE
         LA    R6,CVQTYPE          RETURN TO QTYPE
         TM    CPLFLG5,CPFNLST+CPFUNUM DID COMMAND LIST LAST NUM
         BER   R6                  BRANCH YES
         B     LSLNMSGD            GO DO LAST LINE MSG
         DROP  R7   NO BASE NEEDED UNTIL LSLNMSG
         SPACE
LSLNMSGN LA    R6,CVGETCOM         RETURN TO GETCOM
         TM    CPLFLG5,CPFNLST+CPFUNUM DID COMMAND LIST LAST NUM
         BER   R6                  BRANCH YES
         CLC   CPWORK1(4),CPWORK2     ONLY ONE LINE?
         BER   R6                       YES
LSLNMSG  GENTER ,                  SET BASE
         LA    R6,CVGETCOM         RETURN TO GETCOM
         TM    CPGFLG2,CPFEXEC+CPFEXTER  IS IT TERSE AND EXEC
         BOR   R6                  YES, SKIP MESSAGE
LSLNMSGD L     R0,CPWORK1              LAST LINE NO.
         LTR   R0,R0               ANYTHING MOVED
         BMR   R6                  BRANCH NO
         GENTER ,                  SET BASE
         CVCALL CVEXNO                   CONVERT
         TSEG  (1),(0),B                INTO MESSAGE
         TSEG  '- LAST LINE'          FINISH MESSAGE
         BR    R6
         TITLE 'DELTA SELECT ROUTINE'
* SELECT A SUITABLE DELTA BASED ON THE VALUE IN R1
*        IF R1 IS 0 THEN .001 IS USED
*        IF R1>=CPGLDL THEN CPGLDL IS USED
*        OTHERWISE THE DELTA IS CHOSEN FROM A TABLE AS THE FIRST VALUE
*        NOT GREATER THAN R1 FROM THE LIST 1.000, .500, .200, .100,
*        .050, .020, .010, .005, .002, AND .001.
* THE DELTA CHOSEN IS RETURNED IN R1
         SPACE
SELDELTA XENTER 6,8,*
         LTR   R1,R1               IS VALUE POSITIVE
         BNP   SEL001              NO, USE .001
         C     R1,CPGLDL           IS R1>=CPGLDL
         BNL   SELDEL              YES, USE CPGLDL
         LA    R6,SELTBLE          POINT TO TABLE
SELOOP   CH    R1,0(,R6)           USE THIS ENTRY?
         BNL   SELGOT              YES
         LA    R6,2(,R6)           POINT TO NEXT ENTRY
         B     SELOOP              LOOP
         SPACE
SELGOT   LH    R1,0(,R6)           SET R1 TO SELECTED TABLE VALUE
SELEXIT  XEXIT 6,8                 RETURN
         SPACE
SEL001   LA    R1,1                USE .001
         B     SELEXIT             GO RETURN
         SPACE
SELDEL   L     R1,CPGLDL           USE CPGLDL
         B     SELEXIT             GO RETURN
         SPACE
SELTBLE  DC    H'1000,500,200,100,50,20,10,5,2,1'  POSSIBLE DELTAS
         TITLE 'FIX LINE NUMBERS FOR A GIVEN RANGE'
* FIX NUMBERING FOR A RANGE
*        R0 - LINENO OF FIRST LINE IN RANGE
*        CPWKPS - LAST LINENO TO FIX
*        CPWKDL - NEW DELTA TO USE
* RETURNS LAST LINENO USED IN R0
         SPACE
FIXNUMB  XENTER 2,8,*
         LR    R6,R0               SAVE FIRST LINE TO FIX
         PFREE R9                  FREE ANY PAGE IN R9
         ST    R6,CPLCNO           SET CPLCNO FOR LOCAT
FIXLOCT  LA    R1,CPLCNO
         CVCALL LOCATE             POINT TO FIRST LINENO
         TM    CPDRPT,CPFNTYT+CPFHIGH    DOES LINE EXIST
         BNZ   FIXABEND            NO, ABEND FOR INTERNAL ERROR
         TM    CPDRPT,CPFMTCH      LINE NO. MATCH?
         BZ    FIXLOCT             NO, GO LOCATE AGAIN
         L     R4,CPDRPT           POINT TO DIRECTORY ENTRY
         LR    R2,R15              POINT R2 TO LOCATED LINE
         LR    R3,R11              POINT TO
         AH    R3,0(,R11)              END OF TEXT
         SR    R5,R5               ZERO FOR IC
         B     FIXSTRT             ENTER LOOP
         SPACE
FIXNXPAG MVC   0(4,R4),2(R11)      RESET FIRST LINENO IN DIRECTORY
         PMARK 11                  MARK PAGE CHANGED
         CLC   CPHIPS,CPLCNO       AT HIGH LINE NO
         BNH   FIXHIGH             YES, EXIT & RESET HIGH LINE
         LA    R4,6(,R4)           STEP TO NEXT DIRECTORY ENTRY
         LH    R0,4(,R4)           GET PAGE NUMBER
         PGET  11,(0)              GET PAGE INTO R11
         LR    R3,R11              POINT TO
         AH    R3,0(,R11)              END OF TEXT
         LA    R2,2(,R11)          POINT TO FIRST LINE
FIXNXLIN A     R6,CPWKDL           CALCULATE NEW LINE NO.
FIXSTRT  MVC   CPLCNO,0(R2)        SAVE OLD LINE NUM FOR TEST
         CLC   CPWKPS,CPLCNO       CHECK IF DONE
         BL    FIXDONE             BRANCH YES
         ST    R6,CPDOUB           PUT NEW LINE NO
         MVC   0(4,R2),CPDOUB            INTO LINE IMAGE
         BE    FIXDONE             ALSO DONE IF EQUAL
         IC    R5,4(,R2)           GET LENGTH OF LINE
         LA    R2,5(R5,R2)         POINT TO NEXT LINE
         CR    R2,R3               END OF PAGE?
         BL    FIXNXLIN            BRANCH NO
         B     FIXNXPAG            YES, GO GET NEXT PAGE
         SPACE
FIXDONE  MVC   0(4,R4),2(R11)      RESET FIRST LINENO IN DIRECTORY
         PMARK 11                  MARK PAGE AS CHANGED
         CLC   CPHIPS,CPLCNO       SHOULD HIGH LINE BE UPDATED?
         BH    FIXEXIT             BRANCH NO
FIXHIGH  ST    R6,CPHIPS           RESET HIGH LINENO
FIXEXIT  OI    CPGFLG,CPFDIRCH     SET DIRECTORY CHANGED
         LR    R0,R6               RETURN NEW HIGH NUM
         XEXIT 2,8                 RETURN
         SPACE
* NO FIRST LINE -- A LOGIC ERROR HAS OCCURRED THAT SHOULDN'T HAVE
FIXABEND ABEND 100,DUMP            GET A DUMP
         TITLE 'GOSET ROUTINE'
* GOSET IS THE PRIMARY ENTRY FOR ALL SET OPTIONS.
         SPACE
GOSET    GENTER C8
SETBASE  SCAN  STPRT
         B     CVABSENT
         SPACE
LNGTH    STH   R15,CPLNGTH              STORE LENGTH
         B     CVGETCOM                 NEW COMMAND
         SPACE
UPDATE   LTR   R15,R15
         BM    CVNVALID
         STH   R15,CVPRMLIM
         B     CVGETCOM
         SPACE
TRAPX    LTR   R15,R15
         BM    CVNVALID
         ST    R15,CVEXTRAP
         B     CVGETCOM
         SPACE
DELTAX   LTR   R15,R15                  ZERO NG
         BNP   CVNVALID                 NEED POSITIVE
         ST    R15,CPGLDL               STORE DELTA
         B     CVGETCOM                 NEW COMMAND
         SPACE 3
* SET DEFAULT VOLUME ROUTINE
         SPACE
VOLSETT  CH    R0,=Y(6)                 NOT OVER 6 CHARS
         BH    CVNVALID                BR IF OVER
         MVC   CPVOLSV(6),0(R15)        MOVE IN DEFAULT VOLUME
         OI    CPGFLG,CPFVOLM           SET DEFAULT VOLUME SPECIFIED
         B     CVGETCOM                 FINI
         SPACE
VOLGOTT  SCAN  VLMPRT                   CLEAR OR SET VOLUME?
VLCLEAR  NI    CPGFLG,255-CPFVOLM       SET NO DEFAULT VOLUME
         B     CVGETCOM                 FINI
         EJECT
TABS     PCALL GOTAB               TAB SET CODE IS PAGED
         SPACE
SETCURR  CVCALL SCNEXFR             SEE IF EXEC SPECIFIED
         SR    R5,R5               USE 0 AS DEFAULT SET
         LA    R6,GOTCURR          SET ADDRESS FOR LINE NO PRT
SETCURR1 SCAN  CURRPRT1            SCAN OPTIONS
         TM    CPLFLG5,CPFSELOC    SET * FOR ACTIVE OR EXEC
         BNZ   SETCURR2            BRANCH IF SET FOR EXEC
         ST    R5,CPCURRL          SET CURRENT FOR ACTIVE FILE
         B     CVGETCOM
         SPACE
SETCURR2 ST    R5,CPEXLINE         SET CURRENT FOR EXEC FILE
         B     CVGETCOM
         SPACE
CURRTO   SCAN  CURRPRT2            GET LINE NUMBER AFTER TO
         B     CVABSENT            MISSING IF NOTHING FOUND
         SPACE
GOTCURR  LR    R5,R0               REMEMBER SPECIFIED LINE NO
         B     SETCURR1            SCAN REST OF LINE
         SPACE
SETEXEC  SCAN  SETEXPRT
         B     CVGETCOM
         EJECT
SETESCAP SCAN  ,                  LOOK FOR ESCAPE CHAR
         BNP   SETESNUL
         CLI   0(1),C''''         TEST FOR SINGLE QUOTE
         BE    SETESLNG
         CLI   0(1),C'"'          TEST FOR DOUBLE QUOTE
         BNE   SETESMOV
SETESLNG SH    0,=H'2'            TEST LENGTH
         BZ    SETESNUL           MUST BE '' OR ""
         LA    1,1(,1)            TAKE 1ST CHAR INSIDE QUOTES
SETESMOV MVC   CPESCAPE(1),0(1)   SET ESCAPE CHARACTER
         NI    CPGFLG2,255-CPESNULL  TURN OFF NULL FLAG
         B     SETIGNOR
         SPACE
SETESNUL OI    CPGFLG2,CPESNULL   SET NULL FLAG
         B     SETIGNOR
         SPACE
SETSKIP  SCAN  ,                  LOOK FOR SKIP   CHAR
         BNP   SETSKNUL
         CLI   0(1),C''''         TEST FOR SINGLE QUOTE
         BE    SETSKLNG
         CLI   0(1),C'"'          TEST FOR DOUBLE QUOTE
         BNE   SETSKMOV
SETSKLNG SH    0,=H'2'            TEST LENGTH
         BZ    SETSKNUL           MUST BE '' OR ""
         LA    1,1(,1)            TAKE 1ST CHAR INSIDE QUOTES
SETSKMOV MVC   CPSKIP(1),0(1)     SET SKIP   CHARACTER
         NI    CPGFLG2,255-CPSKNULL  TURN OFF NULL FLAG
         B     SETIGNOR
         SPACE
SETSKNUL OI    CPGFLG2,CPSKNULL   SET NULL FLAG
         B     SETIGNOR
         SPACE
SETRSCN  STH   R15,CPRSCNVL        SET RESCAN COUNT
         B     SETIGNOR
         EJECT                     ,
CUPPER   NI    CPGFLG,255-CPFUPLW       SET UPPER CASE ONLY BIT
         B     SETIGNOR                 GET NEW COMMAND
         SPACE
CUPLOW   OI    CPGFLG,CPFUPLW           SET UPPER-LOWER CASE BIT
         B     SETIGNOR                 GET NEW COMMAND
         SPACE
NOCOMM   OI    CPGFLG,CPFCMOFF          DON'T PROMPT "COMMAND"
         B     SETIGNOR
         SPACE
YSCOMM   NI    CPGFLG,255-CPFCMOFF      PROMPT "COMMAND"
         B     SETIGNOR
         SPACE
CLOG     NI    CPGFLG2,255-CPFNOLOG    SET LOG FOR OBEY COMMANDS
         B     SETIGNOR
         SPACE
CNOLOG   OI    CPGFLG2,CPFNOLOG        SET NOLOG FOR OBEY
SETIGNOR SCAN  ,
         BNP   CVGETCOM
SETIGN1  TSEG  (1),(0),B
         SCAN  ,                   SEE IF ANYTHING ELSE TO IGNOR
         BP    SETIGN1             YES CONTINUE LOOP
         TSEG  ': IGNORED'         NO, FINISH MESSAGE
         B     CVGETCOM
         EJECT
* SET PREFIX COMMAND ENTERS AT "SETPFX"
* SET NAME COMMAND ENTERS AT "SETNAME"
* SET OPERAND OF OTHER COMMANDS ENTERS AT "SETPFXNS"
         SPACE
SETPFXNS SENTER R14,R8,C44         SET PREFIX WITH NO SCAN
         L     R7,=A(SETBASE)      GET CURRENT BASE REG
         USING SETBASE,R7          RESET ADDRESSABILITY
         LH    R0,DSNWANL          GET DSNAME LENGTH
         B     SETPFX2
         SPACE 3
SETNAME  OI    CPLFLG3,CPFSET      INDICATE SET NAME
SETPFX   OI    CPLFLG2,CPFDSNMS    NULL/NO DEFAULT ON DSN OK
         SCANSAVE 0(R8)            SAVE SCAN POINTERS
         SCAN  ,
         LTR   R0,R0                   PREFIX GIVEN?
         BNP   NOPFX                   BR IF NOT
         TM    CPLFLG3,CPFSET      SET PREFIX OR SET NAME?
         BZ    CHKPFX              BR IF SET PREFIX
         SCANRSTR 0(R8)            RESTORE SCAN POINTERS
         DENTER DSSIZ,,,NO          GET WORK SPACE
         CVCALL DODSNM              GET THE NAME
         SPACE 3
* PROCESS THE CONSTRUCTED DSNAME
         SPACE
SETPFX2  LA    R1,DSNWADSN         ADDRESS OF DSN WORK AREA
         LA    R4,CPPFX            ADDR OF PREFIX FIELD
         TM    DSNWAF1,DSNFQDSN    IS IT QUOTED OR $
         BO    DOLPFX              BR IF YES
         TM    DSNWAF1,DSNFSTD     IS DSN A STD WYLBUR DSN?
         BZ    DOLPFX              BR IF NO
CLCSET   CLC   =C'SET',CPCMNM      IS COMMAND SET NAME?
         BNE   SETPFX2A                BR IF NO
         AIF   ('&USPS' NE '1').XLBL01                          USPS01
         MVC   CPUSERSV,DSNWADSN  SAVE USER                     USPS01
         AGO   .XLBL02                                          USPS01
.XLBL01   DS    0H                                              USPS01
         MVC   CPGRPSV,DSNXG+DSNWADSN  SAVE GROUP
         MVC   CPUSERSV,DSNXU+DSNWADSN  SAVE USER
.XLBL02  DS    0H                                               USPS01
         AIF   ('&USPS' NE '1').XLBL09                          USPS01
SETPFX2A SR     R2,R2                                           JEP001
         IC    R2,CVUSRFLD          PICK UP ID LENGTH           JEP001
         LA    R2,1(R2)             BUMP FOR PERIOD             JEP001
         AR    R1,R2                ADD IN FOR OFFSET           JEP001
         SR    R0,R2               DECR LEN BY ID OFFSET        JEP001
         AGO   .XLBL10                                          USPS01
.XLBL09   DS    0H                                              USPS01
SETPFX2A LA    R1,DSNXN(R1)
         SH    R0,*-2              ADJUST LENGTH
.XLBL10   DS    0H                                              USPS01
         BP    SAVEPFX             BR IF MORE
         XC    CPPFXL,CPPFXL       NO PREFIX - CLEAR IT
         B     SETMPFX             GO CHECK MEMBER
         SPACE 3
* SET PREFIX TO QUOTED NAME - CLEAR QUOTES OFF FIRST
         SPACE
CHKPFXQ  CVCALL DQSCAN
         SPACE 3
* DSN IS NOT STD WYL NAME OR WAS SPECIFIED IN QUOTES OR $
* SET WHOLE NAME AS $ SPEC IN PREFIX
         SPACE
DOLPFX   MVI   0(R4),C'$'          SET "$" IN PREFIX
         LA    R4,1(R4)            BUMP PAST "$"
         AH    R0,*-2              INCR LENGTH TO INCLUDE "$"
         CH    R0,=Y(CPPFXSZ)      TOO BIG
         BH    PFXTL               YES
         STH   R0,CPPFXL           SAVE LENGTH
         LR    R2,R0               LENGTH
         BCT   R2,SAVEPFX1         DEC
         B     SETMPFX             0 LENGTH
         SPACE
SAVEPFX  CH    R0,=Y(CPPFXSZ)          TOO BIG?
         BH    PFXTL                   BR IF SO
         STH   R0,CPPFXL               SAVE LENGTH
         LR    R2,R0               LENGTH OF PREFIX
SAVEPFX1 BCTR  R2,0                FOR EX
         EX    R2,PFXMVC           MOVE IT
         SPACE
* NOW SET MEMBER IN CASE IT WAS SPECIFIED
SETMPFX  TM    CPLFLG3,CPFSET      TEST SET NAME OR PREFIX
         BZ    CHKEXTRA            BR IF PREFIX
         CLI   DSNWAMBR,X'40'      WAS A MEMBER SPECIFIED?
         BE    CHKEXTRA            BR IF NOT
         MVC   CPMEMBSV,DSNWAMBR   MOVE MEMBER NAME
         CLI   CPMEMBSV,0          WAS MEMBER EXPLICITLY NULL?
         BNE   CHKEXTRA            BR IF NOT
         MVI   CPMEMBSV,X'40'      RESET SAVED MEMBER
         B     CHKEXTRA
         SPACE
SETPFXEX EX    0,CLCSET            WAS IT SET COMMAND?
         BE    CVGETCOM            BR IF YES
         CLI   CPCMNM,C'U'             IS IT USE COMMAND
         BE    SETPFXXX            YES, NO TSEG SINCE DEFAULT
         TSEG  'SET DONE',,M
SETPFXXX SEXIT R14,R8,RELOAD
         SPACE
NOPFX    XC    CPPFXL(2),CPPFXL        CLEAR PREFIX
         B     SETPFXEX
         SPACE
PFXTL    TSEG  'PREFIX TOO LONG',,M
         B     SETPFXEX
         SPACE
CHKPFX   LA    R4,CPPFX            ADDR OF PREFIX FIELD
         CLI   0(R1),X'C0'         IS FIRST CHAR ALPHA?
         BH    SAVEPFX             BR IF YES
         CLI   0(R1),C'$'
         BE    SAVEPFX
         CLI   0(R1),C''''         IS OPERAND QUOTED?
         BE    CHKPFXQ             BR IF YES
         CLI   0(R1),C'"'          OTHER QUOTES?
         BE    CHKPFXQ             BR IF YES
         CLI   0(R1),C'*'          IS PREV PFX TO BE USED?
         BNE   CVNVALID            BR IF NO - INVALID
         LA    R1,1(R1)            BUMP PAST *
         BCTR  R0,0                ADJUST LENGTH
         LTR   R2,R0               SAVE LENGTH
         BZ    CHKEXTRA            BR IF * ALONE
         AH    R0,CPPFXL           GET TOTAL LENGTH
         CH    R0,=Y(CPPFXSZ)      IS NEW LENGTH TOO BIG?
         BH    PFXTL               BR IF YES
         AH    R4,CPPFXL           BUMP DESTINATION ADDR
         STH   R0,CPPFXL           STORE NEW LENGTH
         BCTR  R2,0                FOR EX
         EX    R2,PFXMVC           MOVE NEW PART OF PFX
CHKEXTRA EX    0,CLCSET            WAS ENTRY FOR SET COMMAND?
         BNE   SETPFXEX            BR IF NOT - NOEXTRA SCAN
         SR    R2,R2               INIT FLAG
EXTRALP  SCAN  EXTRAPRT            SCAN FOR OTHER STUFF
         LTR   R2,R2               WAS ANYTHING FOUND?
         BZ    SETPFXEX            BR IF NO
         TSEG  ': IGNORED',,M
         B     SETPFXEX
         SPACE
EXTRAGUM TM    CPLFLG3,CPFSET      IS IT SET NAME?
         BOR   R14                 BR IF YES
EXTRA    LR    R2,R0
         TSEG  (1),(0),B
         B     EXTRALP
         SPACE
PFXMVC   MVC   0(0,R4),0(R1)       MOVE PREFIX
         EJECT
         AIF   ('&USPS' EQ '1').XLBL03                          USPS01
* SET GROUP
         SPACE
SETGRP   DS    0H
         SCAN  GRPPRT
         MVC   CPGRPSV,CPGRP       SET DEFAULT GROUP
         B     CVGETCOM            EXIT
         SPACE 3
.XLBL03   DS    0H                                              USPS01
* SET USER
         SPACE
SETUSER  SCAN  USERPRT
         AIF   ('&DCEC' NE '1').LBL06                           JEP00X
         SR    R2,R2               ZERO R2 FOR MOVE             JEP001
         IC    R2,CVUSRFLD         PICK UP USERID LENGTH        JEP001
         BCTR  R2,0                DOWN 1 FOR EX                JEP001
         EX    R2,MVUSER           MOVE DEFAULT ID IN           JEP001
         B     CVGETCOM            EXIT                         JEP001
MVUSER   MVC   CPUSERSV(0),CPUSER                               JEP001
         AGO   .LBL07                                           JEP00X
.LBL06   DS    0H                                               JEP00X
         MVC   CPUSERSV,CPUSER     SET DEFAULT USER
         B     CVGETCOM            EXIT
.LBL07   DS    0H                                               JEP00X
         SPACE 3
* SET MEMBER
         SPACE
SETMBR   SCAN  MBRPRT
         MVC   CPMEMBSV,0(R15)     BLANK IS DEFAULT MEMBER
         B     CVGETCOM
         SPACE 3
* HAVE MEMBER OPERAND
         SPACE
MBRSET   LA    R3,CPMEMBSV         ADDR OF DESTINATION
         LA    R2,L'CPMEMBSV       LENGTH
         LA    R4,4                SPECIAL PROCESSING
         B     GUMSET
         SPACE 3
         AIF   ('&USPS' EQ '1').XLBL04                          USPS01
* HAVE GROUP OPERAND
         SPACE
GRPSET   LA    R3,CPGRPSV          ADDR OF DESTINATION
         LA    R2,L'CPGRPSV        LENGTH
         B     GUSET
.XLBL04   DS    0H                                              USPS01
         SPACE 3
* HAVE USER OPERAND
         SPACE
         AIF   ('&DCEC' NE '1').LBL08                           JEP00X
USERSET  LA    R3,CPUSERSV         ADDR OF DESTINATION          JEP001
         SR    R2,R2               CLEAR R2                     JEP001
         IC    R2,CVUSRFLD         PICK UP USERID LENGTH        JEP001
         AGO   .LBL09                                           JEP00X
.LBL08   DS    0H                                               JEP00X
USERSET  LA    R3,CPUSERSV         ADDR OF DESTINATION
         LA    R2,L'CPUSERSV       LENGTH
.LBL09   DS    0H                                               JEP00X
GUSET    SR    R4,R4
GUMSET   CLR   R0,R2               CHECK LENGTH OF OPERAND
         EX    0,GUMBT(R4)         TAKE BRANCH IF INVALID
         CLI   0(R1),X'C0'    IS THERE A SPEC CHAR ON FRONT?
         BL    CVNVALID            BR IF YES
         LR    R2,R0               CURRENT LENGTH
         BCTR  R2,0                -1
         LTR   R4,R4               WAS IT MEMBER?
         BZ    GUMMOVE             BR IF NO
         MVI   0(R3),X'40'         CLEAR MEMBER FIELD
         MVC   1(7,R3),0(R3)
GUMMOVE  EX    R2,GUMMVC           MOVE NEW VALUE
         B     CHKEXTRA
         SPACE
GUMMVC   MVC   0(0,R3),0(R1)
GUMBT    BNE   CVNVALID            GROUP/USER BRANCH
         BH    CVNVALID            MEMBER BRANCH
         SPACE
SETATTN  SCAN  ATTNCHRS
         NI    RTBUFL,255-RTBUATTN
         B     CVGETCOM
         SPACE
SETATTN2 CH    R0,=H'8'
         BH    CVNVALID
         L     R14,RTBWAPTR
         STH   R0,RTBATNSZ(,R14)
         MVC   RTBATTN(8,R14),0(R1)
         OI    RTBUFL,RTBUATTN
         B     CVGETCOM
         SPACE
ATTNCHRS SCKW  ,SETATTN2
         SPACE 3
SETCOLL  NI    RTBUFL,255-RTBUNCOL
         B     CVGETCOM
         SPACE 3
SETNCOL  OI    RTBUFL,RTBUNCOL
         B     CVGETCOM
         SPACE 3
SETCRT   OI    RTBMFL,RTBCRT
SETCRTS  SR    R0,R0
         L     R1,RTBWAPTR
         STH   R0,RTBLINE(,R1)
         CH    R0,RTBCURS(,R1)
         BE    CVGETCOM
         TSEG  (1),(0),W
         B     CVGETCOM
         SPACE 3
SETNOCRT NI    RTBMFL,X'FF'-RTBCRT
         B     SETCRTS
         SPACE 3
SETPAD   OI    RTBUFL,RTBUPAD
         B     CVGETCOM
         SPACE 3
SETNOPAD NI    RTBUFL,X'FF'-RTBUPAD
         B     CVGETCOM
         SPACE 3
SETBACK  OI    RTBUFL,RTBUBACK
         B     CVGETCOM
         SPACE 3
SETNBACK NI    RTBUFL,255-RTBUBACK
         B     CVGETCOM
         SPACE 3
SETFAST  OI    RTBUFL,RTBUFAST
         B     CVGETCOM
         SPACE 3
SETSLOW  NI    RTBUFL,255-RTBUFAST
         B     CVGETCOM
         SPACE 3
SETWRAP  OI    RTBMFL,RTBWRAP
         B     SETCRTS
         SPACE 3
SETNWRAP NI    RTBMFL,X'FF'-RTBWRAP
         B     SETCRTS
         SPACE 3
SETPSZ   LA    R2,RTBPSZ
         B     SETLPSZ
         SPACE 3
SETLSZ   LA    R2,RTBLSZ
SETLPSZ  LTR   R15,R15
         BZ    CVNVALID
         L     R14,RTBWAPTR
         STH   R15,0(R2,R14)
         B     SETCRTS
         EJECT
         LTORG
         TITLE 'SCKW''S'
* FOR SET
         SPACE
STPRT    SCKW  LENGTH,LNGTH,(P,PI,A),133
         SCKW  UPDATE,UPDATE,(P,I,A),32000
         SCKW  DELTA,DELTAX,(P,LN,A)
         SCKW  TRAP,TRAPX,(P,LN)
         SCKW  TABS,TABS,A
         SCKW  UPPER,CUPPER,A
         SCKW  UPLOW,CUPLOW,A
         SCKW  TERSE,NOCOMM,A
         SCKW  VERBOSE,YSCOMM,A
         SCKW  LOG,CLOG
         SCKW  NOLOG,CNOLOG,A
         SCKW  VOLUME,VOLGOTT,A
         SCKW  PREFIX,SETPFX,A
         SCKW  NAME,SETNAME,A
         AIF   ('&USPS' EQ '1').XLBL05                          USPS01
         SCKW  GROUP,SETGRP,A
.XLBL05   DS    0C                                              USPS01
         SCKW  USER,SETUSER,A
         SCKW  MEMBER,SETMBR,A
         SCKW  CURRENT,SETCURR,A
         SCKW  *,SETCURR
         SCKW  EXECUTE,SETEXEC,A
         SCKW  ESCAPE,SETESCAP,A
         SCKW  SKIP,SETSKIP,A
         SCKW  VALUE,SETVAR,(A,P)
         SCKW  RESCAN,SETRSCN,(A,P,I),100
         SCKW  COLLECT,SETCOLL,A
         SCKW  NOCOLLECT,SETNCOL,A
         SCKW  ATTN,SETATTN
         SCKW  WRAP,SETWRAP
         SCKW  NOWRAP,SETNWRAP,A
         SCKW  CRT,SETCRT
         SCKW  NOCRT,SETNOCRT
         SCKW  PAD,SETPAD
         SCKW  NOPAD,SETNOPAD
         SCKW  LINESIZE,SETLSZ,(P,PI,A),133
         SCKW  LS,SETLSZ,(P,PI),133
         SCKW  PAGESIZE,SETPSZ,(P,PI,A),255
         SCKW  PS,SETPSZ,(P,PI),255
         SCKW  BACK,SETBACK,A
         SCKW  NOBACK,SETNBACK,A
         SCKW  FASTLIST,SETFAST,A
         SCKW  SLOWLIST,SETSLOW,A
         SCKW  ,INVALID
         SPACE 3
* FOR SET CURRENT
         SPACE
CURRPRT1 SCKW  EXECUTE,,A
         SCKW  TO,CURRTO
CURRPRT2 SCKW  ,LNENOPRT,PUSH
         SCKW  ,INVALID
         SPACE 3
* FOR SET EXEC
         SPACE
SETEXPRT SCKW  ,STEXEPRT,PUSH
         SCKW  ,INVALID
         SPACE 3
* FOR SET VOLUME
         SPACE
VLMPRT   SCKW  ,VOLSETT
         SPACE 3
* FOR SET GROUP/USER/MEMBER
         SPACE
         AIF   ('&USPS' EQ '1').XLBL06                          USPS01
GRPPRT   SCKW  ,GRPSET
.XLBL06   DS    0C                                              USPS01
USERPRT  SCKW  ,USERSET
MBRPRT   SCKW  ,MBRSET
         SPACE 3
* FOR SET GRP/USER/MBR/PFX/NAME POST-SCAN
         SPACE
         AIF   ('&USPS' NE '1').XLBL07                          USPS01
EXTRAPRT DS    0C                                               USPS01
         AGO   .XLBL08                                          USPS01
.XLBL07   DS    0C                                              USPS01
EXTRAPRT SCKW  GROUP,EXTRAGUM,(P,A)
.XLBL08   DS    0C                                              USPS01
         SCKW  USER,EXTRAGUM,(P,A)
         SCKW  ,EXTRA
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
         SPACE
CHEXCLAM EQU   X'5A'   EXCLAMATION POINT
         EJECT
         COPY  RTNCODES
         EJECT
SDSNBUF  DSECT
         COPY  SDSNBUF
         EJECT
         COMMON
         SPACE
CPFCOL   EQU   CPDRED
CPFILLFG EQU   CPDRED
CPFILL   EQU   X'80'
         SPACE
         END
./ ADD NAME=PPRT,SSI=00000002
PPRT     TITLE 'COMMON SCAN TABLES FOUND IN MANY LISTS'
* PROPERTY OF C. U. C. C. A.
         SPACE  3
PPRT     CSECT
         WIDENT 001
         USING CPAREA,R12
         SPACE
         XTRNS
         TITLE 'LIST, TEXT, NUMBERED'
         ENTRY LISTPRT
LISTPRT  SCKW  LIST,SCNLIST,A
         SCKW  NOLIST,SCNNLST,A
         SCKW  N,SCNNLST
         SCKW  ,,POP
         SPACE
         ENTRY TEXTPRT
TEXTPRT  SCKW  TEXT,SCNTEXT,A
         SCKW  NOTEXT,SCNNTEX,A
         SCKW  ,,POP
         SPACE
         ENTRY LTNPRT
LTNPRT   SCKW  ,LISTPRT,PUSH
         SCKW  ,TEXTPRT,PUSH
         SPACE
         ENTRY NUMPRT
NUMPRT   SCKW  NUMBERED,SCNNUM,A
         SCKW  UNNUMBER,SCNUNUM,A
         SCKW  NONUMBER,SCNONUM,A
         SCKW  INTEGER,SCNINT,A
         SCKW  DECIMAL,SCNDECI,A
         SCKW  ,,POP
         SPACE
SCNLIST  NI    CPLFLG5,255-CPFNLST           RESET TO LIST
         BR    R14                  SCAN ON
         SPACE
SCNNLST  OI    CPLFLG5,CPFNLST     SET NOLIST
         BR    R14                 SCAN ON
         SPACE
SCNNTEX  NI    CPLFLG5,255-CPFNONUM-CPFNLST  RESET OPTIONS & LIST
         OI    CPLFLG5,CPFNTEX+CPFFOPT     TURN ON NOTEXT FLAG
         BR    R14                 SCAN ON
         SPACE
SCNTEXT  NI    CPLFLG5,255-CPFNLST RESET TO LIST
SCNONUM  OI    CPLFLG5,CPFNONUM+CPFFOPT SET NONUMBER OPTION
         BR    R14                 SCAN ON
         SPACE
SCNUNUM  NI    CPLFLG5,255-CPFNONUM         CLEAR ALL OPTIONS
         OI    CPLFLG5,CPFUNUM+CPFFOPT SET UNNUMBERED
         BR    R14                 SCAN ON
         SPACE
SCNDECI  NI    CPLFLG5,255-CPFINT  RESET INTEGER FLAG FOR DECIMAL
         TM    CPLFLG5,CPFFOPT     HAS AN OPTION BEEN GIVEN
         BOR   R14                 YES, SCAN ON
SCNNUM   NI    CPLFLG5,255-CPFNONUM RESET TO NUMBERED
         OI    CPLFLG5,CPFFOPT     SET NUMBER OPTION SPECIFIED
         BR    R14                 SCAN ON
         SPACE
SCNINT   OI    CPLFLG5,CPFINT      SET INTEGER OPTION
         TM    CPLFLG5,CPFFOPT     HAS AN OPTION BEEN GIVEN
         BOR   R14                 YES, SCAN ON
         NI    CPLFLG5,255-CPFNONUM  NO, TURN ON NUMBERED
         OI    CPLFLG5,CPFFOPT     SET OPTION GIVEN
         BR    R14                 SCAN ON
         TITLE 'SCRATCH/CLEAR PRTS'
         ENTRY SCRPRT
SCRPRT   SCKW  SCRATCH,SCNSCR,A
         SCKW  REPLACE,SCNSCR,A
         SCKW  NOSCRATC,SCNNSCR,A
         SCKW  NOREPLACE,SCNNSCR
         SCKW  ,,POP
         SPACE
         ENTRY CLSCRPRT
CLSCRPRT SCKW  ,SCRPRT,PUSH
         SPACE
         ENTRY CLRPRT
CLRPRT   SCKW  CLEAR,SCNCLR,A
         SCKW  CLR,SCNCLR,A
         SCKW  NOCLEAR,SCNNCLR,A
         SCKW  NOCLR,SCNNCLR
         SCKW  ,,POP
         SPACE
SCNSCR   OI    CPLFLG2,CPFSCRTC    TURN ON SCRATCH
         BR    R14                 SCAN ON
         SPACE
SCNNSCR  NI    CPLFLG2,255-CPFSCRTC  TURN OFF SCRATCH
         BR    R14                 SCAN ON
         SPACE
SCNCLR   OI    CPLFLG2,CPFCLEAR    TURN ON CLEAR
         BR    R14
         SPACE
SCNNCLR  NI    CPLFLG2,255-CPFCLEAR  TURN OFF CLEAR
         BR    R14
         TITLE 'DSNAME PARMS TO IGNORE IN COMMAND SCAN'
         ENTRY IGDSNPRT
IGDSNPRT SCKW  ON,,P
         SCKW  USER,,(P,A)
         SCKW  GROUP,,(P,A)
         SCKW  KEYWORD,,(P,A)
         SCKW  SET,
         SCKW  NOSET,,A
         SCKW  SHARE,
         SCKW  SHR
         SCKW  READ,,(P,A)
         SCKW  WRITE,,(P,A)
         SCKW  PROTECT,,(P,A)
         SCKW  DPO,
         SCKW  ,,POP
         TITLE 'LINE NUMBER RECOGNITION ROUTINE'
* TO USE THIS PRT, REGISTER R6 MUST BE SET TO THE DESIRED
* RETURN ADDRESS IF A LINE NUMBER IS RECOGNIZED
*  IF R6 IS NEGATIVE, IT IS THE COMPLEMENT OF A RELATIVE ADDRESS
*  BASED OFF R10 WHICH POINTS TO THE CURRENT CODE-PAGE
*
* R0 CONTAINS THE SPECIFIED LINE NUMBER ON EXIT
* R1 HAS A DELTA THAT CAN BE USED BY COLLECT, MOVE AND COPY
* R15 HAS RETURN CODES TO SHOW WHICH WAY THE LINE NO WAS
* SPECIFIED.
* R15 -  0 REGULAR LINE NUMBER SPECIFIED
*        4 FIRST SPECIFIED
*        8 CURRENT SPECIFIED
*       12 LAST SPECIFIED
*       16 END SPECIFIED
*       20 NEXT SPECIFIED
*       24 PREVIOUS SPECIFIED
*
* IF ANYTHING OTHER THAN A REGULAR LINE NUMBER IS SPECIFIED THEN
* AN INCREMENT IS SCANNED FOR AND ADDED IN IF FOUND
         SPACE
         ENTRY LNENOPRT
LNENOPRT SCKW  F,SCNFRST
         SCKW  L,SCNLAST
         SPACE
         ENTRY LNENOPRN
LNENOPRN SCKW  ,SCNLNENO,LN
         SCKW  FIRST,SCNFRST,A
         SCKW  CURRENT,SCNCURR,A
         SCKW  LAST,SCNLAST,A
         SCKW  END,SCNEND
         SCKW  NEXT,SCNNEXT,A
         SCKW  PREVIOUS,SCNPREV,A
         SCKW  *,SCNCURR
         SCKW  ,,POP
         SPACE
SCNFRST  BALR  R14,0               ESTABLISH BASE
         USING *,R14
         L     R0,CPDREC           GET FIRST IN ACTIVE FILE
         LA    R15,4               SET CODE THAT FIRST SPECIFIED
         TM    CPLFLG5,CPFSELOC    TEST IF CORRECT SELECTION
         BE    INCRSCN             BRANCH YES
         MVC   CPDOUB,CPEXDIR      SET EXEC FIRST TO WORD BOUND
         L     R0,CPDOUB           ASSUME SELECT FROM EXEC
         BM    INCRSCN             BRANCH YES
         SR    R0,R0               SET FIRST FOR EXTERNAL COPY
         B     INCRSCN
         SPACE
SCNLAST  BALR  R14,0               ESTABLISH BASE
         USING *,R14
         LA    R15,12              SET CODE FOR LAST
         L     R0,CPHIPS           GET LAST IN ACTIVE FILE
         TM    CPLFLG5,CPFSELOC    TEST IF CORRECT SELECTION
         BE    INCRSCN             BRANCH YES
         L     R0,CPEXHIPS         ASSUME SELECT FROM EXEC
         BM    INCRSCN             BRANCH YES
         L     R0,=F'99999999'     SET HIGH FOR EXTERNAL
         B     INCRSCN
         SPACE
SCNCURR  BALR  R14,0               ESTABLISH BASE
         USING *,R14
         LA    R15,8               SET CODE FOR CURRENT
         L     R0,CPCURRL          GET CURRENT IN ACITVE FILE
         TM    CPLFLG5,CPFSELOC    TEST IF CORRECT SELECTION
         BE    CURRTST             BRANCH YES
         BO    CVNVALID            INVALID IF FROM EXTERNAL FILE
         L     R0,CPEXLINE         ASSUME SELECT FROM EXEC
CURRTST  LTR   R0,R0               SEE IF VALID LINE NUMBER
         BNM   INCRSCN             BRANCH IF OKAY
         TM    CPLFLG4,CPFNOCUR    IS IT OK NOT TO HAVE CURRENT
         BO    CURRMIN             BR YES TO RETURN -1
         TSEG  'CURRENT LINE NOT SET'   SET ERROR MESSAGE
         B     CVQTYPE
         SPACE
CURRMIN  LH    R0,=H'-1000'        SET R0 TO -1.000
         L     R1,CPGLDL           SET R1 TO GLOBAL DELTA
         B     INCRSCN         NOW GO LOOK FOR ANY INCREMENT
         DROP  R14
         SPACE
SCNEND   DS    0H
         SENTER 5,8,28             END WAS SPECIFIED
         TM    CPLFLG5,CPFSELOC    ONLY SELECT FROM ACTIVE
         BNZ   CVNVALID            BRANCH NOT FROM ACTIVE
         L     R0,CPHIPS           GET CURRENT HIGH NO.
         L     R1,CPGLDL           GET GLOBAL DELTA
         XCALL LOWMULT
         CVCALL ADDER              CALCULATE END
         BM    CVNVALID            BAD IF NEGATIVE
         LA    R15,16              SET CODE FOR END
         B     INCRSCN1            GO GET INCR IF GIVEN
         DROP  R7
         SPACE
SCNLNENO BALR  R14,0               ESTABLISH BASE
         USING *,R14
         LR    R0,R15              PUT NORMAL LINE NO IN R0
         SR    R15,R15             SET CODE FOR NORMAL LINE NO
         B     INCRSCN             GOTSCAN FOR INCREMENT
         SPACE
SCNPREV  BALR  R14,0               SET UP BASE
         USING *,R14
         LH    R1,=H'-1'           SET NEGATIVE INCREMENT
         B     SCNNEXTC            GO JOIN NEXT CODE
         DROP  R14
         SPACE
SCNNEXT  LA    R1,1                SET POSITIVE INCREMENT
SCNNEXTC DS    0H
         SENTER 5,8,28             ESTABLISH BASE & SAVE AREA
         TM    CPLFLG5,CPFSELOC    WHERE IS LINE COMING FROM
         BO    CVNVALID            INVALID IF EXTERNAL FILE
         BM    SCNNEXT1            BRANCH IF FROM EXEC FILE
         L     R0,CPCURRL          GET CURRENT IN ACTIVE FILE
         L     R5,CVLOCATE         USE LOCATE ROUTINE
         B     SCNNEXT2
         SPACE
SCNNEXT1 L     R0,CPEXLINE         USE CURRENT IN EXEC FILE
         L     R5,=A(LOCATEEX)     USE LOCATEEX ROUTINE
SCNNEXT2 CVCALL ADDER              ADD LINE NUMBER & INCREMENT
         BM    NONEXTST            BRANCH IF INVALID LINE
         ST    R0,CPLCNO           STORE LINE NO. TO LOCATE
         LTR   R1,R1               SET CC FOR PREV OR NEXT
         LA    R1,CPLCNO           POINT TO LOCATE LINE
         BM    SCNPREV1            BRANCH IF PREVIOUS LINE
         BALR  R14,R5              GO LOCATE NEXT LINE
         PFREE 11                  FREE ANY LOCATED PAGE
         TM    CPDRPT,CPFNTYT+CPFHIGH DOES IT EXIST
         BNZ   NONEXT              BRANCH NO
         L     R0,CPLCNO           LOAD LINE NO. OF NEXT
         LA    R15,20              SET RETURN CODE
         B     INCRSCN1            GO SCAN FOR INCREMENT
         SPACE
NONEXTST LTR   R1,R1               IS NEXT OR PREV BAD
         BM    NOPREV              BRANCH IF PREVIOUS
NONEXT   SYSQS 1,0,'NEXT'
NONEXT1  TM    CPLFLG4,CPFNOCUR    IS IT OK TO NOT EXIST
         BE    NONEXT2             BR NO TO DO ERROR
         LH    R0,=H'-1000'        SET R0 TO -1.000
         L     R1,CPGLDL           SET R1 TO GLOBAL DELTA
         B     INCRXIT           EXIT TO LINE NUMBER ROUTINE
         SPACE
NONEXT2  TSEG  (1),(0),B           PUT OUT FIRST PART
         TSEG  'LINE DOES NOT EXIST',,M
         B     CVQTYPE
         SPACE
SCNPREV1 BALR  R14,R5              GO LOCATE PREV LINE
         PFREE 11                  FREE ANY LOCATED PAGE
         LA    R15,24              SET RETURN CODE
         L     R0,CPLCNO           ASSUME MATCH
         TM    CPDRPT,CPFMTCH      WAS IT A MATCH
         BO    INCRSCN1            YES, HAVE PREV GO INCR.
         L     R0,CPREVLN          NO, LOAD PREV LINE NUMBER
         TM    CPDRPT,CPFNTYT+CPFFSLN PREV LINE EXIST?
         BZ    INCRSCN1            BRANCH YES TO INCREMENT
NOPREV   SYSQS 1,0,'PREVIOUS'
         B     NONEXT1             GO FINISH MESSAGE
         DROP  R7
         TITLE 'SCAN FOR LINE NUMBER INCREMENT'
* TRY TO FIND A LINE NUMBER INCREMENT
* R0 - LINE NUMBER + INCREMENT (IF FOUND)
* R15 - RESTORED TO VALUE ON ENTRY FROM LNENOPRT
         SPACE
INCRSCN  DS    0H
         SENTER 5,8,28             DEFINE BASE & SAVE AREA
INCRSCN1 EQU   *-2                 ENTRY FROM END LINE NUMBER
         LR    R5,R0               SAVE FIRST LINE NUMBER
         ST    R15,16(,R8)         SAVE R15 RETURN CODE
         L     R1,CPSAVE+4         POINT TO
         ST    R1,20(,R8)          SAVE POINTER
         AL    R1,CPSAVE                END OF LAST TOKE
         CLI   0(R1),C'+'          PLUS INCREMENT
         BE    INCRSCND            YES GO SCAN FOR IT
         CLI   0(R1),C'-'          MINUS INCREMENT
         BE    INCRSCND            YES GO SCAN FOR IT
DELTACAL LTR   R15,R15             REGULAR LINE NO GIVEN
         BNZ   DELTAUSE            NO USE GLOBAL DELTA
         LM    R5,R6,CPSAVE        YES CALC DELTA FROM IT
DELTALP  CLI   0(R6),C'.'          FIND PERIOD
         BE    DELTAPER            YES
         LA    R6,1(,R6)           NO, STEP TO NEXT
         BCT   R5,DELTALP          REDUCE COUNT & LOOP
DELTAUSE L     R1,CPGLDL           SET R1 TO GLOBAL DELTA
INCRXIT  LR    R13,R8              RESTORE R13 FOR EXIT
         LM    R5,R8,0(R13)        RESTORE RETURN REGISTERS
         L     R15,16(,R13)        RESTORE RETURN CODE
         LTR   R6,R6               IS RETURN ADDR ABS OR RELATIV
         BPR   R6                  RETURN IF ABSOLUTE ADDR
         LCR   R14,R6              COMPLEMENT ADDRESS
         B     0(R10,R14)          RETURN NOW
         SPACE
DELTAPER IC    R5,DELTATBL-1(R5)   GET DELTA FROM TABLE
         LTR   R1,R5               SET R1 AND TEST VALUE
         BNZ   INCRXIT             O.K. IT NOT ZERO
         B     DELTAUSE            USE CPGLDL IF ZERO
         SPACE
DELTATBL DC    FL1'0,100,10,1'     TABLE OF DELTAS
         SPACE
INCRSCND TM    CPLFLG4,CPFNOINC    IS THE NO INCR FLAG SET
         BO    DELTACAL            BR YES TO SKIP INCR
         SCAN  INCRPRT             SCAN FOR INCREMENT
         LR    R0,R5               NOTHING RESTORE R0
         B     DELTAUSE            USE DELTA INCREMENT
         SPACE
MINUS    LA    R6,INCOMPL          SET COMPLEMENT RETURN
         B     INCRSCN2            GO GET LINE NUMBER
         SPACE
PLUS     LA    R6,INCROK           SET INCR OK RETURN
INCRSCN2 SCAN  INCRPRT2            SCAN FOR LINE NUMBER
         B     CVABSENT            MISSING
         SPACE
INCOMPL  LCR   R0,R0               COMPLEMENT RESULT
INCROK   LR    R1,R5               SET ENTRY VALUE FOR ADDER
         CVCALL ADDER              ADD LINENO AND INCR
         BNM   DELTACAL            RETURN IF VALUE OKAY
         LM    R0,R1,CPSAVE        GET END OF LAST TOKEN
         AR    R0,R1                    INTO R0
         L     R1,20(,R8)          GET START OF THIS LINE NUMBER
         SR    R0,R1               CALCULATE LENGTH OF NUMBER
         TSEG  (1),(0)             PUT PART OF MESSAGE
         TSEG  ': INVALID VALUE'   SET REST OF MESSAGE
         B     CVQTYPE
         SPACE
LNENOINC LR    R0,R15              NORMAL LINE NUMBER FOUND
         SR    R15,R15             ZERO R15 FOR DELTACAL
         BR    R6                  GO FINISH UP
         SPACE
DELTAINC L     R0,CPGLDL           DELTA SPECIFIED
         BR    R6                  GO FINISH UP
         SPACE
INCRPRT  SCKW  +,PLUS
         SCKW  -,MINUS
         SCKW  ,INVALID
         SPACE
INCRPRT2 SCKW  ,LNENOINC,LN
         SCKW  DELTA,DELTAINC,A
         SCKW  ,INVALID
         TITLE 'SCAN LINE FOR EXECUTE AND/OR FROM'
* SCAN LINE TO SEE IF SELECT FROM ACTIVE, EXECUTE OR EXTERNAL
         SPACE
SCNEXFR  XENTER 7,8,C8+12
         LA    R1,EXFRPRT          SET FOR EITHER FROM OR EXECUTE
         SCANSAVE C8+4(R8)         SAVE SCAN POINTERS FOR RESTORE
         SCAN  (1)                 SCAN FOR FROM OR EXECUTE
SCNEXFR1 SCANRSTR C8+4(R8)         RESTORE SCANNER
         XEXIT 7,8                 EXIT
         SPACE
GOTFROM  OI    CPLFLG5,CPFSELOC    SET TO USE EXTERNAL
         B     SCNEXFR1            GO EXIT
         SPACE
GOTACT   NI    CPLFLG5,255-CPFSELOC   SET TO USE ACTIVE
         B     SCNEXFR1            GO EXIT
         SPACE
GOTEXEC  NI    CPLFLG5,255-CPFSELOC   CLEAR LOCATE FLAGS
         OI    CPLFLG5,CPFSELEX    SET TO USE EXEC
         B     SCNEXFR1            GO EXIT
         SPACE
EXFRPRT  SCKW  EXECUTE,GOTEXEC,A
         SCKW  FROM,GOTFROM,A
         SCKW  ACTIVE,GOTACT,A
         SCKW  ,,
         TITLE 'COMMON ROUTINES, CONSTANTS AND DSECTS'
         LTORG
         EJECT
         COPY  WYLCONST
         EJECT
         COMMON
         SPACE
         END
./ ADD NAME=PROC,SSI=00000169
PROC     TITLE 'PROCGO - INITIALIZATION STUFF'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
         GBLC  &USPS                                            USPS01
&USPS    SETC  '1'                                              USPS01
         AIF   ('&USPS' EQ '1').LBLX1                           USPS01
*                                                               JEP016
*                                                               JEP016
*  MOD JEP016                                                   JEP016
*   CORRECT CODE TO MAKE WYLTSO REENTRANT.                      JEP016
*                                                               JEP016
*                                                               JEP016
*                                                               JEP001
*  MOD JEP001                                                   JEP001
*   IMPLEMENTED DCEC NAMING CONVENTIONS. DENOTED JEP001 66/71   JEP001
*   MODULES AFFECTED: PDIO, PEDS, PUTB, INIT MACROS(DSNWA,CVTSOJEP001
*                                                               JEP001
*                                                               JEP001
.LBLX1   DS   0H                                                USPS01
PROC     CSECT
         SPACE
         WIDENT 001
         SPACE
         USING CPAREA,R12
         SPACE
         XTRNS ,
         TITLE 'ASSIGN - STRING VARIABLE ASSIGNMENT ROUTINE'
* THIS ROUTINE TAKES THE STRING WHOSE LENGTH IS IN R0 AND ADDR
* IN R1 AND ASSIGNS IT AS THE NEW VALUE TO THE STRING VARIABLE
* WHOSE RELATIVE ADDR IS IN R2.
         SPACE
* REGISTER EQU'S
         SPACE
ASNLR    EQU   3
ASNAR    EQU   4
ASNSR    EQU   5
ASNWR    EQU   6
         SPACE
ASSIGN   DS    0H
         XENTER 0,8,*
         AR    R2,VCPR            CONVERT VARIABLE ADDR TO ABS
         L     ASNWR,JCBWAPTR     POINTER TO A WORK BUFFER
         USING DASSIGN,ASNWR      USE BUFFER AS WORK AREA
         USING DVCP,VCPR
         LA    ASNSR,255
         CR    0,ASNSR            TEST SIZE OF STRING
         BNH   ASNOK              ITS ALRIGHT MA
         TSEG  'STRING ASSIGNMENT EXCEEDS 255 CHARS'
         B     CVQTYPE
         SPACE
ASNOK    SR    ASNLR,ASNLR
         IC    ASNLR,0(,2)         GET CURRENT LENGTH OF VAR
         LR    ASNAR,0
         SR    ASNAR,ASNLR      DIFFERENCE BETWEEN NEW & CURRENT LNG
         AH    ASNAR,VCPSVAR       COMPUTE NEW TOTAL LENGTH OF SVARS
         CH    ASNAR,=Y(VCPLSVA2)  CHECK AGAINST MAX
         BH    ASNOVFLW
         STH   ASNAR,VCPSVAR       UPDATE TOTAL LENGTH
         LR    ASNAR,2
         BCTR  ASNAR,0           POINT TO ID BYTE
         IC    ASNSR,0(,ASNAR)    GET ID BYTE
         N     ASNSR,=F'15'        CONVERT TO BINARY
         SH    ASNSR,=Y(VCP#SVAR)  CALC # OF VARS TO END OF STR AREA
         LPR   ASNSR,ASNSR
         IC    ASNLR,1(,ASNAR)      GET LENGTH OF  VAR
         LA    ASNAR,2(ASNLR,ASNAR)  BUMP TO NEXT VAR
         BCT   ASNSR,*-8          LOOP TILL END OF STRING AREA
         IC    ASNLR,0(,2)
         LA    ASNLR,1(ASNLR,2) POINT TO START OF AREA TO BE MOVED
         SR    ASNAR,ASNLR          LENGTH OF AREA TO BE SAVED
         ST    ASNAR,DASNLSV       SAVE FOR LATER USE
         LA    ASNSR,DASNTEMP     POINT TO SAVE AREA
         LR    ASNAR,ASNLR
         L     ASNLR,DASNLSV
         BAL   14,ASNMOVE         MOVE SVAR VALS TO SAVE AREA
         LTR   ASNSR,0
         BZ    ASNSKIP            NULL STRING
         BCTR  ASNSR,0
         EX    ASNSR,ASNSET        ASSIGN NEW VALUE
ASNSKIP  STC   0,0(,2)            SET LENGTH
         L     ASNLR,DASNLSV       GET LENGTH OF SAVED SVARS
         LA    ASNAR,DASNTEMP     POINT TO SAVE AREA
         LA    ASNSR,1(,2)
         AR    ASNSR,0            POINT TO END OF NEW VALUE
         BAL   14,ASNMOVE         RESTORE SVARS
         XEXIT 0,8
         SPACE
ASNSET   MVC   1(0,2),0(1)
         SPACE
ASNMOVE  SH    ASNLR,=H'256'
         BNP   ASNMLAST           MOVE LAST PART OF SAVED SVARS
         MVC   0(256,ASNSR),0(ASNAR)
         LA    ASNSR,256(,ASNSR)    BUMP POINTERS
         LA    ASNAR,256(,ASNAR)
         B     ASNMOVE
         SPACE
ASNMLAST AH    ASNLR,=H'256'       RESTORE LENGTH OF LAST MOVE
         BCTR  ASNLR,0
         EX    ASNLR,ASNSAVE       MOVE LAST BIT
         BR    14                 RETURN
         SPACE
ASNSAVE  MVC   0(0,ASNSR),0(ASNAR)
         SPACE
ASNOVFLW STM   0,1,CPWK1
         TSEG  'STRING OVERFLOW ASSIGNING '''
         LM    0,1,CPWK1
         TSEG  (1),(0)
         TSEG  ''''
         B     CVQTYPE
         DROP  ASNWR,VCPR
         SPACE 3
         LTORG
         TITLE 'CONVERT1 - LINE NUMBER TO STRING CONVERSION ROUTINE'
* REGISTER EQU'S
         SPACE
CONSR    EQU   2                  SCRATCH REGISTER
CONSV    EQU   4                  R8 SAVE REGISTER
         SPACE
* THIS ROUTINE TAKES THE LINE # OR INTEGER IN R0 (R15= TYPE) AND
* CONVERTS IT TO AN EBCDIC STRING, WHOSE LENGTH IS RETURNED IN
* R0 AND ADDRESS IN R1.
         SPACE
CONVERT1 DS    0H
         XENTER 2,8,DCONLNG
         USING DCONVERT,8
         LR    CONSV,8
         LA    CONSR,7
         AR    8,CONSR
         OR    8,CONSR
         XR    8,CONSR            ALIGN TO DOUBLE-WORD
         CVD   0,DCONCVT          CONVERT TO ZONED DECIMAL
         B     *(15)              CHECK TYPE
         B     CON1INT            INTEGER
         MVC   DCONWORK(L'CON1MSK1),CON1MSK1  MOVE IN EDIT PATTERN
         LA    1,DCONWORK+12
         EDMK  DCONWORK(L'CON1MSK1),DCONCVT  CONVERT TO EBCDIC
         LA    0,DCONWORK+17
         SR    0,1                CALC LENGTH OF STRING
         CLI   DCONWORK+17,C'-'   TEST FOR NEGATIVE RESULT
         BNE   CON1RTN            NON-NEGATIVE
CON1NEG  BCTR  1,0
         AH    0,=H'1'
         MVI   0(1),C'-'          ADD MINUS SIGN
         B     CON1RTN
         SPACE
CON1INT  MVC   DCONWORK(L'CON1MSK2),CON1MSK2  MOVE IN EDIT PATTERN
         LA    1,DCONWORK+15
         EDMK  DCONWORK(L'CON1MSK2),DCONCVT  CONVERT TO EBCDIC
         LA    0,DCONWORK+16
         SR    0,1                CALC LENGTH OF STRING
         CLI   DCONWORK+16,C'-'   TEST FOR NEGATIVE RESULT
         BE    CON1NEG            IT'S NEGATIVE
CON1RTN  LR    8,CONSV
         XEXIT 2,8
         SPACE
CON1MSK1 DS    0CL18              LINE # EDIT MASK
         DC    C' '               FILL CHARACTER
         DC    X'202020202020202020202120'
         DC    C'.'
         DC    X'202020',C'-'
CON1MSK2 DS    0CL17              INTEGER EDIT MASK
         DC    C' '               FILL CHARACTER
         DC    13X'20'
         DC    X'2120',C'-'
         SPACE 3
         LTORG
         DROP  8
         TITLE 'CONVERT2 - STRING TO LINE NUMBER CONVERSION ROUTINE'
* THIS ROUTINE TAKES THE STRING WHOSE LENGTH IS IN R0 AND WHOSE
* ADDRESS IS IN R1 AND CONVERTS IT (IF POSSIBLE) TO A LINE #
* OR INTEGER, WHICH IS RETURNED IN R0 (R15= TYPE).
         SPACE
CONVERT2 DS    0H
         XENTER 1,8,*
         SCANSAVE
         SCINIT (1),(0)
         SR    R3,R3               ZERO R3 AS FLAG
         LA    6,CON2LNE
         SCAN  CON2PRT            USE SCANNER TO DO CONVERSION
         SR    15,15              SET VALUE 0 IF NULL
CON2INT  LR    0,15
         LA    15,DEXPFIN         SET TYPE= INTEGER
         B     CON2RTN
         SPACE
CON2LNE  LA    15,DEXPFLN         SET TYPE= LINE #
CON2RTN  LTR   R3,R3               SHOULD VALUE BE COMPLEMENTED
         BNM   *+6                 BRANCH NO
         LCR   R0,R0               MAKE VALUE NEGATIVE
         LR    2,0                SAVE VALUE
         LR    3,15               SAVE TYPE
         SCAN  ,                   SEE IF ANYTHING ELSE
         BNZ   CON2ERR             ERROR IF THERE IS
         SCANRSTR
         LR    0,2                RESTORE VALUE
         LR    15,3               RESTORE TYPE
         XEXIT 1,8
         SPACE
CON2MIN  BCTR  R3,0                SET FLAG FOR LEADING MINUS
CON2PLS  SCAN  CON2PRT2            FINISH SCAN(NO MORE + OR -)
CON2ERR  TSEG  'STRING DOESN''T CONVERT TO ARITHMETIC'
         B     CVQTYPE
         SPACE
CON2PRT  SCKW  -,CON2MIN
         SCKW  +,CON2PLS
CON2PRT2 SCKW  ,CON2INT,I
         SCKW  ,LNENOPRT,PUSH
         SCKW  ,CON2ERR
         SPACE 3
         LTORG
         TITLE 'EXPR - EXPRESSION EVALUATION ROUTINE'
* THIS IS THE EXPRESSION ANALYZER.  IT DOES A TOP DOWN
* PARSE/EVALUATION OF THE EXPRESSION POINTED TO BY R1 (R0
* CONTAINS THE SCAN LENGTH).  THERE ARE 4 EXIT CONDITIONS-
*       (1)  A NULL EXPRESSION RETURNS WITH THE CC=0
*       (2)  A STRING VALUED EXPRESSION WITH R0=LENGTH,
*            R1=RELATIVE ADDRESS AND R15=TYPE
*       (3)  A LINE NUMBER EXPRESSION WITH R0=VALUE,R15=TYPE
*       (4)  AN INTEGER EXPRESSION WITH R0=VALUE,R15=TYPE
*       (5)  AN INVALID EXPRESSION ABORTS TO CVGETCOM
         SPACE
* REGISTER EQU'S
         SPACE
EXPLR    EQU   4                  LINK REG
EXPPR    EQU   3                  STACK POINTER
EXPSR    EQU   6                  SCRATCH REG
EXPB1    EQU   7                  BASE REG 1
EXPB2    EQU   5                  BASE REG 2
         SPACE
* OPERATOR CODES
         SPACE
DEXPCOP  EQU   4                  ||
DEXPAOP  EQU   8                  +
DEXPSOP  EQU   12                 -
DEXPMOP  EQU   16                 *
DEXPDOP  EQU   20                 /
DEXPUMOP EQU   24                 UNARY MINUS
DEXPUPOP EQU   28                  UNARY PLUS
         SPACE
* FLAGS
DEXPFOP  EQU   X'80'              OPERATOR FLAG
         SPACE
DEXPFST  EQU   0                  STRING VAR FLAG
DEXPFIN  EQU   4                  INTEGER TYPE
DEXPFLN  EQU   8                  LINE NUMBER VAR FLAG
         SPACE
EXPR     DS    0H
         XENTER 2,8,*
         USING *+4096,EXPB2
         LA    EXPB2,1(,7)
         LA    EXPB2,4095(,EXPB2)
         OI    CPLFLG4,CPFNOINC   TELL LINE NUMBER PRT TO IGNORE + -
         OI    CPLFLG4,CPFNOCUR   CURRENT,NEXT,ETC ALLOWED NOT TO EXIST
         L     VCPR,CVCPADDR      POINT TO VCP
         USING DVCP,VCPR
EXPINIT  XC    DEXPSP(10),DEXPSP  ZERO POINTERS(OFFSETS)
         SR    EXPSR,EXPSR
         SPM   EXPSR              MASK OFF ARITHMETIC INTERRUPTS
         BAL   EXPLR,EXPPUSH      EVALUATE EXPRESSION
         CLI   8(EXPPR),DEXPFST  TEST TYPE OF VALUE
         BNE   EXPLVAL            LINE NUMBER OR INTEGER
         L     1,4(,EXPPR)
         SR    0,0
         IC    0,DEXPSWA(1)       GET LENGTH
         LA    1,DEXPSWA+1-DVCP(R1) AND RELATIVE ADDR OF STRING
         LA    15,DEXPFST         SET TYPE FLAG
         B     EXPEXIT
         SPACE
EXPLVAL  L     0,4(,EXPPR)       GET VALUE
         SR    15,15              GET TYPE
         IC    15,8(,EXPPR)
EXPEXIT  NI    CPLFLG4,255-CPFNOINC-CPFNOCUR  RESET FLAGS
         LA    EXPSR,1
         LTR   EXPSR,EXPSR        SET CC NON-ZERO
         XEXIT 2,8                RETURN TO CALLER
         SPACE 3
* PROCESS A PRIMARY
         SPACE
EXPSCAN  LA    6,EXPLCON
         L     R1,=A(EXPRVARS)
         SCAN  (1)                PICK OFF A PRIMARY
         B     EXP0EXIT           SYNTAX ERROR OR NULL EXPR
         SPACE
EXPDATE  TIME  BIN                 GET DATE AND TIME
         XCALL FMTTIME             FORMAT IT FOR STRING
         B     EXPSCON             GO FINISH UP
         SPACE
EXPVOL   SR    0,0                ZERO IN CASE NO VOL SET
         LA    1,CPVOLSV          POINT TO VOL SAVE AREA
         TM    CPGFLG,CPFVOLM     TEST FOR NULL VOL
         BZ    EXPSCON            ITS NULL
         LA    0,6                SET LENGTH
         B     EXPSCON
         SPACE
EXPTERM  LA    1,=C'TSO'
         LA    0,3
         B     EXPSCON
         SPACE
EXPPROJ  TM    JCBAFL,JCBSYSPR
         LA    0,7
         BZ    SEVENXS
         LA    1,=C'USXXXXX'
         B     EXPSCON
         SPACE
SEVENXS  LA    1,=C'XXXXXXX'
         B     EXPSCON
         SPACE
EXPREFIX LH    0,CPPFXL           GET LENGTH
         LA    1,CPPFX            AND ADDRESS OF PREFIX
         B     EXPSCON
         SPACE
         AIF   ('&USPS' EQ '1').LBL01                           USPS01
EXPGROUP LA    0,L'CPGRPSV
         LA    1,CPGRPSV
         B     EXPSCON
         SPACE
.LBL01   DS   0H                                                USPS01
         AIF   ('&USPS' NE '1').LBL02                           JEP001
EXPUSER  EQU   *                                                JEP001
         SR    R0,R0                                            JEP001
         IC    R0,CVUSRFLD         PICK UP ID LENGTH            JEP001
         AGO   .LBL03                                           JEP001
.LBL02   DS    0H                                               JEP001
EXPUSER  LA    0,L'CPUSERSV
.LBL03   DS    0H                                               JEP001
         LA    1,CPUSERSV
         B     EXPSCON
         SPACE
EXPMEMB  SR    0,0
         LA    1,CPMEMBSV
         CLI   0(1),X'40'         TEST FOR NULL MEMBER
         BE    EXPSCON            ITS NULL
         LA    1,CPMEMBSV+L'CPMEMBSV
         BCTR  1,0
         CLI   0(1),C' '
         BE    *-6                CHOP OFF TRAILING BLANKS
         LA    0,1(,1)
         LA    1,CPMEMBSV         POINT TO MEMBER
         SR    0,1                CALC LENGTH
         B     EXPSCON
         SPACE
EXPDELTA L     0,CPGLDL           GET CURRENT DELTA
         B     EXPLCON
         SPACE
EXPBREAK L     R0,CVTRAPLN
         B     EXPLCON
         SPACE
EXPLNGTH LH    15,CPLNGTH         GET CURRENT LENGTH
         B     EXPICON
         SPACE
EXPPGCNT LH    15,CPAGCT
         B     EXPICON
         SPACE
EXPLNCNT SLR   15,15
         ICM   15,3,CPLNCT
         B     EXPICON
         SPACE
EXPRANDM TIME  BIN
         N     0,=A(255)
         LR    15,0
         B     EXPICON
         SPACE
EXPCPADD TM    JCBAFL,JCBSYSPR
         BNO   CVNVALID
         LA    15,CPSTART
         ST    15,DEXPWK
         UNPK  DEXPWK(9),DEXPWK(5)
         TR    DEXPWK(8),EXPDSP3-C'0'
         LA    1,DEXPWK+2
         LA    0,6
         B     EXPSCON
         SPACE
EXPPARM  L     1,CVPARM
         LA    1,0(,1)
         SR    0,0
         IC    0,CVPARM
         B     EXPSCON
         SPACE
EXPESCP  SR    0,0
         LA    1,CPESCAPE         POINT TO ESCAPE CHAR
         TM    CPGFLG2,CPESNULL   TEST FOR NULL ESCAPE
         BO    EXPSCON            NULL
         LA    0,1                GIVE LENGTH
         B     EXPSCON
         SPACE
EXPSKIP  SR    0,0
         LA    1,CPSKIP           POINT TO SKIP CHAR
         TM    CPGFLG2,CPSKNULL   TEST FOR NULL SKIP CHAR
         BO    EXPSCON
         LA    0,1
         B     EXPSCON
         SPACE
EXPSIZE  LA    15,DEXPSIZE        GET FUNCTION ID
         BAL   EXPLR,EXPFNGO      FUNCTION PROLOGUE
         BAL   14,EXPSTACK        GET SPACE FOR ARG
         DC    Y(4)
         BAL   EXPLR,EXPRFAS      EVALUATE ARG
         DC    Y(1,DEXPFST)       ARG LIST
         BAL   14,EXPUNSTK        FREE ARG SPACE
         DC    Y(4)
EXPSIZE1 L     1,0(,EXPPR)        GET STRING OFFSET
         SR    0,0
         IC    0,DEXPSWA(1)       GET LENGTH OF STRING
         BAL   EXPLR,EXPSTRDL     DELETE STRING
         BAL   EXPLR,EXPFNEND     FUNCTION EPILOGUE
         LR    15,0
         B     EXPICON
         SPACE
EXPRINDX LA    15,DEXPRNDX         FUNCTION ID
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK         GET SPACE FOR ARGS
         DC    Y(8)                ONLY TWO ARGUMENT
         BAL   EXPLR,EXPRFAS       EAVL ARGS
         DC    Y(2,DEXPFST,DEXPFST) LOOK FOR TWO STRINGS
         BAL   14,EXPUNSTK         FREE ARG SPACE
         DC    Y(8)
         LA    14,EXPRNDX1         POINT TO 'RINDEX' ROUTINE
         LA    15,DEXPRNDX         FUNCTION ID
         B     INDXARGS
         SPACE
EXPINDX1 CR    2,0                COMPARE STRING LENGTHS
         BH    EXPINDX2           STR2 NOT IN STR1
         BCTR  2,0
         EX    2,EXPINDX5         LOOK FOR MATCH
         BE    EXPINDX3           STR2 IN STR1
         LA    2,1(,2)            RESTORE LENGTH OF STR2
         LA    1,1(,1)            BUMP STR1 POINTER
         BCT   0,EXPINDX1         KEEP LOOKING...
         B     EXPINDX2           NOT FOUND
         SPACE
EXPRNDX1 SR    0,2
         BZ    EXPRNDXX           THEY ARE OF EQUAL LENGTH
         BM    EXPINDX2           |STR1| < |STR2|
         AR    1,0
         AH    0,=H'1'
         BCTR  2,0                 -1 FOR EXECUTE
EXPRNDXL EX    2,EXPINDX5          LOOK FOR MATCH
         BE    EXPINDX3
         BCTR  1,0                 BACK UP ONE
         BCT   0,EXPRNDXL          KEEP LOOKING
         B     EXPINDX2
         SPACE
EXPRNDXX BCTR  2,0                 -1 FOR EXECUTE
         EX    2,EXPINDX5
         BE    EXPINDX3
         B     EXPINDX2            NOT FOUND
         SPACE
EXPINDEX LA    15,DEXPINDX        GET FUNCTION ID
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK        GET SPACE FOR ARGS
         DC    Y(8)
         BAL   EXPLR,EXPRFAS      EVAL ARGS
         DC    Y(2,DEXPFST,DEXPFST) ARG LIST
         BAL   14,EXPUNSTK        FREE ARG SPACE
         DC    Y(8)
         LA    R14,EXPINDX1       'INDEX' FUNCTION
         LA    R15,DEXPINDX
INDXARGS CLI   8(EXPPR),2         TEST NUMBER OF ARGS
         BE    EXPINDX0           THERE MUST BE 2
         LA    15,DEXPINDX
         BL    EXPERR3
         B     EXPERR2
         SPACE
EXPINDX0 L     1,4(,EXPPR)        OFFSET OF STR1
         SR    0,0
         IC    0,DEXPSWA(1)       GET LENGTH AND
         LA    1,DEXPSWA+1(1)     ADDR OF STR1
         LTR   0,0                TEST FOR NULL STRING
         BZ    EXPINDX2           NO INDEX IN NULL STRING
         L     EXPSR,0(,EXPPR)    OFFSET OF STR2
         SR    2,2
         IC    2,DEXPSWA(EXPSR)   GET LENGTH AND
         LA    EXPSR,DEXPSWA+1(EXPSR) ADDRESS OF STR2
         LTR   2,2
         BNP   EXPINDX2           NULL STR2
         BR    R14                CALL 'INDEX' OR 'RINDEX'
         SPACE
EXPINDX2 SR    0,0                NOT FOUND
         B     EXPINDX4
         SPACE
EXPINDX3 L     EXPSR,4(,EXPPR)    GET OFFSET OF STR1
         LA    EXPSR,DEXPSWA(EXPSR)
         SR    1,EXPSR            CALC INDEX
         LR    0,1
EXPINDX4 L     1,0(,EXPPR)        GET OFFSET OF STR2
         BAL   EXPLR,EXPSTRDL     DELETE STR2
         L     1,4(,EXPPR)        GET OFFSET OF STR1
         BAL   EXPLR,EXPSTRDL     DELETE STR1
         BAL   EXPLR,EXPFNEND     FUNCTION EPILOGUE
         LR    15,0
         B     EXPICON
         SPACE
EXPXPND  LA    R15,DEXPXPND
         BAL   EXPLR,EXPFNGO
         BAL   R14,EXPSTACK
         DC    Y(4)
         BAL   EXPLR,EXPRFAS
         DC    Y(1,DEXPFST)
         BAL   R14,EXPUNSTK
         DC    Y(4)
         L     R6,0(,EXPPR)
         SR    R2,R2
         IC    R2,DEXPSWA(R6)     LENGTH OF ARG
         LTR   R2,R2
         BNZ   EXPXPND1
         SR    R0,R0
         B     EXPXPND3           RETURN NULL AS RESULT
         SPACE
EXPXPND1 C     R2,=F'128'         CAN'T BE MORE
         BH    EXPXPND4           ERROR
         LA    R6,DEXPSWA+1(R6)   POINT TO STRING
         L     R4,JCBWAPTR        GET A WA
         LR    R0,R2
EXPXPND2 MVC   0(1,R4),0(R6)      MOVE A CHAR
         MVI   1(R4),C' '              AND A BLANK
         LA    R6,1(R6)           ADVANCE 1 ON INPUT
         LA    R4,2(,R4)          ADVANCE 2 ON OUTPUT
         BCT   R2,EXPXPND2
         SLL   R0,1               MULTIPLY LENGTH BY 2
         BCTR  R0,0               AND REDUCE BY 1
EXPXPND3 L     R1,0(,EXPPR)       ARG
         BAL   EXPLR,EXPSTRDL     DELETE IT
         L     R1,JCBWAPTR        RESULT ADDRESS
         BAL   EXPLR,EXPFNEND
         B     EXPSCON
         SPACE
EXPXPND4 SYSQS 1,0,'ARGUMENT OF EXPAND EXCEEDS 128 CHARS'
         B     EXPQTYPE
         SPACE
EXPINDX5 CLC   0(0,1),0(EXPSR)
         SPACE
EXPCORE  TM    JCBAFL,JCBSYSPR
         BNO   CVNVALID
         LA    R15,EXPDUMER
         ST    R15,CVSPIEAD
         LA    R15,DEXPCORE
         BAL   EXPLR,EXPFNGO
         BAL   EXPLR,EXPSFAS
         DC    Y(DEXPFIN+1)
         L     R4,0(,EXPPR)        GET ARGUMENT
         LA    R4,0(,R4)           CLEAR HI ORDER BYTE
         L     R2,16               CVT ADDRESS
         L     R2,164(,R2)         CVTMZ00 VALUE
         S     R2,=F'3'            LESS THREE
         CR    R4,R2               TO BIG AN ADDRESS?
         BH    EXPDUMER            YEP, INVALID ADDRESS
         MVC   DEXPWK(4),0(R4)     MOVE THE 4 BYTES
         L     R15,DEXPWK          RETURN THE VALUE
         BAL   R4,EXPFNEND         CLEAR FUNCTION
         B     EXPICON             RETURN VALUE
         SPACE
EXPTDUMP TM    JCBAFL,JCBSYSPR     SYS PRIV?
         BNO   CVNVALID            NO. DONT DO
         LA    R15,EXPDUMER
         ST    R15,CVSPIEAD
         LA    15,DEXPTDU          FUNCTION ID
         BAL   R4,EXPFNGO          PROLOUGE
         BAL   14,EXPSTACK         GET  ARG  SPACE
         DC    Y(8)
         BAL   R4,EXPRFAS          EVAL  ARGS
         DC    Y(2,DEXPFST,DEXPFIN)
         BAL   14,EXPUNSTK         FREE  ARG  SPACE
         DC    Y(8)
         LA    15,DEXPTDU
         L     R6,0(R3)            #  BYTES  WANTED
         CLI   8(R3),2             #  ARGS
         BH    EXPERR2             MUST  BE   1   OR  2
         BE    EXPTDU1
         CLI   8(R3),1
         BL    EXPERR3
         B     EXPTDU2
         SPACE
EXPTDU1  C     R6,=F'64'           64  BYTES  MAX
         BH    EXPERR4
         LTR   R6,R6
         BNZ   EXPTDU3
EXPTDU2  LA    R6,4
         ST    R6,0(R3)            SET  DEFAULT  4
         SPACE
* GET CORE LOCATION
EXPTDU3  SR    R6,R6
         L     R4,4(R3)            OFFSET
         IC    R6,DEXPSWA(R4)      LEN  OF  STRING
         LA    R1,DEXPSWA+1(R4)    STRING  ADDRESS
         SPACE
* CHECK FOR VALID HEX CONSTANT
EXLET    CLI   0(R1),C'A'
         BL    EXPERR5
         CLI   0(R1),C'F'
         BNH   EXNUMNXT
         CLI   0(R1),C'0'
         BL    EXPERR5
         CLI   0(R1),C'9'
         BH    EXPERR5
EXNUMNXT LA    R1,1(R1)
         BCT   6,EXLET
         LA    R1,DEXPSWA+1(R4)    RESTORE  STRING  ADDR
         IC    R6,DEXPSWA(R4)      GET  STRING  LEN
         LR    R4,R6               SAVE  LENGTH
         BCTR  R6,0
         EX    R6,EXPWHEX2         TR (C=C3) TO FC FOR PACK)
         EX    R4,EXPWHEX3         PACK  (FC  TO  C)
         L     R4,DEXPWK           GET  CORE  ADDR  IN  BIN
         LA    R4,0(R4)            CLEAR HI ORDER BYTE
         L     R2,16
         L     R2,164(R2)          GET  CVTZM00
         L     R6,0(R3)            #  BYTES
         SR    R2,R6
         CR    R4,R2               ADDRESS  IN  CORE?
         BH    EXPDUMER            NO.  BRANCH
         L     R1,JCBWAPTR
         LR    R0,R6               SAVE  # BYES
         BCTR  R6,0
         EX    R6,MOVECORE         MOVE CORE CONTENTS TO BUF
         LA    R2,80(R1)           UNPACK CORE  (128  BYTES MAX)
         LR    R14,R2              SAVE UNPACK LOC
         LR    R6,R0               SAVE LENGTH
         B     EXPTDU13
         SPACE
EXPTDU12 UNPK  0(15,2),0(8,1)      UNPACK  7  BYTES
         LA    2,14(,2)
         LA    1,7(,1)            BUMP POINTERS
EXPTDU13 SH    R6,=H'7'        DECR LENGHT
         BP    EXPTDU12           UNPACK 7 MORE
         AH    R6,=H'7'        RESTORE REMAINING LENGTH
         BNP   EXPTDU14           NONE LEFT
         ST    R6,DEXPWK       SAVE EFFECTIVE L2
         LA    R6,1(,R6)    L2
         AR    R6,R6
         SH    R6,=H'2'        CALC EFFECTIVE L1
         SLL   R6,4(0)         POSITION L1
         O     R6,DEXPWK       'OR' IN L2
         EX    R6,EXPDSP4      UNPACK REMAINDER
EXPTDU14 AR    0,0                CALC LENGTH OF RESULT
         LR    R2,R14              RESTORE  UNPACK  ADDRESS
         LR    R6,0
         BCTR  R6,0
         EX    R6,EXPDSP5          CONVERT TO EBCIDIC
         L     R1,4(R3)            GET  OFFSET
         BAL   R4,EXPSTRDL         DELETE
         LR    R1,R2               RESTORE  ADDRESS
         BAL   R4,EXPFNEND
         B     EXPSCON
         SPACE
MOVECORE MVC   0(0,R1),0(R4)       MOVE  CORE
         SPACE
EXPDUMER SYSQS 1,0,'INVALID ADDRESS'
         B     EXPQTYPE
         SPACE
EXPRSBTR LA    15,DEXPRSUB         FUNCTION ID
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK
         DC    Y(12)               3 ARGS
         BAL   EXPLR,EXPRFAS
         DC    Y(3,DEXPFST,DEXPFIN,DEXPFIN)
         BAL   14,EXPUNSTK         FREE ARG SPA
         DC    Y(12)
         CLI   12(EXPPR),3
         BNH   EXPRSUB0
         LA    15,DEXPRSUB
         B     EXPERR2
         SPACE
EXPRSUB0 CLI   12(EXPPR),2
         BNL   EXPRSUB1
         LA    15,DEXPRSUB
         B     EXPERR3
         SPACE
EXPRSUB1 L     EXPLR,8(,EXPPR)     OFFSET OF STR
         SR    2,2
         IC    2,DEXPSWA(EXPLR)    LENGTH
         L     EXPSR,4(,EXPPR)     OFFSET INTO STR
         SR    2,EXPSR
         LA    2,1(,2)
         ST    2,4(,EXPPR)         NEW VALUE
         B     EXPSBST1
         SPACE
EXPSBSTR LA    15,DEXPSBST        FUNCTION ID
         BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   14,EXPSTACK        GET ARG SPACE
         DC    Y(12)
         BAL   EXPLR,EXPRFAS      EVAL ARGS
         DC    Y(3,DEXPFST,DEXPFIN,DEXPFIN)  ARG LIST
         BAL   14,EXPUNSTK        FREE ARG SPACE
         DC    Y(12)
         CLI   12(EXPPR),3        TEST NUMBER OF ARGS
         BNH   EXPSBST0           MUST BE 2 OR 3
         LA    15,DEXPSBST
         B     EXPERR2
         SPACE
EXPSBST0 CLI   12(EXPPR),2
         BNL   EXPSBST1
         LA    15,DEXPSBST
         B     EXPERR3
         SPACE
EXPSBST1 L     EXPSR,4(,EXPPR)    CHECK POSITION
         L     EXPLR,8(,EXPPR)    OFFSET OF STR1
         LTR   EXPSR,EXPSR         CHECK THAT VALUE IS POSITIVE
         BNP   EXPSUBNV            BAD IF NOT
         C     EXPSR,=F'256'       CHECK POSITIVE VALUE <= 256
         BH    EXPSUBNV            NO GOOD IF NOT
         CLI   12(EXPPR),3        CHECK NUMBER OF ARGS
         BE    EXPSBST2           LENGTH GIVEN
         SR    EXPSR,EXPSR
         IC    EXPSR,DEXPSWA(EXPLR)   LENGTH OF ARG1
         LA    EXPSR,1(,EXPSR)
         S     EXPSR,4(,EXPPR)    CALC IMPLIED LENGTH
         BNM   *+6                 LENGTH O.K. IF >= 0
         SR    EXPSR,EXPSR         USE ZERO (NULL STRING) IF NEG
         ST    EXPSR,0(,EXPPR)    SET IMPLIED LENGTH
EXPSBST2 L     R1,JCBWAPTR
         MVI   0(1),C' '           BLANK THE AREA
         MVC   1(256,1),0(1)          FOR SUBSTR'S OUT OF RANGE
         IC    EXPSR,DEXPSWA(EXPLR)   GET LENGTH OF STRING
         LA    EXPLR,DEXPSWA(EXPLR)   POINT TO STRING
         EX    EXPSR,EXPSBSTM      MOVE STRING TO BUFFER AREA
         L     EXPSR,0(,EXPPR)    GET SPECIFIED LENGTH
         LTR   EXPSR,EXPSR        TEST LENGTH
         BM    EXPSUBNV           INVALID LENGTH
         BZ    EXPSBST3           NULL STRING, IGNORE POSITION
         A     EXPSR,4(,EXPPR)    ADD IN POSITION
         C     EXPSR,=F'256'       CHECK START+LENGTH  <= 256
         BNH   EXPSBST3            BR YES, IT'S OK
EXPSUBNV SYSQS 1,0,'INVALID SUBSTRING'
         B     EXPQTYPE
         SPACE
REVBAD   SYSQS 1,0,'STRING EXCEEDS 255 CHARS'
         B     EXPQTYPE
         SPACE
EXPSBSTM MVC   0(0,1),0(EXPLR)         EX MOVE TO CP BUFF AREA
REVTR    TR    0(0,1),1(EXPSR)
PADZAP   MVC   2(0,1),1(1)         PROPAGATE PAD CHAR.
PADMVC   MVC   0(0,2),1(EXPSR)     MOVE STRING OVER PADDED AREA
TRIMMVC  MVC   6(0,1),1(EXPSR)
TRIMCLI  CLI   0(EXPLR),0          LOOK FOR TRIM CHAR
         SPACE
EXPSBST3 A     1,4(,EXPPR)        BUMP TO SUBSTRING
         ST    1,4(,EXPPR)        SAVE POINTER
         L     1,8(,EXPPR)        GET ARG1 OFFSET
         BAL   EXPLR,EXPSTRDL     DELETE ARG1
         L     1,4(,EXPPR)        GET SUBSTRING POINTER
         L     0,0(,EXPPR)        GET LENGTH
         BAL   EXPLR,EXPFNEND     EPILOGUE
         B     EXPSCON
         SPACE
EXPXLATE LA    R15,DEXPXLAT       FUNC ID
         BAL   EXPLR,EXPFNGO      FUNC INIT
         BAL   R14,EXPSTACK       STACK FOR 3 ARGS
         DC    Y(12)
         BAL   EXPLR,EXPRFAS      EVAL ARGS
         DC    Y(3,DEXPFST,DEXPFST,DEXPFST)
         BAL   R14,EXPUNSTK       FREE STACK
         DC    Y(12)
         LA    R15,DEXPXLAT       FUNC ID
         CLI   12(EXPPR),2        # OF ARGS
         BL    EXPERR3            TOO FEW
         L     R2,8(,EXPPR)       1ST ARG
         SR    R0,R0
         IC    R0,DEXPSWA(R2)     R0 = LEN OF ARG 1
         LTR   R0,R0
         BZ    EXPXLAT4           RETURN NULL AS RESULT
         LA    R1,DEXPSWA+1(R2)   R1 = ADDR OF ARG 1
         L     R4,JCBWAPTR        WORK AREA
         LR    R15,R0
         EX    R15,XLATMVC1       MOVE 1ST ARG TO WA
         L     R2,4(,EXPPR)       2ND ARG
         SR    R4,R4
         IC    R4,DEXPSWA(R2)     R4 = LEN OF ARG 2
         LTR   R4,R4
         BZ    EXPXLAT4           RETURN 1ST ARG AS RESULT
         LA    R2,DEXPSWA(R2)     R2 = ADDR 2ND ARG - 1
         CLI   12(EXPPR),2        IS THERE A 3RD ARG?
         BE    EXPXLAT1           NO, JUST DELETE FUNC
         L     R14,0(,EXPPR)      3RD ARG
         SR    R15,R15
         IC    R15,DEXPSWA(R14)   R15 = LEN OF 3RD ARG
         LTR   R15,R15
         BZ    EXPXLAT1           JUST DELETE FUNC
         LA    R14,DEXPSWA(R14)   R14 = ADDR OF 3RD ARG - 1
         LA    R1,255
         STC   R1,0(R1,R13)       CREATE A
         BCT   R1,*-4                      TR TABLE
         MVI   0(R13),0           0TH BYTE OF TR TABLE
         CR    R15,R4             IS 3RD ARG > 2ND ARG ?
         BNH   *+6                NO, SKIP NEXT
         LR    R15,R4             MAKE 3RD ARG SHORTER
         SR    R4,R15             R4 = # OF DELETE CHARS
EXPXLAT0 IC    R1,0(R15,R2)       GET A SELECT CHAR
         IC    R6,0(R15,R14)      GET ITS XLATION
         STC   R6,0(R1,R13)       PUT IT IN TR TABLE
         BCT   R15,EXPXLAT0
         L     R6,JCBWAPTR        1ST ARG
         LR    R15,R0
         EX    R15,XLATTR         XLATE 1ST ARG
         LTR   R4,R4              ANY DELETE CHARS
         BZ    EXPXLAT4           NO, RETURN RESULT
         L     R6,4(,EXPPR)       2ND ARG
         IC    R15,DEXPSWA(R6)    LEN OF ORIGINAL 2ND ARG
         AR    R2,R15             ADDR OF LAST CHAR OF 2ND ARG
         SR    R2,R4              ADDR OF DELETE CHARS - 1
EXPXLAT1 MVI   0(R13),0           CREATE A
         MVC   1(255,R13),0(R13)           TRT TABLE
         SR    R1,R1
EXPXLAT2 IC    R1,0(R4,R2)        GET A DELETE CHAR
         STC   R4,0(R1,R13)       PUT A NON-0 BYTE IN TABLE
         BCT   R4,EXPXLAT2
         L     R6,JCBWAPTR        XLATED 1ST ARG
         LR    R4,R0              LEN OF 1ST ARG
EXPXLAT3 EX    R4,XLATTRT         FIND A CHAR TO DELETE
         BC    8+2,EXPXLAT4
         BCTR  R0,0               DECR LEN OF 1ST ARG
         SR    R6,R1              - # OF CHARS SKIPPED OVER
         AR    R4,R6              # OF CHARS REMAINING
         BCTR  R4,0               LESS 1 TO BE DELETED
         LR    R6,R1              CONTINUE WHERE STOPPED
         EX    R4,XLATMVC2        MOVE REMAINING 1 PLACE
         B     EXPXLAT3           AND MORE
         SPACE
EXPXLAT4 L     R1,0(,EXPPR)       3RD ARG
         BAL   EXPLR,EXPSTRDL     DELETE IT
         L     R1,4(,EXPPR)       2ND ARG
         BAL   EXPLR,EXPSTRDL     DELETE IT
         L     R1,8(,EXPPR)       1ST ARG
         BAL   EXPLR,EXPSTRDL     DELETE IT
         L     R1,JCBWAPTR        RESULT ADDRESS
         BAL   EXPLR,EXPFNEND     FUNC END
         B     EXPSCON            RETURN A STRING
         SPACE
XLATMVC1 MVC   0(0,R4),0(R1)      TO MOVE 1ST ARG TO WA
XLATTR   TR    0(0,R6),0(R13)     TO XLATE
XLATTRT  TRT   0(0,R6),0(R13)     TO FIND A DELETE CHAR
XLATMVC2 MVC   0(0,R1),1(R1)      TO DELETE A CHAR
         SPACE
EXPREVRS LA    15,DEXPREV          FUNCTION ID
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK
         DC    Y(4)
         BAL   EXPLR,EXPRFAS
         DC    Y(1,DEXPFST)        1 STRING ARGUMENT
         BAL   14,EXPUNSTK
         DC    Y(4)
         LA    15,DEXPREV
         CLI   4(EXPPR),1      ONLY ONE ARG ALOWED
         BH    EXPERR2
         BL    EXPERR3
         SR    2,2
         L     EXPSR,0(,EXPPR)     PTR TO STR
         IC    2,DEXPSWA(EXPSR)    LENGTH
         LA    EXPSR,DEXPSWA(EXPSR)  POINT TO STRING
         LTR   2,2
         BZ    REVNULL             NULL STRING
         C     2,=F'256'
         BNL   REVBAD
         LA    EXPLR,REVTAB+256
         SR    EXPLR,2             BACK UP
         BCTR  2,0                 -1 FOR EX
         L     1,JCBWAPTR        WORK AREA
         EX    2,EXPSBSTM          MOVE PART OF TABLE OVER
         EX    2,REVTR             USE TR TO REVERSE
         LA    2,1(,2)             RESTORE LENGTH
REVNULL  L     1,0(,EXPPR)
         BAL   EXPLR,EXPSTRDL
         L     1,JCBWAPTR
         LR    0,2                 GET LENGTH
         BAL   EXPLR,EXPFNEND
         B     EXPSCON
         SPACE
EXPDUPL  LA    15,DEXPDUPL         FUNCTION ID
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK
         DC    Y(8)                2 ARGS: DUPL(STR,#)
         BAL   EXPLR,EXPRFAS
         DC    Y(2,DEXPFST,DEXPFIN)  EVAL ARGS
         BAL   14,EXPUNSTK
         DC    Y(8)                FREE STACK ENTRY
         LA    15,DEXPDUPL
         CLI   8(EXPPR),2          BOTH ARGS SPECIFIED?
         BH    EXPERR2             TOO MANY
         BL    EXPERR3             TOO FEW
         L     EXPLR,4(,EXPPR)     OFFSET OF STRING 2 B DUPL'D
         LA    EXPLR,DEXPSWA(EXPLR)  POINT TO STRING
         CLI   0(EXPLR),0          NULL STRING
         BZ    DUPLNULL            RETURN NULL STR
         L     1,JCBWAPTR          GET WORK AREA
         SR    2,2
         IC    2,0(,EXPLR)         GET LENGTH
         BCTR  2,0                 -1 FOR EXECUTE
         EX    2,DUPLMVC
         L     EXPLR,0(,EXPPR)     GET THE DUPL FACTOR
         LTR   EXPLR,EXPLR
         BZ    DUPLNULL            RETURN NULL IF 0
         BNP   BADDUPL
         LA    15,1(,2)            LENGTH OF STR
         MR    14,EXPLR            TOTAL WOULD BE LENGTH
         C     15,=F'255'
         BH    DUPLTRNK            MUST TRUNCATE
         BCTR  15,0                -1 FOR EX
         LA    2,3(2,1)            POINT PAST STRING
         EX    15,DUPLDUPL
         LR    2,1                 ADDRESS OF RESULT
         LA    15,1(,15)           TRUE LENGTH OF RESULT
         STH   15,0(,1)            SAVE
DUPLFREE L     1,4(,EXPPR)         ADDR OF STR
         BAL   EXPLR,EXPSTRDL      FREE
         LH    0,0(,2)             LENGTH OF RESULT
         LA    1,2(,2)             POINT TO RESULT
DUPLRET  BAL   EXPLR,EXPFNEND
         B     EXPSCON
         SPACE
DUPLTRNK SYSQS 1,0,'DUPL''D STRING EXCEEDS 255 CHARS'
         B     EXPQTYPE
         SPACE
BADDUPL  SYSQS 1,0,'DUPLICATION FACTOR MUST BE POSITIVE'
         B     EXPQTYPE
         SPACE
DUPLNULL L     R1,4(,EXPPR)
         BAL   EXPLR,EXPSTRDL
         SR    R0,R0
         L     R1,JCBWAPTR
         B     DUPLRET
         SPACE
DUPLMVC  MVC   2(0,1),1(EXPLR)     MOVE STR 2 BE DUPL
DUPLDUPL MVC   0(0,2),2(1)         DUPLICATE
         SPACE
EXPLPAD  LA    15,DEXPLPAD        FUNCTION ID
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK
         DC    Y(12)              PAD(STR,SIZE,PADCHAR)
         BAL   EXPLR,EXPRFAS
         DC    Y(3,DEXPFST,DEXPFIN,DEXPFST)
         BAL   14,EXPUNSTK
         DC    Y(12)
         LA    15,DEXPLPAD
         LA    0,1                 INDICATE LEFT PADDING
         B     PADARG
         SPACE
EXPRPAD  LA    15,DEXPRPAD        FUNCTION ID
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK
         DC    Y(12)              PAD(STR,SIZE,PADCHAR)
         BAL   EXPLR,EXPRFAS
         DC    Y(3,DEXPFST,DEXPFIN,DEXPFST)
         BAL   14,EXPUNSTK
         DC    Y(12)
         LA    15,DEXPRPAD
         SR    0,0                 INDICATE RIGHT PADDING
PADARG   CLI   12(EXPPR),3         THREERARGS?
         BH    EXPERR2
         BE    GETPAD
         CLI   12(EXPPR),2         DEFAULT OF BLANK?
         BL    EXPERR3
         LA    2,X'40'             LOAD A BLANK
         B     DOPAD
         SPACE
GETPAD   L     EXPLR,0(,EXPPR)     GET OFFSET OF CHAR
         LA    EXPLR,DEXPSWA(EXPLR)     POINT TO CHAR
         CLI   0(EXPLR),1          ONLY 1 CHAR ALLOWED
         BNE   BADPAD
         IC    2,1(EXPLR)          GET ACTUAL PAD CHAR
         B     DOPAD               GO PAD
         SPACE
BADPAD   SYSQS 1,0,'PAD STRING MUST BE 1 CHAR'
         B     EXPQTYPE
         SPACE
DOPAD    L     1,JCBWAPTR
         L     EXPLR,4(,EXPPR)     'SIZE' TO PAD TO
         LTR   EXPLR,EXPLR
         BNP   EXPERR4
         C     EXPLR,=F'256'       TOO BIG?
         BNL   REVBAD              YES.. TELL USER
         L     EXPSR,8(,EXPPR)     POINT TO STRING TO BE PADDED
         LA    EXPSR,DEXPSWA(EXPSR)
         SR    14,14
         IC    14,0(,EXPSR)        GET LENGTH
         CR    14,EXPLR            STRING ALREADY TOO LONG?
         BNL   NOPAD               YES.. NO PAD NEEDED
         STC   2,2(,1)             SAVE PADDING CHARACTER
         MVC   3(256,1),2(1)       PROPAGATE PAD CHAR
         STH   EXPLR,0(,1)         SAVE LENGTH
         LTR   14,14               LENGTH OF STR
         BZ    PADRET              NULL STRING.. RETURN ALL PAD
         SPACE
* AT THIS POINT WE NEED TO EXTEND THE STRING.
*   R0=0 ===> EXTEND (PAD) ON THE RIGHT END
*   R0=1 ===> INSERT IN FRONT
*
* FIRST .. ASSUME PADDING TO BE ON THE RIGHT
         SPACE
         LA    2,2(,1)             POINT PAST THE LENGTH
         STH   EXPLR,0(,1)         SAVE RESULTANT LENGTH
         LTR   0,0                 IS IT RPAD?
         BZ    ITSRPAD
         AR    2,EXPLR
         SR    2,14                MOVE UP POINTER
ITSRPAD  BCTR  14,0                -1 FOR EXECUTE
         EX    14,PADMVC
         B     PADRET
         SPACE
NOPAD    STH   14,0(,1)
         BCTR  14,0                -1 FOR EXECUTE
         LA    2,2(,1)
         EX    14,PADMVC
PADRET   ST    1,4(,EXPPR)         ADDRESS OF RESULT
         L     1,0(,EXPPR)
         BAL   EXPLR,EXPSTRDL      DELETE STR1
         L     1,8(,EXPPR)
         BAL   EXPLR,EXPSTRDL      DELETE STR2
         L     1,4(,EXPPR)         POINTER TO STRING
         LH    0,0(,1)             GET LENGTH
         LA    1,2(,1)             POINT TO THE STRING PROPER
         BAL   EXPLR,EXPFNEND
         B     EXPSCON
         SPACE
EXPLTRIM LA    15,DEXPLTRM
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK
         DC    Y(8)
         BAL   EXPLR,EXPRFAS
         DC    Y(2,DEXPFST,DEXPFST)
         BAL   14,EXPUNSTK
         DC    Y(8)
         LA    15,DEXPLTRM
         LA    0,1                 INDICATE LTRIM
         B     TRIMARG
         SPACE
EXPRTRIM LA    15,DEXPRTRM
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK
         DC    Y(8)
         BAL   EXPLR,EXPRFAS
         DC    Y(2,DEXPFST,DEXPFST)
         BAL   14,EXPUNSTK
         DC    Y(8)
         LA    15,DEXPRTRM
         SR    0,0                 INDICATE RTRIM
TRIMARG  CLI   8(EXPPR),2          TWO ARGS?
         BH    EXPERR2             MORE...TOO MANY
         CLI   8(EXPPR),1          ONLY 1? ==> TRIM(...,' ')
         BL    EXPERR3             NO.. NOT ENUF
         BE    TRIMDFLT            USE BLANK AS DEFAULT CHAR
         L     EXPLR,0(,EXPPR)     OFFSET OF TRIM CHAR
         LA    EXPLR,DEXPSWA(EXPLR) POINT TO STRING
         CLI   0(EXPLR),1          LENGTH OF 1 ?
         BNE   BADTRIM
         IC    2,1(,EXPLR)         GET TRIM CHAR
         B     *+8                 BRANCH AROUND DFLT SETTING
         SPACE
TRIMDFLT LA    2,X'40'             SET DEFAULT TO A BLANK
         L     EXPSR,4(,EXPPR)     OFFSET OF STRING TO BE TRIMMED
         LA    EXPSR,DEXPSWA(EXPSR) POINT TO STRING
         SR    14,14
         IC    14,0(,EXPSR)        GET LENGTH
         LTR   14,14               ANYTHING?
         BZ    NULLTRIM            NO .. JUST RETURN THE NULL STR
         L     1,JCBWAPTR          WORK AREA
         STH   14,4(,1)            SAVE ITS LENGTH
         LA    EXPLR,6(,1)         POINTER TO STRING
         ST    EXPLR,0(,1)         SAVE POINTER
         BCTR  14,0                PREPARE TO MOVE THE STRING
         EX    14,TRIMMVC
         LA    14,1(,14)           RESTORE TO ORIG LENGTH
         LTR   0,0                 LTRIM OR RTRIM?
         BZ    RTRIM
         SPACE
* ITS TRIM FROM THE LEFT
LTRIM    EX    2,TRIMCLI           COMPARE AGAINST TRIM CHAR
         BNE   TRIMEND
         LA    EXPLR,1(,EXPLR)
         BCT   14,LTRIM
         B     TRIMEND
         SPACE
RTRIM    AR    EXPLR,14            POINT PAST END OF STRING
         BCTR  EXPLR,0             BACK UP TO LAST CHAR
RTRIML   EX    2,TRIMCLI
         BNE   TRIMENDR
         BCTR  EXPLR,0             BACK UP ANOTHER CHAR
         BCT   14,RTRIML
TRIMENDR LA    EXPLR,6(,1)         POINT TO START OF STRING
TRIMEND  STH   14,4(,1)
         ST    EXPLR,0(,1)
         L     1,0(,EXPPR)         PTR TO TRIM CHAR IF ANY
         BAL   EXPLR,EXPSTRDL      DELETE
         L     1,4(,EXPPR)         PTR TO STRING TRIMMED
         BAL   EXPLR,EXPSTRDL
         L     1,JCBWAPTR
         LH    0,4(,1)
         L     1,0(,1)             ADDRESS OF RESULT
         BAL   EXPLR,EXPFNEND
         B     EXPSCON
         SPACE
BADTRIM  SYSQS 1,0,'TRIM STRING MUST BE 1 CHAR'
         B     EXPQTYPE
         SPACE
NULLTRIM L     1,0(,EXPPR)
         BAL   EXPLR,EXPSTRDL
         L     1,4(,EXPPR)
         BAL   EXPLR,EXPSTRDL
         SR    0,0
         L     1,JCBWAPTR
         BAL   EXPLR,EXPFNEND
         B     EXPSCON
         SPACE
EXPAND   LA    15,DEXPAND         FUNCTION ID
         LA    R2,EXAND           FUNCTION INSTR
         B     EXPLOGIC           ENTER MAIN STREAM
         SPACE
EXPOR    LA    15,DEXPOR          FUNCTION ID
         LA    R2,EXOR            'OC' INSTR
         B     EXPLOGIC
         SPACE
EXPXOR   LA    15,DEXPXOR         FUNCTION ID
         LA    R2,EXXOR           'XC' INSTR
EXPLOGIC BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   14,EXPSTACK        GET SOME STACK SPACE
         DC    Y(8)               TWO THINGIES
         ST    R2,0(,EXPPR)       INSTR ADDR
         ST    R15,4(,EXPPR)      FUNCTION ID
         BAL   14,EXPSTACK        GET ARG SPACE
         DC    Y(8)               2 ARGS
         BAL   EXPLR,EXPRFAS      EVALUATE ARGS
         DC    Y(2,DEXPFST,DEXPFST)  2 STRINGS
         BAL   14,EXPUNSTK        RELEASE STACK SPACE
         DC    Y(8)
         CLI   8(EXPPR),2         BOTH ARGS SUPPLIED?
         BE    EXPXOR1            YEP
         BAL   14,EXPUNSTK        POP STACK
         DC    Y(8)               TO OUR TWO THINGIES
         L     R15,4(,EXPPR)      FUNCTION ID
         CLI   16(EXPPR),2        TOO FEW/MANY?
         BH    EXPERR2            TOO MANY ARGS
         BL    EXPERR3            TOO FEW
         SPACE
* WE HAVE TWO STRING INPUTS..
* FIRST INSURE THAT THEY ARE OF EQUAL LENGTH
* ELSE USE LENGTH OF SHORTER STRING
         SPACE
EXPXOR1  L     1,0(,EXPPR)         OFFSET OF STR2
         SR    15,15
         IC    15,DEXPSWA(1)       LENGTH
         LA    1,DEXPSWA+1(1)      ADDR OF STR2
         L     14,4(,EXPPR)
         SR    0,0
         IC    0,DEXPSWA(14)       LENGTH
         LA    14,DEXPSWA+1(14)    ADDR OF STR1
         SPACE
* NOW HAVE R14 R0 POINT TO THE SHORTER STRING
         CR    0,15
         BNL   XORSET              ALL SET
         XR    R14,R1
         XR    R1,R14
         XR    R14,R1              FLIP R14,R1
         XR    R15,R0
         XR    R0,R15
         XR    R15,R0              FLIP R15,R0
XORSET   LTR   15,15               XOR('','') ?
         BNP   XORDONE             YEA.. NO-OP.. RETURN ''
         BCTR  15,0                -1 FOR EXECUTE
         LR    R2,EXPPR           STACK TOP
         S     R2,=F'8'            BACK UP
         L     R2,0(,R2)           ADDR OF INSTR TO BE EX'D
         EX    15,0(,2)
         LR    R15,R0              LENGTH OF LONGER STRING
         SPACE
* ALL DONE... R14,R15 POINT TO RESULTANT STRING
XORDONE  L     1,0(,EXPPR)         STR1 PTR
         BAL   EXPLR,EXPSTRDL      DELETE
         L     1,4(,EXPPR)         STR2 PTR
         BAL   EXPLR,EXPSTRDL      DELETE IT
         LR    0,15                LENGTH
         LR    1,14                ADDR OF RESULT
         BAL   14,EXPUNSTK         RESTORE OUR STACK
         DC    Y(8)
         BAL   EXPLR,EXPFNEND      EPILOGUE
         B     EXPSCON             EXIT
         SPACE
EXXOR    XC    0(0,14),0(1)
EXOR     OC    0(0,14),0(1)
EXAND    NC    0(0,14),0(1)
         SPACE
EXPNEG   LA    15,DEXPNEG          FNCN ID
         BAL   EXPLR,EXPFNGO
         BAL   14,EXPSTACK
         DC    Y(4)                ONE ARG
         BAL   EXPLR,EXPRFAS       EVAL ARG
         DC    Y(1,DEXPFST)         ALLOWED TYPES
         BAL   14,EXPUNSTK          RELEASE THE SPACE
         DC    Y(4)
         CLI   4(EXPPR),1           ONE ARG?
         LA    15,DEXPNEG
         BL    EXPERR3
         BH    EXPERR2
         L     2,0(,EXPPR)         STR OFFSET
         SR    15,15               CLEAR REG
         IC    15,DEXPSWA(2)       GET LENGTH OF STRING
         LA    14,DEXPSWA+1(2)     POINT TO STRING
         L     1,JCBWAPTR          PTR TO OUR WORK AREA
         STC   R15,0(,R1)          SAVE LENGTH OF RESULT
         LTR   15,15               LENGTH
         BZ    NEGNULL             NOOP .. RETURN NULL
         MVI   1(1),X'FF'          SET UP FOR NEGATION
         EX    15,NEGMVC           FILL UP WITH X'FF'
         BCTR  15,0                -1 FOR EXECUTE
         EX    15,NEGXOR           XOR WITH 'X'FF...FF'
NEGNULL  L     1,0(,EXPPR)         STRING OFFSET
         BAL   EXPLR,EXPSTRDL      DELETE IT
         BAL   EXPLR,EXPFNEND      EPILOGUE
         L     1,JCBWAPTR
         SR    0,0
         IC    0,0(,1)             GET LENGTH
         LA    1,1(,1)             POINT TO STRING
         B     EXPSCON             WE GOT'EM STRING
         SPACE
NEGMVC   MVC   2(0,1),1(1)
NEGXOR   XC    1(0,1),0(R14)
         SPACE
EXPSCONV LA    15,DEXPSCON        GET FUNCTION ID
         BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   14,EXPSTACK        GET SPACE FOR ARGS
         DC    Y(4)
         BAL   EXPLR,EXPRFAS      EVAL ARG
         DC    Y(1,DEXPFST)       ARG LIST
         BAL   14,EXPUNSTK        UNSTACK ARG
         DC    Y(4)
         L     1,0(,EXPPR)        GET OFFSET
         LA    15,DEXPFST         AND TYPE
         BAL   EXPLR,EXPFNEND     EPILOGUE
         B     EXPVRSTK           STACK RESULT
         SPACE
EXPWCONV LA    15,DEXPWCON        FUNCTION ID
         BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   14,EXPSTACK        GET ARG SPACE
         DC    Y(4)
         BAL   EXPLR,EXPRFAS      EVAL ARG
         DC    Y(1,DEXPFLN)       ARG LIST
         BAL   14,EXPUNSTK        FREE ARG SPACE
         DC    Y(4)
         L     0,0(,EXPPR)        GET VALUE
         BAL   EXPLR,EXPFNEND     EPILOGUE
         B     EXPLCON
         SPACE
EXPNCONV LA    15,DEXPNCON        FUNCTION ID
         BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   14,EXPSTACK        GET ARG SPACE
         DC    Y(4)
         BAL   EXPLR,EXPRFAS      EVAL ARG
         DC    Y(1,DEXPFIN)       ARG LIST
         BAL   14,EXPUNSTK        FREE ARG SPACE
         DC    Y(4)
         L     15,0(,EXPPR)       GET VALUE
         BAL   EXPLR,EXPFNEND     EPILOGUE
         B     EXPICON
         SPACE
EXPVRFY  LA    15,DEXPVRF         FUNCTION ID
         BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   14,EXPSTACK        GET ARG SPACE
         DC    Y(8)
         BAL   EXPLR,EXPRFAS      EVAL ARG
         DC    Y(2,DEXPFST,DEXPFST) ARG LIST
         BAL   14,EXPUNSTK        FREE ARG SPACE
         DC    Y(8)
         CLI   8(EXPPR),2         TEST NUMBER OF ARGS
         BE    *+12               MUST BE 2
         LA    15,DEXPVRF
         B     EXPERR3            TOO MANY ARGS...
         SPACE
         L     EXPSR,JCBWAPTR     USE BUFFER AS TRT TABLE
         MVI   0(EXPSR),1         INITIALIZE TRT TABLE
         MVC   1(255,EXPSR),0(EXPSR)
         L     1,0(,EXPPR)        OFFSET OF STR2
         SR    0,0
         IC    0,DEXPSWA(1)       LENGTH AND
         LA    1,DEXPSWA+1(1)     ADDRESS OF STR2
         LTR   0,0
         BP    EXPVRF1            2ND ARG NOT NULL
         L     1,4(,EXPPR)        GET OFFSET OF STR1
         LA    1,DEXPSWA(1)
         SR    15,15
         CLI   0(1),0             TEST FOR STR1 NULL
         BE    EXPVRF3            ITS NULL
         LA    15,1               1ST CHAR NOT IN NULL STRING
         B     EXPVRF3
         SPACE
EXPVRF1  SR    15,15              ZERO R15 AND R14
         LR    14,15
EXPVRF2  IC    14,0(,1)           GET CHAR OF STR2
         STC   15,0(14,EXPSR)     ZERO TRT TABLE
         LA    1,1(,1)            BUMP STR2 POINTER
         BCT   0,EXPVRF2          LOOP FOR ALL CHARS
         L     1,4(,EXPPR)        OFFSET OF STR1
         IC    14,DEXPSWA(1)      LENGTH OF STR1
         LA    1,DEXPSWA+1(1)     ANDDRESS OF STR1
         LTR   14,14              TEST LENGTH OF STR1
         BNP   EXPVRF4            ERROR- STR1 CAN'T BE NULL
         BCTR  14,0
         SR    2,2
         LR    15,1               SAVE STR1 ADDR FOR INDEX CALC
         EX    14,EXPVRF5         VERIFY
         SR    15,2               DECR R15 BY 1 IF ILLEGAL CHAR
         SR    1,15               CALC INDEX (0 IF OK)
         LR    15,1
EXPVRF3  L     1,0(,EXPPR)        GET STR2 OFFSET
         BAL   EXPLR,EXPSTRDL     DELETE STR2
         L     1,4(,EXPPR)        GET STR1 OFFSET
         BAL   EXPLR,EXPSTRDL     DELETE STR1
         BAL   EXPLR,EXPFNEND     EPILOGUE
         B     EXPICON
         SPACE
EXPVRF4  SYSQS 1,0,'RESULT OF VERIFY UNDEFINED'
         B     EXPQTYPE
         SPACE
EXPVRF5  TRT   0(0,1),0(EXPSR)
         SPACE
EXPDSPY  LA    15,DEXPDSP         FUNCTION ID
         BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   EXPLR,EXPSFAS      EVAL ARG
         DC    Y(DEXPFLN+DEXPFIN+DEXPFST+1)  PERMISSABLE TYPES
         CLI   4(EXPPR),DEXPFST   TEST TYPE
         BE    EXPDSP1            STRING
         MVC   DEXPWK,0(EXPPR)    MOVE VALUE TO WORK AREA
         UNPK  DEXPWK(9),DEXPWK(5)  UNPACK
         TR    DEXPWK(8),EXPDSP3-C'0'  CONVERT EBCDIC
         LA    1,DEXPWK           ADDRESS AND
         LA    0,8                LENGTH
         B     EXPDSP2
         SPACE
EXPDSP1  L     1,0(,EXPPR)        GET STRING OFFSET
         SR    0,0
         IC    0,DEXPSWA(1)       GET LENGTH OF STRING
         CH    0,=H'127'          TEST LENGTH
         BNH   EXPDSP11           OK
         SYSQS 1,0,'ARGUMENT OF DISPLAY EXCEEDS 127 CHARS'
         B     EXPQTYPE
         SPACE
EXPDSP11 LA    1,DEXPSWA+1(1)     ADDRESS OF STRING
         L     2,JCBWAPTR         GET BUFFER
         LTR   EXPSR,0            TEST FOR NULL STRING
         BNP   EXPDSP15           NULL
         B     EXPDSP13
         SPACE
EXPDSP12 UNPK  0(15,2),0(8,1)     UNPACK 7 BYTES
         LA    2,14(,2)
         LA    1,7(,1)            BUMP POINTERS
EXPDSP13 SH    EXPSR,=H'7'        DECR LENGHT
         BP    EXPDSP12           UNPACK 7 MORE
         AH    EXPSR,=H'7'        RESTORE REMAINING LENGTH
         BNP   EXPDSP14           NONE LEFT
         ST    EXPSR,DEXPWK       SAVE EFFECTIVE L2
         LA    EXPSR,1(,EXPSR)    L2
         AR    EXPSR,EXPSR
         SH    EXPSR,=H'2'        CALC EFFECTIVE L1
         SLL   EXPSR,4(0)         POSITION L1
         O     EXPSR,DEXPWK       'OR' IN L2
         EX    EXPSR,EXPDSP4      UNPACK REMAINDER
EXPDSP14 AR    0,0                CALC LENGTH OF RESULT
         L     R2,JCBWAPTR
         LR    EXPSR,0
         BCTR  EXPSR,0
         EX    EXPSR,EXPDSP5      CONVERT TO EBCDIC
EXPDSP15 L     1,0(,EXPPR)        OFFSET OF ARG
         BAL   EXPLR,EXPSTRDL     DELETE
         L     R1,JCBWAPTR
EXPDSP2  BAL   EXPLR,EXPFNEND
         B     EXPSCON
         SPACE
EXPDSP3  DC    C'0123456789ABCDEF'
         SPACE
EXPDSP4  UNPK  0(0,2),0(0,1)
EXPDSP5  TR    0(0,2),EXPDSP3-C'0'
         SPACE
EXPWHEX  LA    15,DEXPWHX         FUNCTION ID
         BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   EXPLR,EXPSFAS      EVAL ARG
         DC    Y(DEXPFST+1)       ONLY STRING ARG ALLOWED
         BAL   EXPLR,EXPHEX       CHECK FOR VALID HEX CONSTANT
         LTR   EXPSR,0            CHECK LENGTH
         BNP   EXPWHEX1           NULL
         CH    0,=H'8'            TEST FOR OVERFLOW
         BH    EXPAOVF            OVERFLOW
         BCTR  EXPSR,0
         EX    EXPSR,EXPWHEX2     TRANSLATE FOR PACK
         LR    EXPSR,0            RESTORE TRUE LENGTH
         EX    EXPSR,EXPWHEX3     PACK
         L     0,DEXPWK           GET VALUE
EXPWHEX1 L     1,0(,EXPPR)        GET OFFSET
         BAL   EXPLR,EXPSTRDL     DELETE
         BAL   EXPLR,EXPFNEND     EPILOGUE
         B     EXPLCON
         SPACE
EXPWHEX2 TR    0(0,1),EXPWHEX4-C'A'
EXPWHEX3 PACK  DEXPWK(5),0(0,1)
         SPACE
EXPWHEX4 DC    X'FAFBFCFDFEFF'
         DS    XL(C'0'-C'F'-1)
         DC    C'0123456789'
         SPACE
EXPNHEX  LA    15,DEXPNHX         FUNCTION ID
         BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   EXPLR,EXPSFAS      EVAL ARG
         DC    Y(DEXPFST+1)       ONLY STRING ARG ALLOWED
         BAL   EXPLR,EXPHEX       CHECK FOR VALID HEX CONSTANT
         LTR   EXPSR,0            CHECK LENGTH
         BNP   EXPNHEX1           NULL
         CH    0,=H'8'            TEST FOR OVERFLOW
         BH    EXPAOVF            OVERFLOW
         BCTR  EXPSR,0
         EX    EXPSR,EXPWHEX2     TRANSLATE FOR PACK
         LR    EXPSR,0            RESTORE TRUE LENGTH
         EX    EXPSR,EXPWHEX3     PACK
         L     15,DEXPWK          GET VALUE
EXPNHEX1 L     1,0(,EXPPR)        GET OFFSET
         BAL   EXPLR,EXPSTRDL     DELETE
         BAL   EXPLR,EXPFNEND     EPILOGUE
         B     EXPICON
         SPACE
EXPSHEX  LA    15,DEXPSHX         FUNCTION ID
         BAL   EXPLR,EXPFNGO      PROLOGUE
         BAL   EXPLR,EXPSFAS      EVAL ARG
         DC    Y(DEXPFIN+DEXPFST+1) PERMISSIBLE TYPES
         CLI   4(EXPPR),DEXPFIN   TEST TYPE
         BE    EXPSHEX6           INTEGER
         BAL   EXPLR,EXPHEX       CHECK FOR VALID HEX CONSTANT
         LTR   EXPSR,0            CHECK LENGTH
         BP    EXPSHEX1           NOT NULL
         SR    0,0
         B     EXPSHEX5
         SPACE
EXPSHEX1 BCTR  EXPSR,0
         EX    EXPSR,EXPWHEX2     TRANSLATE FOR PACK
         LR    EXPSR,0            RESTORE TRUE LENGTH
         L     R2,JCBWAPTR        POINTER TO WORK AREA
         B     EXPSHEX3
         SPACE
EXPSHEX2 PACK  0(8,2),0(15,1)     CONVERT 14 BYTES
         LA    2,7(,2)
         LA    1,14(,1)           BUMP POINTERS
EXPSHEX3 SH    EXPSR,=H'14'       DECR STRING LENGTH
         BP    EXPSHEX2           CONVERT 14 MORE
         AH    EXPSR,=H'14'       RESTORE REMAINING LENGTH
         BNP   EXPSHEX4           NONE LEFT
         ST    EXPSR,DEXPWK       SAVE LENGTH
         LA    EXPSR,1(,EXPSR)
         SRL   EXPSR,1(0)         L1= (L2+1)/2
         SLL   EXPSR,4(0)         POSITION L1
         O     EXPSR,DEXPWK       'OR' IN L2
         EX    EXPSR,EXPSHEX7     CONVERT REMAINDER
EXPSHEX4 AH    0,=H'1'            LENGTH OF RESULT=
         SRL   0,1(0)             (ARG LENGTH+1)/2
EXPSHEX5 L     1,0(,EXPPR)        OFFSET OF STRING
         BAL   EXPLR,EXPSTRDL     DELETE STRING
         BAL   EXPLR,EXPFNEND     EPILOGUE
         L     R1,JCBWAPTR        GET RESULT ADDRESS
         B     EXPSCON
         SPACE
EXPSHEX6 LA    0,4
         BCTR  EXPPR,0
         LA    EXPPR,1(,EXPPR)    BUMP POINTER
         CLI   0(EXPPR),0         STRIP LEADING ZEROS
         BNE   *+12
         BCT   0,*-12             MORE ZEROS
         LA    0,1                RETURN 1 ZERO
         LR    1,EXPPR            ADDRESS
         BAL   EXPLR,EXPFNEND     EPILOGUE
         B     EXPSCON
         SPACE
EXPSHEX7 PACK  0(0,2),0(0,1)
         SPACE
* UNARY MINUS AND UNARY PLUS ARE ALWAYS STACKED
EXPREMIN LA    2,DEXPUMOP          SET UNARY MINUS
         B     EXPREMP             GO TO COMMON CODE
         SPACE
EXPREPLS LA    2,DEXPUPOP          SET UNARY PLUS
EXPREMP  BAL   14,EXPSTACK         RESERVE SPACE FOR DUMMY OPERND
         DC    Y(5)
         STC   2,DEXPWK            SAVE OPERATOR FOR STACKING
         SRL   2,3                 GET OPERATOR PRECEDENCE
         B     EXPOPSTK            GO STACK OPERATOR
         SPACE
EXPLOOK  XCALL LOOKUP
         BZ    EXPEXPR            NOT A VARIABLE
         B     *+4(15)            USE TYPE CODE AS INDEX
         SPACE
         B     EXPSVAR            STRING VARIABLE
         B     EXPIVAR            INTEGER VARIABLE
         B     EXPLVAR            LINE # VARIABLE
         SPACE
EXPEXPR  CLI   0(1),C'('          TEST FOR ( <EXPR> )
         BNE   EXPQTST
         BAL   14,EXPSTACK
         DC    Y(8)
         SCANSAVE 0(EXPPR)        SAVE SCAN INFO
         LA    1,1(,1)
         SH    0,=H'2'            DELETE PARENS
         BNP   EXP0EXIT
         BAL   EXPLR,EXPPUSH      EVAL EXPRESSION
         L     1,4(,EXPPR)       GET POINTER/VALUE
         SR    15,15
         IC    15,8(,EXPPR)       GET TYPE CODE
         BAL   14,EXPUNSTK
         DC    Y(8)
         SCANRSTR 0(EXPPR)        RESTORE SCAN POINTER
         B     EXPVRSTK
         SPACE
EXPQTST  CLI   0(1),C''''         TEST FOR STRING
         BE    EXPDQSCN           A STRING CONSTANT
         CLI   0(1),C'"'
         BE    EXPDQSCN           DE-QUOTE STRING
         CLI   0(1),C'#'          A HEX NUMBER COMING UP?
         BE    EXPHEX#            YEP
DOTMARK  TMARK     PUT IN CARR. RETURN IF BUFFER NOT EMPTY
         B     CVNVALID
         SPACE
EXPHEX#  BCT   R0,EXPHEX#1
         B     DOTMARK
         SPACE
EXPHEX#1 LA    R1,1(,R1)           SKIP OVER '#'
         CH    R0,=H'8'           AT MOST 8 HEX CHARS ALLOWED
         BH    HEX2LONG           TSK
         SR    R15,R15            RESULT REGISTER
EXPHEX#2 SR    R14,R14            CLEAR WORK REGISTER
         CLI   0(R1),C'A'         VALID?
         BL    BADHEX#
         CLI   0(R1),C'F'
         BH    TRYDIGIT
         IC    R14,0(R1)          GET CHARACTER
         N     R14,=X'0000000F'   CLEAR ZONE
         LA    R14,9(,R14)        CONV TO HEX
EXPMERGE SLL   R15,4
         OR    R15,R14            BUILD UP THE NUMBER
         LA    R1,1(,R1)          NEXT HEX CHAR
         BCT   R0,EXPHEX#2        GET NEX DIGIT
         B     EXPICON            MAKE IT LOOK LIKE INTEGER
         SPACE
TRYDIGIT CLI   0(R1),C'0'         VALID?
         BL    BADHEX#
         CLI   0(R1),C'9'
         BH    BADHEX#
         IC    R14,0(,R1)
         N     R14,=X'0000000F'    CLEAR ZONE
         B     EXPMERGE
         SPACE
BADHEX#  TSEG  'ILLEGAL HEX CONSTANT'
         B     CVQTYPE            EXIT
         SPACE
HEX2LONG TSEG  'HEX CONSTANT EXCEEDS 8 DIGITS'
         B    CVQTYPE
         SPACE
EXPDQSCN CVCALL DQSCAN            DE-QUOTE STRING
         B     EXPSCON
         SPACE
EXPSVAR  SR    0,0
         IC    0,0(VCPR,R1)       GET LENGTH OF STRING
         LA    1,1(VCPR,R1)       AND ADDRESS
EXPSCON  BAL   EXPLR,EXPSTRMV     MOVE STRING TO STRING AREA
         LA    15,DEXPFST         GET TYPE CODE
         B     EXPVRSTK
         SPACE
EXPIVAR  L     15,0(VCPR,1)       GET VALUE OF INTEGER
EXPICON  LR    1,15
         LA    15,DEXPFIN         SET TYPE
         B     EXPVRSTK           STACK
         SPACE
EXPLVAR  L     0,0(VCPR,1)        GET VALUE OF LINE #
EXPLCON  LA    15,DEXPFLN         GET TYPE CODE
         LR    1,0
EXPVRSTK BAL   14,EXPSTACK        GET STACK SPACE
         DC    Y(5)
         ST    1,0(,EXPPR)        STACK POINTER/VALUE
         STC   15,4(,EXPPR)       SET TYPE CODE
         SPACE
* PROCESS AN OPERATOR
         SPACE
         SCANSAVE DEXPWK          SAVE SCAN INFO IN CASE OF RESCAN
         SCAN  EXPROPS            SCAN FOR OPERATOR
EXPOPCLR SR    2,2                EMPTY STACK
         BCTR  2,0
         B     EXPOPTST
         SPACE
EXPOPFND STC   2,DEXPWK           SAVE OPERATOR
         SRL   2,3                GET OPERATOR PRECEDENCE
EXPOPTST L     EXPPR,DEXPSP       GET STACK POINTER
         SH    EXPPR,=H'8'        DEC TO POSSIBLE LAST OPERATOR
         LA    EXPPR,DEXPSTK(EXPPR)  CALC STACK ADDRESS
         CLI   0(EXPPR),DEXPFOP   MAKE SURE ITS AN OPERATOR
         BNE   EXPOPSTK
         SR    EXPSR,EXPSR
         IC    EXPSR,1(,EXPPR)    GET PRECEDENCE OF TOP STACK OPERATOR
         CR    2,EXPSR            CHECK FOR HIGHER PRECEDENCE OPERATOR
         BNH   EXPEVAL            EVALUATE TERM
EXPOPSTK LTR   2,2                TEST FOR END OF EXPR
         BM    EXPPOP             POP BACK TO NEXT LEVEL
         BAL   14,EXPSTACK
         DC    Y(3)
         STC   2,1(,EXPPR)        STACK OPERATOR PRECEDENCE
         MVI   0(EXPPR),DEXPFOP   FLAG OPERATOR
         MVC   2(1,EXPPR),DEXPWK  STACK OPERATOR
         B     EXPSCAN            LOOK FOR NEXT PRIMARY
         SPACE
* EVALUATE A TERM
         SPACE
EXPEVAL  BAL   14,EXPUNSTK        UNSTACK TOP TWO OPERANDS AND OPERATOR
         DC    Y(13)
         CLI   7(EXPPR),DEXPCOP   TEST FOR CONCATENATION
         BE    EXPCAT
         LA    EXPPR,8(,EXPPR)    POINT TO OPERAND2
         BAL   EXPLR,EXPCVTAR     CONVERT TO ARITH.
         SH    EXPPR,=H'8'        RESET STACK POINTER
         CLI   7(EXPPR),DEXPUMOP   IS IT UNARY MINUS OR PLUS
         BL    EXPEVALA            NO, GO DO NORMAL BINARY OP
         L     0,8(,EXPPR)         GET SECOND OPERAND
         MVC   4(1,EXPPR),12(EXPPR) SET TYPE OF RESULT
         BNE   EXPEVAL4            DONE IF NOT UNARY MINUS
         LCR   0,0                 COMPLEMENT VALUE
         BNO   EXPEVAL4            NOW GO STACK RESULT IF OK
         B     EXPAOVF             ERROR FOR OVERFLOW
         SPACE
EXPEVALA BAL   EXPLR,EXPCVTAR     CONVERT OPERAND1
         CLI   12(EXPPR),DEXPFLN  TEST FOR LINE #
         BE    EXPEVAL1
         CLI   4(EXPPR),DEXPFLN
         BNE   EXPEVAL2           CONVERT TO INTEGER
EXPEVAL1 BAL   EXPLR,EXPCVTLN     CONVERT 1ST OPERAND TO LINE #
         LA    EXPPR,8(,EXPPR)    POINT TO 2ND OPERAND
         BAL   EXPLR,EXPCVTLN     CONVERT TO LINE #
         B     EXPEVAL3
         SPACE
EXPEVAL2 BAL   EXPLR,EXPCVTIN     CONVERT TO INTEGER
         LA    EXPPR,8(,EXPPR)    POINT TO 2ND OPERAND
         BAL   EXPLR,EXPCVTIN     CONVERT TO INTEGER
EXPEVAL3 SH    EXPPR,=H'8'
         L     0,0(,EXPPR)        GET VALUE OF 1ST OPERAND
         SR    15,15
         IC    15,7(,EXPPR)       GET OPERATOR CODE
         BAL   EXPLR,EXPOP(15)    DO IT
EXPEVAL4 BAL   14,EXPSTACK        GET SPACE TO STACK RESULT
         DC    Y(5)
         ST    0,0(,EXPPR)        STACK RESULT
         B     EXPOPTST
         SPACE
EXPOP    DS    0H
         ORG   EXPOP+DEXPAOP      +
         B     EXPADD
         ORG   EXPOP+DEXPSOP      -
         B     EXPSUB
         ORG   EXPOP+DEXPMOP      *
         B     EXPMUL
         ORG   EXPOP+DEXPDOP      /
         B     EXPDIV
         SPACE
EXPADD   A     0,8(,EXPPR)
         BO    EXPAOVF            OVERFLOW
         BR    EXPLR
         SPACE
EXPAOVF  SYSQS 1,0,'ARITHMETIC OVERFLOW'
         B     EXPQTYPE
         SPACE
EXPSUB   S     0,8(,EXPPR)
         BO    EXPAOVF            OVERFLOW
         BR    EXPLR
         SPACE
EXPMUL   LR    1,0
         M     0,8(,EXPPR)        MULTIPLY
         CLI   12(EXPPR),DEXPFLN  TEST TYPE
         BE    EXPMUL0            LINE #
         SLDA  0,32                PUT IN R0 AND TEST OVERFLOW
         BNOR  EXPLR               OK IF NO OVERFLOW
         B     EXPAOVF            OVERFLOW (SIGNS DIFFER)
         SPACE
EXPMUL0  LTR   0,0                TEST RESULT
         BM    EXPMUL1            CHECK FOR UNDEFLOW
         C     0,EXPMUL3          TEST FOR OVERFLOW
         BL    EXPMUL2            OK
         BH    EXPAOVF            OVERFLOW
         CL    1,EXPMUL3+4        TEST FOR OVERLFOW
         BH    EXPAOVF            OVERFLOW
         B     EXPMUL2
         SPACE
EXPMUL1  C     0,EXPMUL4          TEST FOR UNDERFLOW
         BH    EXPMUL2            OK
         BL    EXPAOVF             OVERFLOW
         CL    1,EXPMUL4+4        TEST FOR UNDERFLOW
         BL    EXPAOVF             OVERFLOW
EXPMUL2  D     0,=F'1000'         SCALE RESULT
         LR    0,1
         BR    EXPLR
         SPACE
         DS    0F
EXPMUL3  DC    FL8'2147483647000'
EXPMUL4  DC    FL8'-2147483648000'
         SPACE
* THE DIVIDE CODE MUST CHECK FOR OVERFLOW. THE STRANGE CASE
* THAT CAUSES MOST OF THE PROBLEM IS THAT DIVIDING THE
* SMALLEST NEGATIVE NUMBER (-2147483648) BY -1 CAUSES A
* DIVIDE CHECK THAT CANNOT BE MASKED.
         SPACE
EXPDIV   SRDA  R0,32               SET UP DIVIDEND FOR DIVIDE
         L     EXPSR,8(,EXPPR)     GET DIVISOR
         LPR   R14,EXPSR     GET POSITIVE(ALMOST) DIVISOR IN R14
         BZ    EXPAOVF             ZERO DIVISOR IS OVERFLOW
         SPACE
* THE POSSIBLE OVERFLOW FROM THE LPR IS IGNORED AND COMPARE
*      LOGICAL (CL) COMMANDS ARE USED BELOW INSTEAD.
         SPACE
         CLI   12(EXPPR),DEXPFLN   TEST TYPE OF DIVIDE
         BE    EXPDIV0             BRANCH IF LINE # DIVIDE
         BCT   R14,EXPDIV11        DIVIDE OK IF NOT +1 OR -1
         SPACE
* DIVIDE BY +1 (+1.000) OR -1 (-1.000) REQUIRES SOME EXTRA
*    EXTRA CHECKING.  +1 MEANS NO DIVIDE IS NECESSARY.
*    -1 MEANS THE DIVIDEND MUST BE COMPLEMENTED AND THE
*    RESULT IS OK IF NO OVERFLOW OCCURS.
         SPACE
EXPDIV2  LR    R0,R1               PUT DIVIDEND BACK IN R0
         LTR   EXPSR,EXPSR         TEST SIGN OF DIVISOR
         BPR   EXPLR               DONE IF POSITIVE
         LCR   R0,R0               COMPLEMENT RESULT
         BNOR  EXPLR               DONE IF NO OVERFLOW
         B     EXPAOVF             GO REPORT OVERFLOW
         SPACE
EXPDIV0  CL    R14,=F'1000'        CHECK FOR POSSIBLE OVERFLOW
         BH    EXPDIV1             NONE POSSIBLE IF HIGH
         BE    EXPDIV2             CHECK IF -1.000 OR 1.000
         SPACE
* DIVIDE BY < 1.000 MIGHT OVERFLOW -- CHECK FIRST BY TEST DIVIDE
         DR    R0,R14        DIVIDE USING R14 TO AVOID -1.000
         LPR   R1,R1         MAKE TEST RESULT POSITIVE(ALMOST)
         CL    R1,=F'2147483'      RESULT MUST BE <=
         BH    EXPAOVF             OVERFLOW WOULD OCCUR IF HIGH
         SPACE
* NOW WE KNOW MULTIPLY BY 1000 FOLLOWED BY DIVIDE IS OK
         L     R1,0(,EXPPR)        LOAD DIVIDEND FOR MULTIPLY
EXPDIV1  M     R0,=F'1000'         MULTIPLY BY 1000 BEFORE DIVIDE
EXPDIV11 DR    R0,EXPSR            DO FINAL DIVIDE
         LR    R0,R1               PUT RESULT IN R0
         BR    EXPLR               RETURN
         SPACE
EXPCAT   BAL   EXPLR,EXPCVTST     CONVERT TO STRING
         LA    EXPPR,8(,EXPPR)    POINT TO 2ND OPERAND
         BAL   EXPLR,EXPCVTST     CONVERT TO STRING
         SH    EXPPR,=H'8'
         CLC   0(4,EXPPR),8(EXPPR)  CHECK POSITION OF STRINGS
         BNH   EXPCAT2            STR2 FOLLOWS STR1
         L     EXPSR,JCBWAPTR     USE BUFFER AS WORK AREA
         L     1,8(,EXPPR)        GET OFFSET OF STR2
         LA    1,DEXPSWA(1)       GET ADDR
         SR    14,14
         IC    14,0(,1)           AND LENGTH OF STR1
         EX    14,EXPCATS1        MOVE STR2 TO TEMP
         L     EXPLR,0(,EXPPR)    GET OFFSET OF STR1
         LA    EXPLR,DEXPSWA(EXPLR)  ADDR OF STR1
         IC    14,0(,EXPLR)       AND LENGTH OF STR1
         EX    14,EXPCATS2        MOVE STR1 TO FRONT
         LA    EXPLR,1(14,1)      POINT TO END OF STR1
         IC    14,0(,EXPSR)       GET LENGTH OF STR2
         LR    0,14               SAVE LENGTH OF STR2
         BCTR  14,0
         EX    14,EXPCATS3        CONCATENATE STRINGS
         MVC   0(4,EXPPR),8(EXPPR)  SET OFFSET OF CONCATENATED STR
         B     EXPCAT3
         SPACE
EXPCAT2  L     1,8(,EXPPR)        GET OFFSET OF STR2
         LA    1,DEXPSWA(1)       ADDRESS OF STRING2
         SR    0,0
         IC    0,0(,1)            GET LENGTH OF STRING2
         LTR   EXPSR,0            TEST LENGTH
         BNP   EXPCAT3
         BCTR  EXPSR,0
         EX    EXPSR,EXPCATMV     REMOVE LENGTH BYTE OF 2ND STRING
EXPCAT3  L     1,DEXPSAP
         BCTR  1,0
         ST    1,DEXPSAP          UPDATE STRING AREA POINTER
         L     1,0(,EXPPR)        GET OFFSET OF CONCATENATED STRING
         SR    EXPSR,EXPSR
         IC    EXPSR,DEXPSWA(1)
         AR    EXPSR,0            CALCULATE LENGTH
         CH    EXPSR,=H'255'      TEST AGAINST MAX
         BNH   EXPCAT4            OK
         SYSQS 1,0,'CONCATENATED STRING EXCEEDS 255 CHARS'
         B     EXPQTYPE
         SPACE
EXPCAT4  STC   EXPSR,DEXPSWA(1)   UPDATE LENGTH
         BAL   14,EXPSTACK
         DC    Y(5)
         ST    1,0(,EXPPR)        STACK STRING OFFSET
         MVI   4(EXPPR),DEXPFST   SET TYPE
         B     EXPOPTST
         SPACE
EXPCATMV MVC   0(0,1),1(1)
EXPCATS1 MVC   0(0,EXPSR),0(1)
EXPCATS2 MVC   0(0,1),0(EXPLR)
EXPCATS3 MVC   0(0,EXPLR),1(EXPSR)
         SPACE
* STACK ROUTINES
         SPACE
EXPSTACK L     EXPPR,DEXPSP       GET STACK POINTER
         AH    EXPPR,0(,14)       ADD IN REQUEST
         LA    EXPSR,L'DEXPSTK
         CR    EXPPR,EXPSR        TEST FOR OVERFLOW
         BNH   EXPSTKOK           STILL ROOM
         SYSQS 1,0,'EXPRESSION TOO COMPLEX'
         B     EXPQTYPE
         SPACE
EXPSTKOK ST    EXPPR,DEXPSP       UPDATE STACK POINTER
         SH    EXPPR,0(,14)       RETURN POINTER
         LA    EXPPR,DEXPSTK(EXPPR)
         B     2(,14)
         SPACE
EXPUNSTK L     EXPPR,DEXPSP
         SH    EXPPR,0(,14)       SUBTRACT REQUEST
         ST    EXPPR,DEXPSP       UPDATE STACK POINTER
         LA    EXPPR,DEXPSTK(EXPPR)
         B     2(,14)
         SPACE
* RECURSION ROUTINES
         SPACE
EXPPUSH  BAL   14,EXPSTACK
         DC    Y(4)
         LA    EXPLR,0(,EXPLR)    BE PARANOID, DROP HIGH ORDER BYTE
         ST    EXPLR,0(,EXPPR)    STACK RETURN ADDRESS
         SCINIT (1),(0)           INITIALIZE NEW SCAN
         B     EXPSCAN
         SPACE
EXPPOP   BAL   14,EXPUNSTK        UNSTACK VALUE OF EXPR AND RETRN ADDR
         DC    Y(9)
         SCTELL ,                 RETURN SCAN INFO
         L     EXPLR,0(,EXPPR)    RESTORE RETURN ADDRESS
         BR    EXPLR
         SPACE
* STRING AREA ROUTINES
         SPACE
EXPSTRMV ST    EXPPR,DEXPPRSV     SAVE POINTER
         L     EXPPR,DEXPSAP      GET STRING AREA POINTER
         AR    EXPPR,0
         LA    EXPPR,1(,EXPPR)    CALC AREA NEED FOR STRING
         LA    EXPSR,L'DEXPSWA
         CR    EXPPR,EXPSR        TEST FOR OVERFLOW
         BNH   EXPSTRM1           STILL ROOM
         SYSQS 1,0,'STRING AREA OVERFLOW'
         B     EXPQTYPE
         SPACE
EXPSTRM1 L     EXPSR,DEXPSAP
         ST    EXPPR,DEXPSAP      UPDATE POINTER
         LA    EXPPR,DEXPSWA(EXPSR)
         LTR   EXPSR,0            TEST LENGTH
         BNP   *+10               NULL STRING
         BCTR  EXPSR,0
         EX    EXPSR,EXPSMV       MOVE STRING TO STRING AREA
         STC   0,0(,EXPPR)        ADD LENGTH
         LR    1,EXPPR
         LA    EXPSR,DEXPSWA
         SR    1,EXPSR            CALC OFFSET
         L     EXPPR,DEXPPRSV     RESTORE POINTER
         BR    EXPLR
         SPACE
EXPSMV   MVC   1(0,EXPPR),0(1)
         SPACE
EXPSTRDL LTR   1,1                TEST IF POINTER IS INSIDE ATRING AREA
         BCR   4,EXPLR            LOW- NOT IN STRING AREA
         C     1,DEXPSAP
         BCR   11,EXPLR           HIGH- NOT IN WORK AREA
         ST    EXPPR,DEXPPRSV     SAVE POINTER
         SR    EXPSR,EXPSR
         IC    EXPSR,DEXPSWA(1)   GET LENGTH OF STRING TO BE DELETED
         LA    EXPSR,1(EXPSR,1)
         C     EXPSR,DEXPSAP      IS STRING AT END OF SWA
         BCR   7,EXPLR            NOT AT END DON'T DELETE
         L     EXPPR,DEXPSAP
         SR    EXPSR,EXPSR
         IC    EXPSR,DEXPSWA(1)
         SR    EXPPR,EXPSR        DECR STRING POINTER BY LEN OF STRING
         BCTR  EXPPR,0            DON'T FORGET LENGTH BYTE
         ST    EXPPR,DEXPSAP      UPDATE POINTER
         L     EXPPR,DEXPPRSV     RESTORE POINTER
         BR    EXPLR
         SPACE
* CONVERSION ROUTINES
         SPACE
EXPCVTST CLI   4(EXPPR),DEXPFST   TEST TYPE
         BCR   8,EXPLR            ALREADY A STRING
         SR    15,15
         IC    15,4(,EXPPR)       GET TYPE CODE
         L     0,0(,EXPPR)        GET VALUE
         XCALL CONVERT1           CONVERT TO STRING
         ST    EXPLR,0(,EXPPR)    SAVE RET. ADDR
         BAL   EXPLR,EXPSTRMV     MOVE STRING TO STRING AREA
         L     EXPLR,0(,EXPPR)    RESTORE RET. ADDR
         ST    1,0(,EXPPR)        STACK OFFSET
         MVI   4(EXPPR),DEXPFST   SET TYPE
         BR    EXPLR
         SPACE
EXPCVTLN CLI   4(EXPPR),DEXPFLN   TEST TYPE
         BCR   8,EXPLR            ALREADY A LINE #
         L     0,0(,EXPPR)
         CLI   4(EXPPR),DEXPFIN   TEST FOR INTEGER
         BE    EXPCVTL1           INTEGER
         LR    1,0                OFFSET TO R1
         SR    0,0
         IC    0,DEXPSWA(1)       GET LENGTH AND
         LA    1,DEXPSWA+1(1)     ADDR OF STRING
         XCALL CONVERT2           CONVERT TO ARITH.
         L     1,0(,EXPPR)        GET STRING OFFSET
         ST    EXPLR,0(,EXPPR)    SAVE RETURN ADDR
         BAL   EXPLR,EXPSTRDL     DELETE STRING
         L     EXPLR,0(,EXPPR)    RESTORE RET ADDR
         ST    0,0(,EXPPR)        SAVE VALUE
         STC   15,4(EXPPR)        AND TYPE
         CLI   4(EXPPR),DEXPFLN   TEST FOR LINE #
         BCR   8,EXPLR            RETURN
EXPCVTL1 LPR   1,0                TEST FOR OVERFLOW
         BO    EXPAOVF            OVERFLOW
         C     1,=F'2147483'
         BH    EXPAOVF            OVERFLOW
         LR    1,0                RESTORE SIGN
         M     0,=F'1000'         CONVERT TO LINE #
         ST    1,0(,EXPPR)        SAVE VALUE
         MVI   4(EXPPR),DEXPFLN   SET TYPE
         BR    EXPLR
         SPACE
EXPCVTIN CLI   4(EXPPR),DEXPFIN   TEST TYPE
         BCR   8,EXPLR            ALREADY AN INTEGER
         L     0,0(,EXPPR)
         CLI   4(EXPPR),DEXPFLN   TEST FOR LINE #
         BE    EXPCVTI1           LINE #
         LR    1,0
         SR    0,0
         IC    0,DEXPSWA(1)       GET LENGTH AND
         LA    1,DEXPSWA+1(1)     ADDR OF STRING
         XCALL CONVERT2           CONVERT
         L     1,0(,EXPPR)        GET OFFSET
         ST    EXPLR,0(,EXPPR)    SAVE RET ADDR
         BAL   EXPLR,EXPSTRDL     DELETE STRING
         L     EXPLR,0(,EXPPR)    RESTORE RET ADDR
         ST    0,0(,EXPPR)
         STC   15,4(,EXPPR)       SAVE TYPE
         CLI   4(EXPPR),DEXPFIN   TEST TYPE
         BCR   8,EXPLR            INTEGER
EXPCVTI1 SRDA  0,32(0)
         D     0,=F'1000'         CONVERT TO INTEGER
         ST    1,0(,EXPPR)        SAVE VALUE
         MVI   4(EXPPR),DEXPFIN   SET TYPE
         BR    EXPLR
         SPACE
EXPCVTAR CLI   4(EXPPR),DEXPFST   TEST TYPE
         BCR   7,EXPLR            NOT STRING
         L     1,0(,EXPPR)        GET OFFSET
         SR    0,0
         IC    0,DEXPSWA(1)       GET LENGTH AND
         LA    1,DEXPSWA+1(1)     ADDRESS OF STRING
         XCALL CONVERT2           CONVERT TO ARITHMETIC
         L     1,0(,EXPPR)        GET OFFSET
         ST    EXPLR,0(,EXPPR)    SAVE RETURN ADDRESS
         BAL   EXPLR,EXPSTRDL     DELETE STRING
         L     EXPLR,0(,EXPPR)    RESTORE RETURN ADDR
         ST    0,0(,EXPPR)        SAVE VALUE
         STC   15,4(,EXPPR)       AND TYPE
         BR    EXPLR
         SPACE
EXPHEX   L     EXPSR,JCBWAPTR     USE BUFFER FOR TRT TABLE
         MVI   0(EXPSR),1
         MVC   1(255,EXPSR),0(EXPSR)  INITIALIZE TRT TABLE
         LA    0,16(,0)           NUMBER OF HEX DIGITS
         SR    14,14              CLEAR R14 AND R15
         LR    15,14
         LA    1,EXPDSP3          POINT TO VALID HEX DIGITS
EXPHEX1  IC    14,0(,1)           GET VALID DIGIT
         STC   15,0(14,EXPSR)     ZERO OUT TRT TABLE
         LA    1,1(,1)            BUMP POINTER
         BCT   0,EXPHEX1          GET UM ALL
         L     1,0(,EXPPR)        OFFSET OF STRING
         IC    0,DEXPSWA(1)       LENGTH AND
         LA    1,DEXPSWA+1(1)     ADDR OF STRING
         LTR   0,0                TEST LENGTH
         BCR   8,EXPLR            NULL- EXIT
         LR    14,0
         BCTR  14,0
         EX    14,EXPHEX3         TEST FOR VALID HEX CONSTANT
         BCR   8,EXPLR            OK
         BAL   14,EXPUNSTK        UNSTACK FUNCTION ID
         DC    Y(8)
         LH    15,6(,EXPPR)       GET ID
         B     EXPERR5            ISSUE MESSAGE
         SPACE
EXPHEX3  TRT   0(0,1),0(EXPSR)
         SPACE
* ARGUMENT ROUTINES
         SPACE
EXPRFAS  BAL   14,EXPSTACK
         DC    Y(4)
         LA    EXPLR,0(,EXPLR)    ZERO ARG COUNTER
         ST    EXPLR,0(,EXPPR)    STACK COUNTER/RET ADDR
EXPRFA1  SR    EXPSR,EXPSR
         IC    EXPSR,0(,EXPPR)
         LA    EXPSR,1(,EXPSR)
         STC   EXPSR,0(,EXPPR)    INCR ARG COUNTER
         L     EXPLR,0(,EXPPR)    GET ARG LIST POINTER
         CH    EXPSR,0(,EXPLR)    CHECK # OF ARGS
         BH    EXPRFA2            TOO MANY...
         BAL   EXPLR,EXPPUSH      EVAL AN ARGUMENT
         SH    EXPPR,=H'4'        POINT TO COUNTER/RET ADDR
         IC    EXPSR,0(,EXPPR)
         SLL   EXPSR,1(0)         CONVERT ARG# TO HALFWORD INDEX
         L     EXPLR,0(,EXPPR)    GET ARG LIST POINTER
         LH    EXPLR,0(EXPSR,EXPLR)  GET TYPE OF THIS ARG
         L     EXPLR,EXPCVTBL(EXPLR)  GET ADDR OF CONVERSION ROUTINE
         LA    EXPPR,8(,EXPPR)    POINT TO ARG
         BALR  EXPLR,EXPLR        CONVERT TO PROPER TYPE
         MVC   DEXPWK,0(EXPPR)    SAVE VALUE
         SH    EXPPR,=H'8'        POINT TO COUNTER/RET ADDR
         SR    EXPSR,EXPSR        RESTORE ARG COUNTER
         IC    EXPSR,0(,EXPPR)
         SLL   EXPSR,2(0)         CONVERT TO FULLWORD INDEX
         SR    EXPPR,EXPSR        CALC ARG STACK ADDR
         MVC   0(4,EXPPR),DEXPWK  STACK VALUE OF ARG
         AR    EXPPR,EXPSR
         SCTELL ,
         LTR   0,0
         BP    EXPRFA1            MORE ARGS TO EVAL
         BAL   14,EXPUNSTK        UNSTACK RET ADD
         DC    Y(4)
         L     EXPLR,0(,EXPPR)
         LH    EXPSR,0(,EXPLR)    GET ARG COUNT
         LA    EXPSR,1(,EXPSR)    BUMP FOR ARG COUNT
         SLL   EXPSR,1(0)         CALC LENGTH OF ARG LIST
         B     0(EXPSR,EXPLR)     RETURN, SKIPPING ARG LIST
         SPACE
EXPRFA2  LH    EXPSR,0(,EXPLR)    GET # OF ARGS
         LA    EXPSR,2(,EXPSR)    BUMP BY 2 FOR SCAN INFO
         SLL   EXPSR,2(0)         CALC SPACE OF ARGS AND SCAN INFO
         SR    EXPPR,EXPSR        DECR STACK POINTER
         LH    15,6(,EXPPR)       GET FUNCTION ID
         B     EXPERR2
         SPACE
EXPSFAS  BAL   14,EXPSTACK        GET SPACE FOR RET. ADDR AND ARG
         DC    Y(8)
         ST    EXPLR,4(,EXPPR)    STACK RETURN ADDR
         BAL   EXPLR,EXPPUSH      EVAL ARG
         BAL   14,EXPUNSTK        UNSTACK RET. ADDR AND ARG
         DC    Y(8)
         SCTELL ,
         LTR   0,0                TEST FOR MORE THAN 1 ARG
         BP    EXPSFA1            ERROR
         L     EXPLR,4(,EXPPR)    RESTORE RETURN ADDRESS
         SR    15,15
         IC    15,16(,EXPPR)      GET TYPE
         LTR   15,15              CHECK FOR 0
         BNZ   *+8                NON ZERO
         LA    15,1               BUMP FOR TYPE TEST
         EX    15,EXPSFA3         CHECK PERMISSIBLE TYPES
         BNO   EXPSFA2            ERROR
         MVC   0(4,EXPPR),12(EXPPR) MOVE VAL TO TOP OF STACK
         MVC   4(1,EXPPR),16(EXPPR) AND TYPE
         B     2(,EXPLR)
         SPACE
EXPSFA1  LA    EXPLR,EXPERR2      TOO MANY ARGS
         B     *+8
         SPACE
EXPSFA2  LA    EXPLR,EXPERR4      INVALID TYPE
         BAL   14,EXPUNSTK        UNSTACK FUNCTION ID
         DC    Y(8)
         LH    15,6(,EXPPR)       GET ID
         BR    EXPLR
         SPACE
EXPSFA3  TM    1(EXPLR),0
         SPACE
EXPFNGO  CLI   0(1),C'('          CHECK SYNTAX
         BNE   CVNVALID
         BAL   14,EXPSTACK
         DC    Y(8)
         SCANSAVE 0(EXPPR)        STACK SCAN INFO
         STH   15,6(,EXPPR)       AND FUNCTION ID
         LA    1,1(,1)
         SH    0,=H'2'            DELETE PARENS
         BCR   2,EXPLR
         B     EXPERR1
         SPACE
EXPFNEND BAL   14,EXPUNSTK        UNSTACK SCAN INFO
         DC    Y(8)
         SCANRSTR 0(EXPPR)
         BR    EXPLR
         SPACE
         DS    0F
EXPCVTBL DC    A(EXPCVTST)        STRING CONVERSION ROUTINE
         DC    A(EXPCVTIN)        INTEGER CONVERSION ROUTINE
         DC    A(EXPCVTLN)        LINE # CONVERSION ROUTINE
         SPACE
* MISC. THINGS
         SPACE
EXP0EXIT LA    EXPSR,4
         CL    EXPSR,DEXPSP       CHECK STACK
         BL    EXPNOOP            THERE'S SOMETHING THERE
         NI    CPLFLG4,255-CPFNOINC-CPFNOCUR
         SR    15,15              SET CC=0 AS NULL EXPR FLAG
         XEXIT 2,8
         SPACE
* ERROR MESSAGES
         SPACE
EXPNOOP  SYSQS 1,0,'MISSING OPERAND'
         B     EXPQTYPE
         SPACE
EXPERR1  BAL   EXPLR,EXPFNAME(15) GET FUNCTION NAME
         TSEG  (1),(0),B           PUT OUT FUNCTION NAME
         SYSQS 1,0,'FUNCTION HAS NO ARGUMENTS'
         B     EXPQTYPE
         SPACE
EXPERR2  BAL   EXPLR,EXPFNAME(15) GET FUNCTION NAME
         TSEG  (1),(0),B           PUT OUT FUNCTION NAME
         SYSQS 1,0,'FUNCTION HAS TOO MANY ARGUMENTS'
         B     EXPQTYPE
         SPACE
EXPERR3  BAL   EXPLR,EXPFNAME(15) GET FUNCTION NAME
         TSEG  (1),(0),B           PUT OUT FUNCTION NAME
         SYSQS 1,0,'FUNCTION MISSING ARGUMENT'
         B     EXPQTYPE
         SPACE
EXPERR4  BAL   EXPLR,EXPFNAME(15)
         TSEG  (1),(0),B
         SYSQS 1,0,'FUNCTION PASSED INVALID ARGUMENT'
         B     EXPQTYPE
         SPACE
EXPERR5  BAL   EXPLR,EXPFNAME(15)
         TSEG  (1),(0),B
         SYSQS 1,0,'PASSED INVALID HEX CONSTANT'
         B     EXPQTYPE
         SPACE
EXPABRT  SYSQS 1,0,'NO VARIABLE COMMAND PAGE, COMMAND ABORTED'
EXPQTYPE TSEG  (1),(0)             ADD MESSAGE TO BUFFER
         B     CVQTYPE
         SPACE
EXPFNAME DS    0H
         SPACE
DEXPSIZE EQU   *-EXPFNAME
         SYSQS 1,0,'SIZE'
         BR    EXPLR
         SPACE
DEXPINDX EQU   *-EXPFNAME
         SYSQS 1,0,'INDEX'
         BR    EXPLR
         SPACE
DEXPTDU  EQU   *-EXPFNAME
         SYSQS 1,0,'TDUMP'
         BR    EXPLR
         SPACE
DEXPSBST EQU   *-EXPFNAME
         SYSQS 1,0,'SUBSTR'
         BR    EXPLR
         SPACE
DEXPSCON EQU   *-EXPFNAME
         SYSQS 1,0,'SCONVERT'
         BR    EXPLR
         SPACE
DEXPWCON EQU   *-EXPFNAME
         SYSQS 1,0,'WCONVERT'
         BR    EXPLR
         SPACE
DEXPNCON EQU   *-EXPFNAME
         SYSQS 1,0,'NCONVERT'
         BR    EXPLR
         SPACE
DEXPVRF  EQU   *-EXPFNAME
         SYSQS 1,0,'VERIFY'
         BR    EXPLR
         SPACE
DEXPDSP  EQU   *-EXPFNAME
         SYSQS 1,0,'DISPLAY'
         BR    EXPLR
         SPACE
DEXPWHX  EQU   *-EXPFNAME
         SYSQS 1,0,'WHEX'
         BR    EXPLR
         SPACE
DEXPSHX  EQU   *-EXPFNAME
         SYSQS 1,0,'SHEX'
         BR    EXPLR
         SPACE
DEXPNHX  EQU   *-EXPFNAME
         SYSQS 1,0,'NHEX'
         BR    EXPLR
         SPACE
DEXPRNDX EQU   *-EXPFNAME          RINDEX
         SYSQS 1,0,'RINDEX'
         BR    EXPLR
         SPACE
DEXPRSUB EQU   *-EXPFNAME          RSUBSTR
         SYSQS 1,0,'RSUBSTR'
         BR    EXPLR
         SPACE
DEXPREV  EQU   *-EXPFNAME          REVERSE
         SYSQS 1,0,'REVERSE'
         BR    EXPLR
         SPACE
DEXPRVER EQU   *-EXPFNAME          RVERIFY
         SYSQS 1,0,'RVERIFY'
         BR    EXPLR
         SPACE
DEXPLPAD EQU   *-EXPFNAME
         SYSQS 1,0,'LPAD'
         BR    EXPLR
         SPACE
DEXPRPAD EQU   *-EXPFNAME
         SYSQS 1,0,'RPAD'
         BR    EXPLR
         SPACE
DEXPLTRM EQU   *-EXPFNAME
         SYSQS 1,0,'LTRIM'
         BR    EXPLR
         SPACE
DEXPRTRM EQU   *-EXPFNAME
         SYSQS 1,0,'RTRIM'
         BR    EXPLR
         SPACE
DEXPDUPL EQU   *-EXPFNAME
         SYSQS 1,0,'DUPL'
         BR    EXPLR
         SPACE
DEXPXOR  EQU   *-EXPFNAME
         SYSQS 1,0,'XOR'
         BR    EXPLR
         SPACE
DEXPOR   EQU   *-EXPFNAME
         SYSQS 1,0,'OR'
         BR    EXPLR
         SPACE
DEXPAND  EQU   *-EXPFNAME
         SYSQS 1,0,'AND'
         BR    EXPLR
         SPACE
DEXPNEG  EQU   *-EXPFNAME
         SYSQS 1,0,'NEGATE'
         BR    EXPLR
         SPACE
DEXPCORE EQU   *-EXPFNAME
         SYSQS 1,0,'CORE'
         BR    EXPLR
         SPACE
DEXPXLAT EQU   *-EXPFNAME
         SYSQS 1,0,'XLATE'
         BR    EXPLR
         SPACE
DEXPXPND EQU   *-EXPFNAME
         SYSQS 1,0,'EXPAND'
         BR    EXPLR
         SPACE
* PRTS
         SPACE
EXPROPS  SCKW  +,EXPPLUS
         SCKW  -,EXPMINUS
         SCKW  *,EXPSTAR
         SCKW  /,EXPSLASH
         SCKW  |,EXPBAR,P
         SCKW  ,EXPRSCN
         SPACE
EXPPLUS  LA    2,DEXPAOP          GET INTERNAL OPERATOR CODE
         B     EXPOPFND
         SPACE
EXPMINUS LA    2,DEXPSOP
         B     EXPOPFND
         SPACE
EXPSTAR  LA    2,DEXPMOP
         B     EXPOPFND
         SPACE
EXPSLASH LA    2,DEXPDOP
         B     EXPOPFND
         SPACE
EXPBAR   BCT   0,EXPRSCN
         CLI   0(1),C'|'          TEST FOR CONCATENATION
         BNE   EXPRSCN            LET SOMEONE ELSE FIGURE IT OUT
         LA    2,DEXPCOP          GET CONCATENATION CODE
         B     EXPOPFND
         SPACE
EXPRSCN  SCANRSTR DEXPWK          BACKSPACE SCAN TO UNRECOGNIZED TOKEN
         B     EXPOPCLR
         EJECT
         LTORG
         SPACE 3
         DS    0D
REVTAB   DC    AL1(255,254,253,252,251,250)
         DC    AL1(249,248,247,246,245,244,243,242,241,240)
         DC    AL1(239,238,237,236,235,234,233,232,231,230)
         DC    AL1(229,228,227,226,225,224,223,222,221,220)
         DC    AL1(219,218,217,216,215,214,213,212,211,210)
         DC    AL1(209,208,207,206,205,204,203,202,201,200)
         DC    AL1(199,198,197,196,195,194,193,192,191,190)
         DC    AL1(189,188,187,186,185,184,183,182,181,180)
         DC    AL1(179,178,177,176,175,174,173,172,171,170)
         DC    AL1(169,168,167,166,165,164,163,162,161,160)
         DC    AL1(159,158,157,156,155,154,153,152,151,150)
         DC    AL1(149,148,147,146,145,144,143,142,141,140)
         DC    AL1(139,138,137,136,135,134,133,132,131,130)
         DC    AL1(129,128,127,126,125,124,123,122,121,120)
         DC    AL1(119,118,117,116,115,114,113,112,111,110)
         DC    AL1(109,108,107,106,105,104,103,102,101,100)
         DC    AL1(99,98,97,96,95,94,93,92,91,90)
         DC    AL1(89,88,87,86,85,84,83,82,81,80)
         DC    AL1(79,78,77,76,75,74,73,72,71,70)
         DC    AL1(69,68,67,66,65,64,63,62,61,60)
         DC    AL1(59,58,57,56,55,54,53,52,51,50)
         DC    AL1(49,48,47,46,45,44,43,42,41,40)
         DC    AL1(39,38,37,36,35,34,33,32,31,30)
         DC    AL1(29,28,27,26,25,24,23,22,21,20)
         DC    AL1(19,18,17,16,15,14,13,12,11,10)
         DC    AL1(9,8,7,6,5,4,3,2,1,0)
         EJECT
EXPRVARS SCKW  ,EXPICON,I
         SCKW  ,LNENOPRT,PUSH
         SCKW  DATE,EXPDATE,A
         SCKW  VOLUME,EXPVOL,A
         SCKW  PREFIX,EXPREFIX,A
         SCKW  USER,EXPUSER,A
         SCKW  MEMBER,EXPMEMB,A
         AIF   ('&USPS' EQ '1').LBL04                           USPS01
         SCKW  GROUP,EXPGROUP,A
.LBL04   DS   0C                                                USPS01
         SCKW  LENGTH,EXPLNGTH,A
         SCKW  PAGES,EXPPGCNT,A
         SCKW  LINES,EXPLNCNT,A
         SCKW  RANDOM,EXPRANDM,A
         SCKW  CP,EXPCPADD
         SCKW  PARM,EXPPARM
         SCKW  TERMINAL,EXPTERM,A
         SCKW  PROJECT,EXPPROJ,A
         SCKW  DELTA,EXPDELTA,A
         SCKW  BREAK,EXPBREAK,A
         SCKW  ESCAPE,EXPESCP,A
         SCKW  SKIP,EXPSKIP,A
         SCKW  SIZE,EXPSIZE,(P,A)
         SCKW  INDEX,EXPINDEX,(P,A)
         SCKW  LINDEX,EXPINDEX,(P,A)
         SCKW  TDUMP,EXPTDUMP,(P,A)
         SCKW  CORE,EXPCORE,(P,A)
         SCKW  XLATE,EXPXLATE,(P,A)
         SCKW  EXPAND,EXPXPND,(P,A)
         SCKW  SUBSTR,EXPSBSTR,(P,A)
         SCKW  LSUBSTR,EXPSBSTR,(P,A)
         SCKW  SCONVERT,EXPSCONV,(P,A)
         SCKW  WCONVERT,EXPWCONV,(P,A)
         SCKW  NCONVERT,EXPNCONV,(P,A)
         SCKW  VERIFY,EXPVRFY,(P,A)
         SCKW  LVERIFY,EXPVRFY,(P,A)
         SCKW  SHEX,EXPSHEX,(P,A)
         SCKW  NHEX,EXPNHEX,(P,A)
         SCKW  WHEX,EXPWHEX,(P,A)
         SCKW  S,EXPSHEX,(P,A)
         SCKW  N,EXPNHEX,(P,A)
         SCKW  W,EXPWHEX,(P,A)
         SCKW  DISPLAY,EXPDSPY,(P,A)
         SCKW  RINDEX,EXPRINDX,(P,A)
         SCKW  RSUBSTR,EXPRSBTR,(P,A)
         SCKW  REVERSE,EXPREVRS,(A,P)
         SCKW  PAD,EXPRPAD,P
         SCKW  RPAD,EXPRPAD,(P,A)
         SCKW  LPAD,EXPLPAD,(P,A)
         SCKW  TRIM,EXPRTRIM,(P,A)
         SCKW  RTRIM,EXPRTRIM,(P,A)
         SCKW  LTRIM,EXPLTRIM,(P,A)
         SCKW  DUPL,EXPDUPL,(P,A)
         SCKW  XOR,EXPXOR,P
         SCKW  OR,EXPOR,P
         SCKW  AND,EXPAND,P
         SCKW  NEGATE,EXPNEG,(P,A)
         SCKW  +,EXPREPLS
         SCKW  -,EXPREMIN
         SCKW  ,EXPLOOK
         SPACE 3
         DROP  VCPR,EXPB2
         EJECT
*  FMTTIME--SUBROUTINE TO FORMAT THE TIME AND DATE.
*    INPUT:  TIME IN R0, DATE IN R1 (AS RETURNED BY TIME BIN)
*    OUTPUT: R1 POINTS TO THE FORMATTED OUTPUT AREA, FMTTI,
*            AND R0 CONTAINS THE LENGTH OF THAT AREA.  OUTPUT
*            STRING IS OF THE FORMAT:
*
*                HH:MM:SS MM/DD/YY (YY.DDD)
         SPACE
FMTTIME  XENTER 2,8,*              SAVE REGS
         AIF   ('&USPS' NE '1').LBL05                           USPS01
         LA   R3,CPWK1             PICK UP WORK AREA ADDR       JEP016
         MVC  0(FMTSIZE,R3),FMTTI   MOVE IN PATTERNS            JEP016
         LR   R2,R1                 SAVE R1 FOR A MIN           JEP016
         USING CPWK1,R3             USE WORK AREA               JEP016
         LR   R1,R3                 POINT R1 TO W/A             JEP016
         DROP R3                                                JEP016
         XCALL TIME                CALL TIME ROUTINE            JEP016
         LA    R3,CPWK1            REINITIALIZE R3              JEP016
         LR   R0,R2                                             JEP016
         USING CPWK1,R3                                         JEP016
         LA   R1,9(R3)             POINT R1 TO TIME AREA        JEP016
         DROP R3                                                JEP016
         XCALL DATE               GET FIRST DATE                JEP016
         LA    R3,CPWK1            REINITIALIZE R3              JEP016
         USING CPWK1,R3                                         JEP016
         MVC  18(7,R3),FMTDA2MS                                 JEP016
         ST   R2,CPDOUB                                         JEP016
         ED   18(7,R3),CPDOUB+1                                 JEP016
         MVI  18(3),C'('                                        JEP016
         LR   R1,R3                TELL EM LOCATION             JEP016
         LA   R0,26                TELL EM HOW LONG             JEP016
         AGO  .LBL06                                            JEP016
.LBL05   DS   0C                                                USPS01
         LA    R3,CPWK1
         MVC   0(FMTSIZE,R3),FMTTI
         LR    R2,1                SAVE DATE
         USING FMTTI,R3
         LA    1,FMTTI             POINT TO OUTPUT AREA
         DROP  R3
         XCALL TIME                FORMAT TIME
         LR    0,R2                RECOVER DATE
         USING FMTTI,R3
         LA    1,FMTDA1            OUTPUT AREA FOR 1ST DATE
         DROP  R3
         XCALL DATE
         USING FMTTI,R3
         MVC   FMTDA2,FMTDA2MS     COPY EDIT MASK
         ST    R2,CPDOUB
         ED    FMTDA2,CPDOUB+1     EDIT JULIAN DATE
         MVI   FMTDA2,C'('         REPLACE FILL CHAR
         LA    1,FMTTI             POINT TO OUTPUT AREA
         LA    0,FMTDA2E-FMTTI     LENGTH OF ENTIRE AREA
.LBL06   DS   0C                                                USPS01
         XEXIT 2,8                 RETURN
         DROP  R3
         SPACE
FMTTI    DC    C'HH:MM:SS'         TIME IN FORMAT HH:MM:SS
FMTTIE   EQU   *
         DC    C' '
FMTDA1   DC    C'MM/DD/YY'         1ST DATE IN FORMAT MM/DD/YY
FMTDA1E  EQU   *
         DC    C' '
FMTDA2   DC    C'(YY.DDD',C')'     2ND DATE (JULIAN)
FMTDA2E  EQU   *
         SPACE
FMTDA2MS DC    C' ',X'2120',C'.',X'202020'  DA2 EDIT MASK
FMTSIZE  EQU   *-FMTTI
         TITLE 'GOIF - IF COMMAND ROUTINE'
GOIF     GENTER DIFLNG
         USING DIF,8
         MVI   DIFSTR1,C' '        BLANK OUT
         MVC   DIFSTR1+1(255),DIFSTR1   STRING1 AREA
         SCAN  ,
         BZ    CVGETCOM
         CLI   0(1),C'('          CHECK SYNTAX
         BNE   CVNVALID           NO GOOD
         SCANSAVE DIFSCNSV
         LA    1,1(,1)
         SH    0,=H'2'            DELETE PARENS
         XCALL EXPR               EVAL 1ST EXPRESSION
         BZ    CVABSENT            OPERAND MISSING IF NO EXPR
         ST    R0,DIFVL1          SAVE EXPR1 VALUE OR LENGTH
         STH   15,DIFTP1          AND TYPE
         LTR   R15,R15             IS THIS A STRING
         BNZ   GOIFREL             BR NO
         AR    R1,VCPR             POINT TO ABS ADDR
         LTR   R2,R0               LOAD R2 AND TEST IF NULL
         BNP   GOIFREL             BR IF NULL STRING
         BCTR  R2,0                SET COUNT FOR EX
         EX    R2,GOIFMVC1         MOVE FIRST STRING
GOIFREL  SCAN  GOIFPRT            SCAN RELATIONAL OPERATOR
         B     CVABSENT            OPERAND MISSING IF NO RELATION
         SPACE
GOIFEQ   IC    2,=X'80'           BRANCH MASK
         B     GOIFEXP2
         SPACE
GOIFNE   IC    2,=X'70'
         B     GOIFEXP2
         SPACE
GOIFLT   IC    2,=X'40'
         B     GOIFEXP2
         SPACE
GOIFLE   IC    2,=X'D0'
         B     GOIFEXP2
         SPACE
GOIFGT   IC    2,=X'20'
         B     GOIFEXP2
         SPACE
GOIFGE   IC    2,=X'B0'
GOIFEXP2 SCTELL ,
         XCALL EXPR               EVAL 2ND EXPRESSION
         BZ    CVABSENT            OPERAND MISSING IF NO EXPR
         ST    0,DIFVL2           SAVE VALUE OF EXPR2
         STH   15,DIFTP2          SAVE TYPE OF EXP2
         AH    15,DIFTP1
         BZ    GOIFSTR            BOTH EXPS ARE STRINGS
         SH    15,DIFTP1          TEST TYPE OF EXP2
         BNZ   GOIFTP1T           NOT A STRING
         AR    1,VCPR
         XCALL CONVERT2           CONVERT EXP2 TO ARITHMETIC
         ST    0,DIFVL2           SAVE VALUE
         STH   15,DIFTP2          SAVE TYPE
         B     GOIFATST
         SPACE
GOIFTP1T CLI   DIFTP1+1,DEXPFST   TEST TYPE OF EXP1
         BNE   GOIFATST           NOT A STRING
         LA    1,DIFSTR1          ADDRESS AND
         L     0,DIFVL1           LENGTH OF STRING
         XCALL CONVERT2           CONVERT
         ST    0,DIFVL1           SAVE VALUE AND
         STH   15,DIFTP1          TYPE
         LH    15,DIFTP2
GOIFATST AH    15,DIFTP1
         SH    15,=H'8'
         B     *+4(15)            USE TYPE CODES AS BRANCH
         SPACE
         B     GOIFACMP           BOTH ARE INTGERS
         B     *+8                MIXED
         B     GOIFACMP           BOTH ARE LINE NUMBER
         L     0,DIFVL1           GET VALUE OF EXP1
         CLI   DIFTP1+1,DEXPFIN   TEST EXP1 TYPE
         BE    *+8                INTEGER
         L     0,DIFVL2           EXP2 IS INTEGER
         LPR   1,0                TEST FOR OVERFLOW
         BO    GOIFAOVF           OVERFLOW
         C     1,=F'2147483'
         BH    GOIFAOVF           OVERFLOW
         LR    1,0                RESTORE SIGN
         M     0,=F'1000'         CONVERT TO LINE #
         CLI   DIFTP1+1,DEXPFIN   TEST TYPE OF EXP1
         BE    *+12               INTEGER
         ST    1,DIFVL2
         B     GOIFACMP
         SPACE
         ST    1,DIFVL1
GOIFACMP L     0,DIFVL1           GET VALUE OF EXP1
         C     0,DIFVL2           COMPARE
         EX    2,GOIFBC           CHECK CONDITIONAL BRANCH
         B     CVGETCOM           IF IS FALSE
         SPACE
GOIFAOVF TSEG  'ARITHMETIC OVERFLOW'
         B     CVQTYPE
         SPACE
GOIFSTR  L     3,JCBWAPTR         USE BUFFER AS WORK AREA
         MVI   0(3),C' '
         MVC   1(255,3),0(3)      BLANK AREA FOR COMPARE
         LTR   R4,R0               IS STRING2 NULL
         BNP   GOIFSCMP            BR YES TO DO SCMPARE
         AR    R1,VCPR             POINT TO 2ND EXPR
         BCTR  4,0
         EX    4,GOIFMVC2         MOVE 2ND EXPR TO COMPARE AREA
GOIFSCMP CLC   DIFSTR1(256),0(R3) SCMPARE STRINGS
         EX    2,GOIFBC           CHECK RELATION
         B     CVGETCOM
         SPACE
GOIFMVC1 MVC   DIFSTR1(0),0(R1)
GOIFMVC2 MVC   0(0,3),0(1)
         SPACE
GOIFBC   BC    0,GOIFCMD
GOIFCMD  SCANRSTR DIFSCNSV
         SCTELL ,                 POINT TO COMMAND
         LA    R13,CPWA            RESET R13
         LR    R8,R13                 AND R8 FOR NEW COMMAND
         XCALL EDTCOMMV
         SPACE
GOIFPRT  SCKW  EQ,GOIFEQ
         SCKW  NE,GOIFNE
         SCKW  LT,GOIFLT
         SCKW  LE,GOIFLE
         SCKW  GT,GOIFGT
         SCKW  GE,GOIFGE
         SCKW  ,INVALID
         SPACE
         LTORG
         DROP  8
         TITLE 'LOOKUP - VARIABLE LOOKUP ROUTINE'
* ON ENTRY TO LOOKUP, R1 POINTS TO THE PART OF A STRING WHICH
* MAY BE A VARIABLE.  LOOKUP CHECKS TO SEE IF THE STRING REPRE-
* SENTS A LEGAL VARIABLE, AND IF SO, RETURNS THE REL ADDR OF THE
* VARIABLE IN R1 AND A TYPE CODE IN R15; OTHERWISE, THE
* CONDITION CODE IS SET TO ZERO.
         SPACE
* REGISTER EQU'S
         SPACE
LKPAR    EQU   2                  STRING ADDRESS REGISTER
LKPLR    EQU   3                  STRING LENGTH REGISTER
         SPACE
LOOKUP   XENTER 2,8,*
         CH    0,=H'2'            LEGAL VARS MUST BE 2 CHARS
         MVC   CPDOUB(1),1(R1)   MOVE FOR TRANSLATE
         TR    CPDOUB(1),LKTABL        TRANSLATE IT
         SLR   R2,R2              CLEAR FOR IC
         IC    R2,CPDOUB          GET INTO REGISTER 2
         CH    R2,=H'15'         HIGHEST GOOD VALUE
         BH    LKPBAD            BAD IF HIGH
         SLL   R2,2               MULTIPLY BY 4
         OI    0(1),X'40'         CAPITILIZE
         CLI   0(1),C'W'          TEST FOR WVAR
         BE    LKPWVAR            LEGAL VARIABLE
         CLI   0(1),C'N'          TEST FOR NVAR
         BE    LKPNVAR            LEGAL VARIABLE
         CLI   0(1),C'S'          TEST FOR NVAR
         BNE   LKPBAD             TOO BAD
LKPPGET  LR    LKPLR,0            SAVE R0
         LR    LKPAR,1            SAVE R1
         L     VCPR,CVCPADDR      POINT TO VCP
         USING DVCP,VCPR
LKPVTEST CLI   0(1),C'N'          TEST FOR NVAR
         BE    LKPNVAR
         CLI   0(1),C'W'
         BE    LKPWVAR
LKPSVAR  LA    LKPAR,VCPSVAR     INITIALIZE STRING ADDR REG AND
         SR    LKPLR,LKPLR          STRING LENGTH REG
LKPNEXT  LA    LKPAR,2(LKPLR,LKPAR)  BUMP TO NEXT STRING VAR
         IC    LKPLR,1(,LKPAR)      GET STRING LENGTH
         CLC   1(1,1),0(LKPAR)     TEST FOR MATCH
         BNE   LKPNEXT            CONTINUE SEARCH
         LA    1,1(,LKPAR)         ADDR OF VALUE TO R1
         SR    R1,VCPR             CONVERT ADDRESS TO RELATIVE
         LA    15,DEXPFST         SVAR
         B     LKPEXIT
         SPACE
LKPWVAR  LA    1,VCPWVAR-DVCP(LKPAR)  R1= REL. ADDR OF VAR
         LA    15,DEXPFLN         SET TYPE= LINE #
         B     LKPEXIT
         SPACE
LKPNVAR  LA    1,VCPNVAR-DVCP(LKPAR) R1=RELATIVE ADDR OF VAR
         LA    15,DEXPFIN         SET TYPE=INTEGER
LKPEXIT  LTR   12,12              MAKE SURE CC IS NON-ZERO
         XEXIT 2,8
LKPBAD   SR    15,15              SET CC TO ZERO
         B     LKPEXIT+2
         SPACE
*
LKTABL   DC    240X'10'
         ORG   LKTABL+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   ,
         DC    X'00010203040506070809'
         DC    6X'10'
*
LKPABRT  TSEG  'NO VARIABLE COMMAND PAGE, COMMAND ABORTED'
         B     CVQTYPE
         SPACE
         LTORG
         TITLE 'PREPROC - WYLBUR''S PRE-PROCESSOR'
* NOTE: PRE-PROCESSOR DOES NOT SAVE R2-R6
         SPACE
*        THIS IS THE PRE-PROCESSOR.  IT SCANS ALL COMMANDS TYPED INTO
*        WYLBUR, LOOKING  FOR THE ESCAPE OR SKIP CHARACTERS.  IF THE
*        ESCAPE CHARACTER IS ENCOUNTERED AND THE TWO CHARACTERS FOLLOW-
*        ING IT FORM A LEGAL VARIABLE, THE VALUE OF THAT VARIABLE (IN
*        EBCDIC) IS INSERT IN THE COMMAND IN PLACE OF THE VARIABLE AND
*        THE ESCAPE CHARACTER(S).  IF ONLY 1 ESCAPE CHARACTER PRECEDES
*        THE VARIABLE, THE SCAN POINTER IS INCREMENTED SO THAT THE
*        VALUE OF THE VARIABLE IS NOT SCANNED.  IF 2 ESCAPE CHARACTERS
*        PRECEDE THE VARIABLE THE SCAN POINTER IS NOT INCREMENTED.
*        IF THE SKIP CHARACTER IS ENCOUNTERED, IT IS ELIMINATED FROM
*        THE COMMAND, AND THE NEXT CHARACTER IS PASSED OVER WITHOUT
*        INSPECTION. ADDITION-AN EXPRESSION INCLOSED IN PARENTHESES MAY
*        ALSO FOLLOW THE ESCAPE CHARACTER(S). IN THIS CASE, THE VALUE
*        OF THE EXPRESSION IS SUBSTITUTED FOR IT IN THE COMMAND.
         SPACE
*        REGISTER EQU'S
         SPACE
PREWR    EQU   8                  WORK AREA BASE REG
PREER    EQU   6                  SCAN END POINTER
PRESR    EQU   3                  SCRATCH REG
PRELR    EQU   4                  STRING LENGTH REG
PREAR    EQU   5                  STRING ADDRESS REG
         SPACE
PREPROC  XENTER 7,8,DPRELNG
         L     VCPR,CVCPADDR      POINT TO VCP                 TESTVCP
         USING DPREPROC,PREWR
         ST    1,DPRER1SV         SAVE COMMAND START ADDRESS
         XC    DPRETRTT,DPRETRTT  CLEAR TRT TABLE
         MVI   DPREFLAG,0         CLEAR FLAG BITS
         MVC   DPRERSCT,CPRSCNVL  INITIALIZE RESCAN COUNT
         STM   0,1,DPRESPSV
         LA    2,8
         SR    PRESR,PRESR        CLEAR SCRATCH REG
         IC    PRESR,CPESCAPE      GET ESCAPE CHAR
         STC   2,DPRETRTT(PRESR)  SET ESCAPE CHAR STOP
         TM    CPGFLG2,CPSKNULL   TEST SKIP FLAG
         BO    PRENSKIP           BRANCH IF NULL
         LA    2,4
         IC    PRESR,CPSKIP
         STC   2,DPRETRTT(PRESR)   SET SKIP CHAR STOP
PRENSKIP SR    2,2
         LR    PREER,0
         BCTR  PREER,0
         AR    PREER,1             SET SCAN END POINTER
         LM    0,1,DPRESPSV
PRESCAN1 NI    DPREFLAG,255-DPRERSCN  RESET RESCAN FLAG
         LR    PRESR,PREER
         SR    PRESR,1             CALC SCAN LENGTH
         BNP   PREEXIT
         EX    PRESR,PRETRT        SCAN
         BC    10,PREEXIT
         B     *(2)               USE FUNCTION BYTE AS INDEX
         SPACE
         B     PRESKIP
         SPACE
PRESCAPE LA    1,1(,1)            BUMP SCAN POINTER
         CLC   0(1,1),CPESCAPE    TEST FOR DOUBLE ESCAPE
         BNE   PRELOOK            LOOKUP VARIABLE
         OI    DPREFLAG,DPRERSCN  SET RESCAN FLAG
         LA    1,1(,1)            BUMP SP
PRELOOK  STM   0,1,DPRESPSV       SAVE SCAN POINTER AND COMMAND LENGTH
         CLI   0(1),C'('          TEST FOR EXPRESSION
         BNE   PRELOOK1
         LA    0,1(,PREER)
         SR    0,1                CALC SCAN LENGTH
         SCINIT (1),(0)
         SCAN  ,
         BNP   PREEXIT
         STH   0,DPRELDEL         SAVE LENGTH OF STRING TO BE DELETED
         LA    1,1(,1)
         SH    0,=H'2'            DELETE PARENS FROM EXPRESSION
         XCALL EXPR               EVAL EXPR
         BZ    PRESCAN1-4
         STM   0,1,CPWK1          SAVE VALUE REGISTERS
         SCTELL ,
         LTR   0,0                TEST FOR BAD EXPRESSION
         BP    PRESCAN1-4          IGNORE WHATEVER WAS THERE
         LM    0,1,CPWK1          RESTORE R0 R1
         B     *+4(15)            USE TYPE CODE
         SPACE
         B     PRECVT             STRING VALUED EXPRESSION
         NOP   0
         SPACE
         XCALL CONVERT1            CONVERT LINE NUMBER TO STRING
         B     PRECVT1             CONTINUE WITH STRING
         SPACE
PRELOOK1 LA    0,2
         STH   0,DPRELDEL         SAVE LENGTH OF STRING TO BE DELETED
         XCALL LOOKUP
         BZ    PRESCAN1-4
         B     *+4(15)            USE TYPE AS INDEX
         SPACE
         B     PRENCVT            NO CONVERSION
         NOP   0
         SPACE
         L     0,0(VCPR,R1)       GET VALUE OF LINE NUMBER VAR
         XCALL CONVERT1            CONVERT LINE NUMBER TO STRING
         B     PRECVT1             CONTINUE WITH STRING
         SPACE
PRECVT   AR    R1,VCPR             CONVERT TO ABS ADDR
PRECVT1  LR    PREAR,1
         LR    PRELR,0
         B     PRERSTSP
         SPACE
PRENCVT  LA    PREAR,1(VCPR,R1)
         SR    PRELR,PRELR
         IC    PRELR,0(VCPR,R1) GET LENGTH
PRERSTSP LM    0,1,DPRESPSV        RESTORE SCAN POINTER & COMMAND LEN
         BAL   14,PREINST         INSERT VALUE OF VAR
         SR    1,PRELR             RESET SCAN POINTER FOR RESCAN
         LH    PRESR,DPRERSCT      GET RESCAN COUNT
         SH    PRESR,=H'1'         DEC RESCAN COUNT
         BNP   PREABRT1           ABORT IF NOT POSITIVE
         STH   PRESR,DPRERSCT      UPDATE RESCAN COUNT
         B     PRESCAN1
         SPACE
PRESKIP  BCTR  PREER,0
         BCTR  0,0                DECR COMMAND LENGTH
         LR    PRESR,PREER
         SR    PRESR,1             LENGTH OF SCAN
         BM    PRESCAN1            NO MOVE IF END OF STRING
         EX    PRESR,PRE1LMVC      MOVE SCAN STRING LEFT 1 BYTE
         LA    1,1(,1)            SKIP CHARACTER
         B     PRESCAN1
         SPACE
PRE1LMVC MVC   0(0,1),1(1)
PRETRT   TRT   0(0,1),DPRETRTT
         SPACE
PREINST  L     2,JCBWAPTR         USE BUFFER AS SAVE AREA
         AH    1,DPRELDEL         POINT TO END OF STRING TO BE REPLACED
         LR    PRESR,PREER
         SR    PRESR,1             CALC LENGTH OF REMAINING SCAN
         BM    *+8
         EX    PRESR,PREINSM1      MOVE SCAN STRING TO TEMP
         SH    1,DPRELDEL
         BCTR  1,0                BACK SPACE TO ESCAPE CHAR
         BCTR  0,0                DECR COMMAND LENGTH
         BCTR  PREER,0            AND SCAN END POINTER
         TM    DPREFLAG,DPRERSCN  TEST FOR RESCAN
         BNO   PRERTNCH           BRANCH IF NONE
         BCTR  1,0
         BCTR  0,0             ADJUST COMMAND LENGTH
         BCTR  PREER,0             AND END OF SCAN POINTER
         B     *+8                SKIP EXIT CHANGE
         SPACE
PRERTNCH LA    14,PRESCAN1         CHANGE EXIT IF NO RESCAN
         AR    0,PRELR
         SH    0,DPRELDEL         CALC NEW COMMAND LENGTH
         CH    0,=AL2(SZR)     TEST AGAINST MAX
         BH    PREABRT2           ABORT IF HIGH
         SH    PRELR,=H'1'
         BM    *+8
         EX    PRELR,PREINSM2      INSERT VALUE
         LA    PRELR,1(,PRELR)
         AR    1,PRELR             ADVANCE SCAN POINTER
         LTR   PRESR,PRESR
         BM    *+8
         EX    PRESR,PREINSM3      TACK ON SCAN STRING
         AR    PREER,PRELR
         SH    PREER,DPRELDEL      CALC NEW END OF SCAN POINTER
         LA    2,1               CLEAR FOR TRT (MAKE NON-ZERO FOR EXIT)
         BR    14
         SPACE
PREINSM1 MVC   0(0,2),0(1)
PREINSM2 MVC   0(0,1),0(PREAR)
PREINSM3 MVC   0(0,1),0(2)
         SPACE
PREABRT1 TSEG  'TOO MANY RESCANS',,B
         B     PREABRT
         SPACE
PREABRT2 ST    1,DPRESPSV
         TSEG  'COMMAND LENGTH OVERFLOW SUBSTITUTING FOR',,B
         L     1,DPRESPSV
         LA    1,1(,1)            BUMP PAST ESCAPE CHAR
         TM    DPREFLAG,DPRERSCN  TEST FOR 2ND ESCAPE CHAR
         BNO   *+8                NONE
         LA    1,1(,1)            BUMP PAST 2ND ESCAPE CHAR
         LH    0,DPRELDEL         GET LENGTH OF SUBSTITUTION STR
         TSEG  (1),(0),B
PREABRT  TSEG  ',PREPROCESSING ABORTED'
         B     CVQTYPE
         SPACE
PREEXIT  L     VCPR,CVCPADDR
         LR    R3,R0               SAVE COMMAND LENGTH
PREEXIT1 L     1,DPRER1SV         RESTORE COMMAND START ADDR
         LTR   2,2
         BNP   PREEXIT2            DON'T COUNT IF NO CHANGE
         LTR   R2,R2               RESET COND CODE
PREEXIT2 XEXIT 7,8
         SPACE
         LTORG
         SPACE
         DROP  PREWR
         TITLE 'READVAL - READ VALUE ROUTINE'
* THIS SECTION EXECUTES THE 'READ VALUE' COMMAND
         SPACE
RDVPR    EQU   3                   STACK POINTER
RDVCR    EQU   4                   STACK COUNTER
         SPACE
READVAR  GENTER ,
         USING  READWA,R5
         SCINIT (1),(0)            SET SCAN TO INPUT LINE
         LA    RDVPR,RDWAVAR       POINT TO VARIABLE AREA
         LH    RDVCR,RDWAVARN      GET COUNT OF VARIABLES
READVLP  LR    R1,RDVPR            POINT TO NEXT VARIABLE
         LA    R0,2                SET LENGTH FOR LOOKUP
         XCALL LOOKUP              LOOKUP VARIABLE
         BZ    CVNVALID            NOT A VARIABLE
         STC   R15,0(,RDVPR)       SAVE VARIABLE TYPE
         LR    R2,R1               SET VARIABLE ADDRESS IN R2
         SCTELL ,
         XCALL EXPR               GET VALUE OF VARIABLE
         BZ    READNULL            NOTHING -- ASSIGN NULL OR 0
         B     *+4(15)            BRANCH ON TYPE CODE
         SPACE
         B     READSVAL           STRING
         B     READNVAL           INTEGER
         B     READWVAL           LINE NUMBER
         SPACE
READSVAL AR    R1,VCPR             MAKE ABS POINTER TO STRING
         CLI   0(RDVPR),DEXPFST     TEST TYPE
         BE    READSV1            A STRING VAR IS BEING READ
         XCALL CONVERT2           CONVERT STRING TO LINE #
         B     *(15)              USE TYPE AS BRANCH
         SPACE
         B     READNV1            INTEGER
         B     READWV1
         SPACE
READSV1  XCALL ASSIGN             MAKE ASSIGNMENT
         LA    RDVPR,4(,RDVPR)      BUMP SP
         BCT   RDVCR,READVLP       LOOP FOR MORE VALUES
         XCALL SCANEND            IGNORE THE REST
         B     CVGETCOM
         SPACE
READWVAL CLI   0(RDVPR),DEXPFST     TEST TYPE
         BNE   READWV1            LVAR BEING READ
READSCVT XCALL CONVERT1           CONVERT LINE # TO STRING
         MVC   RDWAPRMT(16),0(1)  SAVE STRING IN THIS WORK AREA
         LA    1,RDWAPRMT         POINT TO IT
         B     READSV1
         SPACE
READWV1  CLI   0(RDVPR),DEXPFIN    TEST TYPE
         BNE   READWV2            LINE #
         SRDA  0,32(0)
         D     0,=F'1000'         CONVER TO INTEGER
         LR    0,1
         B     READNV2
         SPACE
READWV2  ST    0,0(VCPR,R2)       MAKE ASSIGNMENT
         LA    RDVPR,4(,RDVPR)      BUMP SP
         BCT   RDVCR,READVLP
         XCALL SCANEND            IGNORE THE REST
         B     CVGETCOM
         SPACE
READNVAL CLI   0(RDVPR),DEXPFST    TEST VAR TYPE
         BE    READSCVT           STRING
READNV1  CLI   0(RDVPR),DEXPFLN    TEST VAR TYPE
         BNE   READNV2            INTEGER
         LR    R1,R0               SET FOR MULTIPLY
         M     R0,=F'1000'         CONVERT TO LINE #
         SLDA  R0,32               PUT IN R0 AND TEST OFLO
         BNO   READWV2             OK IF NO OFLO
         TSEG  'ARITHMETIC OVERFLOW'
         B     CVQTYPE
         SPACE
READNV2  ST    0,0(VCPR,2)        MAKE INTEGER ASSIGNMENT
         LA    RDVPR,4(,RDVPR)
         BCT   RDVCR,READVLP
         XCALL SCANEND
         B     CVGETCOM
         SPACE
READNULL SR    R0,R0               SET NULL STRING OR 0 VALUE
         CLI   0(RDVPR),DEXPFST    IS IT A STRING VARIABLE
         BE    READSV1             YES, GO ASSIGN NULL
         CLI   0(RDVPR),DEXPFIN
         BE    READNV2            INTEGER
         B     READWV2            LINE #
         SPACE
         DROP  R5
         SPACE
         LTORG
         TITLE 'READSTR - READ STRING ROUTINE'
* THIS SECTION EXECUTES THE 'READ STRING' COMMAND
         SPACE
READSTR  GENTER ,
         USING READWA,R5
         L     R2,RDWAVAR          GET STRING VARIABLE ADDR
         LA    R2,0(,R2)           CLEAR HIGH ORDER BYTE
         XCALL ASSIGN              ASSIGN THE STRING VALUE
         B     CVGETCOM            GO GET NEXT COMMAND
         SPACE
         DROP  R5
         TITLE 'SCANEND - JUNK SCANNER'
SCANEND  DS    0H
         XENTER 0,8,*
         SCAN  ,
         BNP   SCNEND2            THERE'S NOTHING
SCNEND1  TSEG  (1),(0)            ADD TO PRINT LINE
         SCAN  ,                  PICK OFF JUNK
         BP    SCNEND1
         TSEG  ': IGNORED',,W
SCNEND2  XEXIT 0,8
         LTORG
         TITLE 'SETVAL - SET VALUE ROUTINE'
* THIS SECTION EXECUTES THE 'SET VALUE' COMMAND
         SPACE
SETVAR   GENTER 16
         XCALL LOOKUP
         BZ    CVNVALID           NO GOOD
         LR    2,1                SAVE VAR ADDR
         SCTELL ,                 POINT TO EXPRESSION
         B     *+4(15)            BRANCH ON TYPE CODE
         SPACE
         B     SETSVAR            IT'S A STRING VAR
         B     SETIVAR            INTEGER
         SPACE
SETLVAR  XCALL EXPR               ANALYZE EXPRESSION
         BZ    CVABSENT            OPERAND MISSING IF NO EXPR
         B     *+4(15)            BRANCH ON EXPR TYPE
         SPACE
         B     SETLVAR1           STRING
         B     SETLVAR2           INTEGER
         B     SETLVAR3           OK-IT'S A LINE NUMBER
         SPACE
SETLVAR1 AR    R1,VCPR             MAKE ADDRESS ABSOLUTE
         XCALL CONVERT2           TRY STRING -> LINE NUMBER
         B     *(15)              USE TYPE CODE AS BRANCH
         SPACE
         B     SETLVAR2           INTEGER
         B     SETLVAR3           LINE #
         SPACE
SETLVAR2 LPR   1,0                CHECK FOR OVERFLOW
         BO    SETAOVF            OVERFLOW
         C     1,=F'2147483'
         BH    SETAOVF
         LR    1,0                RESTORE SIGN
         M     0,=F'1000'         CONVERT TO LINE #
         LR    0,1
SETLVAR3 ST    0,0(VCPR,R2)       MAKE ASSIGNMENT
         B     SETIGNOR
         SPACE
SETIVAR  XCALL EXPR               EVAL EXPRESSION
         BZ    CVABSENT            OPERAND MISSING IF NO EXPR
         B     *+4(15)            BRANCH ON TYPE
         SPACE
         B     SETIVAR1           STRING
         B     SETIVAR3           INTEGER
         B     SETIVAR2           LINE #
         SPACE
SETIVAR1 AR    1,VCPR             ABS ADDR OF STRING
         XCALL CONVERT2           STRING TO ARITHMETIC
         B     *(15)              USE TYPE CODE
         SPACE
         B     SETIVAR3           INTEGER
         SPACE
SETIVAR2 SRDA  0,32(0)
         D     0,=F'1000'         CONVERT TO INTEGER
         LR    0,1
SETIVAR3 ST    0,0(VCPR,2)        MAKE ASSIGNMENT
         B     SETIGNOR
         SPACE
SETAOVF  TSEG  'ARITHMETIC OVERFLOW'
         B     CVQTYPE
         SPACE
SETSVAR  XCALL EXPR
         BZ    CVABSENT            OPERAND MISSING IF NO EXPR
         B     *+4(15)
         SPACE
         B     SETSVAR0           OK-IT'S A STRING
         NOP   0
         SPACE
         XCALL CONVERT1           LINE # -> STRING
         MVC   0(16,8),0(1)       SAVE STRING IN THIS WORK AREA
         LR    1,8                POINT TO IT
         B     SETSVAR1            GO MAKE ASSIGNMENT
         SPACE
SETSVAR0 AR    R1,VCPR             MAKE ADDRESS ABSOLUTE
SETSVAR1 XCALL ASSIGN             MAKE ASSIGNMENT
SETIGNOR XCALL SCANEND            IGNORE THE REST
         B     CVGETCOM
         SPACE
         LTORG
         TITLE 'SHOVAL - SHOW VALUE ROUTINE'
* THIS SECTION EXECUTES THE 'SHOW VALUE' COMMAND
         SPACE
SHOLR    EQU   2                  LINE LENGTH REGISTER
SHOSR    EQU   3                  SCRATCH REGISTER
         SPACE
SHOVAR   GENTER 8
         SR    SHOLR,SHOLR        ZERO LENGTH REG
SHOVAR1  SCTELL ,                 POINT TO NEXT EXPRESSION
         XCALL  EXPR              ANALYZE
         BZ    CVGETCOM            BR IF NO MORE TO DO
         B     *+4(15)            USE TYPE AS INDEX
         SPACE
         B     SHOVAR3            EXPR VALUE IS STRING
         NOP   0
         SPACE
         CH    SHOLR,=H'115'       IS THERE ROOM ON THIS LINE
         BNH   SHOVAR21            BR YES
         LR    SHOSR,R0            SAVE VALUE
         ST    R15,0(8)          SAVE R15
         TWRITE ,                  WRITE OUT PROVIOUS LINE
         L     R15,0(8)          RESTORE R15.
         BP    CVQTYPE             ABORT IF ATTENTION
         LR    R0,SHOSR            RESTORE VALUE
         SR    SHOLR,SHOLR         RESET LINE COUNT
SHOVAR21 XCALL CONVERT1            CONVERT LINE NUM TO STRING
         AR    SHOLR,R0            ADD IN COUNT
         LA    SHOLR,1(,SHOLR)     PLUS 1 FOR BLANK
         TSEG  (1),(0),BLANK       PUT VALUE IN BUFFER
         B     SHOVAR1             GO DO NEXT VALUE
         SPACE
SHOVAR3  STM   0,1,0(8)           SAVE RO AND R1
         TSEG  ''''
         LA    SHOLR,1(,SHOLR)     ADD 1 FOR QUOTE
         LM    0,1,0(8)           RESTORE R0 AND R1
         AR    SHOLR,0            BUMP LINE LENGTH
SHOVAR30 CH    SHOLR,=H'120'
         BNH   SHOVAR31           OK
         LA    SHOSR,120          GET MAX LINE LENGTH
         SR    SHOLR,0
         SR    SHOSR,SHOLR        CALC REMAINING LENGTH TO FILL LINE
         TSEG  0(VCPR,R1),(SHOSR),W  FILL LINE AND PRINT
         BP    CVQTYPE             ABORT IF ATTENTION
         LM    0,1,0(8)           RESTORE R0 AND R1
         SR    0,SHOSR            CALC REMAINING PRINT LENGTH
         AR    1,SHOSR            INCR POINTER
         LR    SHOLR,0            RESET LENGTH
         STM   R0,R1,0(R8)         UPDATE SAVED VALUES
         B     SHOVAR30            GO SEE IF IT FITS NOW
         SPACE
SHOVAR31 TSEG  0(VCPR,R1),(0)            VALUE OF STRING
         TSEG  '''',,BLANK        CLOSING QUOTE
         LA    SHOLR,2(,SHOLR)     ADD 2 FOR QUOTE  AND BLANK
         B     SHOVAR1            LOOP FOR MORE
         SPACE
         LTORG
         TITLE 'CONSTANTS'
         COPY  WYLCONST
         EJECT
         COPY  READWA
         TITLE 'DSECTS'
         COPY  VCPTSO
         SPACE
VCPLSVA2 EQU   VCPLSVA-2
* PUT WORK AREA FOR EXPRESSION SCANNER AFTER VCP AREA
*    NOTE THAT THE MAX LENGTH MUST BE LESS THAT CPSIZE
DEXPPRSV DS    F                  SAVE AREA FOR POINTER REG
DEXPWK   DS    3F
DEXPSP   DS    A                  STACK POINTER
DEXPSAP  DS    A                  STRING POINTER
DEXPRFCT DS    H                  PREFIX + - COUNTER
         DS    0F                 ALIGN STACK ON FULLWORD
DEXPSTK  DS    XL146              STACK
DEXPSWA  DS    XL576              STRING WORK AREA
DEXPRLEN EQU   *-DVCP              LENGTH OF VCP AREA
         SPACE
DASSIGN  DSECT
DASNLSV  DS    F                  LENGTH SAVE AREA
DASNTEMP DS    XL(VCPLSVA)        STRING SAVE AREA
DASNLNG  EQU   *-DASSIGN          LENGTH
         SPACE
DCONVERT DSECT
         DS    F                  R14 SAVE AREA
         DS    8F                 R1-R8 SAVE AREA
DCONCVT  DS    D                  CONVERSION AREA
DCONWORK DS    XL(L'CON1MSK1)     WORK AREA
         DS    F
DCONLNG  EQU   *-DCONVERT
         SPACE
DPREPROC DSECT
         DS    F                  R14 SAVE AREA
         DS    2F                 R7-R8 SAVE AREA
DPRER1SV DS    F                  R1 SAVE AREA
DPRESPSV DS    2F
DPRERSCT DS    H                  RESCAN COUNT
DPRELDEL DS    H                  LENGTH OF STRING TO BE REPLACED
DPRETRTT DS    XL256              TRT TABLE
DPREFLAG DS    X                  FLAG BITS
DPRERSCN EQU   X'80'              RESCAN FLAG
DPRELNG  EQU   *-DPREPROC
         SPACE
DIF      DSECT
DIFSCNSV DS    2F                 SCAN SAVE AREA
DIFVL1   DS    F
DIFVL2   DS    F
DIFTP1   DS    H
DIFTP2   DS    H
DIFSTR1  DS    CL256
DIFLNG   EQU   *-DIF
         EJECT
         COMMON
         SPACE
         END
./ ADD NAME=PSCN,SSI=00000002
PSCN     TITLE 'WYLTSO''S SCANNER'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
PSCN     CSECT
         SPACE
         WIDENT 001
         SPACE
         XTRNS ,
         SPACE 3
* REGISTER USAGE
         SPACE
PR       EQU   6
NR       EQU   5
RR       EQU   4
TR       EQU   3
SR       EQU   2
         SPACE
         USING SA,8
         USING CPAREA,R12
         EJECT
* INITIALIZE
         SPACE
         ENTRY SCINIT
SCINIT   LA    1,0(,1)
         STH   0,LEN                   SAVE LENGTH
         ST    1,LOC                   SAVE LOCATION
         BR    14
         SPACE 3
* TELL LOCATION AND LENGTH
         SPACE
         ENTRY SCTELL
SCTELL   LH    0,LEN                   LENGTH
         L     1,LOC                   LOCATION
         BR    14
         SPACE 3
SCAN     XENTER 2,12
BASE     ST    14,RA                   RETURN ADDR
         ST    1,PRT                   ROUTING TABLE
GOSCAN   LH    NR,LEN                  GET LENGTH
         L     PR,LOC                  GET LOCATION
         SR    RR,RR
         MVI   FL,0                    CLEAR FLAGS
RESCAN   LTR   NR,NR                   ANY LEFT?
         BNP   DONE                    BR IF NOT
         SR    2,2                     CLEAR TRT REGS
         LA    1,0(PR,NR)
         BCTR  NR,0
         EX    NR,TRT
         B     *+4(2)                  BR ON DELIM CODE
         SPACE
         B     EOS                     0  END OF STRING
         B     BLKCOM                  4  BLANK-COMMA
         B     SQUOTE                  8  SINGLE QUOTE
         B     DQUOTE                  12 DOUBLE QUOTE
         B     LPAR                    16 LEFT PAREN
         B     RPAR                    20 RIGHT PAREN
         B     SLASH                    24 SLASH
         B     SEMI                    28 SEMICOLON
         SPACE 3
* PROCESS END OF STRING
         SPACE
EOS      TM    FL,FSQS+FDQS+FPS        STRING?
         BZ    PREND                   BR IF NOT
ILLSTR   LR    0,1                     COMPUTE STRING PTR
         L     1,LOC
         SR    0,1
         B     RTNER                   RETURN
         SPACE 3
* PROCESS BLANKS
         SPACE
BLKCOM   TM    FL,FSQS+FDQS+FPS        STRING BEING COLLECTED?
         BNZ   GOSTRING                BR IF SO
PREND    SR    1,PR                    COMPUTE TOKEN SIZE
         STH   1,LEN                   SAVE LENGTH & LOCATION
         ST    PR,LOC
         LA    PR,1(1,PR)              UPDATE STRING PTR
         SR    NR,1
         LTR   1,1                     TOKEN?
         BP    TOKEN                   BR IF SO
         B     RESCAN
         SPACE 3
* PROCESS SEMICOLON
         SPACE
SEMI     TM    FL,FSQS+FDQS+FPS        STRING BEING COLLECTED
         BNZ   GOSTRING                BR IF SO
         SR    NR,NR                   SET COUNT FOR END OF LINE
         B     PREND                   FINISH UP TOKEN
         SPACE 3
* PROCESS SLASH
         SPACE
SLASH    TM    FL,FSQS+FDQS+FPS         STRING BEING COLLECTED?
         BNZ   GOSTRING                 BR IF SO
         ST    PR,LOC                   TOKEN START
         SR    1,PR                     COMPUTE TOKEN SIZE
         BP    STOKEN                   TOKEN WON'T BE "/"
         LA    1,1                      LENGTH "/" TOKEN
         B     STORZ                    FINISH SETUP
         SPACE
STOKEN   SR    NR,1                     NEW STRING SIZE
         LA    NR,1(NR)                 KEEP "/" IN STRING
STORZ    STH   1,LEN                   TOKEN LENGTH
         LA    PR,0(1,PR)               POINT OVER TOKEN
         B     TOKEN                    PROCESS
         SPACE 3
* PROCESS SINGLE QUOTE
         SPACE
SQUOTE   TM    FL,FDQS                 "STRING"?
         BNZ   GOSTRING                BR IF SO
         TM    FL,FSQS                 OLD STRING?
         BO    CSQ                     BR IF SO
         TM    FL,FPS              IS IT MIDDLE OF PAREN STRING
         BO    SQUOTE1             YES, ONLY SET FLAG
         CLR   1,PR                    COMPUTE TOKEN SIZE
         BNE   PREVTOK                 BR IF PREVIOUS TOKEN
         ST    PR,LOC
SQUOTE1  OI    FL,FSQS                 SET STRING SCAN
         B     GOSTRING
         SPACE
CSQ      AR    NR,PR                   BUMP PTR
         LR    PR,1
         SR    NR,1
         BNP   CSQETST                 BR IF END
         CLC   0(1,PR),1(PR)       SAME KIND OF QUOTE DOUBLED
         BNE   CSQETST                 BR IF NOT
         BCTR  NR,0                    ELIMINATE 2ND QUOTE
         LA    PR,2(,PR)
         B     RESCAN
         SPACE
CSQETST  TM    FL,FPS              IS THIS STRING WITHIN PARENS
         BE    ESTR                NO, GO END NORMALLY
         NI    FL,255-FSQS-FDQS    YES, TURN OFF STRING FLAGS
         LA    PR,1(,PR)           POINT BEYOND STRING
         B     RESCAN              GO FINISH PARENS
         SPACE
PREVTOK  SR    1,PR
         STH   1,LEN                   SAVE LENGTH & LOCATION
         ST    PR,LOC
         AR    PR,1
         SR    NR,1
         LA    NR,1(,NR)
         B     TOKEN
         SPACE 3
* PROCESS DOUBLE QUOTE
         SPACE
DQUOTE   TM    FL,FSQS                 'STRING'?
         BNZ   GOSTRING                BR IF SO
         TM    FL,FDQS                 OLD STRING?
         BO    CSQ                     BR IF SO
         TM    FL,FPS              IS IT MIDDLE OF PAREN STRING
         BO    DQUOTE1             YES, ONLY SET FLAG
         CLR   1,PR                    TOKEN SIZE
         BNE   PREVTOK
         ST    PR,LOC
DQUOTE1  OI    FL,FDQS                 SET STRING SCAN
         B     GOSTRING
         SPACE
ESTR     LA    PR,1(,PR)
         LR    0,PR                    COMPUTE TOKEN SIZE
         S     0,LOC
         STH   0,LEN                   SAVE LENGTH
         B     TOKEN
         SPACE 3
* PROCESS LEFT PAREN
         SPACE
LPAR     TM    FL,FSQS+FDQS            QUOTED STRING?
         BNZ   GOSTRING                BR IF SO
         TM    FL,FPS                  PAREN STRING?
         BO    INP                     BR IF SO
         CLR   1,PR                    TOKEN SIZE
         BNE   PREVTOK                 BR IF PREVIOUS TOKEN
         OI    FL,FPS                  SET PAREN SCAN
         LA    SR,1
         STH   SR,PCNT
         ST    PR,LOC
         B     GOSTRING
         SPACE
INP      LH    SR,PCNT                 PAREN COUNT
         LA    SR,1(,SR)
         STH   SR,PCNT
         B     GOSTRING
         SPACE 3
* PROCESS RIGHT PAREN
         SPACE
RPAR     TM    FL,FSQS+FDQS            QUOTED STRING?
         BNZ   GOSTRING                BR IF SO
         TM    FL,FPS                  PAREN STRING?
         BZ    ILLST                   BR IF NOT
         LH    SR,PCNT                 DECR COUNT
         BCTR  SR,0
         STH   SR,PCNT
         LTR   SR,SR
         BNZ   GOSTRING
         SR    NR,1                    UPDATE STR PTR
         AR    NR,PR
         LR    PR,1
         B     ESTR
         SPACE
GOSTRING SR    NR,1                    UPDATE STRING PTRS
         AR    NR,PR
         LA    PR,1(,1)
         B     RESCAN
         SPACE
ILLST    LR    0,1                     COMPUTE -LENGTH
         SR    0,PR
         LR    1,PR                    LOC OF TOKEN
         B     RTNER
         EJECT
* PROCESS A TOKEN
         SPACE
TOKEN    LH    0,LEN                   GET LENGTH
         L     1,LOC                   GET LOCATION
         LR    15,0
         MVI   KW,C' '                 CLEAR KW AREA
         MVC   KW+1(7),KW
         XC    PRTSTACK,PRTSTACK   ZERO PRT STACK VALUE
         TM    FL,FSQS+FDQS+FPS        QUOTE OR PAREN STRING?
         BNZ   PRKW                    BR IF QUOTE OR PAREN STRING
         LR    SR,0                    COUNT
         LR    TR,1                    PTR
MRECH    OI    0(TR),X'40'             CAPITAL BIT
         LA    TR,1(,TR)               MOVE PTR
         BCT   SR,MRECH                MORE?
         CL    15,=A(8)                MAX LEN IS 8
         BL    *+8                     BR IF TOO LONG
         LA    15,8                SET TO MOVE FIRST 8
         BCTR  15,0
         EX    15,MVT                  MOVE KW
PRKW     LTR   RR,RR                   ROUTINE?
         BNZ   SETSR                   BR IF SO
         L     SR,PRT                  ROUTING TABLE
         LTR   SR,SR
         BP    KWSRCH                  BR IF NORMAL TABLE
         BM    KWRELTAB                BR IF TABLE IN PAGED CODE
         L     RR,RA
         SLL   RR,8                PUT ADDR IN UPPER REG
         B     GORTN
         SPACE 3
* THE TABLE IS IN PAGED CODE -- CONVERT TO ABSOLUTE ADDRESS
         SPACE
KWRELTAB LCR   SR,SR               GET POSITIVE DISPLACEMENT
         ALR   SR,10               ADD IN PAGE BASE OFF R10
         B     KWSRCH              NOW GO SEARCH
         SPACE
KWNEX    LA    SR,5(TR,SR)             TRY NEXT
KWSRCH   TM    0(SR),FTBLE         IS IT PUSH, POP, OR END
         BO    KWFND                   BR IF SO
         IC    TR,0(,SR)               EXTRACT (LEN-1)
         N     TR,=X'00000007'
         TM    FL,FSQS+FDQS+FPS        QUOTE OR PAREN STRING?
         BNZ   NXTRY                   BR IF QUOTE OR PAREN STRING
         LTR   TR,TR                   TEST TOKEN LEN
         BNZ   COMPOK                  USER KW EXISTS
         CLI   4(SR),C' '              BLANK?
         BE    KWFND                   YES
COMPOK   CR    TR,15                   LEN OK?
         BL    NXTRY               NO, GO ON
         BE    DOCOMP              EQUAL, GO COMPARE
         TM    0(SR),FABBREV           TRY ABBREVIATION?
         BZ    NXTRY                   NO
         CH    0,=Y(3)                 3-CHARS?
         BL    NXTRY                   NO
DOCOMP   EX    15,CLC                  COMPARE KEYWORDS
         BE    KWFND                   BR IF FOUND
NXTRY    TM    0(SR),FLIMIT            LIMIT?
         BZ    KWNEX                   NO
         TM    0(SR),FINTEG+FINTEGP    INTEGER?
         BNM   KWNEX                   NO
         LA    SR,9(TR,SR)             TRY NEXT
         B     KWSRCH
         SPACE 3
KWFND    NI    FL,255-FSQS-FDQS-FPS    RESET STRING SCAN
         MVC   WORD(3),1(SR)       TO LEFT ADJUSTED WORD BOUND
         L     RR,WORD                 ROUTINE
         TM    0(SR),FTBLE         IS IT PUSH, POP, OR END
         BO    TSTLAST             YES BR IF SO
         TM    0(SR),FPARM             PARM?
         BZ    GORTN                   BR IF NO PARM
         IC    RR,*                MAKE SURE RR NOT ZERO
         SPACE
* SET RIGHT BYTE NON-ZERO SINCE IT IS IGNORED LATER
         STM   SR,TR,WORD              SAVE SR/TR VALUES
         B     RESCAN                  FIND PARM
         SPACE
TSTLAST  TM    0(SR),255-FTBLE     IS IT LAST
         BO    GORTN               ALL ON, YES
         BM    GOPOP               MIXED, GO POP UP ONE LEVEL
         SPACE
* PUSH DOWN CURRENT SCAN TABLE POINTER
         LA    SR,4(,SR)           SET FOR NEXT AFTER POP
         SRA   RR,8                FORM ADDRESS AND CHECK
         BP    GOPUSH1             BR IF NORMAL ABSOLUTE ADDRESS
         BZ    KWSRCH              BR IF NO TABLE TO PUSH TO
         LCR   RR,RR               MAKE DISPLACEMENT POSITIVE
         ALR   RR,10               ADD IN BASE TO GET ABSOLUTE
GOPUSH1  LH    14,PRTSTACK         GET CURRENT STACK COUNT
         SH    14,=H'4'            DECREMENT
         STH   14,PRTSTACK         REPLACE STACK COUNT
         ST    SR,CPCHECK(14)      SAVE CURRENT PRT POINTER
         SPACE
* NOTE THAT IT IS ALRIGHT TO SAVE THE ABSOLUTE POINTER TO
*    ANY PRT IN PAGED-CODE BECAUSE PUSH/POP LOGIC IS ALWAYS
*    DONE ENTIRELY IN THE SCANNER AND NO ONE ELSE CAN BE
*    DISPATCHED UNTIL ALL POPS HAVE BEEN DONE.
*    IF A POP IS NOT DONE BECAUSE A MATCH IS FOUND, THE
*    ABSOLUTE ADDRESS WILL NOT BE USED.
         SPACE
         LR    SR,RR               SET NEW PRT ADDRESS
         B     KWSRCH              GO SEARCH THIS TABLE
         SPACE 3
* POP UP A SAVE SCAN TABLE POINTER -- IGNORE IF AT TOP LEVEL
         SPACE
GOPOP    LH    14,PRTSTACK         GET CURRENT STACK POINTER
         AH    14,=H'4'            INCREMENT
         BP    NXTRY1              IGNORE IF TOP LEVEL
         STH   14,PRTSTACK         PUT BACK STACK POINTER
         L     SR,CPCHECK-4(14)    PICK UP OLD PRT POINTER
         B     KWSRCH              BR TO CONTINUE SEARCH
         SPACE
NXTRY1   LA    SR,1(,SR)           STEP PAST IGNORED POP
         B     KWSRCH              CONTINUE IN SAME TABLE
         SPACE 3
SETSR    LM    SR,TR,WORD              RESET SR/TR VALUES
GORTN    SRA   RR,8                FORM ADDRESS AND CHECK
         BZ    RESCAN                  BR IF NO ROUTINE
         STH   NR,LEN                  SAVE LENGTH
         ST    PR,LOC                  SAVE LOCATION
         STM   0,1,CPSAVE              SAVE PTRS
         ST    15,SV15                 SAVE 15
         LTR   SR,SR                   PRT?
         BZ    NTCMV                   BR IF NOT
         CLI   0(SR),FLAST             END?
         BE    NTCMV                   BR IF SO
         TM    0(SR),FLINNO            INTEGER OR LINE NO CONV?
         BO    LINNOCV                 LINE NO. CONV
         BM    INTGRCV                 INTEGER CONV
         TM    0(SR),FCMSET            SET COMMAND CHARS?
         BZ    NTCMV                   DON'T MOVE 3 CMD CHARS
         MVC   CPCMNM(3),KW            MOVE THEM
NTCMV    LA    15,KW                   KW PTR
NOTKWPS  LTR   14,RR                   SET EP AND TEST
         BP    GORTN1              GO IF ABSOLUTE ADDRESS
         LCR   14,14               COMPL VALUE FOR PAGED CODE
         AR    14,10               ADD IN START OF PAGED CODE
GORTN1   LM    2,12,4(13)
         LTR   0,0                     SET CC
         BALR  14,14                   GO TO PARM ROUTINE
         SPACE 3
         XENTER 2,12                   SAVE
         L     7,=A(BASE)              RESTORE BASE
         USING BASE,7
         B     GOSCAN                  CONTINUE SCAN
         EJECT
* DECIMAL TO BINARY CONV RTN FOR SCAN
         SPACE
INTGRCV  BAL   14,DOINT                GO DO CV
         TM    0(SR),FINTEGP           POS INT?
         BZ    ANYI                    NO
         LTR   0,0                     TEST INTEG
         BNP   BOO                     NG
ANYI     TM    0(SR),FLIMIT            LIMIT?
         BZ    NTRSET                  NO
         ST    0,WORD                  FOR CLC
         LA    PR,5(SR,TR)             PT AT LIMIT
         CLC   WORD(4),0(PR)           CHECK LIMIT
         BNH   NTRSET                  OK
         B     BOO                     NG
         SPACE 3
LINNOCV  CL    0,=A(9)                 MAX LENGTH IN 9
         BH    BOO                     TOO BIG
         SR    15,15                   ZERO COUNTER
         LR    PR,1                    PTR
CHKMR    CLI   0(PR),C'.'              PERIOD?
         BE    HVPRD                   YES
         LA    15,1(,15)               KICK COUNTER
         LA    PR,1(,PR)               KICK PTR
         BCT   0,CHKMR                 MORE?
         B     WHOL                    INTEGER LINE NO
         SPACE
HVPRD    BCT   0,CHKFR                 FRACTION?
WHOL     LTR   0,15                    INTEG COUNT
         BNP   BOO                     "." NOT LEGAL
         SR    15,15                   ZERO FRACTION
WHOLDO   CL    0,=A(5)                 MAX LENGTH IS 5
         BH    BOO
         BAL   14,DOINT                CONV
         MH    0,=H'1000'              SET INTEGER VALUE
         AR    0,15                    ADD IN FRACTION
NTRSET   LR    15,0                    SET RETURN VALUE INTO R15
         LM    0,1,CPSAVE              RESET PTRS
         B     NOTKWPS                 READY TO RETURN
         SPACE
CHKFR    CL    0,=A(4)                 3 IS MAX
         BNL   BOO                     NG
         MVC   WORD+1(2),=C'00'        PUT ZEROS
         LR    14,0                    COUNT
         BCTR  14,0                    FOR EX
         EX    14,MVFR                 MVC   WORD(0),1(PR)
         LA    0,3                     CV COUNT
         LA    1,WORD                   PTR
         BAL   14,DOINT                CV
         LTR   NR,15                   ANY INTEG COUNT?
         BNP   NTRSET                  FIN
         LR    15,0                    SAVE FRAC
         LR    0,NR                    INTEG COUNT
         L     1,CPSAVE+4              RESET START PTR
         B     WHOLDO                  INTEGER LINE NO
         SPACE
MVFR     MVC   WORD(0),1(PR)
         SPACE 3
DOINT    CL    0,=A(9)                 MAX LEN IS 9
         BH    BOO                     NG
         LR    NR,0                    COUNT
         LR    PR,1                    PTR
CHNEXT   CLI   0(1),C'0'               TOO SMALL?
         BL    BOO                     YES
         CLI   0(1),C'9'               TOO BIG?
         BH    BOO                     YES
         LA    1,1(,1)                 NEXT
         BCT   0,CHNEXT                MORE?
         BCTR  NR,0                    REDUCE FOR EX OF PACK
         EX    NR,CHPACK               PACK
         CVB   0,CPDOUB                CONVERT
         BR    14                      RETURN
         SPACE 3
BOO      SR    RR,RR                    UNSET ROUTINE
         LH    NR,LEN                  GET LENGTH
         L     PR,LOC                  GET LOCATION
         LM    0,1,CPSAVE               PTRS
         TM    0(SR),FPARM              PARM?
         L     15,SV15                 SET 15
         BZ    NXTRY                    NO
RTNER    STM   0,1,CPSAVE          SET FOR INVALID
         B     CVNVALID
         EJECT
* TERMINAL PROCESSING
         SPACE
DONE     LR    1,PR
         TM    FL,FSQS+FDQS+FPS        COLLECTING STRING?
         BNZ   ILLSTR                  ERROR IF SO
         SR    0,0                     ZOT LOC AND LEN
         SR    1,1
         MVI   KW,C' '                 CLEAR KW
         MVC   KW+1(9),KW
         LTR   RR,RR                   PARM MISSING?
         BNZ   CVABSENT                BR IF SO
RTN      STH   NR,LEN                  SAVE LENGTH
         ST    PR,LOC                  SAVE LOCATION
         STM   0,1,CPSAVE               SAVE PTRS
         L     14,RA                   RETURN ADDR
         LA    15,KW
         LM    2,12,4(13)
         LTR   0,0
         BR    14
         EJECT
* CONSTANTS
         SPACE
TRT      TRT   0(0,PR),CLTBL           SCAN
MVT      MVC   KW(0),0(1)              MOVE TOKEN
CLC      CLC   KW(0),4(SR)             COMPARE KEYWORDS
CHPACK   PACK  CPDOUB(8),0(0,PR)       PACK INSTR FOR EX
         EJECT
* DOUBLE QUOTE SCAN
         SPACE
DQSCAN   XENTER 2,12
         BCTR  0,0                     STRIP OFF OUTER QUOTES
         BCTR  0,0
         LR    RR,1                    REMEMBER KIND OF QUOTE
         LA    1,1(,1)
         LR    PR,1
         LTR   NR,0
         BNP   DQX                     BR IF NO STRING
DQL      CLC   0(1,PR),0(RR)           QUOTE?
         BE    QF                      BR IF SO
DQLL     LA    PR,1(,PR)               NEXT CHAR
         BCT   NR,DQL
         LTR   0,0                     COURTESY
DQX      XEXIT 2,12
         SPACE
QF       BCTR  NR,0
         BCTR  NR,0
         LTR   NR,NR
         BM    DQX
         BCTR  0,0
         EX    NR,MVSTR                ELIMINATE 2ND QUOTE
         LA    NR,1(,NR)
         B     DQLL
         SPACE 3
MVSTR    MVC   0(0,PR),1(PR)
         EJECT
* TRANSLATE TABLE
*
* CLASS TABLE
         SPACE
CLTBL    DC    256AL1(4)
         ORG   CLTBL+X'81'
         DC    9X'00'
         ORG   CLTBL+X'91'
         DC    9X'00'
         ORG   CLTBL+X'A2'
         DC    8X'00'
         ORG   CLTBL+C'A'
         DC    9X'00'
         ORG   CLTBL+C'J'
         DC    9X'00'
         ORG   CLTBL+C'S'
         DC    8X'00'
         ORG   CLTBL+C'0'
         DC    10X'00'
         ORG   CLTBL+C'.'
         DC    X'00'
         ORG   CLTBL+C'$'
         DC    X'00'
         ORG   CLTBL+C'@'
         DC    X'00'
         ORG   CLTBL+C'#'
         DC    X'00'
         ORG   CLTBL+C'&&'
         DC    X'00'
         ORG   CLTBL+C'_'
         DC    X'00'
         ORG   CLTBL+C'+'
         DC    AL1(24)
         ORG   CLTBL+C'-'
         DC    AL1(24)
         ORG   CLTBL+C'*'
         DC    X'00'
         ORG   CLTBL+C'¢'              CENT SIGN
         DC    X'00'
         ORG   CLTBL+C'!'              EXP. POINT
         DC    X'00'
         ORG   CLTBL+C'<'
         DC    X'00'
         ORG   CLTBL+C'>'
         DC    X'00'
         ORG   CLTBL+C':'
         DC    X'00'
         ORG   CLTBL+C';'
         DC    AL1(28)
         ORG   CLTBL+C'%'
         DC    X'00'
         ORG   CLTBL+C'|'
         DC    AL1(24)
         ORG   CLTBL+C'?'
         DC    X'00'
         ORG   CLTBL+C''''
         DC    AL1(8)
         ORG   CLTBL+C'"'
         DC    AL1(12)
         ORG   CLTBL+C'('
         DC    AL1(16)
         ORG   CLTBL+C')'
         DC    AL1(20)
         ORG   CLTBL+C'/'
         DC    AL1(24)
         ORG   CLTBL+C'¬'              ADD ¬ TO TRT TABLE
         DC    AL1(24)
         ORG
         EJECT
         LTORG
         EJECT
* SAVE AREA
         SPACE
SA       DSECT
         DS    F
         DS    (12-2+1)F
WORD     DS    2F
SV15     DS    F
PCNT     DS    H
FL       DS    X
         SPACE
FSQS     EQU   X'80'                   SINGLE QUOTED STRING
FDQS     EQU   X'40'                   DOUBLE QUOTED STRING
FPS      EQU   X'20'                   PARENED STRING
         SPACE 3
FTBLE    EQU   X'F8'               NEW TABLE POINTER
FLAST    EQU   X'FF'                   END
FPARM    EQU   X'80'                   PARM
FLINNO   EQU   X'60'                   LINE NO. CONV
FINTEG   EQU   X'40'                   INTEGER 0 OR GTR
FINTEGP  EQU   X'20'                   INTEGER GTR 0
FCMSET   EQU   X'10'                   SET 3 COMMAND CHARS
FLIMIT   EQU   X'10'                   LIMIT
FABBREV  EQU   X'08'                   ABBREVIATION
         EJECT
         COPY  WYLCONST
         EJECT
         COMMON
         EJECT
* WORK AREA
         SPACE
         ORG   CPSCAN
LOC      DS    F
LEN      DS    H
KW       DS    CL8
PRTSTACK DS    H         RELATIVE POINTER TO PRT STACK
RA       DS    F
PRT      DS    F
         SPACE
         END
./ ADD NAME=PSGT,SSI=00000162
         COPY PMAC
PSGT     TITLE 'START OF PAGED CODE -- PAGE 36'
P036     PAGECDE HLOGF,HPOINT,HPOP,HPUT,HRECAT,HRESTR
      EJECT
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 36'
PHLOGF   GENTER ,
         LA    R2,LOGOFBEG
         LA    R3,LOGOFFIN
         B     SEND36
PHPOINT  GENTER ,
         LA    R2,POINTBEG
         LA    R3,POINTFIN
         B     SEND36
PHPOP    GENTER ,
         LA    R2,POPBEG
         LA    R3,POPFIN
         B     SEND36
PHPUT    GENTER ,
         LA    R2,PUTBEG
         LA    R3,PUTFIN
         B     SEND36
PHRECAT  GENTER ,
         LA    R2,RECATBEG
         LA    R3,RECATFIN
         B     SEND36
PHRESTR  GENTER ,
         LA    R2,RESTRBEG
         LA    R3,RESTRFIN
SEND36   SENDH
         PRINT NOGEN
LOGOFBEG HT 'FUNCTION: TERMINATES THE SESSION'
         HT 'SYNTAX:'
         HT '          LOGOFF ÝCLEAR¨'
         HT '          SIGNOFF ÝCLEAR¨'
         HT '          LOGOUT ÝCLEAR¨'
         HT 'OPERAND:'
LOGOFFIN HT 'CLEAR - DELETES THE ACTIVE FILE'
POINTBEG HT 'FUNCTION: SIMILAR TO THE LIST COMMAND EXCEPT IT UPDATES TH*
               E CURRENT'
         HT '          LINE POINTER'
         HT 'SYNTAX:'
         HT '          POINT Ý<RANGE>¨ ÝEXEC¨ ÝNOLIST¨'
         HT 'OPERANDS:'
         HT 'EXEC - LISTS THE EXEC FILE AND SETS ITS CURRENT LINE POINT*
               ER'
         HT 'NOLIST - SETS THE EXEC FILE CURRENT LINE POINTER WITHOUT L*
               ISTING ANY'
POINTFIN HT '         LINES'
POPBEG   HT 'FUNCTION: REMOVES A COMMAND FROM THE TOP OF THE TSO COMMAN*
               D STACK'
         HT 'SYNTAX:'
         HT '         POP ÝALL¨'
POPFIN   HT 'ALL - EMPTIES THE WHOLE STACK'
PUTBEG   HT 'FUNCTION: ADDS OUTPUT FROM THE CORRESPONDING SHOW COMMAND *
               TO THE'
         HT '  ACTIVE FILE'
         HT 'SYNTAX:'
         HT '    PUT »SPACE|DIRECTORY|DSNAMESº ÝON <VOLUME>¨ ÝCLEAR¨ ÝA*
               T <LINE1>¨'
         HT '        ÝBY <LINE2>¨ Ý<LIST OPTIONS>¨ Ý<SHOW OPTIONS>¨'
         HT 'OPERANDS:'
         HT 'AT <LINE1> - TEXT IS ADDED TO ACTIVE FILE BEGINNING AT <LI*
               NE1>'
         HT 'BY <LINE2> - LINE NUMBERS OF ADDED TEXT DIFFER BY <LINE2>'
PUTFIN   HT '<SHOW OPTIONS> - SPACE, DATE, TYPE, ALL.'
RECATBEG HT 'FUNCTION: CATALOGS THE SPECIFIED DATA SET IN THE SYSTEM CA*
               TALOG.'
RECATFIN HT 'SYNTAX:  RECATLG <DSNAME> ON <VOLUME> ÝUSER <UUU>¨ ÝGROUP *
               <GG>¨'
RESTRBEG HT 'FUNCTION: MOVES THE CURRENT EXEC FILE TO THE ACTIVE FILE'
         HT 'SYNTAX:'
         HT '          RESTORE ÝCLEAR¨'
RESTRFIN HT 'OPERAND: CLEAR - DELETES THE ACTIVE FILE'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 36'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 37'
P037     PAGECDE HSAVE
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 37'
PHSAVE   GENTER ,
         LA    R2,SAVEBEG
         LA    R3,SAVEFIN
SEND37   SENDH
         PRINT NOGEN
SAVEBEG  HT 'FUNCTION: SAVES THE ACTIVE FILE IN AN EXTERNAL DATA SET'
         HT 'SYNTAX:'
         HT '  SAVE <DSNAME> ÝUSER <UUU>¨ ÝGROUP <GG>¨ ÝON <VOLUME|CATL*
               G¨'
         HT '     ÝNUMBERED|INTEGER¨ ÝCATLG|RECATLG|UNCATLG¨ ÝCLEAR¨'
         HT '     ÝEDIT|LRECL=<NNN>|CARD|PRINT¨ ÝLINES <RANGE>¨ ÝSET|NO*
               SET¨ Ý(<N>)¨'
         HT '     ÝSCRATCH|REPLACE¨ ÝSEQFLD=(»END|<POS>ºÝ,<LEN>¨)¨ ÝNOP*
               OINT¨'
         HT 'OPERANDS:'
         HT 'CATLG|RECATLG|UNCATLG - CATLG SPECIFIES THAT THE SYSTEM CA*
               TALOG THE'
         HT '  DATA SET AFTER IT HAS BEEN SAVED. RECATLG APPLIES WHEN Y*
               OU WANT'
         HT '  TO SAVE A DATA SET ON A VOLUME OTHER THAN THE ONE ON WHI*
               CH IT WAS'
         HT '  CATALOGED. UNCATLG REMOVES THE ENTRY FOR THE DATA SET FR*
               OM THE'
         HT '  SYSTEM CATALOG'
         HT 'EDIT|LRECL=<NNN>|CARD|PRINT - THE FORMAT OPERAND SPECIFIES*
                THE FORM'
         HT '  IN WHICH THE DATA IS TO BE SAVED. EDIT IS THE DEFAULT'
         HT 'LINES <RANGE> - SAVES THE PORTION OF YOUR ACTIVE FILE SPEC*
               IFIED BY'
         HT '  <RANGE>'
         HT '(<N>) - WHEN NON-EDIT DATA SETS ARE SAVED, IT SPECIFIES TH*
               E'
         HT '  BLOCKING FACTOR, THAT IS, THE DATA SET BLKSIZE WILL BE L*
               RECL*<N>'
         HT 'NOPOINT - LINE NUMBERS WILL BE PUT IN RECORDS WITHOUT A DE*
               CIMAL POINT'
         HT '  OR ZERO SUPPRESSION'
         HT 'SCRATCH|REPLACE - SPECIFIES THAT THE OLD SEQUENTIAL DATA S*
               ET IS TO BE'
         HT '  SCRATCHED BEFORE THE NEW DATA IS SAVED. FOR A PDS MEMBER*
               , THE NEW'
         HT '  MEMBER IS ADDED TO THE PDS THEN THE DIRECTORY IS UPDATED*
               '
SAVEFIN  HT 'FOR INFO ON OTHER OPERANDS USE THE "HELP USE" COMMAND'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 37'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 38'
P038     PAGECDE HRENM,HREP,HSEND,HSCR
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 38'
PHRENM   GENTER ,
         LA    R2,RENAMBEG
         LA    R3,RENAMFIN
         B     SEND38
PHREP    GENTER ,
         LA    R2,REPLBEG
         LA    R3,REPLFIN
         B     SEND38
PHSEND   GENTER ,
         LA    R2,TOBEG
         LA    R3,TOFIN
         B     SEND38
PHSCR    GENTER ,
         LA    R2,SCRATBEG
         LA    R3,SCRATFIN
SEND38   SENDH
         PRINT NOGEN
RENAMBEG HT 'FUNCTION: RENAMES A DATA SET OR PDS MEMBER'
         HT 'SYNTAX:'
         HT ' RENAME <DSNAME> ÝON <VOLUME>¨ ÝUNCAT¨ ÝUSER <UUU>¨ ÝGROUP*
                <GG>¨ ÝSET¨'
         HT '         TO <NEW DSNAME> ÝON <VOLUME>¨ ÝUSER <UUU>¨ ÝGROUP*
                <GG>¨ ÝSET¨'
         HT '         ÝCATLG|RECATLG|UNCATLG¨'
         HT 'OR'
         HT '  RENAME Ý<PDSNAME>¨#<MEMBER> ÝON <VOLUME>¨ ÝUSER <UUU>¨ Ý*
               GROUP <GG>¨'
RENAMFIN HT '         »TO|ALIASº <NEW MEMBERNAME> ÝON <VOLUME>¨'
REPLBEG  HT 'FUNCTION: REPLACES THE CONTENTS OF ANY SPECIFIED <RANGE> O*
               F THE ACTIVE'
         HT '           FILE'
         HT 'SYNTAX:  REPLACE <RANGE> Ý<LIST OPTIONS>¨ ÝDITTO¨'
         HT 'OPERANDS:'
         HT 'DITTO - ALL LINES IN <RANGE> REPLACED BY ANSWER TO FIRST P*
               ROMT.'
REPLFIN  HT 'LIST - LISTS EACH LINE IN THE <RANGE> BEFORE IT IS REPLACE*
               D.'
TOBEG    HT 'FUNCTION: SENDS A MESSAGE TO ANOTHER TERMINAL'
         HT 'SYNTAX:'
         HT '          SEND »<N>|<ID>|<UUU>|OPRº <MESSAGE>'
         HT '      OR  TO   »<N>|<ID>|<UUU>|OPRº <MESSAGE>'
         HT 'OPERANDS:'
         HT '<N>,<ID> - USED AS IN THE SHOW LINE COMMAND.'
         HT 'OPR - SEND THE <MESSAGE> TO THE OPERATOR''S CONSOLE.'
TOFIN    HT '<UUU> - USER INITIALS.'
SCRATBEG HT 'FUNCTION: DELETES ANY EXTERNAL FILE THAT BELONGS TO YOU OR*
                YOUR GROUP.'
         HT 'SYNTAX:'
         HT 'SCRATCH <DSNAME> ÝON <VOLUME>|CATLG¨ ÝUSER <UUU>¨ ÝGROUP <*
               GG>¨'
         HT '        ÝSET|NOSET¨ ÝUNCATLG¨ ÝPDS¨'
         HT 'OPERANDS:'
         HT 'UNCATLG - UNCATALOGS THE SPECIFIED DATA SET.'
         HT 'PDS - SCRATCHES THE ENTIRE PARTITIONED DATA SET'
SCRATFIN HT 'FOR INFO ABOUT OTHER OPERANDS USE THE "HELP USE" COMMAND'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 38'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 39'
P039     PAGECDE HSUSP,HUSE
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 39'
PHSUSP   GENTER ,
         LA    R2,SUSBEG
         LA    R3,SUSFIN
         B     SEND39
PHUSE    GENTER ,
         LA    R2,USEBEG
         LA    R3,USEFIN
SEND39   SENDH
         PRINT NOGEN
SUSBEG   HT 'FUNCTION: ENABLES A USER TO LOGOFF WITHOUT LOSING HIS ACTI*
               VE WYLBUR'
         HT '          ENVIRONMENT, (I.E. ACTIVE AND EXEC FILES, PREPRO*
               CESSOR'
         HT '          VARIABLE VALUES, ESCAPE CHARACTER, CURRENT LINE *
               VALUES ETC.)'
         HT 'SYNTAX:'
SUSFIN   HT '          SUSPEND'
USEBEG   HT 'FUNCTION: READS A COPY OF A DIRECT ACCESS DATA SET INTO YO*
               UR ACTIVE FILE'
         HT 'SYNTAX:'
         HT '  USE <DSNAME> ÝUSER <UUU>¨ ÝGROUP <GG>¨ ÝON <VOLUME>|CATL*
               G¨'
         HT '      ÝCLEAR¨ ÝEDIT|LRECL=<NNN>|CARD|PRINT¨ ÝNOPOINT¨ ÝNUM*
               BERED¨'
         HT '      ÝSKIP <MMMM>¨ ÝSEQFLD=(»END|<POS>ºÝ,<LEN>¨)¨ ÝSET|NO*
               SET¨'
         HT 'OPERANDS:'
         HT 'CLEAR - CLEARS THE ACTIVE FILE'
         HT '<DSNAME> - SPECIFIES THE NAME OF THE DATA SET TO BE READ'
         HT 'GROUP <GG> -- SPECIFIES THAT THE GROUP <GG> IS TO BE USED *
               IN FORMING THE'
         HT '  <DSNAME>'
         HT 'NUMBERED - FOR NON-EDIT DATA SETS, THIS OPTION ASSUMES THA*
               T EACH RECORD'
         HT '  HAS A LINE NUMBER IN IT'
         HT 'SEQFLD - NOTIFIES WYLBUR THAT LINE NUMBERS ARE AT SOME POS*
               ITION OR'
         HT '  LENGTH OTHER THAN THE DEFAULT SEQFLD=(END,8)'
         HT 'SET/NOSET - SET SAVES THE PREFIX AND MEMBER NAMES USED IN *
               THE COMMAND.'
         HT '  IF YOU DO NOT WANT THIS TO BE DONE SPECIFY NOSET'
         HT 'SKIP <MMMM> - THE FIRST <MMMM> RECORDS OF THE DATA SET ARE*
                TO BE IGNORED'
         HT '<VOLUME> - SPECIFIES THE NAME OF THE DIRECT ACCESS VOLUME *
               ON WHICH THE'
         HT '  DATA SET RESIDES. IF THE DATA SET IS CATALOGED IN THE SY*
               STEM'
         HT '  CATALOG YOU MAY SPECIFY <ON CATLG> INSTEAD OF THE <VOLUM*
               E> NAME'
         HT 'USER <UUU> -- SPECIFIES THAT THE USER <UUU> IS TO BE USED *
               IN FORMING THE'
USEFIN   HT '  <DSNAME>'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 39'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 40'
P040     PAGECDE HLOAD,HSTACK
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 40'
PHLOAD   GENTER ,
         LA    R2,LOADBEG
         LA    R3,LOADFIN
         B     SEND40
PHSTACK  GENTER ,
         LA    R2,STACKBEG
         LA    R3,STACKFIN
SEND40   SENDH
         PRINT NOGEN
LOADBEG  HT 'FUNCTION: LOADS THE ACTIVE FILE INTO THE EXEC FILE AND EXE*
               CUTES IT.'
         HT '          THE ACTIVE FILE IS NOT CLEARED.'
         HT 'SYNTAX:'
         HT ' LOAD Ý<RANGE>¨ ÝFROM <DSNAME>¨ ÝON <VOLUME>|CATLG¨ ÝSET|N*
               OSET¨'
         HT '      ÝSTART <LINENO>¨ ÝLOG|NOLOG¨ ÝTERSE|VERBOSE¨ ÝPAUSE¨*
                ÝCLEAR¨'
         HT 'OPERANDS:'
LOADFIN  HT 'FOR INFO ON OPERANDS USE THE "HELP EXEC" COMMAND.'
STACKBEG HT 'FUNCTION: PUSHES TSO COMMANDS ON A STACK. WHEN THE WYLBUR *
               SESSION IS'
         HT '          TERMINATED TSO THEN ACCEPTS COMMANDS FROM THE CO*
               MMAND STACK.'
         HT 'SYNTAX:'
STACKFIN HT '                            STACK <ANY TSO COMMAND>'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 40'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 18'
P018     PAGECDE STAX,GOTSO,TIME,LSTUSR,PROFIL
         WIDENT 001
         USING CPAREA,R12
         TITLE 'STAX ROUTINE -- PAGE 18'
PSTAX    GENTER ,
         LA    R13,CPWA
         LR    R8,R13              SETUP STACK MECHANISM
         L     R2,CVIOWA
         USING WDIOWA,R2
         LA    R3,WASTAX           STAX WORK AREA
         SCAN  STAXOPTS            CHECK OPTIONS
         SPACE
* WE GET HERE IF NONE SPECIFIED.. DEFUALT TO 'STAX ON'
* MUST CHECK IF WE ARE IN DEFER MODE.
         SPACE
STAXON   TM    JCBAFL,JCBSTAX      DO WE HAVE A STAX?
         BO    STAXONX             YES.. ALREADY IN EFFECT
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         L     R14,CVATNRTN
         STAX  (14),REPLACE=NO,DEFER=NO,USADDR=((R12)),MF=(E,(R3))
         OI    JCBAFL,JCBSTAX
         NI    JCBAFL,X'FF'-JCBSTAXD
         B     CVGETCOM
         SPACE
STAXONX  TSEG  'STAX ALREADY IN EFFECT'
         B     CVGETCOM
         SPACE
STAXOFF  TM    JCBAFL,JCBSYSPR     HE GOT'EM PRIVS?
         BZ    CVGETCOM
         TM    JCBAFL,JCBSTAX      DO WE HAVE A STAX?
         BZ    TESTDEF             NO .. SEE IF DEFER=YES
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         STAX  ,MF=(E,(R3))
         NI    JCBAFL,X'FF'-JCBSTAX   TURN FLAG OFF
TESTDEF  TM    JCBAFL,JCBSTAXD        DEFER?
         BZ    CVGETCOM
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         STAX  ,DEFER=NO,MF=(E,(R3))
         NI    JCBAFL,X'FF'-JCBSTAXD
         B     CVGETCOM
         SPACE
STAXDEFR TM    JCBAFL,JCBSYSPR     PRIV'ED?
         BZ    CVGETCOM
         CH    R0,=H'3'            L'YES'
         BNE   STAXNO
         CLC   =C'YES',0(R1)
         BNE   CVNVALID
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         STAX  ,DEFER=YES,MF=(E,(R3))
         OI    JCBAFL,JCBSTAXD
         B     CVGETCOM
         SPACE
STAXNO   CH    R0,=H'2'
         BNE   CVNVALID
         CLC   =C'NO',0(R1)
         BNE   CVNVALID
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         STAX  ,DEFER=NO,MF=(E,(R3))
         NI    JCBAFL,X'FF'-JCBSTAX
         B     CVGETCOM
         SPACE
STAXINVL B     CVNVALID
         SPACE
STAXOPTS SCKW  ON,STAXON
         SCKW  OFF,STAXOFF
         SCKW  DEFER,STAXDEFR,(A,P)
         SCKW  ,STAXINVL
         SPACE
         DROP  R2
         TITLE 'ATTACH TMP.. GO DOWN ONE LEVEL -- PAGE 18'
PGOTSO   GENTER ,
         TM    JCBAFL,JCBSYSPR     PRIVILEGED?
         BZ    CVNVALID            NO .. EXE BREAK
*        SLR   R1,R1               CLEAR FOR SVC
*        SVC   254
         MODESET KEY=ZERO          GET KEY ZERO
         LA    R13,CPWA            SAVE AREA
         SR    R1,R1
         ST    R1,CPSTART+4
         LA    R1,CPSTART+4
         ST    R1,CPSTART
         MVI   CPSTART,X'80'
         L     R15,CVIOWA
         USING WDIOWA,R15
         LA    R4,WASTAX
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         STAX  ,DEFER=YES,MF=(E,(R4))
         L     R15,CVIOWA
         XC    ATTDECB(4),ATTDECB
         LA    R3,ATTDECB
         LA    R15,WATTACH
         LA    R1,CPSTART
         ATTACH MF=(E,(1)),SF=(E,(15))
         LTR   R15,R15
         BNZ   NOTODAY
         LR    R2,R1
         WAIT  ECB=(R3)
         ST    R2,CPSTART
         DETACH CPSTART
*        LA    R1,4               CLEAR FOR SVC
*        SVC   254
         MODESET KEY=NZERO          GET KEY NZERO
         L     R15,CVIOWA
         LA    R4,WASTAX
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         STAX  ,DEFER=NO,MF=(E,(R4))
         B     CVGETCOM
         SPACE
NOTODAY  TSEG  'CAN''T ATTACH THE TMP'
*        LA    R1,4               CLEAR FOR SVC
*        SVC   254
         MODESET KEY=NZERO          GET KEY NZERO
         L     R15,CVIOWA
         LA    R4,WASTAX
         XC    WASTAX(4*5),WASTAX  CLEAR STAX PARM LIST
         STAX  ,DEFER=NO,MF=(E,(R4))
         B     CVQTYPE
         TITLE 'DISPLAY CPU AND SESSION TIME -- PAGE 18'
PTIME    GENTER ,
         TIME  BIN
         CVCALL FMTIME
         TSEG  (1),(0)
         CLI   CPCMNM,C'D'
         BE    CVGETCOM
         LA    R13,CPWA            SAVE AREA
         LOAD  EP=IKJEFT25
         LR    R15,R0
         L     R6,CVIOWA
         DROP  R15
         USING WDIOWA,R6
         L     R2,WAUPT            USER PROFILE TABLE
         LTR   R2,R2               ANYTHING?
         BZ    NOTCP               NOT RUNNING AS A CP
         ST    R2,CPSTART+4
         L     R2,WAPSCB           POINT TO THE PSCB
         ST    R2,CPSTART+8
         L     R2,WAECT            ECT
         LTR   R2,R2
         BZ    NOTCP
         ST    R2,CPSTART+12
         LA    R2,CPSTART+16       POINT TO COMMAND BUFF
         ST    R2,CPSTART
         MVC   0(4,R2),=X'00040000' INDICATE NULL CMD
         LA    R1,CPSTART
         BALR  R14,R15             CALL IT
         DELETE EP=IKJEFT25
         B     CVGETCOM
         SPACE
NOTCP    TSEG  'WYLBUR IS NOT RUNNING AS A CP'
         B     CVQTYPE
         DROP  R6
         TITLE 'SHO USERS -- PAGE 18'
         SPACE
PLSTUSR  GENTER ,
         L     R6,16              CVT ADDRESS
         L     R6,1012(R6)      TCAST ADDRES
         USING TCAST,R6
*        SLR   R1,R1            FOR SVC
*        SVC   254
         MODESET KEY=ZERO
         LH    R2,TCASUSEC      NUMBER OF USERS
         SR    R0,R0              FOR THE BTD MACRO
         BTD   CPDOUB,(0),(2)     CONVERT TO CHARACTERS
         TSEG  (1),(0),B          PRINT NUMBER OF USERS
         TSEG  'CURRENT',,B
         LH    R2,TCASUMAX      MAXIMUM NUMBER OF USERS
         SR    R0,R0              FOR THE BTD MACRO
         BTD   CPDOUB,(0),(2)     CONVERT TO CHARACTERS
         TSEG  (1),(0),B          PRINT NUMBER OF USERS
         TSEG  'MAX USERS',,W
         L     R5,TCASTSB               POINTER TO TSB
         USING TSB,R5
         SLR   R0,R0              CLEAR FOR DIVIDE
         SLR   R4,R4              CLEAR FOR DIVIDE
         IC    R4,CVUSRFLD        LENGTH OF USERID
         LA    R4,8(,R4)          LENGTH OF ONE ENTRY
         LA    R1,79              LENGTH OF LINE
         DR    R0,R4              DIVIDE FOR NUMBER OF USERS PER LINE
         LR    R4,R1              SET FOR LOOP
         LR    R6,R4              FOR LATER
TESTUSER TM    TSBSTAT,TSBINUSE   TSB IN USE
         BZ    NEXTU              NO GET NEXT
         L     R3,TSBASCBA        GET ASCBAPOINTER
         L     R3,176(R3)         POINTER TO USER ID
         TSEG  (R3),7             PUT IT OUT
         TSEG  '('
         TSEG  TSBTRMID,4        TERMINAL ID
         TSEG  ')',,B
         BCT   R4,NEXTU           GET NEXT U
         TWRITE ,                WRITE LINE
         LR    R4,R6             NUMBER OF USERS PER LINE
NEXTU    L     R5,TSBEXTNT        NEXT USER
         ICM   R5,7,1(R5)        TSBXFWD
         BZ    *+8               ZERO END
         BCT   R2,TESTUSER       SEE IF SIGNONED
         CH    R4,=H'4'           NO USERS
         BE    LSTUEXIT            YES EXIT
         TWRITE ,
LSTUEXIT MODESET KEY=NZERO
*        LA    R1,4            FOR SVC
*        SVC   254
         B     CVGETCOM
         DROP  R5,R6
         TITLE 'SHO PROFILE -- PAGE 18'
PPROFIL  GENTER ,
         L     R6,CVIOWA
         USING WDIOWA,R6
         L     R2,WAUPT
         LTR   R2,R2
         BZ    CVNVALID
         DROP  R6
         TM    12(R2),X'40'
         BZ    PRMPT
         TSEG  'NO'
PRMPT    TSEG  'PROMPT',,B
         TM    12(R2),X'20'
         BO    MSGID
         TSEG  'NO'
MSGID    TSEG  'MSGID',,B
         TM    12(R2),X'10'
         BZ    INTCOM
         TSEG  'NO'
INTCOM   TSEG  'INTERCOM',,B
         TM    12(R2),X'08'
         BO    PAUSE
         TSEG  'NO'
PAUSE    TSEG  'PAUSE',,B
         CLI   13(R2),X'FF'
         BNE   CDEL1
         TSEG  'NOCHAR',,B
         B     LDEL
CDEL1    TSEG  'CHAR('
         CLI   13(R2),X'00'
         BNE   CDEL2
CDELBS   TSEG  'BS'
         B     CDEL9
CDEL2    CLI   13(R2),X'16'
         BE    CDELBS
         TSEG  13(R2),1
CDEL9    TSEG  ')',,B
LDEL     TM    12(R2),X'04'
         BZ    LDEL0
         TSEG  'LINE('
         B     LDELATTN
LDEL0    CLI   14(R2),X'FF'
         BNE   LDEL1
         TSEG  'NOLINE',,W
         B     CVGETCOM
LDEL1    TSEG  'LINE('
         CLI   14(R2),X'00'
         BNE   LDEL2
LDELATTN TSEG  'ATTN'
         B     LDEL9
LDEL2    CLI   14(R2),X'16'
         BE    LDELATTN
         CLI   14(R2),X'18'
         BNE   LDEL3
         TSEG  'CTLX'
         B     LDEL9
LDEL3    TSEG  14(R2),1
LDEL9    TSEG  ')',,W
         B     CVGETCOM
         TITLE 'END OF PAGED CODE -- PAGE 18'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 17'
P017     PAGECDE SEND,WHERE,STACK
         WIDENT 001
         USING CPAREA,R12
         TITLE 'SEND A MESSAGE TO A USER -- PAGE 17'
PSEND    GENTER ,
         SCAN  USERID
         B     CVABSENT
         SPACE
USERID   SCKW  OPER,RESETRS
         SCKW  OPR,RESETRS
         SCKW  ,USERIDD
USERIDD  CH    R0,=H'8'
         BH    BADID               INVALID .. TOO LONG
FINDUSE  MVI   CPDOUB,C' '
         MVC   CPDOUB+1(7),CPDOUB  BLANK OUT FIELD
         LR    R4,R0
         BCTR  R4,0                -1 FOR EX
         EX    R4,MVCID            MOVE ID INTO CPDOUB
         SPACE
*        SEARCH THE CSCB CHAIN                                     JJG0
         L     R3,16               CVT  POINTER                    JJG0
         USING CVT,R3                                              JJG0
         L     R3,CVTASVT          ASVT POINTER                    JJG0
         USING ASVT,R3                                             JJG0
         L     R6,ASVTMAXU         MAX USERS                       JJG0
ASCBLOOP DS    0H                                                  JJG0
         TM    ASVTENTY,ASVTAVAL   IS IT AVAILABLE                 JJG0
         BO    NEXTASCB            YES, GET NEXT ASCB              JJG0
         ICM   R4,7,ASVTENTY+1     FIRST ASCB                      JJG0
         BZ    NEXTASCB            YES, GET NEXT ASCB              JJG0
         USING ASCB,R4                                             JJG0
         L     R5,ASCBCSCB         CSCB POINTER                    JJG0
         USING CHAIN,R5                                            JJG0
         TM    CHACT,CHTERM        TSO USER                        JJG0
         BZ    NEXTASCB            NO GET NEXT ASCB                JJG0
         CLC   CHKEY,CPDOUB        USER WE WANT                    JJG0
         BE    FOUNDHIM            YES FOUND HIM                   JJG0
NEXTASCB DS    0H                                                  JJG0
         LA    R3,4(,R3)           NEXT ASVT IF ANY                JJG0
         BCT   R6,ASCBLOOP         CHECK NEXT                      JJG0
NOUSER   TSEG  (1),(0)             ECHO THE USER ID
         TSEG  ': NOT LOGGED ON'
         B     CVQTYPE
         SPACE
MVCID    MVC   CPDOUB(0),0(R1)
FOUNDHIM SCTELL ,                  GET MSG
         LH    R3,CHTJID           GET TJID ASID                   JJG0
         SLL   R3,16               MOVE INTO HIGH ORDER 2 BYTES
         XR    R2,R2              ZERO THE REG
         IC    R2,CVUSRFLD        PICK UP ID LEN
         MVC   CPWA(5),=C'FROM '
         MVC   CPWA+5(0),CPUSER   MOVE IN USERID
         EX    R2,*-6             EXECUTE THE ABOVE MOVE
         LA    R2,CPWA+6(R2)      CURRENT OFFSET
         MVC   0(2,R2),=C': '     MAKE IT PRETTY
         LA    R2,2(R2)           CURRENT OFFSET
         LR    R15,R2             SAVE IN R15
         LTR   R2,R0              LEN OF MSG TO R2
         BNP   NULLMSG            SENDING BLANK LINE
         BCTR  R2,0               DOWN 1 FOR IBM
         EX    R2,MOVEMSG         MOVE IN THE MSG
         IC    R2,CVUSRFLD        PICK UP THE ID LEN
         LA    R2,8(R2)           PLUS GARBAGE+1 ON ID =
         AR    R0,R2              TRUE LENGTH OF THE MSG
PUT3277  LA    R1,CPWA            POINT TO MSG LOC
         LR    R2,R3              RECEIVING USERID
         LR    R4,R0              PRESERVE COUNT
         OR    R0,R2              OR IN TJID FOR TPUT
         O     R1,=XL4'00000000'  ENSURE EDIT, WAIT ON 3277'S
         TPUT  (1),(0),R          REG FORM OF TPUT
         B     RTNCHK
MSGADDR  LA    R1,CPWA
         LR    R2,R3
         LR    R4,R0
         OR    R2,R0
         O     R1,=X'12000000'    INDICATED CONTROL
         TPUT  (R1),(R0),R        TELL USER
RTNCHK   LA    R8,CPWA+4(R4)                                    J
         SRL   R8,2
         SLL   R8,2
         LR    R13,R8
         LTR   R15,R15             ANYTHING UNUSUAL?
         BZ    CVGETCOM
         CH    R15,=H'4'           NO MORE BUFFS?
         BE    EOBUFFS             YEP
         CH    R15,=H'12'          MSGOFF?
         BE    MSGOFF
         SPACE
* UNKNOWN RETURN CODE .. MSG UNSENT
         LR    R5,R15
         TSEG  NOTSENT,L'NOTSENT
         MVC   CPWA(L'NOTSENT),NOTSENT
         LR    R15,R5
         SR    R0,R0               CLEAR LENGTH INDICATOR
         LA    R1,CPWA+L'NOTSENT
         LA    R8,CPWA+(L'NOTSENT+16)/4*4
         CVCALL BTD
         TSEG  (1),(0)
         TSEG  ')'
         B     CVQTYPE
NOTSENT  DC    C'MESSAGE NOT SENT (RC='
MSGOFF   TSEG  'USER DOES NOT WANT MESSAGES NOW'
         B     CVQTYPE
         SPACE
EOBUFFS  TSEG  'NO BUFFERS AVAILABLE FOR MESSAGE',,W
         SYSQS 1,0,'RETRY'
         CVCALL YESREQ
         B     MSGADDR
         SPACE
MOVEMSG  MVC   0(0,R15),0(R1)
FROMID   DC    0C'CLCLFROM '
         DC    X'0D250D25',C'FROM '
         SPACE
NULLMSG  LA    R0,L'FROMID+10
         B     PUT3277            YES...GO DO 3277 TPUT
         SPACE
BADID    TSEG  'USER ID MUST BE 8 CHARACTERS OR LESS'
         B     CVQTYPE
         SPACE
RESETRS  SCTELL ,
         LTR   R2,R0               ANY MSG?
         BNP   NULLOPR
         BCTR  R2,0                -1 FOR EXECUTE
         EX    R2,OPRMVC
         LA    R3,CPWA+1+4(R2)
         MVI   0(R3),C' '
         MVC   1(5,R3),CPUSER
         LA    R2,11(,R2)          INCLUDE USER ID
         STH   R2,CPWA
         SR    R0,R0
         STH   R2,CPWA+2
         LA    R1,CPWA
         WTO   MF=(E,(1))
         B     CVGETCOM
NULLOPR  TSEG  'MESSAGE TO OPERATOR NOT SPECIFIED'
         B     CVQTYPE
         SPACE
OPRMVC   MVC   CPWA+4(0),0(R1)
         B     CVQTYPE
             DROP  R3,R4,R5
         TITLE 'WHERE ROUTINE -- PAGE 17'
PWHERE   GENTER ,
         TM    JCBAFL,JCBSYSPR     IS HE PRIVED>
         BNO   CVNVALID
         SCAN  WHERETAB
         B     CVABSENT
         SPACE
WCP      LA    R3,CPSTART
         B     DISPLAY
         SPACE
WCV      LA    R3,CVSTART
         B     DISPLAY
         SPACE
WDIREC   LA    R3,CPDREC
         B     DISPLAY
         SPACE
WCVT     L     R3,16               GET CVT POINTER
         B     DISPLAY             DISPLAY IT
         SPACE
WROUTB   LA    R3,ROUTBLE
         SPACE
DISPLAY  TSEG  'ADRESS:',,B
         BTX   CPDOUB,6,(R3)
         TSEG  (1),(0),W
         B     CVGETCOM
         SPACE
WHERETAB SCKW  CP,WCP
         SCKW  CV,WCV
         SCKW  DIRECTORY,WDIREC,A
         SCKW  ROUTBLE,WROUTB,A
         SCKW  ,POPINV
         TITLE 'STACK AND POP COMMANDS -- PAGE 17'
PSTACK   GENTER ,
         L     R3,JCBWAPTR
         L     R6,CVIOWA
         USING WDIOWA,R6
         L     R2,WAUPT
         LTR   R2,R2
         BZ    CVNVALID
         ST    R2,16(,R3)        AT IOPL + 0 = UPT
         L     R2,WAECT
         DROP  R6
         LTR   R2,R2
         BZ    CVNVALID
         ST    R2,20(,R3)        AT IOPL + 4 = ECT
         LA    R2,8(,R3)
         ST    R2,24(,R3)        AT IOPL + 8 = ECB
         ST    R3,28(,R3)        AT IOPL +12 = STPB
         CLI   CPCMNM,C'P'       CAN IT BE A POP COMMAND?
         BE    GOPOP             YES, GO POP STACK
         SCTELL ,                GO GET REST OF COMMAND
         LTR   R4,R0             WAS THERE ANYTHING?
         BNH   CVABSENT          NO MISSING OPERAND
         LR    R2,R1             R2 CONTAINS OPERAND @
         AH    R0,=H'16'         ADD 16 MORE FOR IOPL
         O     R0,=XL4'4E000000' SUBPOOL 78 SAYS TSO
         GETMAIN R,LV=(0)
         LR    R5,R1             IOPL ADDRESS
         STH   R4,6(,R5)         AT IOPL + 6 = TOTAL LENGTH
         STH   R4,4(,R5)         AT IOPL + 4 = RECORD LENGTH
         LA    R6,16(,R5)        IN-CORE LIST ADDRESS
         ST    R6,0(,R5)         AT IOPL + 0 = IN-CORE LIST @
         ST    R6,8(,R5)         AT IOPL + 8 = IN-CORE LIST @
         BCTR  R4,0
         EX    R4,STKCMND        FILL IN-CORE LIST
         XC    12(4,5),12(5)     AT IOPL + 12 = RESERVED
         ST    R5,4(,R3)            AT STPB + 4 = IOPL
         MVC   0(4,R3),=X'80400000' AT STPB + 0 = FLAGS
EXSTACK  LA    R1,16(,R3)          POINT TO IOPL
         SR    R15,R15
         ST    R15,4(,R13)
         MVC   8(8,R13),=CL8'IKJSTCK'
         LA    R15,8(,R13)
         ST    R15,0(,R13)
         LR    R15,R13
         LA    R13,16(,R13)
*        STACK MF=(E,(1))
         SVC   6
         B     CVGETCOM
         SPACE
STKCMND  MVC   0(0,R6),0(R2)
         SPACE 3
GOPOP    XC    0(8,R3),0(R3)      CLEAR THE STPB
         MVI   0(R3),X'10'        ASSUME DELETE ALL
         SCAN  POPPRT
         MVI   0(R3),X'40'        DELETE TOP ELEMENT
         B     EXSTACK            GO ISSUE STACK MACRO
         SPACE
POPINV   B     CVNVALID           INVALID PARAMETER
         SPACE
POPPRT   SCKW  ALL,EXSTACK
         SCKW  ,POPINV
         TITLE 'END OF PAGED CODE -- PAGE 17'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 16'
P016     PAGECDE SUSPND,LGOFF
         WIDENT 001
         USING CPAREA,R12
         TITLE 'SUSPEND COMMAND -- PAGE 16'
* SUSPEND SESSION.. IE... WRITE OUT ALL MARKED PAGES
* THEN DUMP THE CP AND CVP TO PAGE 0 & 1 RESPECTIVELY
         SPACE
PSUSPND  GENTER ,
         L     R3,CVFPFCB
         L     R2,CVFPAGE          POINT TO PCB
         USING PFCB,R3
         USING PCB,R2
PCBLOOP  TM    PCBFL,PCBFMARK      PAGE ALTERED?
         BZ    NEXTPCB
         LH    R1,PCBPN            GET PAGE #
         MVI   PCBRWCCW,PIOWRITE   INDICATE WRITE
         CVCALL PIO                GO WRITE OUT THE PAGE
NEXTPCB  L     R4,PCBPT            POINTER TO PT ENTRY
         LTR   R4,R4               ANY?
         BZ    *+8
         MVI   0(R4),X'00'         PAGE NOT IN CORE
         LA    R2,PCBSIZE(,R2)     NEXT PCB
         C     R2,CVLPAGE
         BL    PCBLOOP
         SPACE
* WE WILL FILL UP A PAGE BY GOOD STUFF THEN WRITE IT OUT
         L     R2,CVFPAGE          POINT TO A PCB
         L     R4,JCBWAPTR         A BUFFER ADDRESS
         ST    R4,PCBRWCCW         PUT IT AS DATA ADDRESS
         MVC   0(8,R4),=CL8'SUSPEND'
         MVC   8(4,R4),PFCBCP      CURRENT PAGES USED
         MVC   12(4,R4),CPRSCNVL   RESCAN ESC SKIP CHARS
         MVC   16(4,R4),CPEXLNET   SAVE EXEC LINE POINTER
         MVC   20(12,R4),CVEXTRAP  EXEC TRAP AND UPDATE CNT
         LA    R4,32(,R4)          MORE TO WRITE
         MVC   0(RTBSIZE-RTBNTEXT,R4),RTBSTART RTB INFO
         LA    R4,RTBSIZE-RTBNTEXT(,R4)
         MVC   0(CPRCVSZ1,R4),CPGLDL           CP INFO
         LA    R4,CPRCVSZ1(,R4)
         MVC   0(CPRCVSZ2,R4),CPDRPT           MORE CP INFO
         LA    R4,CPRCVSZ2(,R4)
         LR    R0,R2              SAVE ACROSS MVCL
         LR    R1,R3              SAVE ACROSS MVCL
         LR    R2,R4                           FOR MVCL
         LA    R3,CPRCVSZ3                     LENGTH
         LA    R14,CPDREC                      FROM
         LR    R15,R3                          SAME LENGTH
         MVCL  R2,R14                          MOVE IT
*        MVC   0(CPRCVSZ3,R4),CPDREC           1ST PART OF DIREC
         LA    R4,CPRCVSZ3(,R4)
         LR    R2,R4                           FOR MVCL
         LA    R3,ROUTBLEN                     LENGTH
         LA    R14,ROUTBLE                     FROM
         LR    R15,R3                          SAME LENGTH
         MVCL  R2,R14                          MOVE IT
         LR    R2,R0              RESTORE ACROSS MVCL
         LR    R3,R1              RESTORE ACROSS MVCL
*        MVC   0(256,R4),ROUTBLE
*        MVC   256(ROUTBLEN-256,R4),256+ROUTBLE
         LA    R4,ROUTBLEN(,R4)
         L     R5,RTBWAPTR
         MVC   0(256,R4),0(R5)                 TERMINAL INFO
         LA    R4,256(,R4)
         SLR   R1,R1               PAGE 0
         ST    R3,PCBPFCB          PUT IN PFCB IT BELONGS TO
         MVI   PCBRWCCW,PIOWRITE   INDICATE WRITE
         CVCALL PIO
*        L     R5,PFCBPTST
*        MVC   0(256,R4),0(R5)                 PART 1 OF PT
*        MVC   256(256,R4),256(R5)             PART 2 OF PT
*        MVC   512(88,R4),512(R5)              LAST PART OF PT
         LR    R0,R2                  SAVE
         LR    R1,R3                   ACROSS MVCL
         L     R14,JCBWAPTR           GET BUFFER
         ST    R14,PCBRWCCW           SAVE IT
         L     R2,PFCBPTST            BEGINNING OF PAGE TABLE
         LA    R3,&PAGE0              MAX NUMBER OF PAGES
         LR    R15,R3                 SAME LENGTH
         MVCL  R14,R2                 MOVE IT
         LR    R2,R0              RESTORE ACROSS MVCL
         LR    R3,R1              RESTORE ACROSS MVCL
         LA    R1,1                PAGE 1
         ST    R3,PCBPFCB          PUT IN PFCB IT BELONGS TO
         MVI   PCBRWCCW,PIOWRITE   INDICATE WRITE
         CVCALL PIO
         SPACE
* WE CAN WRITE OUT THE CP2 AND VCP BY MAKING THE ADDR FIELD
* OF THE WRITE CCW POINT TO THOSE TWO.
         LA    R1,CPAREA+CPSIZE    SECOND CP
         ST    R1,PCBRWCCW         SAVE ADDR IN CCW
         MVI   PCBRWCCW,PIOWRITE   RESTORE OPCODE
         LA    R1,2                PAGE 2
         CVCALL PIO                GO WRITE IT OUT
         L     R4,CVCPADDR         ADDRES OF VCP
         ST    R4,PCBRWCCW
         LA    R1,3                VCP GOES OUT ON PAGE # 3
         MVI   PCBRWCCW,PIOWRITE   RESTORE OP CODE
         CVCALL PIO
         B     CHKSTX              RETURN ALMOST LIKE LOGOFF
         TITLE 'LOGOFF PROCESSING -- PAGE 16'
PLGOFF   GENTER ,
         SCAN  CLRLIST
         CVCALL CLEARCK            CLEAR ACTIVE
         LA    R4,CPAREA+CPSIZE    WRITE OUT PAGE 0 SO THAT...
         L     R3,CVFPFCB          NEXT TIME WYLBUR IS CALLED...
         L     R2,CVFPAGE          IT DOES NOT TRY RECOVERY...
         ST    R4,PCBRWCCW         SO... POINT TO ANY GOOD OLD...
         SR    R1,R1               DATA AND WRITE IT OUT.
         ST    R3,PCBPFCB
         MVI   PCBRWCCW,PIOWRITE
         CVCALL PIO
         DROP  R2
CHKSTX   TM    JCBAFL,JCBSTAX     DO WE HAVE A STAX GOING?
         BZ    GOHOME
         STAX  ,
GOHOME   L     R13,CVRETURN
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14                RETURN TO CALLER
         SPACE
LINVALID B     CVNVALID
         SPACE
CLRLIST  SCKW  CLEAR,CLRACT,A
         SCKW  CLR,CLRACT
         SCKW  ,LINVALID
         SPACE
CLRACT   OI    CPLFLG2,CPFCLEAR    INDICATE CLR ACTIVE
         BR    R14                 RETURN
         TITLE 'END OF PAGED CODE -- PAGE 16'
         PINIT
         PEND
         PRINT OFF
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
         EJECT
         COMMON ,
         EJECT
PFCB     DSECT
         COPY  PFCBTSO
         EJECT
PCB      DSECT
         COPY  PCBTSO
         EJECT
WDIOWA   WDIOWA DSECT
         EJECT
CVT      DSECT
         CVT   SYS=VMS
         EJECT
         IHAASCB
         EJECT
         IHAASVT
         EJECT
         IEECHAIN
         EJECT
         IKTTCAST
         PRINT ON
         EJECT
         IKJTSB    LIST=YES
         END
./ ADD NAME=PTSO,SSI=00000002
PTSO     TITLE 'START OF PAGED CODE -- PAGE 19'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
P019     PAGECDE HELP,HCRT
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINE -- PAGE 19'
PHELP    GENTER ,
         SCAN  HELPTBL            SCAN KEYWORDS
         SPACE ,
         LA    R2,HBEG            SET UP REGS FOR
         LA    R3,HFIN            SENDH MACRO CALL
         B     SEND19
         SPACE 3
*        REG 2 IS SET TO THE ADDRESS OF COMMAND TABLE
*        REG 3 IS SET TO THE NUMBER OF COMMANDS
*        REG 4 IS SET TO THE ADDRESS OF LAST COMMAND IN COMMAND TABLE
         SPACE ,
HCOMMAND TSEG  'FOLLOWING COMMANDS ARE AVAILABLE:',,W
         BP    CVQTYPE
NXTLINE  LA    R4,8               8 COMMANDS PER TERMINAL LINE
PUTBUF   TSEG  (2),8,B            ADD TO TERMINAL BUFFER
         LA    R2,16(,R2)         ADDRESS OF NEXT COMMAND
         BCT   R3,*+8             IF R3>0 CONTINUE LISTING COMMANDS
         B     CVGETCOM           END OF COMMANDS
         BCT   R4,PUTBUF          BR TO CONTINUE FILLING TERMINAL L
         TWRITE ,                 SEND LINE
         BP    CVQTYPE            ATTN WAS HIT ABORT & GET NEXT COMD
         B     NXTLINE
HDSN     PCALL HDSN
HINV     B     CVNVALID
OPNDSRCH CH    R0,=H'8'        TOO LONG A COMMAND?
         BH    CVNVALID        YES.
         ST    R2,0(,13)
         ST    R4,4(,13)       SAVE ADR OF LAST ENTRY OF COMAND TABLE
         LR    R5,R0           GET LENGTH OF COMMAND
         BCTR  R5,R0           GUESS WHY
         LA    R6,1            TO PROPAGATE A 1 BIT
         SLL   R6,0(R5)        TO FORM A LENGTH MASK
         L     R2,=F'-1'
         LA    R3,1(,R3)
OPNLOOP  LA    R4,0(R2,R3)
         SRL   R4,1            DIVIDE BY 2
         SLL   R4,4            MULTIPLY BY 16
         A     R4,0(,13)       POINT TO ENTRY
         EX    R5,CLC          SEE WHETHER TO GO UP OR DOWN
         BL    CMDLESS
         BH    CMDHIGH
         EX    R6,TMABREV      IS THIS ABBREV OK?
         BO    FOUNDIT
         LR    R14,R4          KEEP THE CURRENT POINTER
GOBACK   S     R4,=F'16'       BACK UP AN ENTRY
         C     R4,0(,13)
         BL    FORWARDX
         EX    R5,CLC          IS THIS A GOOD ONE?
         BNE   FORWARDX
         EX    R6,TMABREV      A GOOD ABBREV?
         BO    FOUNDIT
         B     GOBACK          KEEP BACKING UP
         SPACE
FORWARDX LR    R4,R14          RESTORE PONTER
FORWARD  LA    R4,16(,R4)      STEP UP
         C     R4,4(,13)
         BH    CVNVALID
         EX    R5,CLC          IS IT THIS ONE?
         BNE   CVNVALID
         EX    R6,TMABREV      GOOD ABREV?
         BO    FOUNDIT
         B     FORWARD
         SPACE
FOUNDIT  LA    R14,8(,R4)     FIND WHERE TO GO
         B     CVROUTGT
         SPACE
CMDLESS  LA    R2,0(R2,R3)
         SRL   R2,1
ISITOPD  LA    R15,1(,R2)
         CR    R15,R3
         BL    OPNLOOP
         B     CVNVALID
         SPACE
CMDHIGH  LA    R3,0(R2,R3)
         SRL   R3,1
         B     ISITOPD
         SPACE
CLC      CLC   0(0,R4),0(R1)
         SPACE
TMABREV  TM    12(R4),X'00'
PHCRT    GENTER ,
         LA    R2,CRTBEG
         LA    R3,CRTFIN
         B     SEND19
CMDRET   LA    R2,CMDBEG
         LA    R3,CMDFIN
SEND19   SENDH
         PRINT NOGEN
HBEG     HT 'Type HELP HELP for info about using the HELP COMMAND.'
HFIN     HT 'For further help call Vace Kundakci at X-3618'
CRTBEG   HT 'CRT|NOCRT- WHEN NOCRT IS IN EFFECT AND A LISTING OF RANGE *
               LONGER THAN'
         HT '  THE SCREEN SIZE IS BEING DONE, THE LISTING WILL FLOW OFF*
                THE TOP OF'
         HT '  THE SCREEN UNTIL THE LISTING IS OVER. HOWEVER, WHEN CRT *
               IS IN EFFECT A'
         HT '  LISTING WILL PAUSE WHEN THE SCREEN HAS BEEN FILLED AND W*
               YLBUR WILL'
         HT '  PROMPT WITH A COLON. YOU MAY RESPOND WITH ANY OF THE FOL*
               LOWING:'
         HT '  (CR)- THE SCREEN IS ERASED, LISTING CONTINUES UNTIL THE *
               SCREEN'
         HT '    IS FILLED AGAIN'
         HT '  (ATTN) - THE COMMAND IS ABORTED'
         HT '  (CTRL) "E" - SAME AS (CR) EXCEPT THE SCREEN IS NOT CLEAR*
               ED FIRST'
         HT '    3-DIGIT-NUMBER, FOLLOWED BY (CR) OR (CTRL) "E" - THIS *
               WILL'
CRTFIN   HT '    CONTINUE LISTING THAT NUMBER OF LINES BEFORE THE NEXT *
               PROMPT'
CMDBEG   HT 'Function: modifies and reissues the last command typed to *
               WYLBUR'
         HT 'Syntax: "$" followed by CARRIAGE RETURN'
CMDFIN   HT '     or "$" followed by ATTENTION'
         PRINT GEN
HELPTBL  SCKW  ALL,HCOMMAND
         SCKW  $,CMDRET
         SCKW  DSN,HDSN
         SCKW  ,OPNDSRCH,S
         SCKW  ,HINV
         TITLE 'END OF PAGED CODE -- PAGE 19'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 14'
P014     PAGECDE HDSN,HSHOW,NOHELP
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 14'
PHDSN    GENTER ,
         LA    R2,BEGDSN                 SET UP REGS FOR
         LA    R3,DSNFIN          SENDH MACRO CALL
SENDIT   SENDH
PHSHOW   GENTER ,
         LA    R2,SHOWBEG
         LA    R3,SHOWFIN
         B     SENDIT
PNOHELP  GENTER ,
         LA    R2,NOHELBEG        SET UP REGS FOR
         LR    R3,R2              SENH MACRO CALL
         B     SENDIT
         PRINT NOGEN
NOHELBEG HT 'NO HELP AVAILABLE '
BEGDSN   HT 'WYLBUR DATASET NAMING CONVENTIONS:'
         HT '   A SEQUENTIAL DATASET NAME IS OF THE FORM'
         HT '                            WYL.GG.UUU.FILE1'
         HT '                     OR     @GG.&&UUU.FILE1'
         HT '                     OR     FILE1 USER UUU GROUP GG'
         HT 'WHERE GG IS THE GROUP NAME, UUU IS THE USER INITIALS AND "*
               FILE1" IS THE'
         HT 'USER GIVEN NAME (8 OR LESS CHARACTERS).'
         HT '   A PARTITIONED DATASET (PDS) NAME IS OF THE FORM'
         HT '                             WYL.GG.UUU.LIB#RECORD'
         HT '                     OR      @GG.&&UUU.LIB#RECORD'
         HT '                     OR      LIB#RECORD USER UUU GROUP GG'
         HT 'WHERE GG AND UUU ARE AS ABOVE, "LIB" IS THE LIBRARY NAME A*
               ND "RECORD" IS'
         HT 'THE USER GIVEN MEMBER NAME (8 OR LESS CHARACTERS). THE MEM*
               BER NAME CAN'
         HT 'ALSO BE ENCLOSED IN PARENTHESES.  EVERY DATASET NAME MUST *
               BE ACCOMPANIED'
         HT 'BY THE VOLUME NUMBER ON WHICH THE DATASET RESIDES OTHERWIS*
               E, YOU MUST'
DSNFIN   HT 'SPECIFY "ON CATLG"'
SHOWBEG  HT 'SHOW OPTIONS - CASE,CATLG,COLUMNS,DATE,DIRECTORY,DSNAMES,L*
               INESIZE,'
SHOWFIN  HT '  PAGES,SIZE,SPACE,TIME,TRACKS,USERS,VOLUMES'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 14'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 03'
P003     PAGECDE HHELP
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 03'
PHHELP   GENTER ,
         LA    R2,HELPBEG         SET UP REGS FOR
         LA    R3,HELPFIN         SENDH MACRO CALL
SEND03   SENDH
         PRINT NOGEN
HELPBEG  HT 'FUNCTION: GIVES INFO ON USING HELP COMMAND'
         HT 'SYNTAX:   HELP ÝCOMMANDS|ALL|DSN|$|<WYLBUR COMMAND>¨'
         HT 'OPERANDS:'
         HT '$ - COMMAND RETRY'
         HT 'DSN - GIVES INFO ON WYLBUR DATA SET NAMING CONVENTIONS'
         HT 'COMMANDS,ALL - GIVES A LIST OF AVAILABLE WYLBUR COMMANDS. *
               SOME COMMANDS'
         HT '  ARE PRIVILEDGED'
         HT '<WYLBUR COMMAND> - GIVES INFO ABOUT THE FUNCTION, SYNTAX A*
               ND'
         HT '  OPERANDS OF THE SPECIFIED WYLBUR COMMAND'
         HT 'SYNTAX INTERPRETATION:'
         HT '1) OPERANDS ENCLOSED IN POINTED BRACKETS <...> HAVE USER-S*
               UPPLIED VALUES'
         HT '2) OPTIONAL PHRASES ARE ENCLOSED IN SQUARE BRACKETS  Ý...¨*
               '
         HT '3) ALTERNATE CHOICES ARE SEPARATED BY A | SYMBOL AND ARE E*
               NCLOSED IN'
         HT '   SQUARE BRACKETS IF THE ENTIRE PHRASE IS OPTIONAL OR IN'
         HT '   BRACES »...º IF ONE OF THE OPTIONS MUST BE SELECTED'
         HT 'COMMON OPERANDS:'
         HT '<RANGE> -'
         HT '  EXPLICIT - <LINE NUMBER>/<LINE NUMBER>'
         HT '  ASSOCIATIVE - CHARACTER STRING ENCLOSED IN QUOTES OR APO*
               STROPHES'
         HT '    E.G. "$",<$> FINDS ALL LINES WHICH CONTAIN $'
         HT '         ¬"$" FINDS ALL LINES WHICH DO NOT CONTAIN $'
         HT '         "$"(5) FINDS THE 5TH OCCURRENCE OF $ IN A FILE'
         HT '         "$"14/20 SEARCHES COLUMNS 14-20 INCLUSIVE FOR $'
         HT '         "$"1 FINDS LINES WHICH HAVE A $ IN THE 1ST COLUMN*
               '
         HT '<LIST OPTIONS> -'
         HT '  INTEGER - LIKE LIST OPTION BUT LINE NUMBERS REPLACED BY *
               EIGHT DECIMAL'
         HT '    INTEGERS'
         HT '  LIST - LISTS LINES AND THEIR LINE NUMBERS'
         HT '  NOLIST - SUPRESSES LISTING'
         HT '  NONUMBERED,TEXT - LISTS LINES WITHOUT LINE NUMBERS'
         HT '  NOTEXT - LISTS LINE NUMBERS WITHOUT TEXT'
HELPFIN  HT '  UNNUMBERED - LIKE NONUMBERED OPTION BUT TEXT IS SHIFTED *
               TO THE LEFT'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 03'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 05'
P005     PAGECDE HCOLCT,HIF,HTSO,HUNCAT
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 05'
PHCOLCT  GENTER ,
         LA    R2,COLTBEG
         LA    R3,COLTFIN
         B     SEND05
PHIF     GENTER ,
         LA    R2,IFBEG
         LA    R3,IFFIN
         B     SEND05
PHTSO    GENTER ,
         LA    R2,TSOBEG
         LA    R3,TSOFIN
         B     SEND05
PHUNCAT  GENTER ,
         LA    R2,UNCATBEG
         LA    R3,UNCATFIN
SEND05   SENDH
         PRINT NOGEN
UNCATBEG HT 'FUNCTION: UNCATALOGS THE SPECIFIED DATA SET'
         HT 'SYNTAX:'
         HT '          UNCATLG <DSNAME> ÝUSER <UUU>¨ ÝGROUP <GG>¨'
UNCATFIN HT 'FOR INFO ON OPERANDS USE THE "HELP USE" COMMAND'
COLTBEG  HT 'FUNCTION: ADDS LINES TO THE ACTIVE FILE'
         HT 'SYNTAX:   COLLECT Ý<LINE1>|END¨ ÝBY <LINE2>¨ ÝMERGE¨ Ý<LIS*
               T OPTIONS>¨'
         HT '                  ÝCLEAR¨'
         HT 'OPERANDS:'
         HT 'BY <LINE2> - DIFFERENCE BETWEEN SUCCESSIVE LINE NUMBERS IS*
                <LINE2>. THE'
         HT '  DEFAULT IS 1.000'
         HT 'CLEAR - CLEARS THE ACTIVE FILE'
         HT '<LINE1>|END - FIRST LINE COLLECTED AT <LINE1>. END IS THE *
               DEFAULT'
         HT '<LIST OPTIONS> - APPLY TO LINE PRECEEDING THE NEXT LINE TO*
                BE COLLECTED'
         HT '  NONUMBERED, UNNUMBERED OR INTEGER OPTION WILL PROMPT FOR*
                THE NEW LINE'
         HT '  FOR MORE INFO USE THE HELP COMMAND'
COLTFIN  HT 'MERGE - INTERLEAVES NEW LINES WITH OLD LINES'
IFBEG    HT 'FUNCTION: THE RELATIONAL EXPRESSION IN PARENTHESES IS EVAL*
               UATED. IF THE'
         HT '  RESULT IS TRUE, THE <COMMAND> FOLLOWING THE PARENTHESES *
               IS EXECUTED.'
         HT '  OTHERWISE, THE <COMMAND> IS SKIPPED WITHOUT INSPECTION'
         HT 'SYNTAX: IF(<EXP> <RELOP> <EXP>) <COMMAND>'
         HT 'OPERANDS:'
         HT '<COMMAND> - ANY WYLBUR COMMAND'
         HT '<EXP> - AN ARITHMETIC EXPRESSION'
         HT '<RELOP> - ALLOWED RELATIONAL OPERATORS ARE EQ, NE, LT, LE,*
                GT, GE WHICH'
         HT '  CORRESPOND TO TESTS FOR EQUAL, NOT EQUAL, LESS THAN, LES*
               S THAN OR'
IFFIN    HT '  EQUAL, GREATER THAN, GREATER THAN OR EQUAL, RESPECTIVELY*
               '
TSOBEG   HT 'FUNCTION: PUTS YOU DOWN A LEVEL TO A NEW TSO SESION'
TSOFIN   HT 'SYNTAX:   TSO'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 05'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 06'
P006     PAGECDE HREAD,HDECD
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 06'
PHREAD   GENTER ,
         LA    R2,READBEG
         LA    R3,READFIN
         B     SEND06
PHDECD   GENTER ,
         LA    R2,DECIDBEG
         LA    R3,DECIDFIN
SEND06   SENDH
         PRINT NOGEN
READBEG  HT 'FUNCTION: PRODUCES A PROMPT FOR A COMMAND. WHEN THE NEW CO*
               MMAND IS'
         HT '  ENTERED, IT IS EXECUTED'
         HT 'SYNTAX:'
         HT '      READ Ý<LINE01>¨ ÝEXEC|DELETE¨ ÝPROMPT <STRING>¨'
         HT '  OR  READ STRING <S VARIABLE> ÝPROMPT <STRING>¨'
         HT '  OR  READ STRING <S VARIABLE> USING <LINENO> ÝCOMUMNS <C *
               RANGE>¨'
         HT '  OR  READ VALUE <VARIABLE(S)> ÝPROMPT <STRING>¨'
         HT 'OPERANDS:'
         HT 'COLUMNS <M>/<N> - LIMITS ASSIGNMENT TO COLUMNS <M> THROUGH*
                <N> OF THE'
         HT '  GIVEN LINE'
         HT 'DELETE - COMMAND ERASED FROM ACTIVE FILE BEFORE EXECUTION'
         HT 'EXEC - ONE COMMAND FROM EXEC FILE IS READ AND EXECUTED'
         HT '<LINE01> - ALLOWS ONE COMMAND TO BE READ FROM THE ACTIVE F*
               ILE AND'
         HT '  EXECUTED'
         HT 'PROMPT <STRING> - CAUSES THE <STRING> TO BE WRITTEN AT THE*
                TERMINAL'
         HT '  BEFORE THE COMMAND IS READ'
         HT 'STRING <S VARIABLE> - VALUE ENTERED IS ASSIGNED TO <S VARI*
               ABLE>. AN'
         HT '  <S VARIABLE> IS THE LETTER S FOLLOWED BY ONE DIGIT (0-9)*
               '
         HT 'USING <LINENO> - ASSIGNS A VALUE TO <S VARIABLE> FROM THE *
               LINE IN THE'
         HT '  ACTIVE FILE SPECIFIED BY <LINENO>'
         HT 'VALUE <VARIABLE(S)> - VALUE ENTERED ASSIGNED TO <VARIABLE(*
               S)>. VALUES'
READFIN  HT '  ENTERED ARE SEPARATED BY AT LEAST ONE SPACE, COMMA OR EQ*
               UAL SIGN'
DECIDBEG HT 'FUNCTION: USES THE TEXT TO DETERMINE AN APPROPRIATE RESPON*
               SE FROM EIGHT'
         HT '          POSSIBLE RESPONSES: MAYBE, NO, WHY NOT, YES, OF *
               COURSE,'
         HT '          NEVER, OK, BEATS ME'
         HT 'SYNTAX:'
DECIDFIN HT '          DECIDE <ANY TEXT>'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 06'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 15'
P015     PAGECDE HCENTR,HNUM,HMOVE
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 15'
PHCENTR  GENTER ,
         LA    R2,CENTBEG
         LA    R3,CENTFIN
         B     SEND15
PHNUM    GENTER ,
         LA    R2,NUMBEG
         LA    R3,NUMFIN
         B     SEND15
PHMOVE   GENTER ,
         LA    R2,MOVEBEG
         LA    R3,MOVEFIN
SEND15   SENDH
         PRINT NOGEN
CENTBEG  HT 'FUNCTION: CENTERS EACH LINE OF TEXT IN THE <RANGE> WITHIN *
               THE LENGTH'
         HT '          SPECIFIED OR THE GLOBAL LENGTH'
         HT 'SYNTAX:'
         HT '          CENTER <RANGE> ÝLENGTH=<N>¨ ÝINDENT=<M>¨'
         HT 'OPERANDS:'
         HT 'INDENT - SPECIFIES CENTERING BASED ON AN INDENTATION VALUE*
               '
CENTFIN  HT 'LENGTH=<N> - LINES CENTERED WITHIN A WIDTH OF <N> CHARACTE*
               RS'
NUMBEG   HT 'FUNCTION: RENUMBERS THE ACTIVE FILE'
         HT 'SYNTAX:'
         HT '          NUMBER Ý<RANGE>¨ ÝÝBY <LINE1>¨|ÝTIMES <LINE2>¨¨'
         HT 'OPERANDS:'
         HT 'BY <LINE1> - <LINE1> IS THE INCREMENT USED IN DERIVING SUC*
               CESSIVE'
         HT '              LINE NUMBERS'
         HT '<RANGE> - <RANGE> IS OF THE FORM M/N. THE LINE SPECIFIED B*
               Y M BECOMES'
         HT '          THE NEW NUMBER OF THE FIRST LINE IN THE FILE'
         HT 'TIMES <LINE2> - <LINE2> IS A SCALE FACTOR THAT MULTIPLIES *
               EACH OF THE'
NUMFIN   HT '                EXISTING LINE NUMBERS TO FORM THE NEW LINE*
                NUMBERS'
MOVEBEG  HT 'FUNCTION: MOVES A SPECIFIED <RANGE> FROM ONE PART OF THE A*
               CTIVE FILE'
         HT '  TO ANOTHER'
         HT 'SYNTAX:'
         HT 'MOVE <RANGE> TO »<LINE1>|ENDº ÝBY <LINE2>¨ ÝMERGE¨ Ý<LIST *
               OPTIONS>¨'
         HT 'OPERANDS:'
         HT 'BY <LINE2> - <LINE2> IS THE LINE INCREMENT, ITS DEFAULT VA*
               LUE IS 1 IN'
         HT '  THE LOW-ORDER DIGIT POSITION OF <LINE1>'
         HT 'TO <LINE1>|END - THE LINES IN <RANGE> ARE MOVED TO <LINE1>*
               . IF <LINE1>'
         HT '  IS NOT SPECIFIED THE LINES ARE MOVED TO THE END OF THE A*
               CTIVE FILE'
         HT '<LIST OPTIONS> - APPLY TO THE LINE BEFORE <LINE1> AND THE *
               NEW LINES. USE'
         HT '  "HELP" COMMAND'
MOVEFIN  HT 'MERGE - ALLOWS INTERLEAVING IN THE FILE AND MUST APPEAR AF*
               TER <LINE2>'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 15'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 27'
P027     PAGECDE HCHANG
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 27'
PHCHANG  GENTER ,
         LA    R2,CHANGBEG
         LA    R3,CHANGFIN
SEND27   SENDH
         PRINT NOGEN
CHANGBEG HT 'FUNCTION: CHANGES A SPECIFIED CHARACTER STRING IN LINES WH*
               ICH ARE'
         HT '  IN A SPECIFIED <RANGE> OF THE ACTIVE FILE'
         HT 'SYNTAX:'
         HT '(1) CHANGE <STRING1> <I>/<J>/<K> Ý(<N>)¨ TO <STRING2>'
         HT '           ÝIN <RANGE>¨ Ý<LIST OPTIONS>¨ ÝLINE¨'
         HT '(2) CHANGE <I>/<J>/<K> TO <STRING2> ÝIN <RANGE>¨ ÝLINE¨'
         HT '(3) CHANGE Ý<STRING1>¨ <I>/J>/<K> ÝIN <RANGE>¨ Ý(<N>)¨'
         HT '           USING <RANGE2> ÝCOLUMNS=»Ý<M1>¨Ý/<M2>º¨ ÝREPEAT*
               ¨'
         HT 'OPERANDS:'
         HT '<STRING1> - THE SPECIFIED OCCURENCE OF <STRING1> IS CHANGE*
               D TO <STRING2>'
         HT '<I>/<J>/<K> - <I>/<J> RESTRICT THE SEARCH TO COLUMNS <I> T*
               HROUGH <J>'
         HT '  OF THE LINE. IF ONLY <I> IS SPECIFIED <STRING1> IS RESTR*
               ICTED TO START'
         HT '  IN COLUMN <I> OF THE LINE. IF <K> IS SPECIFIED NOTHING F*
               ROM COLUMN <K>'
         HT '  TO THE END OF THE LINE CAN BE MOVED OR CHANGED'
         HT '(<N>) - ONLY THE <N>TH OCCURRENCE OF <STRING1> IN THE LINE*
                IS CHANGED'
         HT '  IF NOT SPECIFIED, ALL OCCURRENCES OF <STRING1> IN THE LI*
               NE ARE CHANGED'
         HT 'USING <RANGE2> - THE CONTENTS OF THE LINES IN THE REPLACEM*
               ENT RANGE'
         HT '  (<RANGE2>) ARE USED SUCCESSIVELY AS REPLACEMENTS'
         HT 'COLUMNS=<M1>/<M2> - ONLY THE INDICATED COLUMNS FROM EACH L*
               INE ARE USED'
         HT '  IN THE REPLACEMENT RANGE. COLUMNS=<M1>, SPECIFIES THAT T*
               HE CONTENTS OF'
         HT '  THE LINES BEGINNING WITH COLUMN <M1> ARE TO BE USED.  CO*
               LUMNS=/<M2>'
         HT '  SPECIFIES THAT THE CONTENTS OF THE LINES FROM COLUMN 1 T*
               HROUGH COLUMN'
         HT '  <M2> ARE TO BE USED'
         HT 'REPEAT - USED WHEN THERE ARE MORE CHANGES TO BE MADE THAN *
               THERE ARE'
         HT '  LINES IN THE REPLACEMENT RANGE. WYLBUR RECYCLES THRU THE*
                REPLACEMENT'
CHANGFIN HT '  RANGE'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 27'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 28'
P028     PAGECDE HEXCT
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 28'
PHEXCT   GENTER ,
         LA    R2,EXECBEG
         LA    R3,EXECFIN
SEND28   SENDH
         PRINT NOGEN
EXECBEG  HT 'FUNCTION: EXECUTES A FILE OF WYLBUR COMMANDS'
         HT 'SYNTAX:'
         HT 'EXEC ÝACTIVE|FROM <DSNAME>¨ ÝON <VOLUME>¨ ÝUSER <UUU>¨ ÝGR*
               OUP <GG>¨'
         HT '     ÝCLEAR¨ Ý<LINE1>|RETRY¨ ÝPAUSE¨ ÝLOG|NOLOG¨ ÝTERSE|VE*
               RBOSE¨'
         HT '     ÝSET|NOSET¨ ÝSTART <LINE2>¨'
         HT 'OPERANDS:'
         HT 'ACTIVE - THE EXEC FILE IS LOADED FROM THE CURRENT ACTIVE F*
               ILE WHICH'
         HT '         IS CLEARED'
         HT 'FROM <DSNAME> - THE EXEC FILE IS LOADED FROM AN EDIT FORMA*
               T EXTERNAL'
         HT '                FILE'
         HT 'ON <VOLUME> - THIS MUST BE SPECIFIED IF YOU ARE USING AN E*
               XTERNAL FILE'
         HT 'USER, GROUP - USED TO DESIGNATE AN EXTERNAL FILE WHICH BEL*
               ONGS TO'
         HT '              ANOTHER USER'
         HT 'SET|NOSET - IF YOU SPECIFY SET, THE PREFIX AND MEMBER NAME*
               S WILL BE SET'
         HT '            NOSET IS THE DEFAULT'
         HT 'CLEAR - CLEARS THE CURRENT EXEC FILE'
         HT '<LINE1> - AFTER AN INTERRUPTION EXECUTION IS RESTARTED AT *
               <LINE1>'
         HT 'RETRY - EXECUTION STARTS AT THE INTERRUPTED COMMAND. IF BO*
               TH <LINENO>'
         HT '        AND RETRY ARE OMITTED EXECUTION STARTS AT THE NEXT*
                COMMAND'
         HT '        AFTER THE INTERRUPTED COMMAND'
         HT 'PAUSE - DIRECTS WYLBUR TO RETURN CONTROL TO THE TERMINAL W*
               ITHOUT'
         HT '        EXECUTING ANY OTHER COMMANDS'
         HT 'LOG|NOLOG - LOG SPECIFIES THAT ALL COMMANDS ARE TYPED BEFO*
               RE EXECUTION'
         HT '            LOG IS THE DEFAULT'
         HT 'TERSE|VERBOSE - TERSE CAUSES WYLBUR NOT TO PRINT LINE NUMB*
               ERS AND'
         HT '  SHORTENS SOME RESPONSES. VERBOSE IS THE DEFAULT'
         HT 'START <LINE2> - AFTER THE EXEC FILE HAS BEEN LOADED EXECUT*
               ION BEGINS'
         HT '  AT <LINE2>. IF THIS OPTION IS OMITTED EXECUTION BEGINS A*
               T THE FIRST'
EXECFIN  HT '  LINE OF THE EXEC FILE'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 28'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 29'
P029     PAGECDE HCOMNT,HJUST
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 29'
PHCOMNT  GENTER ,
         LA    R2,COMMBEG
         LA    R3,COMMFIN
         B     SEND29
PHJUST   GENTER ,
         LA    R2,JUSTBEG
         LA    R3,JUSTFIN
SEND29   SENDH
         PRINT NOGEN
COMMBEG  HT 'FUNCTION: CAUSES THE TEXT OF THE COMMAND TO BE PRINTED AT *
               THE TERMINAL'
         HT '  COMMENT - TEXT PRINTED ENDS WITH CR/LF'
         HT '  DISPLAY - TEXT PRINTED DOES NOT END WITH CR/LF'
         HT 'SYNTAX:'
COMMFIN  HT '          COMMENT <ANY TEXT>    OR    DISPLAY <ANY TEXT>'
JUSTBEG  HT 'FUNCTION: REARRANGES THE CONTENTS OF THE LINES IN <RANGE> *
               SO THAT EACH'
         HT '          LINE CONTAINS AS MANY WORDS AS POSSIBLE BUT NOT *
               MORE THAN'
         HT '          LENGTH CHARACTERS. THE TEXT IS ALSO RIGHT JUSTIF*
               IED'
         HT 'SYNTAX:'
         HT ' JUSTIFY <RANGE> ÝLENGTH=<N>¨ ÝMARKER=<C>¨ ÝNUMBER¨ ÝINDEN*
               T=<I> Ý<J>¨¨'
         HT '         ÝEVEN¨ ÝSPACE¨'
         HT 'OPERANDS:'
         HT 'LENGTH=<N> - NOT MORE THAN <N> CHARACTERS IN A LINE'
         HT 'MARKER=<C> - A LINE WITH <C> IN COLUMN 1 IS NOT ALIGNED AN*
               D THE'
         HT '             ALIGNMENT PROCESS IS RESTARTED AFTER THAT LIN*
               E'
         HT 'NUMBER - WYLBUR RENUMBERS THE ENTIRE FILE AFTER THE ALIGNM*
               ENT PROCESS'
         HT 'INDENT=<I> <J> - INDENTS EACH ALIGNED LINE BY <I> SPACES. *
               INDENTED'
         HT '                 PARAGRAPH BEGINNINGS ARE FURTHER INDENTED*
                BY <J>'
         HT '                 SPACES. THE DEFAULT IS INDENT 0 0'
         HT 'EVEN - THE ALIGNMENT PROCESS IS RESTARTED ONLY AFTER A BLA*
               NK LINE AND'
         HT '       ALL LINES IN THE <RANGE> ARE ALIGNED ON THE LEFT MA*
               RGIN TO THE'
         HT '       COLUMNS SPECIFIED IN THE INDENT PARAMETER'
         HT 'SPACE - WYLBUR RESPACES THE LINES SO THAT THERE IS ONLY ON*
               E SPACE'
         HT '        BETWEEN WORDS UNLESS THE WORD ENDS WITH A PERIOD, *
               EXCLAMATION'
JUSTFIN  HT '        POINT, OR QUESTION MARK, WHEN IT INSERTS TWO SPACE*
               S'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 29'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 30'
P030     PAGECDE HLIST
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 30'
PHLIST   GENTER ,
         LA    R2,LISTBEG
         LA    R3,LISTFIN
SEND30   SENDH
         PRINT NOGEN
LISTBEG  HT 'FUNCTION: LISTS ALL OR PART OF A FILE'
         HT 'SYNTAX:'
         HT '  LIST Ý<RANGE>¨ Ý<LIST OPTIONS>¨ ÝMARKER=C¨ ÝEXEC¨ ÝSQUAS*
               HED¨'
         HT '       ÝCOLUMNS »Ý<M>¨Ý/<N>¨º¨ Ý(<N>)¨'
         HT 'OPERANDS:'
         HT 'COLUMNS <M>/<N> - LISTS ONLY TEXT BETWEEN COLUMNS <M> AND *
               <N> IN THE'
         HT '  <RANGE>. IF <M> IS UNSPECIFIED THE LINE IS LISTED THROUG*
               H COLUMN <N>.'
         HT '  IF <N> IS UNSPECIFIED THE LINE IS LISTED FROM COLUMN <M>*
                THROUGH THE'
         HT '  END OF THE LINE'
         HT 'EXEC - THE EXEC FILE IS LISTED INSTEAD OF THE ACTIVE FILE'
         HT '<LIST OPTIONS> - USE "HELP" COMMAND'
         HT 'MARKER=<C> - SUSPENDS LISTING WHENEVER A LINE IS REACHED W*
               HICH'
         HT '  CONTAINS THE MARKER CHARACTER IN COLUMN ONE. LISTING IS *
               RESTARTED'
         HT '  WITH A (CR) RESPONSE OR ABORTED WITH AN ATTENTION RESPON*
               SE'
         HT '(<N>) - INSERTS <N> BLANKS AT THE LEFT OF THE OUTPUT'
         HT '<RANGE> - USE THE HELP COMMAND'
         HT 'SQUASHED - CONVERTS MULTIPLE BLANKS TO SINGLE BLANKS FOR T*
               HE LISTING'
LISTFIN  HT '  WITHOUT ALTERING THE ACTIVE AND EXEC FILES'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 30'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 31'
P031     PAGECDE HMODFY
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 31'
PHMODFY  GENTER ,
         LA    R2,MODIFBEG
         LA    R3,MODIFFIN
SEND31   SENDH
         PRINT NOGEN
MODIFBEG HT 'FUNCTION: ENABLES INSERTIONS, DELETIONS AND REPLACEMENTS O*
               F THE'
         HT '          CONTENTS OF EACH LINE IN A SPECIFIED <RANGE>'
         HT 'SYNTAX:   MODIFY Ý<RANGE>¨ Ý<LIST OPTION>¨ ÝSINGLE¨'
         HT 'OPERANDS:'
         HT 'SINGLE - INSTRUCTS WYLBUR TO PROMPT FOR ALTERATIONS ONLY O*
               NCE'
         HT 'INSERTION: TYPE THE LETTER <I> IMMEDIATELY BELOW THE CHARA*
               CTER IN THE'
         HT '           LINE BEFORE WHICH CHARACTERS ARE TO BE INSERTED*
               .  THIS'
         HT '           INDICATOR IS FOLLOWED BY THE STRING OF CHARACTE*
               RS TO BE'
         HT '           INSERTED AND A CARRIAGE RETURN'
         HT 'REPLACEMENT: THE INDICATOR "R" IS TYPED IMMEDIATELY BELOW *
               THE FIRST'
         HT '             CHARACTER TO BE REPLACED IN THE LINE FOLLOWED*
                BY THE'
         HT '             STRING OF REPLACEMENT CHARACTERS AND A CARRIA*
               GE RETURN'
         HT 'DELETION: TO REMOVE A STRING OF CHARACTERS FROM A LINE TYP*
               E A "D"'
         HT '          UNDER THE FIRST AND LAST CHARACTERS OF THE STRIN*
               G TO BE'
         HT '          DELETED.  THE DELETION RANGE MAY ALSO BE TERMINA*
               TED BY'
         HT '          TYPING EITHER AN "I" OR "R" INSTEAD OF A "D".  I*
               F TERMINATED'
         HT '          BY AN "R", THE CHARACTERS FOLLOWING THE DELETED *
               STRING ARE'
         HT '          REPLACED BY THE REPLACEMENT STRING THAT FOLLOWS *
               THE "R".  IF'
         HT '          THE DELETION RANGE IS TERMINATED BY AN "I", THE *
               DELETED'
MODIFFIN HT '          CHARACTERS ARE REPLACED BY THE STRING TO BE INSE*
               RTED'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 31'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 32'
P032     PAGECDE HCLEAR,HEDIT,HINSRT
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 32'
PHCLEAR  GENTER ,
         LA    R2,CLEARBEG
         LA    R3,CLEARFIN
         B     SEND32
PHEDIT   GENTER ,
         LA    R2,EDITBEG
         LA    R3,EDITFIN
         B     SEND32
PHINSRT  GENTER ,
         LA    R2,INSRTBEG
         LA    R3,INSRTFIN
SEND32   SENDH
         PRINT NOGEN
CLEARBEG HT 'SYNTAX:'
         HT '          CLEAR »ÝACTIVE¨ ÝEXEC¨ ÝTEXT¨ ÝNAME¨ ÝTABS¨º'
         HT 'OPERANDS:'
         HT 'ACTIVE, TEXT - THE ACTIVE FILE IS ERASED.'
         HT 'EXEC - THE EXEC FILE IS ERASED.'
         HT 'NAME - RESETS THE GROUP, USER, PREFIX, AND MEMBER FIELDS T*
               O THE DEFAULT'
         HT '       SIGNON VALUES.'
         HT 'TABS - CLEARS THE TAB POSITIONS THAT HAVE BEEN SET BY A SE*
               T TABS'
CLEARFIN HT '       COMMAND'
EDITBEG  HT 'FUNCTION: ALLOWS YOU TO CHANGE THE CONTENTS OF A RANGE OF *
               LINES IN'
         HT '  THE ACTIVE FILE. THERE WILL BE A PROMPT WITH THE DESIGNA*
               TED'
         HT '  LINE. TYPE THE REPLACEMENT CHARACTER(S) UNDER THE UNDESI*
               RED'
         HT '  CHARACTER(S). A VERTICAL BAR (|) REPLACES A CHARACTER WI*
               TH'
         HT '  A BLANK. A VERTICAL BAR TYPED UNDER A BLANK WILL CAUSE A*
               '
         HT '  VERTICAL BAR TO APPEAR IN THE TEXT'
         HT 'SYNTAX:'
         HT '          EDIT Ý<RANGE>¨ Ý<LIST OPTIONS>¨ ÝSINGLE¨'
         HT 'OPERANDS:'
         HT 'NOLIST - WYLBUR DOES NOT LIST THE CHANGED LINES'
         HT 'SINGLE - RESULTS IN ONE PROMPT PER LINE INSTEAD OF THE USU*
               AL MULTIPLE'
EDITFIN  HT '         PROMPTS'
INSRTBEG HT 'FUNCTION: INSERTS A LINE OF TEXT INTO THE ACTIVE FILE'
         HT 'SYNTAX:'
         HT '          INSERT <LINENO> ÝNODITTO|DITTO¨ Ý<LIST OPTIONS>¨*
               '
         HT 'OPERANDS:'
         HT '<LINENO> - WYLBUR PROMPTS FOR THE SPECIFIED LINE NUMBER (<*
               LINENO>),'
         HT '           AFTER WHICH YOU MAY TYPE IN THE CONTENTS OF THE*
                NEW LINE'
         HT 'NODITTO|DITTO - DITTO OPTION IS USED TO INSERT A LINE IN S*
               EVERAL'
         HT '                PLACES. THE DEFAULT IS NODITTO'
INSRTFIN HT '<LIST OPTIONS> - SAME AS THE COLLECT COMMAND'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 32'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 33'
P033     PAGECDE HALIGN,HCOMP,HCATLG,HDEL
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 33'
PHALIGN  GENTER ,
         LA    R2,ALIBEG
         LA    R3,ALIFIN
         B     SEND33
PHCOMP   GENTER ,
         LA    R2,COMPBEG
         LA    R3,COMPFIN
         B     SEND33
PHCATLG  GENTER ,
         LA    R2,CATBEG
         LA    R3,CATFIN
         B     SEND33
PHDEL    GENTER ,
         LA    R2,DELEBEG
         LA    R3,DELEFIN
SEND33   SENDH
         PRINT NOGEN
ALIBEG   HT 'FUNCTION: SAME AS THE JUSTIFY COMMAND EXCEPT THE TEXT IS N*
               OT RIGHT'
         HT '          JUSTIFIED'
         HT 'SYNTAX:'
         HT 'ALIGN <RANGE> ÝLENGTH=<N>¨ ÝMARKER=<C>¨ ÝNUMBER¨ ÝINDENT=<*
               I> Ý<J>¨¨'
         HT '      ÝEVEN¨ ÝSPACE¨'
ALIFIN    HT 'OPERANDS: SAME AS FOR THE JUSTIFY COMMAND'
COMPBEG  HT 'FUNCTION: COMPARES THE CONTENTS OF TWO SETS OF CONSECUTIVE*
                LINES,'
         HT '  BOTH OF WHICH MUST BE IN THE ACTIVE FILE. REQUIRED OPERA*
               NDS'
         HT '  ARE THE STARTING LINE NUMBERS OF THE RANGES TO BE COMPAR*
               ED'
         HT '  A LINE BY LINE COMPARISON IS MADE OF THE LINE CONTENTS U*
               NTIL'
         HT '  THE END OF THE ACTIVE FILE IS REACHED OR A COMPARISON FA*
               ILS'
         HT 'SYNTAX:'
         HT '  COMPARE Ý<LIST OPTIONS>¨ <LINE01> <LINE02> ÝCOLUMNS »Ý<N*
               >¨Ý/<M>¨º¨'
         HT 'OPERANDS:'
         HT 'COLUMNS <N>/<M> - ONLY COLUMNS <N> THROUGH <M> ARE COMPARE*
               D. IF ONLY'
         HT '  <N> IS SPECIFIED, <N>/133 IS ASSUMED. IF ONLY <M> 1/<M> *
               IS ASSUMED'
         HT '<LINE01>,<LINE02> - THE STARTING LINE NUMBERS OF THE RANGE*
               S TO BE'
         HT '  COMPARED'
COMPFIN  HT '<LIST OPTIONS> - USE "HELP" COMMAND'
CATBEG   HT 'FUNCTION: CAUSES THE SPECIFIED DATA SET TO BE CATALOGED IN*
                THE SYSTEM'
         HT '  CATALOG. YOU MUST SPECIFY A DSNAME AND A VOLUME. YOU MAY*
               '
         HT '  CATALOG ONLY DATA SETS BELONGING TO YOU OR YOUR GROUP'
         HT 'SYNTAX:'
         HT 'CATLG <DSNAME> ON <VOLUME> ÝUSER <UUU>¨ ÝGROUP <GG>¨ ÝSET|*
               NOSET¨'
CATFIN   HT 'OPERANDS: SAME AS FOR THE USE AND SAVE COMMANDS'
DELEBEG  HT 'FUNCTION: ERASES A RANGE OF LINES IN THE ACTIVE FILE.'
         HT 'SYNTAX:   DELETE <RANGE> Ý<LIST OPTIONS>¨'
DELEFIN  HT 'OPERANDS: USE "HELP" COMMAND'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 33'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 34'
P034     PAGECDE HCOPY
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 34'
PHCOPY   GENTER ,
         LA    R2,COPYBEG
         LA    R3,COPYFIN
SEND34   SENDH
         PRINT NOGEN
COPYBEG  HT 'FUNCTION: COPIES A RANGE OF LINES TO ANOTHER PLACE IN THE *
               ACTIVE FILE'
         HT 'SYNTAX:'
         HT 'COPY Ý<RANGE>¨ ÝTO »<LINE1>|ENDº¨ ÝBY <LINE2>¨ ÝFROM <DSNA*
               ME>¨'
         HT '     ÝCOMBINE¨ ÝUSER <UUU>¨ ÝGROUP <GG>¨ ÝSET|NOSET¨ ÝMERG*
               E¨ ÝEXEC¨'
         HT '     ÝON <VOLUME>¨ Ý<LIST OPTIONS>¨'
         HT 'OPERANDS:'
         HT 'BY <LINE2> - SUCCESSIVE LINE NUMBERS OF THE COPY ARE DERIV*
               ED BY USING'
         HT '  <LINE2>'
         HT 'COMBINE - ALLOWS INTERLEAVING OF THE FILE WHEN AN EXTERNAL*
                FILE IS'
         HT '  REFERENCED'
         HT 'EXEC - COPIES ALL OR PART OF THE EXEC FILE TO THE ACTIVE F*
               ILE'
         HT 'FROM <DSNAME> - THE <RANGE> IS TAKEN FROM THE NAMED EXTERN*
               AL FILE. IF'
         HT '  THIS OPTION IS NOT USED THE <RANGE> IS TAKEN FROM THE AC*
               TIVE FILE'
         HT 'MERGE - ALLOWS INTERLEAVING OF THE FILE, IF THE LINE NUMBE*
               RS INTERLEAVE'
         HT 'ON <VOLUME> - SPECIFIES THE VOLUME NUMBER (<VOLUME>) ON WH*
               ICH THE'
         HT '  EXTERNAL FILE RESIDES'
         HT '<RANGE> - MUST BE THE FIRST POSITIONAL PARAMETER IF SPECIF*
               IED'
         HT 'SET|NOSET - SET WILL ALTER THE PREFIX AND MEMBER FIELDS TO*
                THOSE'
         HT '  SPECIFIED IN IN THE COPY COMMAND'
         HT 'TO <LINE1> - A COPY OF THE SPECIFIED <RANGE> IS PLACED IN *
               THE ACTIVE'
         HT '  FILE, BEGINNING AT A LINE NUMBERED <LINE1>'
COPYFIN  HT 'USER,GROUP - USED TO COPY FROM ANOTHER USER''S DATA SETS'
         PRINT GEN
         TITLE 'END OF PAGED CODE -- PAGE 34'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 35'
P035     PAGECDE HSET
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP SET ROUTINES -- PAGE 35'
PHSET    GENTER ,
         SCANSAVE ,            SAVE SCAN POINTERS IN CPSCAN
         SCAN  SETBL1
         LA    R2,SETOPTB         GET HERE IF NO OPTIONS FOUND
         LA    R3,SETOPTF
         B     SEND35
NOTHERE  SCANRSTR ,               RESTORE SCAN POINTERS
         PCALL HSET1
BACK     LA    R2,BACKBEG
         LA    R3,BACKFIN
         B     SEND35
DELTA    LA    R2,DELBEG
         LA    R3,DELFIN
         B     SEND35
EXECUTE  LA    R2,EXEBEG
         LA    R3,EXEFIN
         B     SEND35
CURRENT  LA    R2,CURBEG
         LA    R3,CURFIN
         B     SEND35
PAGE     LA    R2,PAGEBEG
         LA    R3,PAGEFIN
         B     SEND35
TERSE    LA    R2,TERSEBEG
         LA    R3,TERSEFIN
SEND35   SENDH
         PRINT NOGEN
SETOPTB  HT 'SET OPTIONS - BACK,NOBACK,CRT,NOCRT,CURRENT,*,DELTA,ESCAPE*
               ,EXECUTE,'
         HT '  GROUP,LENGTH,LOG,NOLOG,MEMBER,NAME,PREFIX,PAGESIZE,PS,RE*
               SCAN,TABS,'
SETOPTF  HT '  UPPER,UPLOW,TERSE,VERBOSE,VOLUME,USER,SKIP,VALUE,FASTLIS*
               T,SLOWLIST'
BACKBEG  HT 'BACK|NOBACK - WHEN NOBACK IS IN EFFECT A BACKSPACE ERASES *
               THE PREVIOUS'
BACKFIN  HT '  CHARACTER. WHEN BACK IS IN EFFECT A BACKSPACE IS ENTERED*
                IN THE FILE'
DELBEG   HT 'DELTA <LINENO> - SETS THE DEFAULT VALUE OF THE LINE NUMBER*
                INCREMENT,'
         HT '  DELTA. <LINENO> MAY BE ANY VALUE BETWEEN 0.000 AND 99999*
               .999'
DELFIN   HT '  INCLUSIVE. THE SIGNON VALUE OF DELTA IS 1.000'
EXEBEG   HT 'EXECUTE ÝTERSE|VERBOSE¨ ÝLOG|NOLOG¨ - GOVERNS THE FORMAT O*
               F TERMINAL'
         HT '  MESSAGES WHICH APPEAR IN RESPONSE TO AN EXEC COMMAND. US*
               E "HELP'
EXEFIN   HT '  SET TERSE" AND "HELP SET LOG" COMMANDS'
CURBEG   HT '»CURRENT|*º Ý<LINENO>¨ ÝEXEC¨ - SETS THE CURRENT LINE POIN*
               TER TO THE'
         HT '  <LINENO> SPECIFIED. THE EXEC OPTION APPLIES TO THE EXEC *
               FILE INSTEAD'
CURFIN   HT '  OF THE ACTIVE FILE'
PAGEBEG  HT 'PAGESIZE|PS <N> - IF CRT IS IN EFFECT <N> LINES ARE LISTED*
                BEFORE THE'
PAGEFIN  HT '  COLON PROMPT'
TERSEBEG HT 'TERSE|VERBOSE - TERSE SHORTENS THE WYLBUR COMMAND PROMPT C*
               OMMAND? TO'
         HT '  ?. ALL <DSNAMES> WILL BE LISTED IN AN ABBREVIATED FORM. *
               ALL COMMANDS'
         HT '  CONTAINING PRE-PROCESSOR ESCAPE OR SKIP CHARACTERS WILL *
               NOT HAVE THE'
TERSEFIN HT '  PROCESSED COMMAND LISTED. VERBOSE (DEFAULT) IS THE OPPOS*
               ITE OF TERSE'
         PRINT GEN
SETBL1   SCKW  BACK,BACK,A
         SCKW  NOBACK,BACK,A
         SCKW  CURRENT,CURRENT,A
         SCKW  *,CURRENT
         SCKW  DELTA,DELTA,A
         SCKW  PAGESIZE,PAGE ,A
         SCKW  PS,PAGE,A
         SCKW  EXECUTE,EXECUTE,A
         SCKW  TERSE,TERSE,A
         SCKW  VERBOSE,TERSE,A
         SCKW  ,NOTHERE
         TITLE 'END OF PAGED CODE -- PAGE 35'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 04'
P004     PAGECDE HSET1
         WIDENT 001
         USING CPAREA,R12
         TITLE 'HELP ROUTINES -- PAGE 04'
PHSET1   GENTER ,
         SCANSAVE ,            SAVE SCAN POINTERS IN CPSCAN
         SCAN SETBL2
FAIL2    SCANRSTR ,
         PCALL HSET2
ESCAPE   LA    R2,ESCBEG
         LA    R3,ESCFIN
         B     SEND04
GROUP    LA    R2,GRPBEG
         LA    R3,GRPFIN
         B     SEND04
LENGTH   LA    R2,LENBEG
         LA    R3,LENFIN
         B     SEND04
LOG      LA    R2,LOGBEG
         LA    R3,LOGFIN
         B     SEND04
MEMPDS   LA    R2,MEMBEG
         LA    R3,MEMFIN
         B     SEND04
NAME     LA    R2,NAMEBEG
         LA    R3,NAMEFIN
         B     SEND04
PREFIX   LA    R2,PREFBEG
         LA    R3,PREFFIN
         B     SEND04
RESCAN   LA    R2,RESCBEG
         LA    R3,RESCFIN
SEND04   SENDH
         PRINT NOGEN
ESCBEG   HT 'ESCAPE <C> - SETS THE PREPROCESSOR ESCAPE CHARACTER. IF <C*
               > IS A'
         HT '  SPECIAL CHARACTER ( ;,()" OR BLANK) IT MUST BE ENCLOSED *
               IN QUOTES.'
ESCFIN   HT '  SET ESC (CR) UNSETS THE ESCAPE CHARACTER'
GRPBEG   HT 'GROUP <GG> - SPECIFIES THAT THE DEFAULT GROUP <GG> IS TO B*
               E USED IN'
GRPFIN   HT '  FORMING A <DSNAME>. SET GROUP (CR) RESETS GROUP TO THE S*
               IGNON VALUE'
LENBEG   HT 'LENGTH <N> - SPECIFIES THAT AT MOST <N> CHARACTERS MAY BE *
               IN ANY'
         HT '  LINE OF TEXT. <N> MAY BE ANY INTEGER BETWEEN 1 AND 133'
LENFIN   HT '  INCLUSIVE. THE SIGNON VALUE OF LENGTH IS 72'
LOGBEG   HT 'LOG|NOLOG - NOLOG SUPPRESSES PRINTING OF EACH LINE OF THE *
               EXEC FILE'
LOGFIN   HT '  AS IT IS EXECUTED. LOG (DEFAULT) IS THE OPPOSITE OF NOLO*
               G'
MEMBEG   HT 'MEMBER <MEMBER NAME> - SETS THE DEFAULT MEMBER NAME THAT W*
               ILL BE USED TO'
MEMFIN   HT '  FORM A <DSNAME>'
NAMEBEG  HT 'NAME Ý<DSNAME>¨ ÝUSER <UUU>¨ ÝGROUP <GG>¨ - SETS THE VALUE*
               S OF GROUP,'
NAMEFIN  HT '  USER, PREFIX, AND/OR MEMBER FIELDS IN ONE COMMAND'
PREFBEG  HT 'PREFIX <STRING> - SETS THE PREFIX THAT CAN BE USED IN BUIL*
               DING A'
         HT '  <DSNAME>. <STRING> IS NOT ENCLOSED IN QUOTES. IF <STRING*
               > IS OMITTED,'
PREFFIN  HT '  PREFIX IS SET TO NULL, ITS SIGNON VALUE'
RESCBEG  HT 'RESCAN <N> - SETS THE RESCAN COUNTER TO THE INTEGER <N>.'
         HT '  A COMMAND WILL BE SCANNED AT MOST <N> TIMES BY THE PREPR*
               OCESSOR'
RESCFIN  HT '  FOR SKIP AND ESCAPE CHARACTERS BEFORE IT IS EXECUTED'
         PRINT GEN
SETBL2   SCKW  ESCAPE,ESCAPE,A
         SCKW  GROUP,GROUP,A
         SCKW  LENGTH,LENGTH,A
         SCKW  LOG,LOG
         SCKW  NOLOG,LOG,A
         SCKW  MEMBER,MEMPDS,A
         SCKW  NAME,NAME,A
         SCKW  PREFIX,PREFIX,A
         SCKW  RESCAN,RESCAN,A
         SCKW  ,FAIL2
         TITLE 'END OF PAGED CODE -- PAGE 04'
         PINIT
         PEND
         TITLE 'START OF PAGED CODE -- PAGE 41'
P041     PAGECDE HSET2
         WIDENT 001
         USING CPAREA,R12
         TITLE 'MORE HELP SET ROUTINES -- PAGE 41'
PHSET2  GENTER ,
         SCAN  SETBL3
TSKTSK   B     CVNVALID            PRINT INVALID OPTION & CVGETCOM
CRT      PCALL HCRT
SKIP     LA    R2,SKIPBEG
         LA    R3,SKIPFIN
         B     SEND41
SLOWLIST LA    R2,SLOWBEG
         LA    R3,SLOWFIN
         B     SEND41
TABS     LA    R2,TABSBEG
         LA    R3,TABSFIN
         B     SEND41
UPPER    LA    R2,UPLOWBEG
         LA    R3,UPLOWFIN
         B     SEND41
USER     LA    R2,USERBEG
         LA    R3,USERFIN
         B     SEND41
VALUE    LA    R2,VALUEBEG
         LA    R3,VALUEFIN
         B     SEND41
VOLUME   LA    R2,VOLBEG
         LA    R3,VOLFIN
SEND41   SENDH
         PRINT NOGEN
SKIPBEG  HT 'SKIP <C> - SETS THE PREPROCESSOR SKIP CHARACTER. SET SKIP *
               (CR) UNSETS'
SKIPFIN  HT '  THE SKIP CHARACTER'
SLOWBEG  HT 'SLOWLIST|FASTLIST - SLOWLIST KEEPS WYLBUR FROM USING TABS *
               WHEN LISTING'
SLOWFIN  HT '  A FILE. FASTLIST (DEFAULT) ALLOWS WYLBUR TO USE TABS'
TABSBEG  HT 'TABS ÝT1,..,TN¨ ÝNOVERIFY¨ - SETS TABS AT COLUMNS T1,...,T*
               N'
TABSFIN  HT '  E.G. SET TABS 10 16 SETS TABS AT COLUMNS 10 AND 16'
UPLOWBEG HT 'UPLOW|UPPER - UPPER SPECIFIES THAT ALL ALPHABETIC CHARACTE*
               RS ARE'
         HT '  RECOGNIZED AS UPPER CASE. UPLOW SPECIFIES THAT UPPER AND*
                LOWER'
UPLOWFIN HT '  CASE ALPHABETIC CHARACTERS ARE RECOGNIZED'
USERBEG  HT 'USER  <UUU> - SPECIFIES THAT THE DEFAULT USER <UUU> IS TO *
               BE USED IN'
USERFIN  HT '  FORMING A <DSNAME>. SET USER (CR) RESETS USER TO THE SIG*
               NON VALUE'
VALUEBEG HT 'VALUE <PREVAR(S)> <CEXPR> - ASSIGNS VALUES TO PRE-PROCESSO*
               R VARIABLE(S)'
         HT '  (AN S,W, OR N FOLLOWED BY A DIGIT). <CEXPR> IS A CHARACT*
               ER STRING OR'
VALUEFIN HT '  AN ARITHMETIC EXPRESSION'
VOLBEG   HT 'VOLUME <VOLUME> - SETS THE DEFAULT VOLUME IF NO OTHER IS S*
               PECIFIED'
         HT '  WITH THE FOLLOWING COMMANDS: USE,SAVE,SCRATCH,COPY FROM,*
                SHOW DSNAMES'
VOLFIN   HT '  AND SHOW DIRECTORY'
         PRINT GEN
SETBL3   SCKW  TABS,TABS,A
         SCKW  UPPER,UPPER,A
         SCKW  UPLOW,UPPER,A
         SCKW  VOLUME,VOLUME,A
         SCKW  USER,USER,A
         SCKW  SKIP,SKIP,A
         SCKW  VALUE,VALUE,A
         SCKW  FASTLIST,SLOWLIST,A
         SCKW  SLOWLIST,SLOWLIST,A
         SCKW  CRT,CRT
         SCKW  NOCRT,CRT,A
         SCKW  ,TSKTSK
         TITLE 'END OF PAGED CODE -- PAGE 41'
         PINIT
         PEND
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
         EJECT
         COMMON ,
         END
./ ADD NAME=PUTB,SSI=00000002
PUTB     TITLE 'UTILITY ROUTINE SET FOR WYLTSO'
* PROPERTY OF C. U. C. C. A.
         GBLC    &DCEC             SWITCH FOR DCEC MODS         JEP00X
         GBLC  &USPS                                            USPS01
&USPS    SETC  '1'                                              USPS01
&DCEC    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE DCEC MODJEP00X
         AIF   ('&DCEC' NE '1').LBL01                           JEP00X
*                                                               JEP001
*                                                               JEP001
* MOD JEP001                                                    JEP001
*  RESTRUCTURE NAMING CONVENTIONS TO DCEC COMPATABILITY.        JEP001
*  MODULES AFFECTED: PDIO, PEDS, PUTB,INIT MACROS(DSNWA,CVTSO)  JEP001
*  JERRY E PITTENGER                                            JEP001
*                                                               JEP005
*                                                               JEP005
* MOD JEP005                                                    JEP005
*  ADDED CODE TO TURN OFF FLAGS FOR UPPER & LOWER CASE          JEP005
*  OPERANDS OF THE CHANGE COMMAND. DENOTED JEP005 62/68.        JEP005
*  MODULES AFFECTED: PDOS, PGOS, PUTB, MACRO(CPTSO)             JEP005
*                                                               JEP005
*                                                               JEP005
.LBL01   DS    0H                                               JEP00X
         SPACE  3
PUTB     CSECT
         SPACE
         WIDENT 001
         SPACE
         USING CPAREA,R12
         SPACE
         XTRNS ,
         TITLE 'DESPOT ROUTINE'
* DESPOT IS SENT AN ADDRESS IN R15 TO WHICH TO PASS CONTROL EACH TIME A
*      LINE IN THE RANGE IS LOCATED.
*
* THE FIRST BYTE OF R15 ARRIVES WITH OTHER CODES AS FOLLOWS ---
*  DESRTRN = X'80' - MEANS LEAVE DESPOT WITH RETURN
*  DESNRTN = X'00' - MEANS LEAVE DESPOT WITH CALL TO CMDPRT
*  LEXATRTN = X'40' MEANS USE LOCATEEX
*  LXCATRTN = X'60' MEANS USE LXCATE
*  LOCATRTN = X'00' MEANS USE LOCATE
*  DESMATCH = X'10' - MEANS LOCATE AN ACTUAL LINE (I.E.: IF AT END
*            OF A TEXT PAGE, POINT AHEAD TO FIRST LINE NEXT PAGE.)
*            (POINT AT A REAL LINE, NOT A HOLE IN TEXT AREA.)
*  DESNMTCH = X'00' - MEANS POINT AT END PREVIOUS PAGE IN THIS CASE.
*
*   PREST = X'00' - RETURN PRESSED LINE (R15 POINTS TO IT)
*  UNPRST = X'01' - RETURN UNPRESSED LINE (R1=LOC, R0=LEN)
*
* DESRELA = '02' MEANS THAT THE ROUTINE ADDRESS IS A RELATIVE
*              ADDRESS BASED OFF THE CODE-PAGE IN R10
* DESRELA = '00' MEANS THAT THE ROUTINE ADDRESS IS ABSOLUTE
*
* BOTH EXPLICIT AND ASSOCIATIVE RANGES ARE HANDLED
         SPACE
DESPOT   XENTER R2,R8,C32+12+SZR+8      REGS & SPACE
         ST    R15,RTNAD(R8)            ROUTINE ADDR (& FLAGS)
         SR    R2,R2                    SET
         ST    R2,OCCURS(R8)            VOID RANGE
         LM    R3,R6,CPCMPST            PICK ASSOC CELLS
         MVC   C32+12+SZR(8,R8),CPFSLN  SAVE FIRST RANGE ELEMENT
         TM    CPLFLG4,CPFDESRT    RE-ENTRY TO DESPOT
         BO    TSTKICK             BRANCH YES TO GET NEXT LINE
         STH   R2,CPMDLN                SET NO DISJOINTS YET
         TM    CPLFLG5,CPFNCUR     SUPPRESS CURRENT LINE UPDATE
         BO    NEWROUND            BRANCH YES
         TM    RTNAD(R8),LXCATRTN  DETERMINE RANGE SELECTION FILE
         BO    NEWROUND            GO ON IF FROM EXTERNAL FILE
         BM    DOEXEC              BRANCH IF FROM EXEC
         MVI   CPCURRL,X'F0'       SET INVALID * FOR ACTIVE FILE
         B     NEWROUND            GO INITIALIZE RANGE
         SPACE
DOEXEC   MVI   CPEXLINE,X'F0'      SET INVALID * FOR EXEC FILE
NEWROUND MVC   CPNWLN(4),CPFSLN         SETUP FOR START
DONEXT   LA    R1,CPNWLN                POINT AT LINE-NO TO LOCATE
         TM    RTNAD(R8),LXCATRTN       WHICH LOCATE?
         LA    R14,LOCATED         RETURN ADDR
         BZ    LOCATE         USE LOCATE
         BO    LXCATE         USE LXCATE
         B     LOCATEEX            USE LOCATEEX
         EJECT
LOCATED  ST    R15,PRESTPT(R8)          POINTER AT PREST LINE
         MVC   CPNWLN(4),CPLCNO         SAVE LOCATED LINE NO
         TM    CPDRPT,CPFNTYT+CPFHIGH   TOO HIGH ALREADY?
         BNZ   QUESFIN
         CLC   CPNWLN(4),CPLSLN    TOO HIGH?  NOTE: FOR COUNT
         BH    QUESFIN             RANGE CPLSLN WILL BE HIGH
         TM    CPDRPT,CPFMTCH           LINE NO. REALLY EXISTS?
         BZ    TSTNXLN                  NO
LOCATDD  TM    CPSTAD,CPFSTRRG+CPFLIMRG+CPFONERG+CPFBLKRG ASSOC TYPE
         BZ    TSTPRST                  NO
         LA    R1,WRKAREA(R8)           GET UNPRESSED
         CVCALL UNPRESS
         LTR   R2,R0                    COUNT = 0, BLANKLINE
         BNP   ITSBLK                   YEP
         TM    CPSTAD,CPFBLKRG          BLANK LINES?
         BO    KACKNEX                 YES - NOT IN RANGE
         STC   R5,CPSTCNT          SAVE LENGTH-1
         TM    CPSTAD,CPFONERG          STR START POS GIVEN?
         BO    GOTONE                   YES
         MVC   CPSTCNT+1(1),0(R6)       SAVE CHAR
         TM    CPSTAD,CPFSTRRG          ASSOC IN ALL OR DEFINED CHARPOS
         BZ    GOTLIM                   DEFINED
         CH    R2,=Y(MXPRTSZ)           133 CHARS?
         BNL   CHKIT                    YES
         LA    R2,1(R2)                 END SCAN AT NO. CHARS PLUS ONE
CHKIT    LA    R15,0(R2,R5)             LAST START +(LEN-1) LE MXPRTSZ
         CH    R15,=Y(MXPRTSZ)          COMPARE
         BNH   MCLI                     OK
         LA    R2,MXPRTSZ               FIXUP
         SR    R2,R5
MCLI     CLC   0(1,R1),CPSTCNT+1        FIRST CHAR?
         BE    MCLC                     YES
MRCMP    LA    R1,1(R1)                 KICK
         BCT   R2,MCLI                  MORE?
         B     KACKNEX                 NOT IN LINE
         SPACE
CLCINSTR CLC   0(0,R1),0(R6)       CHECK
MCLC     ST    R14,0(,R13)         SAVE A REG
         IC    R14,CPSTCNT         GET LENGTH-1
         EX    R14,CLCINSTR
         L     R14,0(,R13)         RESTORE.. LEAVE CC UNCHANGED
         BNE   MRCMP                    NOT THIS
QUESLIN  LA    R1,WRKAREA(R8)           SET R1 TO UNPRESSED
         TM    CPSTAD,CPFMODS           MODS
         BZ    TRNSMAT                 NO
         L     R2,OCCURS(R8)            INCREASE OCCURANCE COUNT
         LA    R2,1(R2)
         ST    R2,OCCURS(R8)
         LA    R15,CPMDAD               ADDR OF MODS
         L     R14,CPMDLN               COUNT
TRYNXMD  CH    R2,0(R15)                LESS NOT IN
         BL    KACKNEX
         CH    R2,2(R15)                GTR NOT IN
         BL    TRNSMAT                 GOT ONE
         BE    TRNSMATE                GOT ONE
TRYMRMD  LA    R15,4(R15)               KICK PTR
         BCT   R14,TRYNXMD              MORE
         TM    CPLFLG1,CPFNOTRG        "NOT" WANTED?
         BZ    QUESFIN                 NO
         SPACE
* TEST FOR "NOT" LOGIC
KACKNEX  TM    CPLFLG1,CPFNOTRG        "NOT" WANTED?
         BZ    KICKNEX                 NO
         LA    R1,WRKAREA(R8)          SET R1 TO UNPRESSED LINE
         B     TRNSMIT                 SHIP
         SPACE
TRNSMATE BCT   R14,TRNSMAT             TEST FOR MORE MODS
         TM    CPLFLG1,CPFNOTRG        "NOT" WANTED?
         BO    KICKNEX                 YES, SKIP TO NEXT RECORD
         MVC   CPLSLN(4),CPNWLN        FORCE AS LAST LINE
TRNSMAT  TM    CPLFLG1,CPFNOTRG        "NOT" WANTED?
         BZ    TRNSMIT                 NO, TRANSMIT THE RECORD
         B     KICKNEX                 SKIP THE RECORD
         EJECT
ITSBLK   TM    CPSTAD,CPFBLKRG          TEST BLANK LINE RANGE
         BO    QUESLIN                  YES
         B     KACKNEX                 NIX
         SPACE
GOTLIM   LA    R1,0(R1,R3)              SET LIMITED SCAN
         LR    R2,R4
         B     CHKIT                    SCAN
         SPACE
GOTONE   LA    R1,0(R1,R3)              SET SINGLE LOOK
         ST    R14,0(,R13)
         IC    R14,CPSTCNT
         EX    R14,CLCINSTR
         L     R14,0(,R13)
         BE    QUESLIN                  GOT ONE
         B     KACKNEX                 NIX
         SPACE
TSTNXLN  TM    CPSTAD,CPFEXPRG          TRY NEXT IN NOT EXPL RNG
         BZ    KICKUP
         TM    RTNAD(R8),DESMATCH       WHAT IS WANTED?
         BZ    TSTPRST                  THIS
KICKUP   OI    CPDRPT,CPFMTCH          SET LOCATED LINE THERE
         TM    CPDRPT,CPFPGHI          LAST LINE ON PAGE LOCATED
         BZ    LOCATDD                 BRANCH NO
         B     DONEXT                   AND DO NEXT
         SPACE
TSTPRST  TM    RTNAD(R8),UNPRST         PREST WANTED
         BZ    TRNSMIT                  YES
         LA    R1,WRKAREA(R8)           UNPRESS
         CVCALL UNPRESS
TRNSMIT  TM    CPLFLG5,CPFNCUR     UPDATE CURRENT POINTER
         BO    TRNSMIT2            NO
         L     R14,CPLCNO          GET LINE NUMBER TO UPDATE
         TM    RTNAD(R8),LXCATRTN  SELECT FROM EXEC OR ACTIVE
         BNZ   TRNSMIT1            BRANCH IF EXEC OR EXTERNAL
         ST    R14,CPCURRL         UPDATE CURRENT FOR ACTIVE FILE
         B     TRNSMIT2            GO TRANSMIT LINE
         SPACE
TRNSMIT1 BO    TRNSMIT2            NO UPDATE IF EXTERNAL LINE
         ST    R14,CPEXLINE        UPDATE CURRENT EXEC LINE
TRNSMIT2 LM    R14,R15,RTNAD(R8)        RTN ADDR & PREST POINTER
         OI    CPSTAD,CPFSOME           SET SOMETHING
         TM    RTNAD(R8),DESRELA    IS ROUTINE ADDRESS REL OR ABS
         BZ    *+6                 BR IF ABSOLUTE ADDR
         ALR   R14,R10             ADD IN CODE-BASE IF RELATIVE
         BALR  R14,R14                  GET IT TO WORK ROUTINE
TSTKICK  TM    CPLFLG4,CPFDESET    HAS CPNWLN BEEN SET BY WORK
         BE    KICKNEX             BRANCH NO
         NI    CPLFLG4,255-CPFDESET YES, RESET FLAG
         L     R0,CPNWLN           LOAD VALUE OF CPNWLN
         B     TSTRNGTP            GO TEST IF AT END OF RANGE
         EJECT
KICKNEX  LA    R1,1                     INCREMENT LINE NO
         L     R0,CPNWLN                PICKUP LAST LINE NO SENT
         CVCALL ADDER
         BM    QUESFIN                  TOO BIG.
         ST    R0,CPNWLN                SET FOR NEXT LOCATE
TSTRNGTP TM    CPLSLN,FRNGTYP      TEST COUNT OR EXPLICIT END
         BZ    GOTNEX              BRANCH EXPLICIT END
         LH    R1,CPLSLN+2         GET REMAINING COUNT
         BCT   R1,GOTCNT           DECR AND BR IF NOT END
         B     QUESFIN             GO TEST IF FINISHED
         SPACE
GOTCNT   STH   R1,CPLSLN+2         SAVE REMAINING COUNT
         B     DONEXT              GO DO NEXT LINE
         SPACE
GOTNEX   C     R0,CPLSLN                UNLESS TOO BIG
         BNH   DONEXT                   DO NEXT
QUESFIN  TM    CPSTAD,CPFDSJNT          DISJOINT OR DONE
         BZ    FINISH
         LH    R1,CPMDLN                DISJOINT LENGTH
         LA    R2,1(R1)                 PLUS 1 INTO R2
         CH    R2,CPMDLN+2              DONE?
         BH    FINISH                   YES
         SLL   R1,2                     DISPLACEMENT INTO LIST
         LA    R1,CPMDAD(R1)            ADDR ITEM
         MVC   CPFSLN(8),0(R1)          MOVE LINE NOS
         BE    DUNWUN                   FINISHED
         TM    CPLSLN,FRNGTYP           ONE LINE RANGE?
         BZ    DUNWUN                   YES
         LA    R2,1(R2)                 KICK COUNTER
         BNO   DUNTWO              BRANCH IF COUNT RANGE
         NI    CPLSLN,255-FRNGTYP       PUT INTO LEGAL LINE NO
         B     DUNTWO                   FINISH OFF
         SPACE
DUNWUN   MVC   CPLSLN(4),CPFSLN         SET E-O-RANGE
DUNTWO   STH   R2,CPMDLN                RESTORE COUNTER
         B     NEWROUND                 DO NEXT SUB-RANGE
         EJECT
FINISH   MVC   CPFSLN(8),C32+12+SZR(R8) RESET FIRST RANGE ELEMENT
         TM    CPSTAD,CPFSOME           SET NOT VOID RANGE
         BO    FINITO                   DONE
         TM    CPGFLG2,CPFEXEC+CPFEXTER  IS IT EXEC AND TERSE
         BO    FINITO              BRANCH IF SO
         TSEG  'VOID RANGE',,M          MSG
         AIF   ('&DCEC' NE '1').LBL02                           JEP00X
FINITO   NI    CPLFLG4,255-CPFCHUP-CPFCHLO     TURN OFF FLAGS   JEP005
         TM    RTNAD(R8),DESRTRN   LEAVE                        JEP005
         AGO   .LBL03                                           JEP00X
.LBL02   DS    0H                                               JEP00X
FINITO   TM    RTNAD(R8),DESRTRN        LEAVE
.LBL03   DS    0H                                               JEP00X
         BZ    CVGETCOM
         XEXIT R2,R8
         TITLE 'DETRNG ROUTINE'
DETRNG   XENTER R2,R8,C40               REG SAVES
         TM    CPLFLG5,CPFSELOC    WHERE IS RANGE TO BE SELECTED
         BO    SETEXT              BRANCH IF EXTERNAL
         BM    SETEXEC             BRANCH IF EXECUTE
*                                  OTHERWISE, IT IS ACTIVE FILE
         CLC   CPAGCT(2),=Y(0)          ANYTHING AT ALL?
         BE    ITSNIL              NO
         MVC   CPFSLN,CPDREC       SET DEFAULT
         MVC   CPFSLN+4,CPHIPS          ALL FOR ACTIVE FILE
         B     NOTNIL
         SPACE
SETEXT   XC    CPFSLN,CPFSLN       SET DEFAULT
         MVC   CPFSLN+4,=F'99999999'    ALL FOR EXTERNAL FILE
         B     NOTNIL
         SPACE
SETEXEC  CLC   CPEXCNT(2),=Y(0)    ANYTHING AT ALL?
         BE    ITSNIL              NO
         MVC   CPFSLN(4),CPEXDIR   SET DEFAULT
         MVC   CPFSLN+4,CPEXHIPS        ALL FOR EXEC FILE
NOTNIL   OI    CPSYSFLG,CPFRNGCM        SET MULTI-LINE EFFECTS
         MVI   CPSTAD,CPFEXPRG          SET EXPLICIT RANGE
         LA    R6,HVFRSNO          SET FOR LINE NUMBER FOUND
         LA    R2,EXRPRT0              FIRST PRT ADDR
DETSCAN  SCANSAVE ,       SAVE TEMP DETRNG SCAN POINTERS
         LR    R1,R2                    SET CURRENT PRT ADDR
GOSCAN   SCAN  (1)                      SCAN
         BM    CVNVALID                 NG
CKIFLPRM TM    CPLFLG1,CPFALL          DEFAULT ALL OK
         BZ    DETEXPRQ
         NI    CPLFLG1,255-CPFALL      TURN OFF TO INDICATE DEF
RESTORS  SCANRSTR ,       RESTORE TEMP SAVED DETRNG PTRS
DETXIT   XEXIT 2,8
         SPACE
DETEXPRQ TSEG  'EXPLICIT RANGE MISSING' SET MESSAGE
         B     CVQTYPE             GO WRITE OUT ERROR
         EJECT
SETNOTT  OI    CPLFLG1,CPFNOTRG        SET "NOT" RANGE LOGIC
         LA    R2,EXRPRTA              SET NEXT SCAN
         B     DETSCAN                 SCAN ON
         SPACE
HAVSOM1  LTR   R2,R2                    WAS "IN" LAST?
         BZ    CVNVALID                 YES
         CLI   0(R1),C''''              SINGLE QUOTE?
         BE    HAVASSC                  YES
         CLI   0(R1),C'"'               DOUBLE QUOTE?
         BNE   CKIFLPRM                 NO
HAVASSC  CLC   CPCMNM(3),=C'ALI'        ALIGN ILLEGAL
         BE    BADASSC
         CLC   CPCMNM(3),=C'JUS'   IS IT JUSTIFY COMMAND
         BE    BADASSC             BRANCH YES
         CLC   CPCMNM(3),=C'SAV'   IS SAVE COMMAND
         BE    BADASSC             BRANCH YES
         CVCALL DQSCAN         REMOVE ENCLOSING + DOUBLE QUOTS
         LTR   R2,R0                    BLANK LINE RANGE?
         BZ    BLKSRNG                  YES
         MVC   SZR(C40,R8),0(R8)        MOVE OUT SAVED REGS
         ST    R8,CPSTAD                ADDR TO MOVE STRING TO
         MVI   CPSTAD,CPFSTRRG          SET FOR SIMPLE ASSOC. RANGE
         BCTR  R2,0                     STRING LENGTH MINUS ONE
         ST    R2,CPSTLN                SAVE STRING LEN (MINUS 1)
         EX    R2,MOVSTRNG              MOVE IT
         LA    R2,4(R2)                 MULTIPLE OF 4 GTR/EQU STRNG LEN
         N     R2,=F'-4'
         LR    R3,R8                    SAVE OLD R8 VALUE
         LA    R8,0(R2,R8)              NEW R8
         LA    R13,0(R2,R13)            NEW R13
         MVC   0(C40,R8),SZR(R3)        PUT BACK SAVED REGS
         L     R3,C28(R8)               SAVED REG 8
         LA    R3,0(R2,R3)              KICK VALUE
         ST    R3,C28(R8)               RESET
NXTSCN   LA    R2,RNGPRT2               NEXT PRT ADDR
         B     DETSCAN                  SCAN MORE
         SPACE
BADASSC  TSEG  'ASSOCIATIVE RANGE NOT ALLOWED'
         B     CVQTYPE
         SPACE 3
HAVSOM2  BCTR  R15,0                    REDUCE BY ONE
         ST    R15,CPCMPST              SAVE START POSITION
         L     R2,CPSTLN                STRING LEN
         AR    R2,R15                   PLUS START
         CH    R2,=Y(MXPRTSZ-2)         POSSIBLE?
         BH    CVNVALID                 NO
         MVI   CPSTAD,CPFONERG          SET STRING START POSITION GIVEN
         LA    R2,RNGPRT3               SET NEXT PRT
         B     DETSCAN                  GO SCAN
         SPACE 3
HAVSOM3  S     R15,CPCMPST              LENGTH PLUS ONE CONTAINING STR
         BNP   CVNVALID                 NG
         S     R15,CPSTLN               LENGTH POSSIBLE START CHARS
         BNP   CVNVALID
         ST    R15,CPCMPLN              STORE NO POSSIBLE 1ST CHAR POS
         MVI   CPSTAD,CPFLIMRG          SET FOR LIMITED SCAN
         LA    R2,RNGPRT5               SET NEXT PRT
         B     DETSCAN                  GO SCAN
         SPACE 3
HAVSOM4  CLI   0(R1),C'('               NEED LEFT-PAREN
         BNE   CKIFLPRM                 NO
HAVMODS  SCANSAVE ,                TEMP DETRNG PTR SAVE
         SH    R0,=Y(2)                 STRIP PARS
         BNP   CVNVALID                 INVALID MSG
         LA    R1,1(,R1)                KICK PTR
         SCINIT (1),(0)                 INIT INSIDE PARENS
         OI    CPSTAD,CPFMODS           SET MOD INDICATOR
         SR    R5,R5                    ZERO MOD COUNT
         ST    R5,CPMDLN               INIT
         LA    R6,CPMDAD-4              AND SET ADDR
NXMDSCN  SCAN  MODPRTA                  SCAN FOR A MOD
         B     FINMOD                   DONE
         EJECT
GOTAMOD  LA    R5,1(R5)                 COUNT
         CH    R5,=Y(10)                10 IS MAX
         BH    CVNVALID                 NG
         CH    R15,2(,R6)              ARE MODS ASCENDING
         BNH   CVNVALID                BRANCH NO, ILLEGAL
         LA    R6,4(R6)                 SET ADDR
         STH   R15,0(R6)                STORE
         STH   R15,2(R6)                ASSUME NO SLASH
         SCAN  MODPRTB                  LOOK FOR SLASH OR NEXT MOD
FINMOD   ST    R5,CPMDLN                STORE NUMBER OF MODS
         SCANRSTR ,      RESTORE TEMP SAVED DETRNG PTRS
         LA    R1,RNGPRT6               SET NEXT PRT ADDR
         B     GOSCAN                   GO SCAN
         SPACE
GOTBMOD  CH    R15,2(R6)                IS IT LEGAL?
         BL    CVNVALID                 NO
         STH   R15,2(R6)                STORE
         B     NXMDSCN                  GO FOR MORE
         EJECT
TRYEXPL  SCANRSTR ,      RESTORE TEMP SAVED DETRNG PTRS
         LA    R2,1                     SET FOR NO "IN" ENCOUNTERED
         LA    R6,HVFRSNO          SET FOR LINE NUMBER FOUND
         LA    1,EXRPRT1                SET PRT ADDR
         B     GOSCAN                   SET ESCAPE FOR LIST-PUNCH-RUN
         SPACE
BLKSRNG  MVI   CPSTAD,CPFBLKRG          SET BLANK LINE RANGE
         B     NXTSCN
         EJECT
HAVEXPL  SR    R2,R2                    SET FOR "IN" & 1ST TIME
         LA    R6,HVFRSNO          SET FOR LINE NUMBER FOUND
         SCANSAVE ,                SAVE CURRENT SCAN POINTERS
         SCAN  EXRPRT1                  LOOK FOR 1ST EXPLICIT RANGE ITM
         B     DETEXPRQ                 NG
         SPACE
HVFRSNO  ST    R0,CPFSLN                SET 1ST LINE NO.
         MVC   CPLSLN(4),CPFSLN         SET ONE LINE RANGE DEFAUL
SCANGAN  MVC   C32(8,R8),CPTELL    SAVE POINTER BEFORE THIS RANGE
         SCANSAVE ,      SAVE TEMP DETRNG SCAN POINTERS
         LA    R6,NUMSET           SET ADDR FOR LINE NUMBER
         SCAN  EXSLPRT                  LOOK FOR SLASH
         B     DETXIT
         SPACE
HVLSTNO  ST    R0,CPLSLN                STORE
         CLC   CPLSLN(4),CPFSLN         MAKE SURE EORANGE NOT LES
         BNL   SCANGEN             OK, GOASCAN ON
HVINVAL  LM    R1,R2,CPSAVE        GET LAST TOKEN POINTER
         LA    R2,0(R1,R2)         SAVE POINTER PAST TOKEN
         SCANRSTR C32(R8)          RESET BEFORE THIS RANGE
         SCTELL (1),(0)            GET POINTER BEFORE RANGE
         LR    R0,R2               CALCULATE LENGTH
         SR    R0,R1                     OF PROMPT MESSAGE
         TSEG  (1),(0)             PUT OUT BAD RANGE
         TSEG  ': BAD RANGE'       FINISH MESSAGE
         B     CVQTYPE             ABORT THE COMMAND
         EJECT
SCANGEN  SCANSAVE ,      RESTORE TEMP DETRNG POINTERS
SCANGEN1 LA    R6,NUMSET           SET ADDR FOR LINE NUMBER
         SCAN  EXRPRT3                  SCAN FOR DISJOINT ITEM
         B     DETXIT                   FINISHED
         SPACE
NUMSET   TM    CPSTAD,CPFDSJNT          DISJOINT SET?
         BO    NTFRST                   YES
         TM    CPSTAD,CPFMODS           MODS USED?
         BO    CVNVALID                 CAN'T HAVE DISJOINT
         OI    CPSTAD,CPFDSJNT          SET DISJOINT
         XC    CPMDLN(4),CPMDLN         START COUNT
NTFRST   BAL   R3,SETMOD                COUNT
         ST    R0,CPMDAD-4(R2)          STORE LINE-NO
         B     SCANGAN                  MORE?
         SPACE
SETMOD   L     R2,CPMDLN           GET CURRENT NUMBER COUNT
         LA    R2,1(,R2)           INCREMENT
         CH    R2,=Y(10)           MORE THAN MAX ALLOWED
         BH    CVNVALID            BRANCH YES
         ST    R2,CPMDLN           SAVE NEW COUNT
         SLL   R2,2                SHIFT FOR INDEX
         BR    R3                  RETURN
         EJECT
GOTXSLS  LA    R1,EXRPRT2               SET PRT ADDR
         LA    R6,HVLSTNO          SET ADDR FOR LINE NUMBER
         TM    CPSTAD,CPFDSJNT          RIGHT ADDR?
         BZ    RGHTWUN                  YES
         LA    R6,NUMBSET               SET OTHER
RGHTWUN  SCAN  (1)                 SCAN
         B     CVABSENT                 NEED SOMETHING
         SPACE
NUMBSET  BAL   R3,SETMOD           COUNT
         ST    R0,CPMDAD-4(R2)     SAVE LINE NUMBER
         LA    R2,CPMDAD-8(R2)     POINT TO START OF RANGE
         OI    4(R2),FRNGTYP       SET NORMAL TWO LINE RANGE
         C     R0,0(R2)            TEST VALID RANGE
         BNL   SCANGEN                  MORE?
         B     HVINVAL             GO REPORT ERROR
         SPACE
MOVSTRNG MVC   0(0,R8),0(R1)
         SPACE
TSTCNT   CLI   0(R1),C'('          IS IT COUNT
         BNE   RESTORS             NO
         SCANSAVE ,                SAVE CURRENT POSITION
         SH    R0,=Y(2)            REDUCE COUNT FOR ()
         BNP   CVNVALID            INVALID IF NEGATIVE
         LA    R1,1(,R1)           POINT PAST (
         SCINIT  (1),(0)           INIT SCANNER
         SCAN  CNTPRT              SCAN FOR COUNT
         B     CVNVALID            INVALID IF NONE
         SPACE
CNTOK    LR    R4,R15              SAVE COUNT
         SCAN  ,                   SEE IF ANYTHING ELSE
         SCANRSTR ,                RESTORE SCANNER
         BP    CVNVALID            YES, INVALID
         TM    CPSTAD,CPFDSJNT     FIRST COUNT OR DISJOINT
         BNZ   CNTOK1              BRANCH IF DISJOINT
         ST    R4,CPLSLN           SAVE COUNT
         OI    CPLSLN,FRNGTYP-FNEGBT INDICATE COUNT RANGE
         B     SCANGEN1            GO SCAN ON
         SPACE
CNTOK1   BAL   R3,SETMOD           COUNT
         ST    R4,CPMDAD-4(R2)     SAVE COUNT
         LA    R2,CPMDAD-4(R2)     POINT TO SAVE ADDRESS
         OI    0(R2),FRNGTYP-FNEGBT INDICATE COUNT RANGE
         B     SCANGEN1            SCAN ON
         EJECT
ITSNIL   GENTER ,                       SET BASE REG
         TM    CPLFLG5,CPFSELOC    TEST IF NO EXEC OR NO ACTIVE
         BNZ   ITSNIL1             BRANCH IF NO EXEC
         TSEG  'NO ACTIVE FILE'
         B     CVQTYPE
         SPACE
ITSNIL1  TSEG  'NO EXEC FILE'
         B     CVQTYPE
         EJECT
RNGPRT2  SCKW  IN,HAVEXPL
         SCKW  ,HAVSOM2,PI,133
         SCKW  ,HAVSOM4
RNGPRT3  SCKW  /,HAVSOM3,(P,PI),133
RNGPRT5  SCKW  IN,HAVEXPL
         SCKW  ,HAVSOM4
         SPACE
RNGPRT6  SCKW  IN,HAVEXPL
         SCKW  ,CKIFLPRM
         SPACE
MODPRTB  SCKW  /,GOTBMOD,(P,PI)
MODPRTA  SCKW  ,GOTAMOD,PI
         SCKW  ,INVALID
         SPACE 3
EXRPRT0  SCKW  ¬,SETNOTT
EXRPRT1  SCKW  ALL,DETXIT
         SCKW  ,LNENOPRT,PUSH
EXRPRTA  SCKW  ,HAVSOM1
         SPACE
EXRPRT2  SCKW  ,LNENOPRT,PUSH
         SCKW  ,INVALID
         SPACE
EXSLPRT  SCKW  /,GOTXSLS
EXRPRT3  SCKW  ,LNENOPRT,PUSH
         SCKW  ,TSTCNT
         SPACE
CNTPRT   SCKW  ,CNTOK,PI,30000
         SCKW  ,INVALID
         EJECT
         LTORG ,
         TITLE 'LOCATE ROUTINE'
* LOCATE NEEDS REG 1 POINTING AT INTERNAL LINE-NO TO LOCATE.
*    RETURNS:
*           R15 - POINTS TO ADDR OF LINE IN TEXT PAGE (B/4 LINE NO.)
*           CPDRPT - ADDRESS OF DIREC ENTRY FOR LOCATE PAGE
*           CPLCNO - LINE NO. OF LOCATED LINE
*           CPREVLN - LINE NO. OF LINE BEFORE LOCATED LINE
* RETURN FLAGS (IN 1ST BYTE CPDRPT)
*    CPFNTYT -  X'80' - NO PAGE AT ALL YET EXISTS - NO OTHER RETURN
*    CPFHIGH -  X'40' - LOCATE LINE HIGHER THAN ANY PREEXISTING WITH-
*           CPLCNO NOT SET
*    CPFPGHI -  X'20' - LOCATE LINE IS HIGHER THAN ANY ON LOCATE PAGE,
*           CPLCNO HAS FIRST LINE NO. NEXT PAGE
*    CPFPGLW -  X'10' - LOCATE LINE IS FIRST ON PAGE
*           CPREVLN IS NOT SET IN THIS CASE
*    CPFMTCH -  X'08' - LOCATE LINE MATCHES AN EXISTING LINE NO.
*    CPFFSLN -  X'04' - LOCATE LINE IS FIRST OR BEFORE
*    CPFPGND -  X'02' - LOCATE LINE IS LAST ON A PAGE
*    CPFNDDS -  X'01' - LOCATE LINE IS LAST OF ALL
         SPACE
LOCATE   XENTER R0,R8,*                 SAVE REGS
LOCBASE  MVI   CPDRPT,CPFNTYT           SET NO PAGES YET EXIT CODE
         LH    R2,CPAGCT                GET PAGE COUNT
         LTR   R2,R2                    ANY PAGES?
         BNP   EXITT                    NO
         LA    R3,CPDREC                POINT AT 1ST DIRECTORY ENTRY
         O     R3,=X'04000000'         SET 1ST LINE OR BEFORE INDICATOR
         CH    R2,=Y(8)             TEST PAGE COUNT
         BNH   TRYNEX               SKIP 1ST SEARCH FOR SMALL FILES
         LA    R4,64                SET STEP SIZE
         LA    R5,384               SET CHARACTER STEP SIZE
         LA    R6,3                 SET OUTER LOOP COUNT
LOOP1    SR    R2,R4                SET REMAINING PAGE COUNT
         BNH   LOOPEND1             END IF NOT POSITIVE
         AR    R3,R5                SET PAGE LOCATION
         CLC   0(4,R1),0(R3)        COMPARE LINE NUMBERS
         BH    LOOP1                LOOP IF STILL HIGH
         SR    R3,R5                RESET PAGE LOCATION
LOOPEND1 AR    R2,R4                RESET REMAINING COUNT
         SRDL  R4,2               QUARTER STEPS FOR NEXT LOOP
         BCT   R6,LOOP1             START NEW LOOP UNTIL DONE
         CH    R2,CPAGCT           HAS PAGE COUNT CHANGED
         BE    TRYNEX              NO, DON'T CLEAR FLAG
         LA    R3,0(,R3)           CLEAR 1ST LINE FLAG
TRYNEX   BCT   R2,DOCOMP                ONLY ONE PAGE YET?
         B     HAVPAG                   YES - IT'S THE ONE
         SPACE
DOCOMP   CLC   0(4,R1),6(R3)            LINE NO. LE 1ST NEXT PAGE?
         BL    HAVPAG                   YES - IT'S THE ONE
         LA    R3,6(R3)                 POINT TO NEXT PAGE
         B     TRYNEX                   TRY AGAIN
         SPACE
HAVPAG   ST    R3,CPDRPT                DIREC ADDR LOCATED PAGE
         LTR   R11,R11                  PAGE IN FOR R11?
         BZ    GETITA                   NO, CHECK R9
         PNUM  11                       WHICH PAGE IN R11?
         CH    R0,4(R3)                 WANTED PAGE?
         BE    HAVIT                    YES
GETITA   LTR   R9,R9                    PAGE IN FOR R9?
         BZ    GETIT                    NO, GET PAGE
         PNUM  9                        WHICH PAGE IN R9?
         CH    R0,4(R3)                 WANTED PAGE?
         BNE   GETIT                    NO, GET IT
         PFLIP 11,9                     FLIP R11 & R9
         B     HAVIT                    READY
         SPACE
GETIT    LH    R0,4(R3)                 WANTED PAGE NO.
         PGET  11,(0)                   GET IT
HAVIT    L     R1,C8(R8)                POINTER TO LINE NO. TO LOCATE
         LA    R15,2(R11)               POINT TO 1ST ITEM ON PAGE
         LH    R5,0(R11)                TOTAL DISPLACEMENT ON PAGE
         LA    R5,0(R5,R11)        SET LOOP END ADDRESS
         OI    CPDRPT,CPFPGLW           SET AS 1ST LINE ON PAGE
         SR    R6,R6                    ZERO FOR IC
         IC    R6,4(,R15)           PRESSED COUNT OF LINE
         CLC   0(4,R1),0(R15)       LOCATE LINE?
         BNH   FOUND1               YES
         NI    CPDRPT,255-CPFPGLW-CPFFSLN TURN OFF 1ST LINE FLAG
         B     TRYGEN1              ENTER LOOP
         SPACE
TRYGEN   IC    R6,4(R15)                PRESSED COUNT OF LINE
         CLC   0(4,R1),0(R15)           LOCATE LINE?
         BNH   FOUND                    YES
TRYGEN1  LR    R4,R15               SAVE PREV LINE NO POINTER
         LA    R15,5(R15,R6)        KICK POINTER
         CR    R15,R5               MORE ON PAGE?
         BL    TRYGEN                   YES
         MVC   CPREVLN(4),0(R4)     SET PREVIOUS LINE NO
         LTR   R2,R2                    LAST PAGE?
         BNZ   LSONPG                   NO
         OI    CPDRPT,CPFHIGH           SET LAST LAST-PAGE CODE
         B     EXITT                    DONE
         SPACE
LSONPG   OI    CPDRPT,CPFPGHI           LAST NOT-LAST-PAGE CODE
         MVC   CPLCNO(4),6(R3)          1ST LINE NEXT PAGE TO CPLCNO
         B     EXITT                    READY
         SPACE
FOUND    MVC   CPREVLN(4),0(R4)     SET PREVIOUS LINE NO
FOUND1   BNE   SATLCNO                 LOCATED LINE NOT THERE
         OI    CPDRPT,CPFMTCH           SET LOCATED LINE ALREADY THERE
SATLCNO  LA    R4,5(R15,R6)            KICK POINTER
         CR    R4,R5                    MORE ON PAGE?
         BL    SETLCNO                  YES
         OI    CPDRPT,CPFPGND           SET LAST LINE ON PAGE LOCATED
         LTR   R2,R2                    LAST PAGE?
         BNZ   SETLCNO                  NO
         OI    CPDRPT,CPFNDDS           SET LAST LINE OF ALL
SETLCNO  MVC   CPLCNO(4),0(R15)         SET CPLCNO
EXITT    XEXIT R0,R8                    SCRAM
         TITLE 'LOCATE LINE IN EXEC FILE'
* PARM AND RESULTS ARE THE SAME AS FOR LOCATE
         SPACE
LOCATEEX XENTER R0,R8,*
         L     R7,=A(LOCBASE)          USE SAME BASE AS LOCATE
         USING LOCBASE,R7
         MVI   CPDRPT,CPFNTYT          SET NO PAGES YET CODE
         LH    R2,CPEXCNT              LOAD EXEC FILE PAGE COUNT
         LTR   R2,R2                   TEST IF ANY PAGES
         BNP   EXITT                   EXIT IF NONE
         LA    R3,CPEXDIR              POINT TO EXEC DIRECTORY
         O     R3,=X'04000000'
         B     TRYNEX                  GO JOIN NORMAL LOCATE
         TITLE 'LXCATE ROUTINE'
* LXCATE NEEDS REG 1 POINTING AT INTERNAL LINE-NO TO LOCATE.
*
* RETURN FLAGS (IN 1ST BYTE CPDRPT) AND RETURN ITEMS ARE....
*    CPFNTYT -  X'80' - NOTHING AT ALL - OTHERS RETURNS ALL ZERO
*    CPFMTCH -  X'08' - GOT A LINE IN EXTERNAL DATA SET
*
*      R15 - POINTS TO ADDR OF LINE
*      CPLCNO - LINE-NO OF LOCATE LINE
         SPACE
LXCATE   XENTER 0,8,*                   SAVE REGS
         SR    R5,R5                    SET FOR IC INST
         TM    CPDRED,CPFSTART          SEE IF 1ST TIME IN
         BO    LOADEM                   NO
READRE   DREAD (0)                      READ A RECORD
         BP    NDFIL                    EOF
         BZ    NDSKERJ                  B IF DISK I/O OK
         XCALL RDSKER                   DISK READ ERROR MSG
NDSKERJ  OI    CPDRED,CPFSTART          SET NOT 1ST TIME
         L     R2,CPDRED                ADDR INPUT BUFFER
         LH    R3,0(R2)                 BYTE COUNT
         LTR   R3,R3                    NEED POSITIVE COUNT
         BNP   NOGGODY                  NEG NG
         CR    R3,R0                    COMPARE TO READ COUNT
         BH    NOGGODY                  NONSENSE
         LA    R2,2(R2)                 POINT AT 1ST LINE
         LA    R4,2                     STARTING COUNT FOR BUFFER
         STM   R2,R4,CPWK1           SAVE PTR, TOTAL COUNT, START COUNT
ICAGEN   IC    R5,4(R2)                 GET NEXT PREST-COUNT
         LA    R4,5(R4,R5)              KICK COUNT
         LA    R2,5(R2,R5)              KICK POINTER
         CR    R4,R3                    MORE?
         BL    ICAGEN                   YES
         BH    NOGGODY                  TOO MUCH
         L     R1,8(,R8)                REPOINT R1
LOADEM   LM    R2,R4,CPWK1              LOAD 2-3-4
         MVI   CPDRPT,0                 SET NO MATCHING LINE NO. FOUND
TRYMOR   CR    R4,R3                    MORE TO PROCESS?
         BNL   READRE                   NO, READ ANOTHER RECORD
         IC    R5,4(R2)                 PRESSED COUNT NEXT LINE
         LR    R15,R2                   POINT AT LINE BEGINNING
         LA    R2,5(R2,R5)              POINT AT START NEXT LINE
         LA    R4,5(R4,R5)              KICK TOTAL COUNT
         CLC   0(4,R15),0(R1)           AT WANTED LINE?
         BL    TRYMOR                   NO
         BH    NOTEQ                    NO MATCH
         MVI   CPDRPT,CPFMTCH           SET MATCHING LINE NO. FOUND
         STM   R2,R4,CPWK1              SAVE 2-3-4
NOTEQ    MVC   CPLCNO(4),0(R15)         SET LOCATED LINE NO.
EXIT     XEXIT 0,8
         SPACE
NDFIL    MVI   CPDRPT,CPFNTYT           SET EOF FLAG
         B     EXIT
         SPACE
NOGGODY  TSEG  'EXTERNAL DATA SET MUST BE EDIT FORMAT',,M
         DCLOSE ,                       CLOSE IT
         NI    CPGFLG,255-CPFOPN        SET EXTERNAL DATA SET CLOSED
         B     CVQTYPE
         TITLE 'DODSNM ROUTINE'
* DODSNM TAKES 1ST TOKEN FOUND AS DSNAME AND HANDLES IT.
*
* ERRORS ARE RESOLVED INTERNALLY
*
* DSNAME AREA IS DEFINED BY DSNWA COPY ENTRY AFTER CP
*
* REGISTERS USED BY THIS ROUTINE (MUST BE 3-6)
         SPACE
REND     EQU   3              END OF DSN OPERAND
RSCAN    EQU   4              CURR OPERAND POINTER
RDSN     EQU   5              CURR DSNAME POINTER
RDSNL    EQU   6              CURR DSNAME LENGTH
         SPACE
DODSNM   XENTER R2,R8,C32+C8
         XC    CPDSNWA(DSSIZ),CPDSNWA   CLEAR DSNAME WORK AREA
         MVI   DSNWADSN,X'40'
         MVC   DSNWADSN+1(DSNWACLR-1),DSNWADSN
         SR    RDSNL,RDSNL         ZERO LENGTH COUNTER
         LA    RDSN,DSNWADSN       ADDR OF DSNAME WORK AREA
         SCAN  DSPRTA         SCAN FOR DSN
         B     CVABSENT       NO OPERAND
         SPACE 3
* HAVE DSNAME OPERAND
         SPACE
AGOOD    SCANSAVE C32(R8)          SAVE SCANNER POINTERS
         CLI   0(R1),C''''         IS IT QUOTED STRING?
         BE    HAVQUOT             BR IF YES
         CLI   0(R1),C'"'          OTHER TYPE OF QUOTE?
         BNE   AGOOD2              BR IF NOT
HAVQUOT  CVCALL DQSCAN              GO STRIP QUOTES
         OI    DSNWAF1,DSNFQDSN    INDICATE QUOTED DSNAME
AGOOD2   LR    RSCAN,R1            ADDRESS OF OPERAND
         LR    REND,R1
         AR    REND,R0             END OF OPERAND +1
         TM    DSNWAF1,DSNFQDSN    WAS IT QUOTED?
         BO    MAINDSN             BR IF YES
         SPACE
         AIF   ('&USPS' EQ '1').XLBL01                          USPS01
* IF 'WYL.' SPECIFIED TREAT AS FULL DSNAME
         CLC   KWYL,0(RSCAN)
         BE    MAINDSN
         SPACE
.XLBL01   DS    0H                                              USPS01
* IF '$' SPECIFIED ITS FULL DSNAME
         CLI   0(RSCAN),C'$'
         BE    HAVDOL
         SPACE
         AIF   ('&DCEC' NE '1').LBL04                           JEP00X
*  FULL DSN NOT SPEC - CONSTRUCT FIRST PART OF DSN AS DEFAULT   JEP001
         XR    R1,R1               ZERO OUT WORK REG            JEP001
         IC    R1,CVUSRFLD         PICK UP LEN OF USERID        JEP001
         LA    R1,1(R1)            PUT LENGTH PAST THE PERIOD   JEP001
         STH   R1,WYLDSNL          TELL EM HOW LONG             JEP001
         BCTR  R1,0                BACK DOWN FOR MOVING IN      JEP001
         BCTR  R1,0                BACK DOWN FOR MOVING IN      JEP001
         EX    R1,MOVEIN           MOVE IN USERID               JEP001
         LA    R1,1(R1)            BACK UP FOR PERIOD           JEP001
         LR    R0,RDSN             OFFSET FOR PERIOD            JEP001
         AR    R1,R0               CORRECT POSITION FOR PERIOD  JEP001
         MVI   0(R1),C'.'          PUT IT IN                    JEP001
MOVEIN   MVC   0(0,RDSN),CPUSERSV                               JEP001
         AGO   .LBL05                                           JEP00X
.LBL04   DS    0H                                               JEP00X
* FULL DSN NOT SPEC - CONSTRUCT FIRST PART OF DSN AS DEFAULT
         MVC   0(L'KWYL,RDSN),KWYL
         MVC   DSNXG(DSNXGL-1,RDSN),CPGRPSV
         MVI   DSNXG+DSNXGL-1(RDSN),C'.'
         MVC   DSNXU(DSNXUL-1,RDSN),CPUSERSV
         MVI   DSNXU+DSNXUL-1(RDSN),C'.'
         LA    RDSNL,DSNXN
WYLDSNL  EQU   *-2       LENGTH OF WYL DSN STD STUFF (HCON)
.LBL05   DS    0H                                               JEP00X
         AIF   ('&DCEC' NE '1').LBL09                           JEP00X
         LH    RDSNL,WYLDSNL       PICK UP ID LENGTH            JEP001
         B     DODSNOR             GO AROUND DC                 JEP001
*WYLDSNL  DC    H'0'               LEN OF WYL DSN STD STUFF     JEP001
.LBL09   DS    0H                                               JEP00X
         SPACE
* CHECK OPERAND FOR OVERRIDES
         SPACE
DODSNOR  CLR   RSCAN,REND     CHECK IF OPERAND EXHAUSTED
         BNL   MAINDSN        BR IF YES
         AIF   ('&USPS' EQ '1').XLBL03                          USPS01
         CLI   0(RSCAN),C'@'  IS THERE GROUP ID OVERRIDE?
         BE    OVERGRP        BR IF YES.
.XLBL03   DS    0H                                              USPS01
         CLI   0(RSCAN),C'&&' IS THERE USER ID OVERRIDE?
         BNE   MAINDSN        BR IF NO.
         SPACE
* OVERRIDE USER ID
OVERUSER LA    R15,CPUSER          DEFAULT SOURCE
         B     OVERRIDE
         SPACE
         AIF   ('&USPS' EQ '1').XLBL04                          USPS01
* OVERRIDE GROUP ID
OVERGRP  LA    R15,CPGRP           DEFAULT SOURCE
.XLBL04   DS    0H                                              USPS01
         SPACE 3
* COMMON ROUTINE TO OVERRIDE SPECIFIED OPERAND
* R15=ADDRESS OF DEFAULT FIELD
         SPACE
OVERRIDE LA    R1,1(RSCAN)    PAST '@' OR '&'
         CLR   R1,REND        IS CHAR ONLY ONE LEFT?
         BE    PLUGORIG       YES - USE LOGON VALUE
         CLI   0(R1),C'.'     IS OVERRIDE NULL?
         BE    PLUGORIG       YES - USE LOGON VALUE
         SPACE
* FIND END OF OVERRIDE
         LR    R0,REND
         SR    R0,R1          LENGTH REMAINING IN OPERAND
         LR    R2,R1
ORSRCH   CLI   0(R2),C'.'     IS IT DELIMITER?
         BE    ORDELIM        BR IF YES
         CLI   0(R2),C'#'     IS IT MEMBER SPECIFICATION
         BE    ORDELIM        BR IF YES
         LA    R2,1(R2)
         BCT   R0,ORSRCH
         SPACE
* FOUND A DELIM FOR OVERRIDE OR END OF OPERAND
ORDELIM  SR    R2,R1          LENGTH OF OVERRIDE
         SPACE 3
* PROCESS OVERRIDE VALUE
*    R1=ADDR OF OVERRIDE OPERAND
*    R2=LENGTH OF OVERRIDE
         SPACE
OREADY   LR    R0,R2
         AIF   ('&USPS' EQ '1').XLBL05                          USPS01
         LA    R15,HAVGRP          ADDR OF GROUP OVERRIDE RTN
         CLI   0(RSCAN),C'@'       WAS IT A GROUP OVERRIDE?
         BE    *+8                 BR IF YES
.XLBL05   DS    0H                                              USPS01
         LA    R15,HAVUSER         ADDR OF USER OVERRIDE RTN
         LA    RSCAN,1(R2,RSCAN)
         BALR  R14,R15             GO DO OVERRIDE
ORDONE   CLI   0(RSCAN),C'.'  NORMAL DELIM?
         BNE   MAINDSN        BR IF NO - NO MORE OVERRIDES
         LA    RSCAN,1(RSCAN)  PAST DELIM CHAR
         B     DODSNOR        GO TEST FOR OTHERS
         SPACE 3
*  OVERRIDE VALUE IS NULL - USE LOGON VALUE
         SPACE
PLUGORIG LR    R1,R15              ADDRESS OF SOURCE
         SR    R2,R2               INDICATE NULL OVERRIDE
         B     OREADY
         EJECT
* FULL DSN SPECIFIED WITH '$'
         SPACE
HAVDOL   LA    RSCAN,1(RSCAN)  BUMP PAST $
         MVI   DSNWANL,C'$'        FLAG $ DSNAME FOR LATER
         SPACE
* PROCESS DSN AFTER OVERRIDES OR ENTIRE DSNAME
MAINDSN  AR    RDSN,RDSNL     UPDATE DSN POINTER
         LR    R2,REND             END OF OPERAND
         SR    R2,RSCAN            LENGTH REMAINING
         BNP   ENDSNOP             BR IF NOTHING LEFT
         TM    DSNWAF1,DSNFQDSN    WAS IT QUOTED DSNAME?
         BO    HVDSTR2             BR IF YES
         SPACE
* IF $ HERE IT'S INVALID
         AIF   ('&USPS' EQ '1').XLBL06                          USPS01
         CLI   0(RSCAN),C'$'
         BE    MBRLONG
         SPACE
.XLBL06   DS    0H                                              USPS01
* CHECK WHETHER USE OF PREFIX WAS SPECIFIED
         CLI   0(RSCAN),C'*'  PREFIX CHAR?
         BNE   NOPFX
         SPACE
* PREFIX TO BE USED
         LA    RSCAN,1(RSCAN)  PAST *
         LH    R2,CPPFXL      PREFIX LENGTH
         LTR   R2,R2          TEST LENGTH
         BNP   NOPFX          BR IF NULL
         SPACE
* INSERT PREFIX
         LA    R15,CPPFX
         CLI   0(R15),C'$'    IS PREFIX ENTIRE DSN SPEC
         BNE   INSPFX         BR IF NO
         SR    RDSN,RDSNL     START OVER AGAIN
         LTR   RDSNL,RDSNL    TEST IF NOTHING GENERATED YET
         BZ    NORECLR        BYPASS RE-CLEAR
         LA    R0,X'40'       SET UP BLANK
         STC   R0,0(RDSNL,RDSN)   BLANK ORIG DSNAME
         BCT   RDSNL,*-4      DOESN'T CLEAR FIRST CHAR - TOUGH
NORECLR  OI    DSNWAF1,DSNFQDSN    INDICATE QUOTED DSNAME
         LA    R15,1(R15)     PAST $
         BCT   R2,INSPFX      DECR LENGTH
         B     NOPFX          BR IF $ WAS ALONE IN PFX
         SPACE
INSPFX   AR    RDSNL,R2       COMPUTE TOTAL DSN LENGTH
         CH    RDSNL,=H'44'   IS THERE ROOM FOR PFX
         BH    DSNLONG        NO
         BCTR  R2,0           YES
         EX    R2,PFXMVC      ADD PREFIX TO DSN
         LA    RDSN,1(R2,RDSN)  UPDATE DSN POINTER
NOPFX    CLR   RSCAN,REND     IS SCAN AT END OF OPERAND
         BNL   ENDSNOP        BR IF YES
         CLI   0(RSCAN),C'('  TEST PAREN SPECIFIED ALONE
         BE    ENDSNOP        BR IF YES
         SPACE
* SCAN FOR MEMBER SPEC (#) - SCANNER TAKES CARE OF PARENS
         LR    R0,REND
         SR    R0,RSCAN       LENGTH REMAINING
         LR    R2,RSCAN       CURRENT POINTER
MEMSRCH  CLI   0(R2),C'#'
         BE    HVDSNSTR       FOUND END OF STRING
         LA    R2,1(R2)
         BCT   R0,MEMSRCH
         SPACE
* HAVE END OF DSNAME STRING
HVDSNSTR SR    R2,RSCAN       LENGTH OF STRING
         BZ    ENDSNOP        BR IF NULL STRING
HVDSTR2  AR    RDSNL,R2       COMPUTE TOTAL LENGTH
         CH    RDSNL,=H'44'   IS IT TOO LONG?
         BH    DSNLONG        BR IF YES
         BCTR  R2,0
         LR    R15,RSCAN      FOR EX MVC
         EX    R2,PFXMVC      MOVE STRING
         LA    R2,1(R2)       RESTORE LENGTH
         AR    RSCAN,R2       UPDATE SCAN POINTER
         AR    RDSN,R2        UPDATE DSN POINTER
         SPACE
* END OF DSN OPERAND EXCEPT MEMBER SPEC
ENDSNOP  LR    R15,RDSN       CURRENT POINT
         SR    RDSN,RDSNL     START OF NAME
         SPACE
* NOW PROCESS MEMBER NAME PRESENT
         CLR   RSCAN,REND     IS OPERAND AT THE END?
         BNL   PARENSCN       BR IF YES
         CLI   0(RSCAN),C'#'  IS IT #?
         BE    HAVEMEM
         SPACE
* ONLY OTHER POSSIBILITY IS '('
         B     PARENMEM
         SPACE 3
* END OF SCANNED STUFF - CHECK MEMBER IN PARENS OR # AFTER ''
         SPACE
PARENSCN SCANRSTR C32(R8)          RESTORE SCAN POINTERS
         SCTELL ,                  FIND OUT WHAT THEY WERE
         LTR   R0,R0               WAS THERE ANYTHING LEFT?
         BNP   DSNDONE             BR IF FINISHED
         CLI   0(R1),C'#'          MEMBER AFTER QUOTED DSN?
         BE    MBRSCN              BR IF YES
         CLI   0(R1),C'('
         BNE   DSNDONE             NO MEMBER SPECIFIED
MBRSCN   SCAN  DSPRTB         GO SCAN FOR MEMBER NAME
         B     DSNDONE             DONE IF NOTHING THERE
         SPACE 3
* HAVE MEMBER IN PARENS OR # FOLLOWING QUOTED DSNAME
         SPACE
BGOOD    LR    RSCAN,R1       LOC OF LPAREN
         LR    REND,R1
         AR    REND,R0        LOC OF RPAREN+1
         CLI   0(RSCAN),C'#'
         BE    HAVEMEM
PARENMEM BCTR  REND,0         LOC OF RPAREN
         SPACE
* PROCESS MEMBER NAME IN PARENS OR BY #
HAVEMEM  LA    RSCAN,1(RSCAN) PAST # OR (
         LR    R2,REND
         SR    R2,RSCAN       LENGTH OF MEMBER NAME
         BZ    NULLMBR             BR IF NULL OVERRIDE
         CH    R2,=H'8'       CHECK LENGTH
         BNH   REPLMEM        BR IF OK
         SPACE
* MEMBER NAME IS TOO LONG
MBRLONG  ST    R2,CPSAVE      SET UP FOR
         ST    RSCAN,CPSAVE+4   'INVALID' RTN
         B     CVNVALID
         SPACE
* DSNAME IS TOO LONG
DSNLONG  ST    RDSNL,CPSAVE   AS ABOVE
         SR    RDSNL,R2       BACK UP TO PREV LENGTH
         SR    RDSN,RDSNL     FIND START OF DSNAME
         ST    RDSN,CPSAVE+4  AS ABOVE
         B     CVNVALID
         SPACE 3
* INSERT SPECIFIED MEMBER NAME
         SPACE
REPLMEM  BCTR  R2,0
         EX    R2,MEMMVC      MOVE MEMBER NAME
         OC    DSNWAMBR(8),=CL8' '  MAKE SURE UPPER CASE
         B     DSNDONE
         SPACE 3
PFXMVC   MVC   0(0,RDSN),0(R15)
MEMMVC   MVC   DSNWAMBR(0),0(RSCAN)
         EJECT
* DONE WITH DSNAME
         SPACE
NULLMBR  MVI   DSNWAMBR,0          FLAG EXPLICIT NULL MEMBER
DSNDONE  CLI   DSNWANL,C'$'        WAS IT $ DSNAME?
         BNE   *+8                 BR IF NOT
         OI    DSNWAF1,DSNFQDSN    FLAG $ AS QUOTED DSNAME
         TM    CPLFLG2,CPFDSNMS    TEST NULL OK
         BO    DOLGO               BR IF SO
DSNDONE2 LTR   RDSNL,RDSNL
         BP    DOLGO
         TSEG  'DSNAME IS NULL'
         B     CVGETCOM
         SPACE
DOLGO    NI    DSNWAF2,X'FF'-DSNNOVER TURN FLAG OFF
         MVI   CPDRED,X'40'
         MVC   CPDRED+1(7),CPDRED
         SCANSAVE C32(R8)          SAVE CURRENT SCAN POINTERS
SCANPRTA SCAN  SPARTA                   SCAN FOR "ON" & OTHERS
DOLGO9   CLI   CPCMNM,C'R'         IS IT RENAME
         BE    DOLGO1              YES
         SCANRSTR C32(R8)          RESTORE SCAN POINTERS
DOLGO1   STH   RDSNL,DSNWANL       SAVE LENGTH FOR DSNSTDDO
         BAL   R14,DSNSTDDO        GO SET DSNAME FLAGS
         SPACE
* IF STD WYL DSNAME CHECK NULL AFTER USERID
         TM    DSNWAF1,DSNFQDSN   IS IT QUOTED?
         BO    DOLGO2              BR IF YES
         TM    DSNWAF1,DSNFSTD   IS IT STD WYL DSN?
         BZ    DOLGO2              BR IF NO
         CH    RDSNL,WYLDSNL  IS WYL NAME JUST STD LENGTH?
         BNE   DOLGO2         BR IF NO
         SPACE
* DEFAULT DSNAME = 'LIB'
         TM    CPLFLG2,CPFDSNMS    IS DEFAULT PERMITTED?
         BO    DOLGO2              BR IF NO
         AIF   ('&DCEC' NE '1').LBL21                           JEP001
         ST    R1,CVSPARES         SAVE FOR A MINUTE            JEP001
         SR    R1,R1                                            JEP001
         IC    R1,CVUSRFLD         PICK UP ID LENGTH            JEP001
         LA    R1,1(R1)            REAL LEN + '.'               JEP001
         LA    R1,DSNWADSN(R1)     PLUS ADDR OF DSN W/A         JEP001
         MVC   0(3,R1),=C'LIB'         MOVE IN DEFAULT          JEP001
         L     R1,CVSPARES         RESTORE R1                   JEP001
         AGO   .LBL22                                           JEP001
.LBL21   DS    0H                                               JEP001
         MVC   DSNWADSN+DSNXN(3),=C'LIB'
.LBL22   DS    0H                                               JEP001
         OI    DSNWAF1,DSNFWLIB  FLAG WYLBUR LIBRARY
         LA    RDSNL,3(RDSNL)
DOLGO2   TM    DSNWAF1,DSNFSTD     IS IT A STANDARD NAME?
         BZ    ANYORINV            BR IF NOT - OVERRIDES INVALID
         AIF   ('&USPS' EQ '1').XLBL07                          USPS01
         CLI   DSNWAGOR,0          WAS GROUP OVERRIDE SPECIFIED?
         BE    *+10                BR IF NO
         MVC   DSNWADSN+DSNXG(DSNXGL-1),DSNWAGOR  MOVE GROUP O/R
.XLBL07   DS    0H                                              USPS01
         CLI   DSNWAUOR,0          WAS USER OVERRIDE SPECIFIED?
         AIF   ('&DCEC' EQ '1').LBLX5                           JEP001
         BE    *+10                BR IF NO
.LBLX5   DS    0H                                               JEP001
         AIF   ('&DCEC' NE '1').LBL23                           JEP001
         BE    XITHERE             BR IF NO                     JEP001
         ST    R1,CVSPARES         SAVE FOR A MINUTE            JEP001
         SR    R1,R1                                            JEP001
         IC    R1,CVUSRFLD         PICK UP ID LENGTH            JEP001
         BCTR  R1,0                DOWN FOR EX                  JEP001
         MVC   DSNWADSN(0),DSNWAUOR  MOVE IN USER O/R           JEP001
         EX    R1,*-6              EXEC ABOVE MOVE              JEP001
         L     R1,CVSPARES         RESTORE R1                   JEP001
         AGO   .LBL24                                           JEP001
.LBL23   DS    0H                                               JEP001
         MVC   DSNWADSN+DSNXU(DSNXUL-1),DSNWAUOR  MOVE USER O/R
.LBL24   DS    0H                                               JEP001
         B     XITHERE             ALL DONE
         SPACE
         AIF   ('&USPS' EQ '1').XLBL08                          USPS01
ANYORINV CLI   DSNWAGOR,0          GROUP SPECIFIED?
         BE    ANYOR2              BR IF NOT
         TSEG  DSNWAGOR,2,B
         AGO   .LBL18                                           JEP00X
.XLBL08   DS    0H                                              USPS01
ANYORINV DS    0H        ANY OVERRIDE SPECIFIED IS INVALID      JEP001
.LBL18   DS    0H                                               JEP00X
ANYOR2   CLI   DSNWAUOR,0          USER SPECIFIED?
         BE    ANYOR3              BR IF NOT
         TSEG  DSNWAUOR,3,B
         AIF   ('&USPS' EQ '1').XLBL09                          USPS01
ANYOR3   OC    DSNWAGOR,DSNWAUOR   TEST NEITHER SPECIFIED
         BZ    XITHERE             BR IF NEITHER SPECIFIED
         TSEG  'IGNORED',,M
         XC    DSNWAGOR(L'DSNWAGOR+L'DSNWAUOR),DSNWAGOR
         AGO   .LBL19                                           JEP00X
.XLBL09   DS    0H                                              USPS01
ANYOR3   DS    0H                                               JEP001
.LBL19   DS    0H                                               JEP00X
XITHERE  BAL   R14,DSNUDSDO        GO SET USER DATA SET FLAGS
         LR    R0,RDSNL
         STH   R0,DSNWANL          SAVE DSNAME LENGTH
         XEXIT 2,8
         EJECT
HAVOLM   CH    R0,=Y(6)                 NOT OVER 6 CHARS
         BH    CVNVALID                 TOO BIG
         MVC   DSNWAVOL(6),0(R15)       MOVE VOLUME NAME
         BR    R14                      MORE?
         SPACE
RESCAN   CLI   CPCMNM,C'R'               RENAME
         BE    CVNVALID                  YES
         BR    R14                       MORE?
         SPACE
TESTDSN  CLC   =C'DSN',CPCMNM            SHO DSN?
         BE    DOLGO9
         B     RESCAN
         SPACE
TESTDIR  CLC   =C'DIR',CPCMNM            SHO DIR?
         BE    DOLGO9
         CLC   =C'CAT',CPCMNM            SHO CAT?
         BE    DOLGO9
         B     RESCAN
         SPACE
TESTMEM  CLC   =C'DSN',CPCMNM            SHO DSN?
         BE    TESTMEM2
         CLC   =C'DIR',CPCMNM            SHO DIR?
         BE    TESTMEM2
         CLC   =C'CAT',CPCMNM            SHO CAT?
         BNER  R14
         SPACE
TESTMEM2 SCAN  OPERAND
         B     DOLGO9
         SPACE
OPERANDD B     SCANPRTA
         SPACE
SETSET   OI    CPLFLG3,CPFSET          TURN ON SET OPERAND
         BR    R14                     RESCAN
         SPACE
SETNOSET NI    CPLFLG3,255-CPFSET      TURN OFF SET FLAG
         BR    R14                     RESCAN
         SPACE
         AIF   ('&USPS' EQ '1').XLBL10                          USPS01
HAVGRP   LA    R15,DSNWAGOR        DESTINATION
         LA    R2,DSNXGL-1         CORRECT LENGTH
         B     HAVGU               COMMON ROUTINE
.XLBL10   DS    0H                                              USPS01
         SPACE
HAVKEY   LA    R15,CPDRED
         LR    R2,R0
         CH    R2,=Y(8)
         BH    CVNVALID
         B     HAVGUGO2
         SPACE
HAVUSER  LA    R15,DSNWAUOR        DESTINATION
         LA    R2,DSNXUL-1         CORRECT LENGTH
HAVGU    CLC   =C'DSN',CPCMNM      IS IT SHOW DSNAMES?
         BNE   HAVGUGO             BR IF NOT
         CH    R0,=H'3'            IS LENGTH 3?
         BNE   HAVGUGO             BR IF NOT
         CLC   =C'ALL',0(R1)       IS OVERRIDE 'ALL'?
         BNE   HAVGUGO             BR IF NOT
         LA    R1,=X'FFFFFF'       NEW OVERRIDE VALUE
         B     HAVGUGO2            SKIP LENGTH CHECK FOR THIS
         SPACE
HAVGUGO  LTR   R0,R0               IS IT NULL OVERRIDE?
         BZ    HAVGUGO2            BR IF YES - OK
         CLR   R2,R0               OTHERWISE CHECK LENGTH
         BNE   INVOR               INVALID OVERRIDE - WRONG LENGT
HAVGUGO2 BCTR  R2,0                FOR EX
         EX    R2,ORMVC            MOVE OVERRIDE
         BR    R14                 RETURN
         SPACE 3
HAVTO    CLI   CPCMNM,C'R'         IS IT RENAME
         BNE   TESTMEM             NO
         TM    SDSNQUB+18,X'06'       WAS TO OR ADD SET
         BNZ   CVNVALID            YES
         OI    SDSNQUB+18,X'04'       SET TO
         B     MOVETO
         SPACE
HAVADD   CLI   CPCMNM,C'R'         IS IT RENAME
         BNER  R14                 NO
         TM    SDSNQUB+18,X'06'       WAS TO OR ADD SET
         BNZ   CVNVALID            YES
         OI    SDSNQUB+18,X'02'       SET ADD
MOVETO   SCANSAVE  ,
         B     DOLGO9
         SPACE
NOVAR    CLI   CPCMNM,C'R'         RENAME CMD
         BE    SETNOVAR            YES........
         OI    DSNWAF2,DSNNOVER    NOVERIFY SPECIFIED
         B     PRIVCHK             TEST PRIVS
         SPACE
SETNOVAR OI    SDSNQUB+18,X'01'       SET NOVARIFY
         BR    R14                 MORE
         SPACE
RCATL    CLI   CPCMNM,C'R'         IS IT RENAME
         BNER  R14                 NO
         OI    DSNWAF1,X'04'       SET CATLG
         BR    R14
         SPACE
UNCA     CLI   CPCMNM,C'R'         IS IT RENAME
         BNER  R14
         OI    DSNWAF1,X'02'       SET UNCAT
         BR    R14
         SPACE
RECA     CLI   CPCMNM,C'R'         IS IT RENAME
         BNER  R14                 NO
         OI    DSNWAF1,X'06'       SET RECAT
         BR    R14
         SPACE
* INVALID OVERRIDE BECAUSE OF LENGTH
INVOR    STM   R0,R1,CPSAVE        SAVE FOR 'INVALID' ROUTINE
         B     CVNVALID
         SPACE 2
ORMVC    MVC   0(0,R15),0(R1)
         EJECT
* ROUTINE TO SET DSNAME ATTRIBUTE FLAGS
         SPACE
DSNSTDDO SENTER R0,R8
         NI    DSNWAF1,255-DSNFSTD-DSNFWLIB  RESET FLAGS
         AIF   ('&USPS' EQ '1').XLBL11                          USPS01
         CLC   KWYL,DSNWADSN       FIRST LEVEL OK?
         BNE   DODSNNS             BR IF NOT STD
         CLI   DSNWADSN+DSNXG+DSNXGL-1,C'.'  GROUP DELIM?
         BNE   DODSNNS             BR IF NOT
.XLBL11   DS    0H                                              USPS01
         AIF   ('&DCEC' NE '1').LBL31                           JEP001
         SR    R2,R2                                            JEP001
         IC    R2,CVUSRFLD         PICK UP ID LENGTH            JEP001
*        LA    R2,1(R2)            GET TO PERIOD                JEP001
         LA    R2,DSNWADSN(R2)     PLUS ADDR OF DSN W/A         JEP001
         CLI   0(R2),C'.'          USER DELIM?                  JEP001
         BNE   DODSNNS             BR IF NOT                    JEP001
         SR    R2,R2                                            JEP001
         IC    R2,CVUSRFLD         RELOAD R2                    JEP001
         LH    R0,DSNWANL          GET DSN LENGTH               JEP001
         LA    R2,1(R2)            GET PAST PERIOD              JEP001
         CR    R0,R2               IS IT LONG ENOUGH??          JEP001
         BL    DODSNNS             BR IF NOT                    JEP001
         AGO   .LBL32                                           JEP001
.LBL31   DS    0H                                               JEP001
         CLI   DSNWADSN+DSNXU+DSNXUL-1,C'.'  USER DELIM?
         BNE   DODSNNS             BR IF NOT
         LH    R0,DSNWANL          GET DSNAME LENGTH
         CH    R0,=Y(DSNXN)        IS IT LONG ENOUGH?
         BL    DODSNNS             BR IF NOT
.LBL32   DS    0H                                               JEP001
         OI    DSNWAF1,DSNFSTD     SET STD WYL DSN FLAG
         AGO   .XLBL13                                          USPS01
         LA    R2,DSNXN+3          LENGTH OF STD PFX +3
         CR    R0,R2               IS THAT THE LENGTH?
         BNE   DODSNNS             BR IF NOT
         CLC   =C'LIB',DSNWADSN+DSNXN  IS A WYLBUR LIB?
         BNE   DODSNNS             BR IF NOT
         OI    DSNWAF1,DSNFWLIB    SAY SO
.XLBL13   DS    0H                                              USPS01
DODSNNS  SEXIT R0,R8
         EJECT
* ROUTINE TO SET DSNAME POSSESSION FLAGS
         SPACE
DSNUDSDO SENTER R0,R8
         TM   DSNWAF2,DSNNOVER     NOVERIFY SET?
         BO   DODSNSMY             FAKE WYLBUR OUT
         NI    DSNWAF1,255-DSNFMYDS     RESET
         TM    DSNWAF1,DSNFSTD     IS IT STD DATA SET?
         BZ    DODSNSX             BR IF NOT
         AIF   ('&DCEC' NE '1').LBL06                           JEP00X
         XR    R1,R1               ZERO OUT R1                  JEP001
         IC    R1,CVUSRFLD         PICK UP LENGTH OF USER ID    JEP001
         CLC   DSNWADSN(0),CPUSER  USERS DATA SET?              JEP001
         EX    R1,*-6              EXECUTE ABOVE INST           JEP001
         BE    DODSNSMY            GO TURN ON FLAG..            JEP001
         B     DODSNSX             BR IF NOT                    USPS01
         AGO   .LBL07                                           JEP00X
.LBL06   DS    0H                                               JEP00X
         CLC   DSNWADSN+DSNXG(DSNXGL-1),CPGRP  HIS GROUP?
         BNE   DODSNSX             BR IF NOT
         CLC   DSNWADSN+DSNXU(DSNXUL-1),CPUSER  HIS ID?
         BE    DODSNSMY            BR IF YES
         CLC   DSNWADSN+DSNXU(DSNXUL-1),=C'PUB'  PUB?
         BNE   DODSNSX             BR IF NOT
.LBL07   DS    0H                                               JEP00X
DODSNSMY OI    DSNWAF1,DSNFMYDS    SET MY DATA SET FLAG
DODSNSX  SEXIT R0,R8
         SPACE 5
         COPY  KWYL
         TITLE 'FMTCHK ROUTINE'
* FMTCHK IS CALLED BY EITHER USE OR SAVE TO GET THE FORMAT, BLOCKING
*      FACTOR OR SKIP-COUNT.  FORMATS ARE: EDIT, CARD, PRINT OR LRECL.
*      RETURNS FORMAT IN R0, WITH 0=EDIT, POS=LRECL.  (CARD=80, PR=133)
         SPACE
FMTCHK   XENTER  R2,R8,C32+C8+SZR    USE SZR FOR IGNORED OP LIST
         OI    CPLFLG5,CPFUNUM     SET UNNUMBERED AS DEFAULT
         LA    R2,C32+C8(R8)   START IGNORED OPERAND AREA
         LCR   R6,R2                   SET NO DEFAULT FORMAT
         SR    R5,R5                    NO BLK FACTOR/SKIP YET
         SR    R3,R3                    SET NO "NRECS"
SETUPSCN LA    R1,SVFMPRT               ASSUME "SAVE"
         EX    R0,CHKFRMT               "USE" OR "SAVE"?
         BNE   GOTOSCN                  "SAVE"
         LA    R1,USFMPRT               SET USE PRT
GOTOSCN  SCAN  (1)                 GO SCAN
         LTR   R0,R3                    NRECS GIVEN?
         BZ    CHKFRMT                  NO
         SCINIT (4),(0)                 INIT SCAN
         SCAN  NRECPRT                  GET "NREC"
         B     CVABSENT            ERROR IF MISSING
CHKFRMT  CLC   CPCMNM(3),=C'USE'        CHECK BLK FACTOR ON SAVE
         BE    WRIGNORS            USE
         LTR   R6,R6                   LRECL GIVEN
         BM    WRIGNORS            NONE GIVEN, DO NO CHECKING NOW
         BZ    CHKEDT                  YES EDIT FORMAT
CHKLREC  TM    CPLFLG5,CPFUNUM         UNNUMBERED?
         BO    CHKBLK                  YES
         LH    R0,CPSEQLN              GET LENGTH OF SEQ FIELD
         TM    CPSEQFLD,FNEGBT         SEQ FIELD AT END
         BO    CHKLREC2                YES
         AH    R0,CPSEQFLD             ADD START COL FOR SEQ
         BCTR  R0,0                    SET FOR COMPARE TO LRECL
CHKLREC2 CR    R0,R6                   SEQ FIELD IN LRECL BNDS
         BH    GARBB                   NO, LRECL ERROR
CHKBLK   LTR   R1,R5                    DEFAULT BLK FACTOR NEEDED?
         BZ    WRIGNORS                 YES
         MR    R0,R6                    MULT BLK FACTOR & LRECL
         CH    R1,=Y(MXRECSZ)           TOO BIG?
         BNH   WRIGNORS                NO
GARBB    TSEG  'LRECL'
         B     CVUNLEGL
         SPACE
CHKEDT   TM    CPLFLG5,CPFFOPT     ANY NUMBER OPTION GIVEN
         BNE   GARBB               YES, EDIT IS BAD FORMAT
         SPACE
* TEST IF ANY OPERANDS IGNORED AND LET USER KNOW
WRIGNORS MVI   0(R2),X'FF'    FLAG END OF LIST
         LA    R2,C32+C8(R8)   START AT BEGINNING AGAIN
         CLI   0(R2),X'FF'    TEST FOR NULL LIST
         BE    NOSCRTH        BR IF YES
         SR    R3,R3          ZERO LENGTH REG
HVIGNORS IC    R3,0(R2)       LENGTH OF IGNORED KEYWORD
         TSEG  1(R2),(R3)     WRITE IT
         LA    R2,1(R3,R2)    BUMP TO NEXT ONE
         CLI   0(R2),X'FF'    TEST FOR LAST ONE DONE
         BE    ENDIGNRS       BR IF YES
         TSEG  ',',,B         MORE TO FOLLOW
         B     HVIGNORS
         SPACE
ENDIGNRS TSEG  ': IGNORED',,M
NOSCRTH  LR    R1,R5                    SET SKIP-NREC RETURN
         LTR   R0,R6                    SET FMT RETURN
         XEXIT 2,8
         SPACE
NRECDOO  LR    R5,R15                   SET NRECS
         SCAN  NRECERT                  MAKE SURE OK
         LTR   R6,R6               ANY LRECL GIVEN
         BP    CHKFRMT             YES, GO DO NORMAL CHECK
         BZ    GARBB               EDIT SPECIFIED, NRECS IS ERROR
         LA    R6,80               SET FOR CARD
         B     CHKFRMT             GO DO CHECK
         EJECT
LRECLA   LR    R6,R15                   SET FORMAT
         BR    R14                      SCAN FOR MORE
         SPACE
SKIPA    LR    R5,R15                   SET SKIP COUNT
         BR    R14                      MORE?
         SPACE
NRCTRY   CLI   0(R1),C'('               NEED LEFT PAREN FOR NRECS
         BNE   CVNVALID                 NEED LEFT PAREN
         EX    R0,CHKFRMT               ONLY SAVE OK
         BE    IGNORE         NOT SAVE
         LA    R4,1(R1)                 SAVE PTR
         SH    R0,=Y(2)                 DECREMENT FOR PARENS
         LTR   R3,R0                    SAVE COUNT
         BNP   CVNVALID                 NIX
         BR    R14                      MORE?
         SPACE
EDITA    SR    R6,R6                    SET "EDIT"
         BR    R14                      SCAN FOR MORE
         SPACE
CARDA    LA    R6,80                    SET "CARD"
         BR    R14                      SCAN FOR MORE
         SPACE
PRNTA    LA    R6,MXPRTSZ               SET "PRINT"
         BR    R14                      SCAN FOR MORE
         SPACE
SETSEQ   NI    CPLFLG5,255-CPFNONUM    SET NUMBERED DEFAULT
         OI    CPLFLG5,CPFFOPT     SET NUMBER OPTION GIVEN
         SCANSAVE ,                SAVE SCAN POINTERS
         LM    R0,R1,CPSAVE            GET SEQ FLD POINTERS
         CLI   0(R1),C'('              NEED LEFT PAREN
         BNE   SETSEQ1                 NO, ONLY POSITION GIVEN
         SH    R0,=Y(2)                STRIP PAREN COUNT
         BM    CVNVALID
         LA    R1,1(,R1)               KICK POINTER PAST "("
SETSEQ1  SCINIT (1),(0)                INITIALIZE SCANNER
         SCAN  SEQPRT1                 SCAN FOR SEQFLD
         B     SETSEQ3                 NOTHING FOUND
         SPACE
SSEQEND  OI    CPSEQFLD,FNEGBT         SET SEQ FLD AT END
         B     SETSEQ2                 GO TO GET LENGTH
         SPACE
SSEQFLD  LTR   R15,R15                 TEST LENGTH
         BNP   CVNVALID                MUST BE POSITIVE
         STH   R15,CPSEQFLD            SAVE SEQ FLD POSITION
SETSEQ2  SCAN  SEQPRT2                 SCAN FOR LENGTH
         B     SETSEQ3                 DONE, LEAVE LENGTH ALONE
         SPACE
SSEQLN   LTR   R15,R15
         BNP   CVNVALID                LENGTH MUST BE POSITIVE
         STH   R15,CPSEQLN             SAVE LENGTH
         SCAN  UNRECPRT                CHECK REST OF PARM BLANK
SETSEQ3  SCANRSTR ,       RESTORE SAVED SCAN POINTERS
         B     SETUPSCN                GO CONTINUE NORMAL SCAN
         SPACE
EXPDT    OI    DSNWAF3,DSNFEXP     SET EXPDT OVERRIDE OK
         B     PRIVCHK             GO CHECK IF PRIVILIGED
         SPACE
SSI      CH    R0,=H'8'            MAX OF 8 FOR SSI
         BH    CVNVALID            BR IF NO GOOD
         XCALL XTB                 CONVERT TO HEX
         LTR   R0,R0               CHECK ALL DIGITS CONVERTED
         BP    CVNVALID            NO, INVALID HEX SSI
         ST    R15,DSAVSSI         SAVE SSI GIVEN
         OI    DSNWAF3,DSNFSSI     SET SSI GIVEN FLAG
         B     SETUPSCN            GO RESTART SCAN
         SPACE
LINES    CVCALL DETRNG             GO DO RANGE
         OI    DSNWAF3,DSNFLIN     SET LINES SPECIFIED
         B     SETUPSCN            CONTINUE SCAN
         SPACE
RECATLG  OI    CPLFLG3,CPFRECLG    SET "RECATLG"
         BR    R14
         SPACE
CATLG    OI    CPLFLG3,CPFDSCLG    SET "CATLG"
         BR    R14
         SPACE
UNCATLG  OI    CPLFLG3,CPFUNCLG    SET "UNCATLG" - INST EX'D
         BR    R14
         SPACE
DSORG    CLC   =C'PS',0(R15)       DSORG=PS ONLY VALID OP
         BNE   CVNVALID
         MVI   DSNWAMBR,X'FF'      FLAG MEMBER FIELD
PRIVCHK  TM    JCBAFL,JCBSYSPR     SYS PRIV?
         BZ    CVNVALID            BR IF NO
         BR    R14
         SPACE
* ROUTINE TO IGNORE AN OPERAND WHICH IS NOT APPLICABLE
* ADD OPERAND TO A TABLE TO BE WRITTEN LATER
         SPACE
IGNORE   LTR   R15,R0              SAVE LENGTH OF OPERAND
         BZR   R14                 EXIT IF NULL
         STC   R0,0(R2)            SAVE LENGTH
         EX    R15,IGNORMVC        (BCTR SUPERFLUOUS)
         LA    R2,1(R15,R2)        BUMP TO NEXT AREA
BR14     BR    R14                 EXIT
         SPACE
IGNORMVC MVC   1(0,R2),0(R1)       MOVE OPERAND TO LIST
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
         SPACE
RTNAD    EQU   C32
PRESTPT  EQU   C32+4
OCCURS   EQU   C32+8
WRKAREA  EQU   C32+12
         TITLE 'LITERALS'
         LTORG
         TITLE 'SCKW''S'
* FOR DODSNM ROUTINE
         SPACE
DSPRTA   SCKW  ,AGOOD         1ST TOKEN
DSPRTB   SCKW  ,BGOOD
SPARTA   SCKW  ON,HAVOLM,P
         SCKW  SET,SETSET
         SCKW  NOSET,SETNOSET,A
         AIF   ('&USPS' EQ '1').XLBL17                          USPS01
         SCKW  GROUP,HAVGRP,(P,A)
         SCKW  GRP,HAVGRP,P
.XLBL17   DS    0C                                              USPS01
         SCKW  USER,HAVUSER,(P,A)
         SCKW  KEYWORD,HAVKEY,(P,A)
         SCKW  TO,HAVTO
         SCKW  ALIAS,HAVADD
         SCKW  NOVERIFY,NOVAR,A
         SCKW  CATLG,RCATL,A
         SCKW  RECATLG,RECA,A
         SCKW  UNCATLG,UNCA,A
         SCKW  READ,,(P,A)
         SCKW  WRITE,,(P,A)
         SCKW  PROTECT,,(P,A)
         SCKW  DPO,
         SCKW  SHARE,
         SCKW  SHR,
         SCKW  LIKE,TESTDSN,A
         SCKW  FOR,TESTDIR
         SCKW  IN,TESTDIR
         SCKW  THROUGH,TESTMEM,A
         SCKW  THRU,TESTMEM
         SCKW  FROM,TESTMEM,A
         SCKW  EXCLUDE,TESTMEM,A
         SCKW  ,RESCAN
         SPACE
OPERAND  SCKW  ,OPERANDD
         EJECT
* FOR FMTCHK ROUTINE
         SPACE
USFMPRT  SCKW  SCRATCH,IGNORE,A
         SCKW  REPLACE,IGNORE,A
         SCKW  CATLG,IGNORE,A
         SCKW  LRECL,LRECLA,(P,PI,A),MXRECSZ
         SCKW  RECATLG,IGNORE,A
         SCKW  UNCATLG,IGNORE,A
         SCKW  SKIP,SKIPA,(P,PI,A),99999
         SCKW  DSORG,DSORG,(P,A)
         SCKW  ,USSVPRT,PUSH       SKIP TO COMMON PART
SVFMPRT  SCKW  NOVERIFY,BR14,A
         SCKW  EXPDT,EXPDT,A
         SCKW  SSI,SSI,P
         SCKW  LINES,LINES,A
         SCKW  EXECUTE,,A
         SCKW  CATLG,CATLG,A
         SCKW  RECATLG,RECATLG,A
         SCKW  UNCATLG,UNCATLG,A
USSVPRT  SCKW  EDIT,EDITA,A
         SCKW  CARD,CARDA,A
         SCKW  PRINT,PRNTA,A
         SCKW  LRECL,LRECLA,(P,PI,A),256
         SCKW  ,CLSCRPRT,PUSH
         SCKW  ,NUMPRT,PUSH
         SCKW  SEQFLD,SETSEQ,(A,P)
         SCKW  ,IGDSNPRT,PUSH
         SCKW  ,NRCTRY        CHECK FOR NREC (BLOCKING FACTOR)
         SPACE
NRECPRT  SCKW  ,NRECDOO,PI,1000
NRECERT  SCKW  ,INVALID
         SPACE
SEQPRT1  SCKW  END,SSEQEND
         SCKW  E,SSEQEND
         SCKW  ,SSEQFLD,PI,133
UNRECPRT SCKW  ,INVALID
         SPACE
SEQPRT2  SCKW  ,SSEQLN,PI,9
         SCKW  ,INVALID
         TITLE 'COPY MODS'
         COMMON
         SPACE
CPKWSAV  EQU   CPWA+608          FOR KW
         SPACE
         END
./ ADD NAME=PWYL     0100-80189-80189-0746-00865-00865-00000-$SYS13  00
PWYL     TITLE 'WYLTSO ENTRY AND COMMAND PROMPTER'
* PROPERTY OF C. U. C. C. A.
         GBLC    &CCI             SWITCH FOR CCI MODS           CCI001
&CCI    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE CCI MOD  CCI001
         AIF   ('&CCI' NE '1').LBL01                            CCI001
*                                                               CCI001
* MOD CCI001                                                    CCI001
*  IMPLIMENT RUN COMMAND                                        CCI001
*                                                               CCI001
*                                                               JEP015
* MOD JEP018                                                    JEP018
*  ALLOW ALL NON-WYL CMDS AS VALID WYLBUR SUBCOMMANDS.          JEP018
*  MODULES AFFECTED ARE PWYL AND PEDP. MOD DENOTED BY           JEP018
*  JEP018 IN CC 66/71.     JERRY PITTENGER                      JEP018
*                                                               JEP018
*                                                               JEP018
.LBL01   DS    0H                                               CCI001
      EJECT                                                     JEP004
         SPACE 3
PWYL     CSECT
         WIDENT 001
         USING CPAREA,R12
         SPACE
         XTRNS
         EJECT
         ENTRY WYLTSO,CMDPRT,PSYNAD,ATTNRTN
         SPACE
WYLTSO   STM   R14,R12,12(R13)     SAVE ZE REGS
         BALR  R7,R0               ESTABLISH A BASE REG
         USING *,R7
         L     R7,=A(WYLTSO)
         LR    R9,R1               PARMS IF ANY
         USING WYLTSO,R7
         LR    R11,R13             RECALL RETURN SAVEAREA
         LOAD  EP=WYLINIT
         LR    R15,R0              ENTRY POINT ADDRESS
         L     R1,=V(CVREAL)       ADDRESS OF REAL CV
         BALR  R14,R15             GO TO IT
         BALR  R7,R0               RESTORE BASE REG
         USING *,R7
         L     R7,=A(WYLTSO)
         USING WYLTSO,R7
         DELETE EP=WYLINIT         GET RID OF INIT MODULE
         SR    R9,R9               CLEAR POSSIBLE PAGE PTR
         SR    R10,R10             CLEAR POSSIBLE PAGE POINTER
         SR    R11,R11             DITTO
         SR    R0,R0
         LR    R8,R13
         ESTAE FIXUP,TERM=YES
         IC    R0,CVPARM
         LTR   R0,R0
         BZ    XLOGON
         L     R1,CVPARM
         LA    R1,0(,R1)
         B     EDTCOMMV
         SPACE 3
XLOGON   CLI   CPCMSAV,C';'              LOGON EXEC?
         BNE   CMDPRT
         L     R0,CPCTSAV
         LA    R1,CPCMSAV+1
         B     EDTCOM
         EJECT
* DO INVALID OPTIONS MSG HERE
         SPACE
INVALID  GENTER ,                       SET BASE REG
         NI    RTBMFL,X'FF'-RTBNOCR-RTBNOTR RESET NOCR, NOTR
         LM    R0,R1,CPSAVE             PICK UP PTRS
         LTR   R0,R0                    POS COUNT?
         BZ    CVABSENT                 MISSING
         BNM   NOWSEG                   YES
         LCR   R0,R0                    COMPLEMENT COUNT
NOWSEG   CH    R0,=H'15'                USE ONLY 15 CHARS
         BNH   *+8                      BRANCH O.K.
         LA    R0,15                    SET TO MAX COUNT
         TSEG  (1),(0)                  INVALID ITEM INTO MSG
         TSEG  ': INVALID'
         TM    CPGFLG2,CPFEXEC          IS EXEC IN EFFECT
         BO    CVQTYPE                  YES
         B     CMDPRT
         TITLE 'ESTAE ROUTINE'
         PUSH USING
         SPACE 1
FIXUP    STM   R14,R12,12(R13)          SAVE REGS
         LR    R10,R1
         USING SDWA,R10
         BALR  R11,0
         USING *,R11
         L     R12,SDWAGR12          LOAD CP REGISTER
         ICM   R15,15,CVSPIEAD        SEE IF ANY ADDRESS
         BNZ   RETRY2
         SPACE 1
         CLC   SDWAABCC+1(2),=X'0470'   LOST AUTHORITY?
         BNE   ABENDED                  NO, THEN WE ABENDED
         SPACE 1
         TPUT  APFMSG,L'APFMSG
         B     RETRY
         SPACE
ABENDED  UNPK  ABENDCDE(9),SDWAABCC(5)     CONVERT TO HEX
         TR    ABENDCDE(8),TRTOHEX
         MVI   ABENDCDE+8,C' '
         SPACE 1
         TPUT  ESTAEMSG,ESTAEMSZ
         TPUT  REGMSG,32
         LA    R2,SDWAGRSV     SAVE AREA
         BAL   R14,TOHEX       TRANSLAGE
         TPUT  HEX,36          PRINT IT
         LA    R2,16(,R2)      NEXT REGISTERS
         BAL   R14,TOHEX       TRANSLATE AGAIN
         TPUT  HEX,36
         LA    R2,16(,R2)      NEXT REGISTERS
         BAL   R14,TOHEX       TRANSLATE AGAIN
         TPUT  HEX,36
         LA    R2,16(,R2)      NEXT REGISTERS
         BAL   R14,TOHEX       TRANSLATE AGAIN
         TPUT  HEX,36
         SLR   R15,R15         FOR IC
         IC    R15,SDWAILC2    LENGTH OF IC
         L     R2,SDWAPMKP     NEXT INST
         SR    R2,R15          POINT TO FAILING INST
         ST    R2,CPDOUB       STORE IT
         LA    R2,CPDOUB       POINT TO IT
         BAL   R14,TOHEX       TRANSLAGE
         MVC   ADR,HEX+2      MOV ABEND ADDRESS
         TPUT  ADRMSG,ADRSIZ
ABNDMSG  TPUT  RETRYMSG,L'RETRYMSG
         TGET  HEX,8         GET REPLY
         OC    HEX(8),=CL8' '
         CLC   HEX(5),=C'RETRY' IS IT RETRY
         BE    RETRY
         CLC   HEX(5),=C'ABEND' IS IT ABEND
         BE    ATTNOUT
         B     ABNDMSG        RE-ISSUE MESSAGE
         SPACE
RETRY    LA     R15,CMDPRT             SET AS RETRUN ADDRESS
RETRY2   SETRP WKAREA=(10),REGS=(14,12),RC=4,RETADDR=(R15),            *
               RETREGS=YES,FRESDWA=YES
         SPACE
ATTNOUT  DS    0H
         SETRP WKAREA=(10),REGS=(14,12),RC=0
         SPACE
         LTORG
         SPACE
TOHEX    UNPK  HEX(9),0(5,R2)
         UNPK  HEX+9(9),4(5,R2)
         UNPK  HEX+18(9),8(5,R2)
         UNPK  HEX+27(9),12(5,R2)
         TR    HEX(35),TRTOHEX
         MVI   HEX+8,C' '
         MVI   HEX+17,C' '
         MVI   HEX+26,C' '
         MVI   HEX+35,C' '
         BR    R14                      RETURN
ADRMSG   DC    C'ADDRESS OF FAILING INSTRUCTION '
ADR      DC    CL6' '
ADRSIZ    EQU    *-ADRMSG
REGMSG   DC    CL32'REGISTERS AT ENTRY TO ABEND'
ESTAEMSG DC    C'WYLBUR ESTAE TRAPPED ABEND='
ABENDCDE DC    C'XXXXXXXX '
ESTAEMSZ EQU   *-ESTAEMSG
RETRYMSG DC    C'ENTER OPTION RETRY, OR ABEND'
APFMSG   DC    C'AUTHORIZATION LOST: SUSPEND CURRENT SESSION'
HEX      DC    6D'0'
TRTOHEX  EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         POP   USING
         TITLE 'CMDPRT ROUTINE'
* CMDPRT PROMPTS FOR AND RECOGNIZES ALL WYLBUR COMMANDS.
* CTL IS PASSED TO THE APPROPRIATE ROUTINE FOR ALL COMMANDS.
* AFTER THE FIRST TIME THRU, CMDPRT IS ALWAYS CALLED, NEVER
* RETURNED TO. R8 AND R13 ARE INITIALIZED TO POINT TO CPWA.
         SPACE
CMDPRT   LA    R13,CPWA                 START OF WORK AREA
         LR    R8,R13                   ALSO HERE
         XC    CVPGRTN(4),CVPGRTN       CLR PTR TO CURRENT PGED CDE
         XC    CVSPIEAD,CVSPIEAD      CLEAR SPIE ADDRESS
         XC    JCBPAGES(2),JCBPAGES
         TM    JCBAFL,JCBAFIA           USER HIT ATTN?
         BO    CVQTYPE                  YES... PROCESS
         BALR  R7,0                     SET BASE REG
         USING *,7
         TM    CPGFLG,CPFOPN            ANY EXTERNAL DATA SET OPEN?
         BZ    READY                    NO
         DCLOSE ,                       CLOSE IT
         NI    CPGFLG,255-CPFOPN        SET CLOSED
READY    C     R9,CVCPADDR         IS THIS THE VCP?
         BNE   GOPFREE
         SR    R9,R9
         B     PFREE10
         SPACE
GOPFREE  PFREE 9                        FREE IF NECESSARY
PFREE10  PFREE 10
         PFREE 11                       FREE IF NECESSARY
         LH    R0,RTBWC                 GET CURRENT WRITE COUNT
         LTR   R0,R0                    ANYTHING OUTSTANDING?
         BZ    NADA                     NOPE
         TWRITE ,
NADA     TM    JCBBFL,JCBBFPER          PAGING ERROR?
         BZ    CMNDPRTG                 BR IF NOT
         NI    JCBBFL,255-JCBBFPER      CLEAR ERROR FLAG
         BAL   R2,QZWRITIT              TYPE BUFFER
         TSEG  'I/O ERRORS MAY HAVE DAMAGED YOUR ACTIVE FILE',,M
         SPACE
CMNDPRTG TM    RTBMFL,RTBNOCR         NOCR?
         BZ    NOMARK
         NI    RTBMFL,X'FF'-RTBNOCR   RESET NOCR
         SR    0,0
         TSEG  (1),(0),W              PLANT CR/LF
NOMARK   NI    RTBMFL,X'FF'-RTBNOTR   RESET NOTR
         TM    CPGFLG2,CPFEXEC        IS EXEC IN EFFECT?
         BE    CMNDPRTH                BRANCH NO
         BAL   R2,QZWRITIT             TYPE BUFFER
         XCALL GETEXCMD                GO GET COMMAND FROM EXEC
         SPACE
CMNDPRTH SR    R0,R0
         TM    CPGFLG,CPFRETRY        IS RETRY GOING ON?
         BZ    READYZ                 NO, GET COMMAND
         MVI   CPCTSAV,0
         L     R0,CPCTSAV             GET COUNT
         LA    R1,CPCMSAV             GET ADDRESS
         NI    CPGFLG,255-CPFRETRY    SET RETRY NOT IN EFFECT
         B     EDTCOM                 GO DO COMMAND
         SPACE
READYZ   TM    CPGFLG,CPFCMOFF        "COMMAND" IN PROMPT?
         BO    GOREAD                 NO
         SYSQS 1,0,'COMMAND'          SET UP "COMMAND" PROMPT
GOREAD   L     R15,=X'005A5B7C'
         LCR   R15,R15
         CVCALL TRDRTN
         BP    CMDATTN                BR IF ATTENTION
         LTR   R0,R0                  ANYTHING TYPED?
         BZ    READYZ                 NO - TRY AGAIN
         BCT   R0,CMDCONT             SEE IF 1 CHAR
         CLI   0(R1),C'$'             IS IT A RETRY REQUEST
         BE    CMDRETRY
CMDCONT  A     R0,=F'1'
         MVI   CPCTSAV,0              SET COMMAND NOT LOGGED
         B     EDTCOMMV               GO SCAN COMMAND
         SPACE
QZWRITIT CLC   RTBWC(2),=D'0'         ANYTHING TO WRITE?
         BER   R2                     NO
         TWRITE ,                     WRITE IT
         BR    R2                     RETURN
         SPACE
CMDATTN  LTR   R0,R0                  ANY CHARACTERS BEFORE ATTN
         BZ    CMDCOL                 NO, GO START COLLECT CMD
         LR    R2,R0                 LENGTH OF INPUT
         BCTR  R2,R0                 LESS 1
         LA    R2,0(R2,R1)           LAST CHAR OF INPUT
         CLI   0(R2),C'$'            RETRY WANTED
         BNE   CVGETCOM
CMDRETRY MVI   CPCTSAV,0             CLEAR HI ORDER BIT
         OI    CPGFLG,CPFRETRY       SET RETRY GOING ON
         B     MODGO                 GO TO MODIFY COMMAND
         SPACE
CMDCOL   TM    RTBUFL,RTBUNCOL       AUTO COLLECT WANTED?
         BO    CVGETCOM              NOPE
         LA    R1,=C'C'              PRETEND COLLECT WAS TYPED
         SR    R0,R0                 WILL BE ADDED 1
         B     CMDCONT                GO EXECUTE COMMAND
         SPACE 3
ILLCMD   GENTER ,
         CH    R0,=H'15'
         BNH   *+8
         LA    R0,15
         TSEG  (1),(0)
         TSEG  ': ILLEGAL COMMAND'
         B     CVQTYPE
         TITLE 'NEW COMMAND SETUP AND SCAN'
* ALL COMMANDS MUST BE AT CPCMSAV AT START OF COMMAND SCAN.  THE
* LENGTH OF THE COMMAND IS IN CPCTSAV.  IF THE NEGATIVE BIT IS
* ON IN CPCTSAV, THEN THE COMMAND HAS BEEN LOGGED AT THE
* TYPEWRITER.  THIS AFFECTS THE EXECUTION OF EXEC, LOAD, AND
* COMMENT COMMANDS.  AT ENTRY TO EDTCOMMV OR EDTCOM R1 AND R0
* MUST POINT TO THE COMMAND TO BE EXECUTED.  ENTER AT EDTCOMMV
* IF THE COMMAND IS NOT ALREADY AT CPCMSAV, OTHERWISE, ENTER AT
* EDTCOM.  IF NEGATIVE BIT IS ON IN CPCTSAV, THEN THE COUNT
* IS ALWAYS IGNORED.
         SPACE
EDTCOMMV GENTER ,
         LR    2,0
         EX    2,CMDMOVE          MOVES COMMAND+1 TO CPCMSAV
         TM    CPCTSAV,FNEGBT      HAS COMMAND BEEN LOGGED
         BO    *+8                 YES, DON'T SET COUNT & CLEAR
         ST    R0,CPCTSAV          SET COUNT SO LOG CAN BE DONE
         LA    1,CPCMSAV          POINT TO COMMAND
EDTCOM   GENTER ,                 BASE REG & ENTRY FOR MODE=EDIT
         TM    CPGFLG2,CPESNULL    ESC CHAR
         BNZ   EDTCOM1             NO, SKIP CALL OF PRE-PROC
         MVC   CPCMNM(8),=D'0'     CLEAR FLAGS FOR PRE-PROCESSOR
         MVI   CPSYSFLG,0               MAKE SURE ZERO
         XCALL PREPROC            FINALLY,CALL THE PRE-PROCESSOR
         BZ    EDTCOM1            NOTHING WAS CHANGED
         ST    R0,CPCTSAV          SAVE NEW COUNT FOR LOG
         TM    CPGFLG2,CPFEXEC     EXEC MODE
         BZ    EDTRSE2             BR NO TO TEST TERSE MODE
         TM    CPGFLG2,CPFEXTER    IS IT EXEC TERSE MODE
         BO    EDTCOM1             YES, DON'T LIST CHANGED LINE
         B     EDTRSE3             NO, GO LIST CHANGED LINE
         SPACE
EDTRSE2  TM    CPGFLG,CPFCMOFF     IS IT TERSE MODE
         BO    EDTCOM1             BR YES TO SKIP WRITE
EDTRSE3  LR    4,0
         LR    5,1
         TSEG  (1),(0),WRITE      PRINT CHANGED COMMAND
         BP    CVQTYPE             ABORT IF ATTENTION
         LR    0,4                RESTORE R0
         LR    1,5                RESTORE R1
         MVI   CPCTSAV,FNEGBT      SET COMMAND HAS BEEN LOGGED
EDTCOM1  DS    0H
         SR    R9,R9               CLEAR PAGE PTR
         STM   R0,R1,CPTELL             SAVE POINTERS
         SCINIT (1),(0)                 INITIALIZE SCAN
         MVC   CPCMNM(8),=D'0'          SETUP FOR NEW COMMAND
         MVI   CPSYSFLG,0               MAKE SURE ZERO
         LA    R6,TRYEXN           SET FOR LINE NUMBER COMMAND
OFCOURSE L     R1,=A(MNPRTOK)           SET ADDR PRT
SCANEM   SCAN  (1)                      SCAN
         B     CVGETCOM                NOTHING -- GO GET NEXT
         SPACE
CMDMOVE  MVC   CPCMSAV(0),0(1)
         TITLE 'BINARY SEARCH FOR MAJOR COMMANDS'
* COMMAND TABLE FORMAT:
*   8 CHARS COMMAND ID
*   4 BYTE COUNTER (NOT USED IN WYLTSO)
*   1 BYTE FLAG (INDICATING ABBREVIATIONS)
*   3 BYTE ADRESS FOR THE COMMAND ROUTINES
*  --------
*  16 BYTES TOTAL PER COMMAND
         SPACE
BINSRCH  CH    R0,=H'8'        TOO LONG A COMMAND?
         BH    COMMIL          YES.
         LR    R5,R0           GET LENGTH OF COMMAND
         BCTR  R5,R0           GUESS WHY
         LA    R6,1            TO PROPAGATE A 1 BIT
         SLL   R6,0(R5)        TO FORM A LENGTH MASK
         L     R2,=F'-1'
         LA    R3,CMNDS#+1
BINLOOP  LA    R4,0(R2,R3)
         SRL   R4,1            DIVIDE BY 2
         SLL   R4,4            MULTIPLY BY 16
         LA    R4,CMDTAB(R4)   POINT TO ENTRY
         EX    R5,CLC          SEE WHETHER TO GO UP OR DOWN
         BL    ITSLESS
         BH    ITSHIGH
         EX    R6,TMINSTR      IS THIS ABBREV OK?
         BO    WEGOTIT
         LR    R14,R4          KEEP THE CURRENT POINTER
BACKUP   S     R4,=F'16'       BACK UP AN ENTRY
         C     R4,=A(CMDTAB)
         BL    ADVANCEX
         EX    R5,CLC          IS THIS A GOOD ONE?
         BNE   ADVANCEX
         EX    R6,TMINSTR      A GOOD ABBREV?
         BO    WEGOTIT
         B     BACKUP          KEEP BACKING UP
         SPACE
ADVANCEX LR    R4,R14          RESTORE PONTER
ADVANCE  LA    R4,16(,R4)      STEP UP
         C     R4,=A(EOTABL)
         BH    COMMIL
         EX    R5,CLC          IS IT THIS ONE?
         BNE   COMMIL
         EX    R6,TMINSTR      GOOD ABREV?
         BO    WEGOTIT
         B     ADVANCE
         SPACE
WEGOTIT  L     R14,12(,R4)     FIND WHERE TO GO
         MVC   CPCMNM(3),0(R4) MOVE THE FULL COMMAND
         BR    R14
         SPACE
ITSLESS  LA    R2,0(R2,R3)
         SRL   R2,1
COMPARE  LA    R15,1(,R2)
         CR    R15,R3
         BL    BINLOOP
         B     COMMIL
         SPACE
ITSHIGH  LA    R3,0(R2,R3)
         SRL   R3,1
         B     COMPARE
         SPACE
CLC      CLC   0(0,R4),0(R1)
         SPACE
TMINSTR  TM    12(R4),X'00'
         SPACE 3
         DS    0F
CMDTAB   COMMAND ?,SHOVAR,HSHOW,1
         COMMAND @,SETVAR,HSET,1
         COMMAND ALIGN,GOALINE,HALIGN,1,2,3,4,5
         COMMAND CATLG,CATLG,HCATLG,3,4,5
         COMMAND CENTER,GOCENTER,HCENTR,2,3,4,5,6
         COMMAND CHANGE,GOCHNG,HCHANG,2,3,4,5,6
         COMMAND CLEAR,GOCLEAR,HCLEAR,2,3,4,5
         COMMAND CLR,GOCLEAR,HCLEAR,2,3
         COMMAND COLLECT,GOCOLL,HCOLCT,1,2,3,4,5,6,7
         COMMAND COMMENT,GOCOMMNT,HCOMNT,4,5,6,7
         COMMAND COMPARE,COMPAR,HCOMP,3,4,5,6,7
         COMMAND COPY,GOCOPY,HCOPY,3,4
         COMMAND DECIDE,DECIDE,HDECD,3,4,5,6
         COMMAND DELETE,GODEL,HDEL,1,2,3,4,5,6
         COMMAND DISPLAY,GOCOMMNT,HCOMNT,2,3,4,5,6,7
         COMMAND EDIT,MODGO,HEDIT,1,2,3,4
         COMMAND EXECUTE,GOEXEC,HEXCT,2,3,4,5,6,7
         COMMAND HELP,HELP,HHELP,1,2,3,4
         COMMAND IF,GOIF,HIF,2
         COMMAND IMMEDIAT,GOIMMED,NOHELP,2,3,4,5,6,7,8
         COMMAND INSERT,GOINS,HINSRT,1,2,3,4,5,6
         COMMAND JUSTIFY,GOALINE,HJUST,2,3,4,5,6,7
         AIF   ('&CCI' EQ '1').LBL11   DEL LI AS LIST ALIAS     JEP006
         COMMAND LIST,GOLSPRN,HLIST,1,2,3,4
         AGO   .LBL12                                           JEP006
.LBL11   DS    0C                                               JEP006
         COMMAND LIST,GOLSPRN,HLIST,1,3,4                       JEP006
.LBL12   DS    0C                                               JEP006
         COMMAND LOAD,GOLOAD,HLOAD,3,4
         COMMAND LOGOFF,GOLOGOFF,HLOGF,5,6
         COMMAND LOGOUT,GOLOGOFF,HLOGF,5,6
         COMMAND MODIFY,MODGO,HMODFY,1,2,3,4,5,6
         COMMAND MOVE,GOMOVE,HMOVE,3,4
         COMMAND NUMBER,GONUMB,HNUM,1,2,3,4,5,6
         COMMAND POINT,GOPOINT,HPOINT,1,2,3,4,5
         COMMAND POP,GOSTACK,HPOP,3
         COMMAND PRINT,GOLSPRN,NOHELP,2,3,4,5 PRINT COMMAND     CCI001
         COMMAND PUT,GOPUT,HPUT,2,3
         COMMAND READ,GORDCMD,HREAD,3,4
         COMMAND RECATLG,RECATLG,HRECAT,3,4,5,6,7
         COMMAND RENAME,GOREN,HRENM,3,4,5,6
         COMMAND REPLACE,GOREPL,HREP,1,2,3,4,5,6,7
         COMMAND RESTORE,GORESTOR,HRESTR,3,4,5,6,7
         AIF   ('&CCI' NE '1').LBL15                            CCI001
         COMMAND RUN,GOLSPRN,NOHELP,3     RUN COMMAND           CCI001
.LBL15   DS    0C                                               CCI001
         COMMAND SAVE,GOSAVE,HSAVE,1,2,3,4
         COMMAND SCRATCH,GOSCRT,HSCR,2,3,4,5,6,7
         COMMAND SEND,SENDMSG,HSEND,2,3,4
         COMMAND SET,GOSET,HSET,3
         COMMAND SHOW,GOSHOW,HSHOW,2,3,4
         COMMAND SIGNOFF,GOLOGOFF,HLOGF,6,7
         AIF   ('&CCI' NE '1').LBL16                            JEP015
         COMMAND  SO,GOLOGOFF,HLOGF,2     SHORT SIGNOFF CMD     JEP015
.LBL16   DS    0C                                               JEP015
         COMMAND STACK,GOSTACK,HSTACK,3,4,5
         COMMAND STAX,STAX,NOHELP,4
         COMMAND SUSPEND,GOSUSPND,HSUSP,2,3,4,5,6,7
         COMMAND TDUMP,GODUMP,NOHELP,1,2,3,4,5
         COMMAND TO,SENDMSG,HSEND,2
         COMMAND TSO,GOTSO,HTSO,2,3
         COMMAND UNCATLG,UNCATLG,HUNCAT,3,4,5,6,7
         COMMAND USE,GOUSE,HUSE,1,2,3
         COMMAND WHERE,GOWHERE,NOHELP,1,2,3,4,5
EOTABL   COMMAND X,GOEXEC,HEXCT,1
CMNDS#   EQU   (*-CMDTAB)/16  NUMBER OF ENTRIES
         AIF ('&CCI' NE '1').LBLX2                              JEP018
COMMIL   PCALL TSOCMDS                                          JEP018
         AGO   .LBLX3                                           JEP018
.LBLX2   DS      0H                                             JEP018
         SPACE
COMMIL   XCALL ILLCMD
         SPACE
.LBLX3   DS      0H                                             JEP018
MNPRTOK  SCKW  ,LNENOPRN,PUSH
         SCKW  @,SETVAR,(S,P)
         SCKW  ,BINSRCH
         SPACE
IMMEDLNO SCKW  ,LNENOPRN,PUSH
         SCKW  ,INVALID
         TITLE 'IMMEDIATE ROUTINES'
         DS    0H
GOIMMED  LA    R6,TRYEXN2
         SCAN  IMMEDLNO
         B     CVABSENT
         SPACE
TRYEXN   CH    R15,=H'16'               IS IT END SPECIFIED?
         BE    TRYEXN2                  YES IT'S OK.
         TM    CPGFLG2,CPFEXEC          IS EXEC IN EFFECT?
         B     TRYEXN2                WAS BO   ALLOW IMMED
         TSEG  'IN NON-EXEC MODE USE INSERT/DELETE/REPLACE COMMAND'
         B     CVQTYPE
         SPACE
TRYEXN2  ST    R0,CPWK1                 LINE NO.
         SCTELL (1),(0)                 SAVE POINTERS TO LINE TEXT
         LTR   R3,R0                    0=DELETE, POS=INSERT OR REPLACE
         BM    GODODL                   DELETE
         LA    R13,SZR(R13)             RESERVE SPACE
         EX    R3,MOVITOUT              MOVE OUT OF RTB
         LR    R1,R8                    RESET POINTER
         L     R15,CPWK1                LINE NO. TO R15
         ST    R15,CPCURRL         UPDATE CURRENT LINE POINTER
         CVCALL LENCHK                   LENGTH OK?
         CVCALL PRESS                    PRESS
         CVCALL STOWIT                   STOW
         B     CVGETCOM                 TRY FOR NEXT COMMAND
         SPACE
MOVITOUT MVC   0(0,R8),0(R1)
         SPACE
GODODL   CLI   CPCMNM,C'I'              IS IT IMMEDIATE COMMAND
         BE    CVABSENT                 NOT ALLOWED...
         LM    R0,R1,CPTELL             POINTERS TO RESET
         SCINIT (1),(0)                 REINIT SCAN
         MVC   CPCMNM(3),=CL3'DEL'      TO SET CPCMNM
         XCALL GODEL                    TO DELETE RTN
         TITLE 'CATLG, UNCATLG, RECATLG FIRST LEVEL'
CATLG    OI    CPLFLG3,CPFDSCLG    INDICATE CATALOG
         PCALL GOCTLG
         SPACE
RECATLG  OI    CPLFLG3,CPFDSCLG    INDICATE RECATLG
UNCATLG  OI    CPLFLG3,CPFUNCLG    INDICATE UNCATLG
         PCALL GOCTLG
         TITLE 'PCALLS TO VARIOUS PAGED ROUTINES'
GOCLEAR  PCALL CLEAR               DO CLEAR COMMAND
         SPACE
GOTSO    PCALL GOTSO
         SPACE
STAX     PCALL STAX
         SPACE
SENDMSG  PCALL SEND
         SPACE
GODUMP   DS    0H
         GENTER ,
         TM    JCBAFL,JCBSYSPR     SYS PRIV?
         BO    CALLTDU
         XCALL ILLCMD
CALLTDU  PCALL GODUMP
         SPACE
DECIDE   PCALL DECIDE              DECIDE CODE IS NOW PAGED
         SPACE
COMPAR   PCALL COMPARE             COMPARE CODE IS NOW PAGED
         SPACE
MODGO    PCALL MODGO        MODIFY/EDIT COMMANDS ARE PAGED
         SPACE
GOWHERE  PCALL WHERE
         SPACE
GOSTACK  PCALL STACK
         SPACE
GOSUSPND PCALL SUSPND
         SPACE
GOLOGOFF PCALL LGOFF
         SPACE
GOCOLL   PCALL GOCOLL       COLLECT COMMAND CODE IS PAGED
         SPACE
GOINS    PCALL GOINS        INSERT COMMAND CODE IS PAGED
         SPACE
GOREPL   PCALL GOREPL       REPLACE COMMAND CODE IS PAGED
         SPACE
GONUMB   PCALL GONUMB       NUMBER COMMAND CODE IS PAGED
         SPACE
GOSHOW   PCALL GOSHO        SHOW COMMAND CODE IS PAGED
         SPACE
GOPUT    PCALL GOPUT        PUT  COMMAND CODE IS PAGED
         SPACE
GOALINE  PCALL GOALINE      ALIGN/JUSTIFY CODE IS PAGED
         SPACE
GOCENTER PCALL GOCENTR      CENTER COMMAND CODE IS PAGED
         SPACE
HELP     GENTER ,
         L     R2,=A(CMDTAB)      ADDRESS OF COMMAND TABLE
         LA    R3,CMNDS#          NUMBER OF COMMANDS
         LA    R4,=A(EOTABL)      ADDRESS OF LAST COMMAND
         PCALL HELP
         TITLE 'CLEAR TEST -- CLEAR ACTIVE IF FLAG ON'
*  CLEAR ACTIVE FILE IF CPFCLEAR FLAG IS ON
         SPACE
CLRTST   XENTER 7,8,*              SAVE REGS
         TM    CPLFLG2,CPFCLEAR    WAS CLEAR SPECIFIED
         BZ    CLRTSTEX            NO, EXIT FROM ROUTINE
         CLC   CPAGCT(2),=D'0'     IS THERE ANY ACTIVE FILE
         BE    CLRTSTEX            NO, EXIT FROM ROUTINE
         BAL   R14,DOCLEAR         GO CLEAR ACTIVE
CLRTSTEX XEXIT 7,8                 RETURN
         TITLE 'CLEAR ROUTINE'
DOCLEAR  XENTER 2,8,*                   SAVE REGS
CLRA     MVC   CPHIPS(6),=D'0'          ZERO CPHIPS & CPLNCT
         LA    R5,CPDREC                FIRST DIRECTORY ENTRY
         PFREE 9                        OUT WITH ANY PAGE IN R9
         PFREE 11                       OUT WITH ANY PAGE IN R11
         LH    R6,CPAGCT                NO. PAGES
         LTR   R6,R6                    ANY?
         BZ    FNBLAST                  NO JUNKING NECESSARY
         OI    CPGFLG,CPFDIRCH         SET DIRECTORY CHANGED
GOBLAST  LH    R0,4(R5)                 PAGE NO. INTO R0
         PJUNK (0)                 FREE THIS PAGE
         LA    R5,6(R5)                 POINT AT NEXT PAGE
         BCT   R6,GOBLAST               JUNK NEXT PAGE (IF ANY)
NORLSE   STH   R6,CPAGCT                ZERO PAGE COUNT
FNBLAST  ST    R6,CPDREC                RESET FIRST DIRECTORY ENTRY
         MVI   CPCURRL,X'F0'       SET CURRENT LINE INVALID
         MVI   CPLSTCOL,FNEGBT          SET AS FIRST COLLECT
CLR2     XEXIT R2,R8                    SCRAM
         TITLE 'READ COMMAND'
* READ, READ VALUE, AND READ STRING COMMAND
* ALL OPTIONS ARE SCANNED FIRST, THEN THE INPUT LINE IS
* OBTAINED FROM THE TYPEWRITER, ACTIVE FILE, OR EXEC FILE,
* AND FINALLY THE VALUE, STRING, OR COMMAND IS PROCESSED.
         SPACE
GORDCMD  GENTER RDWASIZE           ESTABLISH AND WORK AREA
         LR    R5,R8               POINT R5 TO WORK AREA
         USING READWA,R5
         XC    READWA(RDWASIZE),READWA CLEAR THE WORK AREA
         MVC   RDWAPRMT(7),=C'ENTER? '   DEFAULT PROMPT
         LA    R0,7                SET LENGTH
         STH   R0,RDWAPRLN             FOR PROMPT
         MVI   RDWACOL1,FNEGBT     SET NO COLUMNS GIVEN
         CVCALL SCNEXFR            SCAN TO SEE IF READ FROM EXEC
READSCNL LA    R6,RDLNENO          SET R6 FOR LINE NUMBER RETURN
READSCN  SCAN  READPRT             SCAN READ OPERANDS
READSCND TM    RDWAFL,RDWAFLNO     WAS LINE NUMBER GIVEN
         BO    READACT             BR YES
         TM    RDWAFL,RDWAFDEL     WAS DELETE GIVEN WITH NO LINE
         BO    READBAD1            BR YES TO ERROR
         TM    RDWACOL1,FNEGBT     WERE COLS GIVEN WITH NO LINE
         BNO   READBAD3            BR YES TO ERROR
         LH    R0,RDWAPRLN         GET LENGTH FOR PROMPT
         LA    R1,RDWAPRMT         POINT TO PROMPT
         TREADR (1),(0),QM=NO      PROMPT USER FOR INPUT
         BP    CVQTYPE             ABORT IF ATTENTION
         MVI   CPCTSAV,FNEGBT      SET COMMAND LOGGED
         B     READDO              NOW GO FINISH COMMAND
         SPACE
READACT  LH    R0,CPAGCT           GET PAGE COUNT OF ACTIVE FILE
         L     R14,CVLOCATE        POINT TO LOCATE FOR ACTIVE
         TM    CPLFLG5,CPFSELOC    IS IT SELECT FROM ACTIVE
         BZ    READNTST            YES, ASSUMPTION WAS CORRECT
         LH    R0,CPEXCNT          GET EXEC FILE PAGE COUNT
         L     R14,=A(LOCATEEX)    USE LOCATEEX FOR EXEC FILE
READNTST LTR   R0,R0               IS THE SELECTED FILE NULL
         BNZ   READLOC             NO, GO DO LOCATE
         CVCALL ITSNIL             REPORT NULL FILE
         SPACE
READLOC  LA    R1,RDWALINO         POINT TO LINE TO LOCATE
         BALR  R14,R14
         TM    CPDRPT,CPFMTCH      DOES LINE EXIST
         BNO   READBAD2            BRANCH TO ERROR IF NO
         LR    R4,R15              SAVE PTR TO LINE FOR DELETE
         LA    R1,CPCMSAV          POINT TO UNPRESS AREA
         CVCALL UNPRESS            UNPRESS THE LINE
         TM    RDWACOL1,FNEGBT     ANY COLUMN OPTIONS TO PROCESS
         BO    READACT0            BR NO
         AH    R1,RDWACOL1         POINT R1 TO NEW TEXT START
         LH    R2,RDWACOL2         GET LENGTH FROM 2ND COL
         LTR   R2,R2               WAS 2ND COL GIVEN
         BZ    READACTA            BR NO TO COMPUTE NEW LENGTH
         LR    R0,R2               SET LENGTH
         B     READACT0            DONE WITH COLS, GO ON
         SPACE
READACTA SH    R0,RDWACOL1         SET LENGTH TO REMAINING STRING
         BNM   READACT0            OK IF NOT NEGATIVE
         SR    R0,R0               MAKE LENGTH ZERO IF NEGATIVE
READACT0 ST    R0,CPCTSAV          SAVE COUNT FOR WRITECOM
         LR    R2,R0               SAVE LINE COUNT
         LR    R3,R1               SAVE LINE POINTER
         PFLIP 9,11                SET PAGE INTO R9 (PROC TO R11)
         TM    RDWAFL,RDWAFDEL     DELETE THE LINE
         BE    READACT1            BRANCH NO
         LR    R15,R4              POINT TO LINE TO DELETE
         CVCALL  DODELE            GO DO DELETE
READACT1 PMOVE R9,R11    FREE R9 PAGE AND MOVE PROC PAGE TO R9
         LR    R0,R2               RESET R0 COUNT
         LR    R1,R3               RESET R1 POINTER
* NOW DO STRING, VALUE, OR COMMAND
READDO   TM    RDWAFL,RDWAFPRO+RDWAFSTR   IS IT STRING OR VALUE
         BZ    RDCMD               NO, GO DO COMMAND
         BNO   RDVAL               BR IF READ VALUE
         XCALL READSTR             GO DO READ STRING
         SPACE
RDVAL    XCALL READVAR             GO DO READ VALUE
         SPACE
RDCMD    XCALL EXLOOPCK            GO CHECK FOR LOOP IN EXEC
         LR    R2,R0               GET COUNT FOR MVC (EXTRA OK)
         EX    R2,READMVC          MOVE COMMAND TO CPCMSAV
         LA    R1,CPCMSAV          POINT R1 TO CMOMMAND
         MVC   CPLCNO,RDWALINO     SET LINE NUMBER FOR WRITECOM
         TM    CPGFLG2,CPFNOLOG    EXEC NOLOG MODE
         BO    RDCMD3              BRANCH YES
         XCALL WRITECOM            GO WRITE OUT COMMAND
RDCMD3   LR    R13,R8              RESET R13 FOR NEW COMMAND
         XCALL EDTCOM              GO EXECUTE THIS COMMAND
         SPACE
READMVC  MVC   CPCMSAV(0),0(R1)
         SPACE
NRDELETE NI    RDWAFL,255-RDWAFDEL RESET READ DELETE FLAG
         BR    R14                 SCAN ON
         SPACE
RDELETE  OI    RDWAFL,RDWAFDEL     SET READ DELETE OPTION
         TM    CPLFLG5,CPFSELOC    IS IT SELECT FROM EXEC
         BNMR  R14                 NO,  DELETE IS OK
         B     CVNVALID            YES, IT IS INVALID
         SPACE
RDLNENO  ST    R0,RDWALINO         SAVE READ LINE NUMBER
         OI    RDWAFL,RDWAFLNO     SET LINE NUMBER OPTION FLAG
         B     READSCNL            GO SCAN ON
         SPACE
* SCAN FOR READ STRING IS SAME AS VALUE FOR FIRST PART
RDSCNSTR OI    RDWAFL,RDWAFSTR     SET STRING GIVEN AND ENTER VAL
         SPACE
* SCAN FOR READ VALUE AND REST OF READ STRING
RDSCNVAL TM    RDWAFL,RDWAFPRO     IS THIS SECOND VALUE OR STRING
         BO    CVNVALID            YES, IT IS INVALID
         OI    RDWAFL,RDWAFPRO     SET VALUE OR STRING GIVEN
         LA    R4,RDWAVAR          POINT TO VARIABLE SAVE AREA
         LA    R3,1                SET COUNT TO 1
         MVC   CPWK1(2),0(R1)      SAVE NAME IN CASE VARIABLE
         L     R14,=A(LOOKUP)      CHECK THAT PRE-PROCESSOR
         LTR   R14,R14                   IS INCLUDED
         BZ    CVNVALID            BR NO TO ERROR
         BALR  R14,R14             GO DO LOOKUP
         BZ    CVNVALID            INVALID IF FIRST NOT A VAR
RDSCNVL1 MVC   0(2,R4),CPWK1       PUT VARIABLE NAME IN LIST
         STH   R3,RDWAVARN         SAVE VARIABLE COUNT
         TM    RDWAFL,RDWAFSTR     IS IT STRING OPTION
         BO    RDSCNST1            YES, GO FINISH UP STRING
         SCANSAVE ,                SAVE SCAN PTRS FOR RESTORE
         SCAN  ,                   GET NEXT TOKEN
         SPACE
         BNP   READSCND            END SCAN IF NO MORE
         MVC   CPWK1(2),0(R1)      SAVE NAME IN CASE VARIABLE
         XCALL LOOKUP              IS THIS A VARIABLE
         BZ    RDSCNRES            NO, GO RESTORE SCAN
         LA    R4,4(,R4)           STEP TO NEXT STORE AREA
         LA    R3,1(,R3)           ADD 1 TO COUNT
         CH    R3,=AL2(RDVARMAX)   IS THERE ROOM FOR THIS VAR
         BNH   RDSCNVL1            YES, GO STORE AND LOOP
         TSEG  'TOO MANY VARIABLES IN VALUE LIST'
         B     CVQTYPE
         SPACE
RDSCNST1 ST    R1,0(,R4)           SAVE STRING VARIABLE ADDRESS
         LTR   R15,R15             TYPE MUST BE ZERO FOR STRING
         BZ    READSCN             YES, GO SCAN ON
         TSEG  'READ STRING MUST HAVE STRING VARIABLE'
         B     CVQTYPE
         SPACE
RDSCNRES SCANRSTR ,                RESTORE SCAN POINTERS
         B     READSCN             CONTINUE SCANNING
         SPACE
RDSCNUSI SCAN  READPRT1            USING GIVEN -- GO GET LINENO
         B     CVABSENT            NONE - REPORT MISSING
         SPACE
RDSCNCOL BCTR  R15,0               SET BETTER COLUMN NO.
         STH   R15,RDWACOL1        SAVE COLUMN NO.
         SCANSAVE ,                SAVE SCAN PTRS FOR RESTORE
         SCAN  READPRT2            SCAN FOR 2ND COL NO.
         B     READSCND            NONE, GO FINISH COMMAND
         SPACE
RDSCNCL2 SH    R15,RDWACOL1        GET LENGTH (COL2-(COL1+1))
         BNP   CVNVALID            ERROR IF NOT POSITIVE
         STH   R15,RDWACOL2        SAVE LENGTH
         B     READSCN             CONTINUE SCANNING
         SPACE
* PROCESS PROMPT OPTION
RDSCNPRM CLI   0(R1),C''''         IS PROMPT IN SINGLE QUOTES
         BE    RDSCNPR1            BR YES
         CLI   0(R1),C'"'          IS PROMPT IN DOUBLE QUOTES
         BNE   CVNVALID            NO, IT IS INVALID
RDSCNPR1 CVCALL DQSCAN             STRIP QUOTES
         CH    R0,=AL2(L'RDWAPRMT) IS PROMPT TOO LONG
         BNH   *+8                 BR NO
         LA    R0,L'RDWAPRMT       SET MAX LENGTH
         STH   R0,RDWAPRLN         SAVE LENGTH OF PROMPT
         LTR   R2,R0               PUT LENGTH IN R2 AND TEST
         BZ    READSCN             NO MVC IF NULL
         BCTR  R2,0                SET FOR EXECUTE
         EX    R2,RDMVCPRM         MOVE PROMPT
         B     READSCN             CONTINUE SCAN
         SPACE
RDMVCPRM MVC   RDWAPRMT(0),0(R1)   MVC FOR PROMPT MOVE
         SPACE
READBAD1 SYSQS 1,0,'DELETE'        SET PART OF ERROR MESSAGE
         B     READBAD4            GO PUT OUT MESSAGE
         SPACE
READBAD2 L     R0,RDWALINO         GET LINE NUMBER
         CVCALL CVEXNO             CONVERT TO EXTERNAL
         TSEG  (1),(0),B           PUT OUT LINE NUMBER
         TSEG  'NOT IN FILE'
         B     CVQTYPE             GO ABORT
         SPACE
READBAD3 SYSQS 1,0,'COLUMN'        SET PART OF ERROR MESSAGE
READBAD4 TSEG  (1),(0),B       PUT OUT FIRST PART OF MESSAGE
         TSEG  'OPTION GIVEN WITHOUT A LINE NUMBER'
         B     CVQTYPE
         TITLE 'UTILITY ROUTINES'
* ILLEGAL ITEM ROUTINE
         SPACE
UNLEGAL  GENTER ,                       ENTRY & BASE REG
         TSEG  ' ILLEGAL'
         B     QTYPED
         SPACE 3
* MISSING ITEM ROUTINES
         SPACE
ABSCENT  GENTER ,                       ENTRY & BASE REG
         TSEG  'OPERAND'
         SPACE
AMMISS   GENTER ,                       ENTRY & BASE REG
         TSEG  ' MISSING'
         SPACE
QTYPED   GENTER ,
         TM    CPGFLG,CPFRETRY         IS RETRY GOING ON?
         BZ    QTYPED1                 NO
         NI    CPGFLG,255-CPFRETRY
QTYPED1  NI    JCBAFL,X'FF'-JCBAFIA     TURN ATTN FLAG OFF
         TCLEARQ INPUT             FLUSH INPUT BUFFERS
         NI    RTBMFL,X'FF'-RTBNOCR-RTBNOTR RESET NOCR, NOTR
         TM    CPGFLG2,CPFEXEC         IS EXEC IN EFFECT
         BE    CVGETCOM            NO, GET NEXT COMMAND
QSYSRDY  CLC   RTBWC(2),=D'0'     ANYTHING TO WRITE?
         BE    QSYSGO                  NO
         TWRITE ,
         SPACE
QSYSGO   GENTER ,
         TM    CPGFLG2,CPFEXEC         IS EXEC IN EFFECT
         BZ    CVGETCOM            NO, GO GET NEXT CMD
         XCALL EXECABRT                GO DO EXEC BREAK
         EJECT
*  FOR READ COMMAND
         SPACE
READPRT  SCKW  NODELETE,NRDELETE,A
         SCKW  DELETE,RDELETE,A
         SCKW  STRING,RDSCNSTR,(A,P)
         SCKW  PROMPT,RDSCNPRM,(A,P)
         SCKW  USING,RDSCNUSI,A
         SCKW  COLUMNS,RDSCNCOL,(A,P,PI),133
         SCKW  COLS,RDSCNCOL,(P,PI),133
         SCKW  VALUE,RDSCNVAL,(A,P)
READPRT1 SCKW  ,LNENOPRT,PUSH
         SCKW  EXECUTE,,A
         SCKW  ,INVALID
         SPACE
READPRT2 SCKW  /,RDSCNCL2,(P,PI),133
         SCKW  ,RDSCNRES
         EJECT
ATTNRTN  DS    0H
         USING ATTNRTN,R15
         L     R1,8(,R1)
         USING CPAREA,R1
         DROP  R12
         OI    JCBAFL,JCBAFIA      IDLE ATTN
         LH    R2,JCBPAGES
         LA    R2,1(,R2)
         CH    R2,=H'10'
         STH   R2,JCBPAGES
         BNHR  R14
         ABEND 100,DUMP
         DROP  R1
         USING CPAREA,R12
         EJECT
* SYNAD ROUTINE DOES ALMOST NOTHING
         USING PFCB,R3
PSYNAD   OI    JCBBFL,JCBBFPER     INDICATE PAGE ERROR
         MVC   PFCBNP(4),PFCBCP    AND INDICATE END OF PAGES
         BR    R14                 AND RETURN TO PGETS
         DROP  R3
         TITLE 'LITERALS'
         LTORG
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
CHGFINCD EQU   32                       CHANGES FINISHED CODE
         EJECT
         COMMON
         SPACE
         EJECT
         COPY  READWA
         EJECT
PFCB     DSECT
         COPY   PFCBTSO
         SPACE
         IHASDWA ,                      FOR DIAG WORK AREA (ESTAE)
         END
./ ADD NAME=PWYL8,SSI=00000185
PWYL     TITLE 'WYLTSO ENTRY AND COMMAND PROMPTER'
* PROPERTY OF C. U. C. C. A.
         GBLC    &CCI             SWITCH FOR CCI MODS           CCI001
&CCI    SETC   '1'  CHANGE TO ANY OTHER NUM. TO DELETE CCI MOD  CCI001
         AIF   ('&CCI' NE '1').LBL01                            CCI001
*                                                               CCI001
* MOD CCI001                                                    CCI001
*  IMPLIMENT RUN COMMAND                                        CCI001
*                                                               CCI001
*                                                               JEP015
* MOD JEP018                                                    JEP018
*  ALLOW ALL NON-WYL CMDS AS VALID WYLBUR SUBCOMMANDS.          JEP018
*  MODULES AFFECTED ARE PWYL AND PEDP. MOD DENOTED BY           JEP018
*  JEP018 IN CC 66/71.     JERRY PITTENGER                      JEP018
*                                                               JEP018
*                                                               JEP018
.LBL01   DS    0H                                               CCI001
      EJECT                                                     JEP004
         SPACE 3
PWYL     CSECT
         WIDENT 001
         USING CPAREA,R12
         SPACE
         XTRNS
         EJECT
         ENTRY WYLTSO,CMDPRT,PSYNAD,ATTNRTN
         SPACE
WYLTSO   STM   R14,R12,12(R13)     SAVE ZE REGS
         BALR  R7,R0               ESTABLISH A BASE REG
         USING *,R7
         L     R7,=A(WYLTSO)
         LR    R9,R1               PARMS IF ANY
         USING WYLTSO,R7
         LR    R11,R13             RECALL RETURN SAVEAREA
         LOAD  EP=WYLINIT
         LR    R15,R0              ENTRY POINT ADDRESS
         L     R1,=V(CVREAL)       ADDRESS OF REAL CV
         BALR  R14,R15             GO TO IT
         BALR  R7,R0               RESTORE BASE REG
         USING *,R7
         L     R7,=A(WYLTSO)
         USING WYLTSO,R7
         DELETE EP=WYLINIT         GET RID OF INIT MODULE
         SR    R9,R9               CLEAR POSSIBLE PAGE PTR
         SR    R10,R10             CLEAR POSSIBLE PAGE POINTER
         SR    R11,R11             DITTO
         SR    R0,R0
         LR    R8,R13
         ESTAE FIXUP,TERM=YES
         IC    R0,CVPARM
         LTR   R0,R0
         BZ    XLOGON
         L     R1,CVPARM
         LA    R1,0(,R1)
         B     EDTCOMMV
         SPACE 3
XLOGON   CLI   CPCMSAV,C';'              LOGON EXEC?
         BNE   CMDPRT
         L     R0,CPCTSAV
         LA    R1,CPCMSAV+1
         B     EDTCOM
         EJECT
* DO INVALID OPTIONS MSG HERE
         SPACE
INVALID  GENTER ,                       SET BASE REG
         NI    RTBMFL,X'FF'-RTBNOCR-RTBNOTR RESET NOCR, NOTR
         LM    R0,R1,CPSAVE             PICK UP PTRS
         LTR   R0,R0                    POS COUNT?
         BZ    CVABSENT                 MISSING
         BNM   NOWSEG                   YES
         LCR   R0,R0                    COMPLEMENT COUNT
NOWSEG   CH    R0,=H'15'                USE ONLY 15 CHARS
         BNH   *+8                      BRANCH O.K.
         LA    R0,15                    SET TO MAX COUNT
         TSEG  (1),(0)                  INVALID ITEM INTO MSG
         TSEG  ': INVALID'
         TM    CPGFLG2,CPFEXEC          IS EXEC IN EFFECT
         BO    CVQTYPE                  YES
         B     CMDPRT
         TITLE 'ESTAE ROUTINE'
         PUSH USING
         SPACE 1
FIXUP    STM   R14,R12,12(R13)          SAVE REGS
         LR    R10,R1
         USING SDWA,R10
         BALR  R11,0
         USING *,R11
         L     R12,SDWAGR12          LOAD CP REGISTER
         ICM   R15,15,CVSPIEAD        SEE IF ANY ADDRESS
         BNZ   RETRY2
         SPACE 1
         CLC   SDWAABCC+1(2),=X'0470'   LOST AUTHORITY?
         BNE   ABENDED                  NO, THEN WE ABENDED
         SPACE 1
         TPUT  APFMSG,L'APFMSG
         B     RETRY
         SPACE
ABENDED  UNPK  ABENDCDE(9),SDWAABCC(5)     CONVERT TO HEX
         TR    ABENDCDE(8),TRTOHEX
         MVI   ABENDCDE+8,C' '
         SPACE 1
         TPUT  ESTAEMSG,ESTAEMSZ
         TPUT  REGMSG,32
         LA    R2,SDWAGRSV     SAVE AREA
         BAL   R14,TOHEX       TRANSLAGE
         TPUT  HEX,36          PRINT IT
         LA    R2,16(,R2)      NEXT REGISTERS
         BAL   R14,TOHEX       TRANSLATE AGAIN
         TPUT  HEX,36
         LA    R2,16(,R2)      NEXT REGISTERS
         BAL   R14,TOHEX       TRANSLATE AGAIN
         TPUT  HEX,36
         LA    R2,16(,R2)      NEXT REGISTERS
         BAL   R14,TOHEX       TRANSLATE AGAIN
         TPUT  HEX,36
         SLR   R15,R15         FOR IC
         IC    R15,SDWAILC2    LENGTH OF IC
         L     R2,SDWAPMKP     NEXT INST
         SR    R2,R15          POINT TO FAILING INST
         ST    R2,CPDOUB       STORE IT
         LA    R2,CPDOUB       POINT TO IT
         BAL   R14,TOHEX       TRANSLAGE
         MVC   ADR,HEX+2      MOV ABEND ADDRESS
         TPUT  ADRMSG,ADRSIZ
ABNDMSG  TPUT  RETRYMSG,L'RETRYMSG
         TGET  HEX,8         GET REPLY
         OC    HEX(8),=CL8' '
         CLC   HEX(5),=C'RETRY' IS IT RETRY
         BE    RETRY
         CLC   HEX(5),=C'ABEND' IS IT ABEND
         BE    ATTNOUT
         B     ABNDMSG        RE-ISSUE MESSAGE
         SPACE
RETRY    LA     R15,CMDPRT             SET AS RETRUN ADDRESS
RETRY2   SETRP WKAREA=(10),REGS=(14,12),RC=4,RETADDR=(R15),            *
               RETREGS=YES,FRESDWA=YES
         SPACE
ATTNOUT  DS    0H
         SETRP WKAREA=(10),REGS=(14,12),RC=0
         SPACE
         LTORG
         SPACE
TOHEX    UNPK  HEX(9),0(5,R2)
         UNPK  HEX+9(9),4(5,R2)
         UNPK  HEX+18(9),8(5,R2)
         UNPK  HEX+27(9),12(5,R2)
         TR    HEX(35),TRTOHEX
         MVI   HEX+8,C' '
         MVI   HEX+17,C' '
         MVI   HEX+26,C' '
         MVI   HEX+35,C' '
         BR    R14                      RETURN
ADRMSG   DC    C'ADDRESS OF FAILING INSTRUCTION '
ADR      DC    CL6' '
ADRSIZ    EQU    *-ADRMSG
REGMSG   DC    CL32'REGISTERS AT ENTRY TO ABEND'
ESTAEMSG DC    C'WYLBUR ESTAE TRAPPED ABEND='
ABENDCDE DC    C'XXXXXXXX '
ESTAEMSZ EQU   *-ESTAEMSG
RETRYMSG DC    C'ENTER OPTION RETRY, OR ABEND'
APFMSG   DC    C'AUTHORIZATION LOST: SUSPEND CURRENT SESSION'
HEX      DC    6D'0'
TRTOHEX  EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         POP   USING
         TITLE 'CMDPRT ROUTINE'
* CMDPRT PROMPTS FOR AND RECOGNIZES ALL WYLBUR COMMANDS.
* CTL IS PASSED TO THE APPROPRIATE ROUTINE FOR ALL COMMANDS.
* AFTER THE FIRST TIME THRU, CMDPRT IS ALWAYS CALLED, NEVER
* RETURNED TO. R8 AND R13 ARE INITIALIZED TO POINT TO CPWA.
         SPACE
CMDPRT   LA    R13,CPWA                 START OF WORK AREA
         LR    R8,R13                   ALSO HERE
         XC    CVPGRTN(4),CVPGRTN       CLR PTR TO CURRENT PGED CDE
         XC    CVSPIEAD,CVSPIEAD      CLEAR SPIE ADDRESS
         XC    JCBPAGES(2),JCBPAGES
         TM    JCBAFL,JCBAFIA           USER HIT ATTN?
         BO    CVQTYPE                  YES... PROCESS
         BALR  R7,0                     SET BASE REG
         USING *,7
         TM    CPGFLG,CPFOPN            ANY EXTERNAL DATA SET OPEN?
         BZ    READY                    NO
         DCLOSE ,                       CLOSE IT
         NI    CPGFLG,255-CPFOPN        SET CLOSED
READY    C     R9,CVCPADDR         IS THIS THE VCP?
         BNE   GOPFREE
         SR    R9,R9
         B     PFREE10
         SPACE
GOPFREE  PFREE 9                        FREE IF NECESSARY
PFREE10  PFREE 10
         PFREE 11                       FREE IF NECESSARY
         LH    R0,RTBWC                 GET CURRENT WRITE COUNT
         LTR   R0,R0                    ANYTHING OUTSTANDING?
         BZ    NADA                     NOPE
         TWRITE ,
NADA     TM    JCBBFL,JCBBFPER          PAGING ERROR?
         BZ    CMNDPRTG                 BR IF NOT
         NI    JCBBFL,255-JCBBFPER      CLEAR ERROR FLAG
         BAL   R2,QZWRITIT              TYPE BUFFER
         TSEG  'I/O ERRORS MAY HAVE DAMAGED YOUR ACTIVE FILE',,M
         SPACE
CMNDPRTG TM    RTBMFL,RTBNOCR         NOCR?
         BZ    NOMARK
         NI    RTBMFL,X'FF'-RTBNOCR   RESET NOCR
         SR    0,0
         TSEG  (1),(0),W              PLANT CR/LF
NOMARK   NI    RTBMFL,X'FF'-RTBNOTR   RESET NOTR
         TM    CPGFLG2,CPFEXEC        IS EXEC IN EFFECT?
         BE    CMNDPRTH                BRANCH NO
         BAL   R2,QZWRITIT             TYPE BUFFER
         XCALL GETEXCMD                GO GET COMMAND FROM EXEC
         SPACE
CMNDPRTH SR    R0,R0
         TM    CPGFLG,CPFRETRY        IS RETRY GOING ON?
         BZ    READYZ                 NO, GET COMMAND
         MVI   CPCTSAV,0
         L     R0,CPCTSAV             GET COUNT
         LA    R1,CPCMSAV             GET ADDRESS
         NI    CPGFLG,255-CPFRETRY    SET RETRY NOT IN EFFECT
         B     EDTCOM                 GO DO COMMAND
         SPACE
READYZ   TM    CPGFLG,CPFCMOFF        "COMMAND" IN PROMPT?
         BO    GOREAD                 NO
         SYSQS 1,0,'COMMAND'          SET UP "COMMAND" PROMPT
GOREAD   L     R15,=X'005A5B7C'
         LCR   R15,R15
         CVCALL TRDRTN
         BP    CMDATTN                BR IF ATTENTION
         LTR   R0,R0                  ANYTHING TYPED?
         BZ    READYZ                 NO - TRY AGAIN
         BCT   R0,CMDCONT             SEE IF 1 CHAR
         CLI   0(R1),C'$'             IS IT A RETRY REQUEST
         BE    CMDRETRY
CMDCONT  A     R0,=F'1'
         MVI   CPCTSAV,0              SET COMMAND NOT LOGGED
         B     EDTCOMMV               GO SCAN COMMAND
         SPACE
QZWRITIT CLC   RTBWC(2),=D'0'         ANYTHING TO WRITE?
         BER   R2                     NO
         TWRITE ,                     WRITE IT
         BR    R2                     RETURN
         SPACE
CMDATTN  LTR   R0,R0                  ANY CHARACTERS BEFORE ATTN
         BZ    CMDCOL                 NO, GO START COLLECT CMD
         LR    R2,R0                 LENGTH OF INPUT
         BCTR  R2,R0                 LESS 1
         LA    R2,0(R2,R1)           LAST CHAR OF INPUT
         CLI   0(R2),C'$'            RETRY WANTED
         BNE   CVGETCOM
CMDRETRY MVI   CPCTSAV,0             CLEAR HI ORDER BIT
         OI    CPGFLG,CPFRETRY       SET RETRY GOING ON
         B     MODGO                 GO TO MODIFY COMMAND
         SPACE
CMDCOL   TM    RTBUFL,RTBUNCOL       AUTO COLLECT WANTED?
         BO    CVGETCOM              NOPE
         LA    R1,=C'C'              PRETEND COLLECT WAS TYPED
         SR    R0,R0                 WILL BE ADDED 1
         B     CMDCONT                GO EXECUTE COMMAND
         SPACE 3
ILLCMD   GENTER ,
         CH    R0,=H'15'
         BNH   *+8
         LA    R0,15
         TSEG  (1),(0)
         TSEG  ': ILLEGAL COMMAND'
         B     CVQTYPE
         TITLE 'NEW COMMAND SETUP AND SCAN'
* ALL COMMANDS MUST BE AT CPCMSAV AT START OF COMMAND SCAN.  THE
* LENGTH OF THE COMMAND IS IN CPCTSAV.  IF THE NEGATIVE BIT IS
* ON IN CPCTSAV, THEN THE COMMAND HAS BEEN LOGGED AT THE
* TYPEWRITER.  THIS AFFECTS THE EXECUTION OF EXEC, LOAD, AND
* COMMENT COMMANDS.  AT ENTRY TO EDTCOMMV OR EDTCOM R1 AND R0
* MUST POINT TO THE COMMAND TO BE EXECUTED.  ENTER AT EDTCOMMV
* IF THE COMMAND IS NOT ALREADY AT CPCMSAV, OTHERWISE, ENTER AT
* EDTCOM.  IF NEGATIVE BIT IS ON IN CPCTSAV, THEN THE COUNT
* IS ALWAYS IGNORED.
         SPACE
EDTCOMMV GENTER ,
         LR    2,0
         EX    2,CMDMOVE          MOVES COMMAND+1 TO CPCMSAV
         TM    CPCTSAV,FNEGBT      HAS COMMAND BEEN LOGGED
         BO    *+8                 YES, DON'T SET COUNT & CLEAR
         ST    R0,CPCTSAV          SET COUNT SO LOG CAN BE DONE
         LA    1,CPCMSAV          POINT TO COMMAND
EDTCOM   GENTER ,                 BASE REG & ENTRY FOR MODE=EDIT
         TM    CPGFLG2,CPESNULL    ESC CHAR
         BNZ   EDTCOM1             NO, SKIP CALL OF PRE-PROC
         MVC   CPCMNM(8),=D'0'     CLEAR FLAGS FOR PRE-PROCESSOR
         MVI   CPSYSFLG,0               MAKE SURE ZERO
         XCALL PREPROC            FINALLY,CALL THE PRE-PROCESSOR
         BZ    EDTCOM1            NOTHING WAS CHANGED
         ST    R0,CPCTSAV          SAVE NEW COUNT FOR LOG
         TM    CPGFLG2,CPFEXEC     EXEC MODE
         BZ    EDTRSE2             BR NO TO TEST TERSE MODE
         TM    CPGFLG2,CPFEXTER    IS IT EXEC TERSE MODE
         BO    EDTCOM1             YES, DON'T LIST CHANGED LINE
         B     EDTRSE3             NO, GO LIST CHANGED LINE
         SPACE
EDTRSE2  TM    CPGFLG,CPFCMOFF     IS IT TERSE MODE
         BO    EDTCOM1             BR YES TO SKIP WRITE
EDTRSE3  LR    4,0
         LR    5,1
         TSEG  (1),(0),WRITE      PRINT CHANGED COMMAND
         BP    CVQTYPE             ABORT IF ATTENTION
         LR    0,4                RESTORE R0
         LR    1,5                RESTORE R1
         MVI   CPCTSAV,FNEGBT      SET COMMAND HAS BEEN LOGGED
EDTCOM1  DS    0H
         SR    R9,R9               CLEAR PAGE PTR
         STM   R0,R1,CPTELL             SAVE POINTERS
         SCINIT (1),(0)                 INITIALIZE SCAN
         MVC   CPCMNM(8),=D'0'          SETUP FOR NEW COMMAND
         MVI   CPSYSFLG,0               MAKE SURE ZERO
         LA    R6,TRYEXN           SET FOR LINE NUMBER COMMAND
OFCOURSE L     R1,=A(MNPRTOK)           SET ADDR PRT
SCANEM   SCAN  (1)                      SCAN
         B     CVGETCOM                NOTHING -- GO GET NEXT
         SPACE
CMDMOVE  MVC   CPCMSAV(0),0(1)
         TITLE 'BINARY SEARCH FOR MAJOR COMMANDS'
* COMMAND TABLE FORMAT:
*   8 CHARS COMMAND ID
*   4 BYTE COUNTER (NOT USED IN WYLTSO)
*   1 BYTE FLAG (INDICATING ABBREVIATIONS)
*   3 BYTE ADRESS FOR THE COMMAND ROUTINES
*  --------
*  16 BYTES TOTAL PER COMMAND
         SPACE
BINSRCH  CH    R0,=H'8'        TOO LONG A COMMAND?
         BH    COMMIL          YES.
         LR    R5,R0           GET LENGTH OF COMMAND
         BCTR  R5,R0           GUESS WHY
         LA    R6,1            TO PROPAGATE A 1 BIT
         SLL   R6,0(R5)        TO FORM A LENGTH MASK
         L     R2,=F'-1'
         LA    R3,CMNDS#+1
BINLOOP  LA    R4,0(R2,R3)
         SRL   R4,1            DIVIDE BY 2
         SLL   R4,4            MULTIPLY BY 16
         LA    R4,CMDTAB(R4)   POINT TO ENTRY
         EX    R5,CLC          SEE WHETHER TO GO UP OR DOWN
         BL    ITSLESS
         BH    ITSHIGH
         EX    R6,TMINSTR      IS THIS ABBREV OK?
         BO    WEGOTIT
         LR    R14,R4          KEEP THE CURRENT POINTER
BACKUP   S     R4,=F'16'       BACK UP AN ENTRY
         C     R4,=A(CMDTAB)
         BL    ADVANCEX
         EX    R5,CLC          IS THIS A GOOD ONE?
         BNE   ADVANCEX
         EX    R6,TMINSTR      A GOOD ABBREV?
         BO    WEGOTIT
         B     BACKUP          KEEP BACKING UP
         SPACE
ADVANCEX LR    R4,R14          RESTORE PONTER
ADVANCE  LA    R4,16(,R4)      STEP UP
         C     R4,=A(EOTABL)
         BH    COMMIL
         EX    R5,CLC          IS IT THIS ONE?
         BNE   COMMIL
         EX    R6,TMINSTR      GOOD ABREV?
         BO    WEGOTIT
         B     ADVANCE
         SPACE
WEGOTIT  L     R14,12(,R4)     FIND WHERE TO GO
         MVC   CPCMNM(3),0(R4) MOVE THE FULL COMMAND
         BR    R14
         SPACE
ITSLESS  LA    R2,0(R2,R3)
         SRL   R2,1
COMPARE  LA    R15,1(,R2)
         CR    R15,R3
         BL    BINLOOP
         B     COMMIL
         SPACE
ITSHIGH  LA    R3,0(R2,R3)
         SRL   R3,1
         B     COMPARE
         SPACE
CLC      CLC   0(0,R4),0(R1)
         SPACE
TMINSTR  TM    12(R4),X'00'
         SPACE 3
         DS    0F
CMDTAB   COMMAND ?,SHOVAR,HSHOW,1
         COMMAND @,SETVAR,HSET,1
         COMMAND ALIGN,GOALINE,HALIGN,1,2,3,4,5
         COMMAND CATLG,CATLG,HCATLG,3,4,5
         COMMAND CENTER,GOCENTER,HCENTR,2,3,4,5,6
         COMMAND CHANGE,GOCHNG,HCHANG,2,3,4,5,6
         COMMAND CLEAR,GOCLEAR,HCLEAR,2,3,4,5
         COMMAND CLR,GOCLEAR,HCLEAR,2,3
         COMMAND COLLECT,GOCOLL,HCOLCT,1,2,3,4,5,6,7
         COMMAND COMMENT,GOCOMMNT,HCOMNT,4,5,6,7
         COMMAND COMPARE,COMPAR,HCOMP,3,4,5,6,7
         COMMAND COPY,GOCOPY,HCOPY,3,4
         COMMAND DECIDE,DECIDE,HDECD,3,4,5,6
         COMMAND DELETE,GODEL,HDEL,1,2,3,4,5,6
         COMMAND DISPLAY,GOCOMMNT,HCOMNT,2,3,4,5,6,7
         COMMAND EDIT,MODGO,HEDIT,1,2,3,4
         COMMAND EXECUTE,GOEXEC,HEXCT,2,3,4,5,6,7
         COMMAND HELP,HELP,HHELP,1,2,3,4
         COMMAND IF,GOIF,HIF,2
         COMMAND IMMEDIAT,GOIMMED,NOHELP,2,3,4,5,6,7,8
         COMMAND INSERT,GOINS,HINSRT,1,2,3,4,5,6
         COMMAND JUSTIFY,GOALINE,HJUST,2,3,4,5,6,7
         AIF   ('&CCI' EQ '1').LBL11   DEL LI AS LIST ALIAS     JEP006
         COMMAND LIST,GOLSPRN,HLIST,1,2,3,4
         AGO   .LBL12                                           JEP006
.LBL11   DS    0C                                               JEP006
         COMMAND LIST,GOLSPRN,HLIST,1,3,4                       JEP006
.LBL12   DS    0C                                               JEP006
         COMMAND LOAD,GOLOAD,HLOAD,3,4
         AIF   ('&CCI' EQ '1').LBLX1   LOGOFF INVALID AT DCEC   CCI001
         COMMAND LOGOFF,GOLOGOFF,HLOGF,5,6
.LBLX1   DS    0C                                               CCI001
         COMMAND LOGOUT,GOLOGOFF,HLOGF,5,6
         COMMAND MODIFY,MODGO,HMODFY,1,2,3,4,5,6
         COMMAND MOVE,GOMOVE,HMOVE,3,4
         COMMAND NUMBER,GONUMB,HNUM,1,2,3,4,5,6
         COMMAND POINT,GOPOINT,HPOINT,1,2,3,4,5
         COMMAND POP,GOSTACK,HPOP,3
         COMMAND PRINT,GOLSPRN,NOHELP,2,3,4,5 PRINT COMMAND     CCI001
         COMMAND PUT,GOPUT,HPUT,2,3
         COMMAND READ,GORDCMD,HREAD,3,4
         COMMAND RECATLG,RECATLG,HRECAT,3,4,5,6,7
         COMMAND RENAME,GOREN,HRENM,3,4,5,6
         COMMAND REPLACE,GOREPL,HREP,1,2,3,4,5,6,7
         COMMAND RESTORE,GORESTOR,HRESTR,3,4,5,6,7
         AIF   ('&CCI' NE '1').LBL15                            CCI001
         COMMAND RUN,GOLSPRN,NOHELP,3     RUN COMMAND           CCI001
.LBL15   DS    0C                                               CCI001
         COMMAND SAVE,GOSAVE,HSAVE,1,2,3,4
         COMMAND SCRATCH,GOSCRT,HSCR,2,3,4,5,6,7
         COMMAND SEND,SENDMSG,HSEND,2,3,4
         COMMAND SET,GOSET,HSET,3
         COMMAND SHOW,GOSHOW,HSHOW,2,3,4
         COMMAND SIGNOFF,GOLOGOFF,HLOGF,6,7
         AIF   ('&CCI' NE '1').LBL16                            JEP015
         COMMAND  SO,GOLOGOFF,HLOGF,2     SHORT SIGNOFF CMD     JEP015
.LBL16   DS    0C                                               JEP015
         COMMAND STACK,GOSTACK,HSTACK,3,4,5
         COMMAND STAX,STAX,NOHELP,4
         COMMAND SUSPEND,GOSUSPND,HSUSP,2,3,4,5,6,7
         COMMAND TDUMP,GODUMP,NOHELP,1,2,3,4,5
         COMMAND TO,SENDMSG,HSEND,2
         COMMAND TSO,GOTSO,HTSO,2,3
         COMMAND UNCATLG,UNCATLG,HUNCAT,3,4,5,6,7
         COMMAND USE,GOUSE,HUSE,1,2,3
         COMMAND WHERE,GOWHERE,NOHELP,1,2,3,4,5
EOTABL   COMMAND X,GOEXEC,HEXCT,1
CMNDS#   EQU   (*-CMDTAB)/16  NUMBER OF ENTRIES
         AIF ('&CCI' NE '1').LBLX2                              JEP018
COMMIL   PCALL TSOCMDS                                          JEP018
         AGO   .LBLX3                                           JEP018
.LBLX2   DS      0H                                             JEP018
         SPACE
COMMIL   XCALL ILLCMD
         SPACE
.LBLX3   DS      0H                                             JEP018
MNPRTOK  SCKW  ,LNENOPRN,PUSH
         SCKW  @,SETVAR,(S,P)
         SCKW  ,BINSRCH
         SPACE
IMMEDLNO SCKW  ,LNENOPRN,PUSH
         SCKW  ,INVALID
         TITLE 'IMMEDIATE ROUTINES'
         DS    0H
GOIMMED  LA    R6,TRYEXN2
         SCAN  IMMEDLNO
         B     CVABSENT
         SPACE
TRYEXN   CH    R15,=H'16'               IS IT END SPECIFIED?
         BE    TRYEXN2                  YES IT'S OK.
         TM    CPGFLG2,CPFEXEC          IS EXEC IN EFFECT?
         B     TRYEXN2                WAS BO   ALLOW IMMED
         TSEG  'IN NON-EXEC MODE USE INSERT/DELETE/REPLACE COMMAND'
         B     CVQTYPE
         SPACE
TRYEXN2  ST    R0,CPWK1                 LINE NO.
         SCTELL (1),(0)                 SAVE POINTERS TO LINE TEXT
         LTR   R3,R0                    0=DELETE, POS=INSERT OR REPLACE
         BM    GODODL                   DELETE
         LA    R13,SZR(R13)             RESERVE SPACE
         EX    R3,MOVITOUT              MOVE OUT OF RTB
         LR    R1,R8                    RESET POINTER
         L     R15,CPWK1                LINE NO. TO R15
         ST    R15,CPCURRL         UPDATE CURRENT LINE POINTER
         CVCALL LENCHK                   LENGTH OK?
         CVCALL PRESS                    PRESS
         CVCALL STOWIT                   STOW
         B     CVGETCOM                 TRY FOR NEXT COMMAND
         SPACE
MOVITOUT MVC   0(0,R8),0(R1)
         SPACE
GODODL   CLI   CPCMNM,C'I'              IS IT IMMEDIATE COMMAND
         BE    CVABSENT                 NOT ALLOWED...
         LM    R0,R1,CPTELL             POINTERS TO RESET
         SCINIT (1),(0)                 REINIT SCAN
         MVC   CPCMNM(3),=CL3'DEL'      TO SET CPCMNM
         XCALL GODEL                    TO DELETE RTN
         TITLE 'CATLG, UNCATLG, RECATLG FIRST LEVEL'
CATLG    OI    CPLFLG3,CPFDSCLG    INDICATE CATALOG
         PCALL GOCTLG
         SPACE
RECATLG  OI    CPLFLG3,CPFDSCLG    INDICATE RECATLG
UNCATLG  OI    CPLFLG3,CPFUNCLG    INDICATE UNCATLG
         PCALL GOCTLG
         TITLE 'PCALLS TO VARIOUS PAGED ROUTINES'
GOCLEAR  PCALL CLEAR               DO CLEAR COMMAND
         SPACE
GOTSO    PCALL GOTSO
         SPACE
STAX     PCALL STAX
         SPACE
SENDMSG  PCALL SEND
         SPACE
GODUMP   DS    0H
         GENTER ,
         TM    JCBAFL,JCBSYSPR     SYS PRIV?
         BO    CALLTDU
         XCALL ILLCMD
CALLTDU  PCALL GODUMP
         SPACE
DECIDE   PCALL DECIDE              DECIDE CODE IS NOW PAGED
         SPACE
COMPAR   PCALL COMPARE             COMPARE CODE IS NOW PAGED
         SPACE
MODGO    PCALL MODGO        MODIFY/EDIT COMMANDS ARE PAGED
         SPACE
GOWHERE  PCALL WHERE
         SPACE
GOSTACK  PCALL STACK
         SPACE
GOSUSPND PCALL SUSPND
         SPACE
GOLOGOFF PCALL LGOFF
         SPACE
GOCOLL   PCALL GOCOLL       COLLECT COMMAND CODE IS PAGED
         SPACE
GOINS    PCALL GOINS        INSERT COMMAND CODE IS PAGED
         SPACE
GOREPL   PCALL GOREPL       REPLACE COMMAND CODE IS PAGED
         SPACE
GONUMB   PCALL GONUMB       NUMBER COMMAND CODE IS PAGED
         SPACE
GOSHOW   PCALL GOSHO        SHOW COMMAND CODE IS PAGED
         SPACE
GOPUT    PCALL GOPUT        PUT  COMMAND CODE IS PAGED
         SPACE
GOALINE  PCALL GOALINE      ALIGN/JUSTIFY CODE IS PAGED
         SPACE
GOCENTER PCALL GOCENTR      CENTER COMMAND CODE IS PAGED
         SPACE
HELP     GENTER ,
         L     R2,=A(CMDTAB)      ADDRESS OF COMMAND TABLE
         LA    R3,CMNDS#          NUMBER OF COMMANDS
         LA    R4,=A(EOTABL)      ADDRESS OF LAST COMMAND
         PCALL HELP
         TITLE 'CLEAR TEST -- CLEAR ACTIVE IF FLAG ON'
*  CLEAR ACTIVE FILE IF CPFCLEAR FLAG IS ON
         SPACE
CLRTST   XENTER 7,8,*              SAVE REGS
         TM    CPLFLG2,CPFCLEAR    WAS CLEAR SPECIFIED
         BZ    CLRTSTEX            NO, EXIT FROM ROUTINE
         CLC   CPAGCT(2),=D'0'     IS THERE ANY ACTIVE FILE
         BE    CLRTSTEX            NO, EXIT FROM ROUTINE
         BAL   R14,DOCLEAR         GO CLEAR ACTIVE
CLRTSTEX XEXIT 7,8                 RETURN
         TITLE 'CLEAR ROUTINE'
DOCLEAR  XENTER 2,8,*                   SAVE REGS
CLRA     MVC   CPHIPS(6),=D'0'          ZERO CPHIPS & CPLNCT
         LA    R5,CPDREC                FIRST DIRECTORY ENTRY
         PFREE 9                        OUT WITH ANY PAGE IN R9
         PFREE 11                       OUT WITH ANY PAGE IN R11
         LH    R6,CPAGCT                NO. PAGES
         LTR   R6,R6                    ANY?
         BZ    FNBLAST                  NO JUNKING NECESSARY
         OI    CPGFLG,CPFDIRCH         SET DIRECTORY CHANGED
GOBLAST  LH    R0,4(R5)                 PAGE NO. INTO R0
         PJUNK (0)                 FREE THIS PAGE
         LA    R5,6(R5)                 POINT AT NEXT PAGE
         BCT   R6,GOBLAST               JUNK NEXT PAGE (IF ANY)
NORLSE   STH   R6,CPAGCT                ZERO PAGE COUNT
FNBLAST  ST    R6,CPDREC                RESET FIRST DIRECTORY ENTRY
         MVI   CPCURRL,X'F0'       SET CURRENT LINE INVALID
         MVI   CPLSTCOL,FNEGBT          SET AS FIRST COLLECT
CLR2     XEXIT R2,R8                    SCRAM
         TITLE 'READ COMMAND'
* READ, READ VALUE, AND READ STRING COMMAND
* ALL OPTIONS ARE SCANNED FIRST, THEN THE INPUT LINE IS
* OBTAINED FROM THE TYPEWRITER, ACTIVE FILE, OR EXEC FILE,
* AND FINALLY THE VALUE, STRING, OR COMMAND IS PROCESSED.
         SPACE
GORDCMD  GENTER RDWASIZE           ESTABLISH AND WORK AREA
         LR    R5,R8               POINT R5 TO WORK AREA
         USING READWA,R5
         XC    READWA(RDWASIZE),READWA CLEAR THE WORK AREA
         MVC   RDWAPRMT(7),=C'ENTER? '   DEFAULT PROMPT
         LA    R0,7                SET LENGTH
         STH   R0,RDWAPRLN             FOR PROMPT
         MVI   RDWACOL1,FNEGBT     SET NO COLUMNS GIVEN
         CVCALL SCNEXFR            SCAN TO SEE IF READ FROM EXEC
READSCNL LA    R6,RDLNENO          SET R6 FOR LINE NUMBER RETURN
READSCN  SCAN  READPRT             SCAN READ OPERANDS
READSCND TM    RDWAFL,RDWAFLNO     WAS LINE NUMBER GIVEN
         BO    READACT             BR YES
         TM    RDWAFL,RDWAFDEL     WAS DELETE GIVEN WITH NO LINE
         BO    READBAD1            BR YES TO ERROR
         TM    RDWACOL1,FNEGBT     WERE COLS GIVEN WITH NO LINE
         BNO   READBAD3            BR YES TO ERROR
         LH    R0,RDWAPRLN         GET LENGTH FOR PROMPT
         LA    R1,RDWAPRMT         POINT TO PROMPT
         TREADR (1),(0),QM=NO      PROMPT USER FOR INPUT
         BP    CVQTYPE             ABORT IF ATTENTION
         MVI   CPCTSAV,FNEGBT      SET COMMAND LOGGED
         B     READDO              NOW GO FINISH COMMAND
         SPACE
READACT  LH    R0,CPAGCT           GET PAGE COUNT OF ACTIVE FILE
         L     R14,CVLOCATE        POINT TO LOCATE FOR ACTIVE
         TM    CPLFLG5,CPFSELOC    IS IT SELECT FROM ACTIVE
         BZ    READNTST            YES, ASSUMPTION WAS CORRECT
         LH    R0,CPEXCNT          GET EXEC FILE PAGE COUNT
         L     R14,=A(LOCATEEX)    USE LOCATEEX FOR EXEC FILE
READNTST LTR   R0,R0               IS THE SELECTED FILE NULL
         BNZ   READLOC             NO, GO DO LOCATE
         CVCALL ITSNIL             REPORT NULL FILE
         SPACE
READLOC  LA    R1,RDWALINO         POINT TO LINE TO LOCATE
         BALR  R14,R14
         TM    CPDRPT,CPFMTCH      DOES LINE EXIST
         BNO   READBAD2            BRANCH TO ERROR IF NO
         LR    R4,R15              SAVE PTR TO LINE FOR DELETE
         LA    R1,CPCMSAV          POINT TO UNPRESS AREA
         CVCALL UNPRESS            UNPRESS THE LINE
         TM    RDWACOL1,FNEGBT     ANY COLUMN OPTIONS TO PROCESS
         BO    READACT0            BR NO
         AH    R1,RDWACOL1         POINT R1 TO NEW TEXT START
         LH    R2,RDWACOL2         GET LENGTH FROM 2ND COL
         LTR   R2,R2               WAS 2ND COL GIVEN
         BZ    READACTA            BR NO TO COMPUTE NEW LENGTH
         LR    R0,R2               SET LENGTH
         B     READACT0            DONE WITH COLS, GO ON
         SPACE
READACTA SH    R0,RDWACOL1         SET LENGTH TO REMAINING STRING
         BNM   READACT0            OK IF NOT NEGATIVE
         SR    R0,R0               MAKE LENGTH ZERO IF NEGATIVE
READACT0 ST    R0,CPCTSAV          SAVE COUNT FOR WRITECOM
         LR    R2,R0               SAVE LINE COUNT
         LR    R3,R1               SAVE LINE POINTER
         PFLIP 9,11                SET PAGE INTO R9 (PROC TO R11)
         TM    RDWAFL,RDWAFDEL     DELETE THE LINE
         BE    READACT1            BRANCH NO
         LR    R15,R4              POINT TO LINE TO DELETE
         CVCALL  DODELE            GO DO DELETE
READACT1 PMOVE R9,R11    FREE R9 PAGE AND MOVE PROC PAGE TO R9
         LR    R0,R2               RESET R0 COUNT
         LR    R1,R3               RESET R1 POINTER
* NOW DO STRING, VALUE, OR COMMAND
READDO   TM    RDWAFL,RDWAFPRO+RDWAFSTR   IS IT STRING OR VALUE
         BZ    RDCMD               NO, GO DO COMMAND
         BNO   RDVAL               BR IF READ VALUE
         XCALL READSTR             GO DO READ STRING
         SPACE
RDVAL    XCALL READVAR             GO DO READ VALUE
         SPACE
RDCMD    XCALL EXLOOPCK            GO CHECK FOR LOOP IN EXEC
         LR    R2,R0               GET COUNT FOR MVC (EXTRA OK)
         EX    R2,READMVC          MOVE COMMAND TO CPCMSAV
         LA    R1,CPCMSAV          POINT R1 TO CMOMMAND
         MVC   CPLCNO,RDWALINO     SET LINE NUMBER FOR WRITECOM
         TM    CPGFLG2,CPFNOLOG    EXEC NOLOG MODE
         BO    RDCMD3              BRANCH YES
         XCALL WRITECOM            GO WRITE OUT COMMAND
RDCMD3   LR    R13,R8              RESET R13 FOR NEW COMMAND
         XCALL EDTCOM              GO EXECUTE THIS COMMAND
         SPACE
READMVC  MVC   CPCMSAV(0),0(R1)
         SPACE
NRDELETE NI    RDWAFL,255-RDWAFDEL RESET READ DELETE FLAG
         BR    R14                 SCAN ON
         SPACE
RDELETE  OI    RDWAFL,RDWAFDEL     SET READ DELETE OPTION
         TM    CPLFLG5,CPFSELOC    IS IT SELECT FROM EXEC
         BNMR  R14                 NO,  DELETE IS OK
         B     CVNVALID            YES, IT IS INVALID
         SPACE
RDLNENO  ST    R0,RDWALINO         SAVE READ LINE NUMBER
         OI    RDWAFL,RDWAFLNO     SET LINE NUMBER OPTION FLAG
         B     READSCNL            GO SCAN ON
         SPACE
* SCAN FOR READ STRING IS SAME AS VALUE FOR FIRST PART
RDSCNSTR OI    RDWAFL,RDWAFSTR     SET STRING GIVEN AND ENTER VAL
         SPACE
* SCAN FOR READ VALUE AND REST OF READ STRING
RDSCNVAL TM    RDWAFL,RDWAFPRO     IS THIS SECOND VALUE OR STRING
         BO    CVNVALID            YES, IT IS INVALID
         OI    RDWAFL,RDWAFPRO     SET VALUE OR STRING GIVEN
         LA    R4,RDWAVAR          POINT TO VARIABLE SAVE AREA
         LA    R3,1                SET COUNT TO 1
         MVC   CPWK1(2),0(R1)      SAVE NAME IN CASE VARIABLE
         L     R14,=A(LOOKUP)      CHECK THAT PRE-PROCESSOR
         LTR   R14,R14                   IS INCLUDED
         BZ    CVNVALID            BR NO TO ERROR
         BALR  R14,R14             GO DO LOOKUP
         BZ    CVNVALID            INVALID IF FIRST NOT A VAR
RDSCNVL1 MVC   0(2,R4),CPWK1       PUT VARIABLE NAME IN LIST
         STH   R3,RDWAVARN         SAVE VARIABLE COUNT
         TM    RDWAFL,RDWAFSTR     IS IT STRING OPTION
         BO    RDSCNST1            YES, GO FINISH UP STRING
         SCANSAVE ,                SAVE SCAN PTRS FOR RESTORE
         SCAN  ,                   GET NEXT TOKEN
         SPACE
         BNP   READSCND            END SCAN IF NO MORE
         MVC   CPWK1(2),0(R1)      SAVE NAME IN CASE VARIABLE
         XCALL LOOKUP              IS THIS A VARIABLE
         BZ    RDSCNRES            NO, GO RESTORE SCAN
         LA    R4,4(,R4)           STEP TO NEXT STORE AREA
         LA    R3,1(,R3)           ADD 1 TO COUNT
         CH    R3,=AL2(RDVARMAX)   IS THERE ROOM FOR THIS VAR
         BNH   RDSCNVL1            YES, GO STORE AND LOOP
         TSEG  'TOO MANY VARIABLES IN VALUE LIST'
         B     CVQTYPE
         SPACE
RDSCNST1 ST    R1,0(,R4)           SAVE STRING VARIABLE ADDRESS
         LTR   R15,R15             TYPE MUST BE ZERO FOR STRING
         BZ    READSCN             YES, GO SCAN ON
         TSEG  'READ STRING MUST HAVE STRING VARIABLE'
         B     CVQTYPE
         SPACE
RDSCNRES SCANRSTR ,                RESTORE SCAN POINTERS
         B     READSCN             CONTINUE SCANNING
         SPACE
RDSCNUSI SCAN  READPRT1            USING GIVEN -- GO GET LINENO
         B     CVABSENT            NONE - REPORT MISSING
         SPACE
RDSCNCOL BCTR  R15,0               SET BETTER COLUMN NO.
         STH   R15,RDWACOL1        SAVE COLUMN NO.
         SCANSAVE ,                SAVE SCAN PTRS FOR RESTORE
         SCAN  READPRT2            SCAN FOR 2ND COL NO.
         B     READSCND            NONE, GO FINISH COMMAND
         SPACE
RDSCNCL2 SH    R15,RDWACOL1        GET LENGTH (COL2-(COL1+1))
         BNP   CVNVALID            ERROR IF NOT POSITIVE
         STH   R15,RDWACOL2        SAVE LENGTH
         B     READSCN             CONTINUE SCANNING
         SPACE
* PROCESS PROMPT OPTION
RDSCNPRM CLI   0(R1),C''''         IS PROMPT IN SINGLE QUOTES
         BE    RDSCNPR1            BR YES
         CLI   0(R1),C'"'          IS PROMPT IN DOUBLE QUOTES
         BNE   CVNVALID            NO, IT IS INVALID
RDSCNPR1 CVCALL DQSCAN             STRIP QUOTES
         CH    R0,=AL2(L'RDWAPRMT) IS PROMPT TOO LONG
         BNH   *+8                 BR NO
         LA    R0,L'RDWAPRMT       SET MAX LENGTH
         STH   R0,RDWAPRLN         SAVE LENGTH OF PROMPT
         LTR   R2,R0               PUT LENGTH IN R2 AND TEST
         BZ    READSCN             NO MVC IF NULL
         BCTR  R2,0                SET FOR EXECUTE
         EX    R2,RDMVCPRM         MOVE PROMPT
         B     READSCN             CONTINUE SCAN
         SPACE
RDMVCPRM MVC   RDWAPRMT(0),0(R1)   MVC FOR PROMPT MOVE
         SPACE
READBAD1 SYSQS 1,0,'DELETE'        SET PART OF ERROR MESSAGE
         B     READBAD4            GO PUT OUT MESSAGE
         SPACE
READBAD2 L     R0,RDWALINO         GET LINE NUMBER
         CVCALL CVEXNO             CONVERT TO EXTERNAL
         TSEG  (1),(0),B           PUT OUT LINE NUMBER
         TSEG  'NOT IN FILE'
         B     CVQTYPE             GO ABORT
         SPACE
READBAD3 SYSQS 1,0,'COLUMN'        SET PART OF ERROR MESSAGE
READBAD4 TSEG  (1),(0),B       PUT OUT FIRST PART OF MESSAGE
         TSEG  'OPTION GIVEN WITHOUT A LINE NUMBER'
         B     CVQTYPE
         TITLE 'UTILITY ROUTINES'
* ILLEGAL ITEM ROUTINE
         SPACE
UNLEGAL  GENTER ,                       ENTRY & BASE REG
         TSEG  ' ILLEGAL'
         B     QTYPED
         SPACE 3
* MISSING ITEM ROUTINES
         SPACE
ABSCENT  GENTER ,                       ENTRY & BASE REG
         TSEG  'OPERAND'
         SPACE
AMMISS   GENTER ,                       ENTRY & BASE REG
         TSEG  ' MISSING'
         SPACE
QTYPED   GENTER ,
         TM    CPGFLG,CPFRETRY         IS RETRY GOING ON?
         BZ    QTYPED1                 NO
         NI    CPGFLG,255-CPFRETRY
QTYPED1  NI    JCBAFL,X'FF'-JCBAFIA     TURN ATTN FLAG OFF
         TCLEARQ INPUT             FLUSH INPUT BUFFERS
         NI    RTBMFL,X'FF'-RTBNOCR-RTBNOTR RESET NOCR, NOTR
         TM    CPGFLG2,CPFEXEC         IS EXEC IN EFFECT
         BE    CVGETCOM            NO, GET NEXT COMMAND
QSYSRDY  CLC   RTBWC(2),=D'0'     ANYTHING TO WRITE?
         BE    QSYSGO                  NO
         TWRITE ,
         SPACE
QSYSGO   GENTER ,
         TM    CPGFLG2,CPFEXEC         IS EXEC IN EFFECT
         BZ    CVGETCOM            NO, GO GET NEXT CMD
         XCALL EXECABRT                GO DO EXEC BREAK
         EJECT
*  FOR READ COMMAND
         SPACE
READPRT  SCKW  NODELETE,NRDELETE,A
         SCKW  DELETE,RDELETE,A
         SCKW  STRING,RDSCNSTR,(A,P)
         SCKW  PROMPT,RDSCNPRM,(A,P)
         SCKW  USING,RDSCNUSI,A
         SCKW  COLUMNS,RDSCNCOL,(A,P,PI),133
         SCKW  COLS,RDSCNCOL,(P,PI),133
         SCKW  VALUE,RDSCNVAL,(A,P)
READPRT1 SCKW  ,LNENOPRT,PUSH
         SCKW  EXECUTE,,A
         SCKW  ,INVALID
         SPACE
READPRT2 SCKW  /,RDSCNCL2,(P,PI),133
         SCKW  ,RDSCNRES
         EJECT
ATTNRTN  DS    0H
         USING ATTNRTN,R15
         L     R1,8(,R1)
         USING CPAREA,R1
         DROP  R12
         OI    JCBAFL,JCBAFIA      IDLE ATTN
         LH    R2,JCBPAGES
         LA    R2,1(,R2)
         CH    R2,=H'10'
         STH   R2,JCBPAGES
         BNHR  R14
         ABEND 100,DUMP
         DROP  R1
         USING CPAREA,R12
         EJECT
* SYNAD ROUTINE DOES ALMOST NOTHING
         USING PFCB,R3
PSYNAD   OI    JCBBFL,JCBBFPER     INDICATE PAGE ERROR
         MVC   PFCBNP(4),PFCBCP    AND INDICATE END OF PAGES
         BR    R14                 AND RETURN TO PGETS
         DROP  R3
         TITLE 'LITERALS'
         LTORG
         TITLE 'CONSTANTS, ETC.'
         COPY  WYLCONST
CHGFINCD EQU   32                       CHANGES FINISHED CODE
         EJECT
         COMMON
         SPACE
         EJECT
         COPY  READWA
         EJECT
PFCB     DSECT
         COPY   PFCBTSO
         SPACE
         IHASDWA ,                      FOR DIAG WORK AREA (ESTAE)
         END
./ ADD NAME=WTR      0100-80189-80189-0749-00789-00789-00000-$SYS13  00
         COPY PMAC IS THIS CORRECT
WTR      TITLE 'WYLTSO INTERFACE WITH TCAM'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
         GBLC  &USPS                                       USPS01
&USPS    SETC  '1'                                         USPS01
         TRACER OFF
WTR      CSECT
         WIDENT 001
         SPACE
         XTRNS ,
         SPACE 3
*  REGISTER USAGE
         SPACE
SR       EQU   2
TR       EQU   3
RR       EQU   4
JCBR     EQU   5
         SPACE 3
         USING CPAREA,R12
         EJECT
         ENTRY TSEGXM,TSEGXW,TSEGXB,TSEGX
         SPACE 3
* ROUTINE TO DO TSEG AND TMARK
         SPACE
TSEGXM   ST    R14,0(13)
         BALR  R14,0
         USING *,R14
         BAL   R14,TSEGCOM         GO DO TSEG
         USING *,R14
         B     TWRITEX2            GO DO TWRITE
         SPACE 3
* ROUTINE TO DO TSEG AND TWRITE
         SPACE
TSEGXW   ST    R14,0(13)
         BALR  R14,0
         USING *,R14
         BAL   R14,TSEGCOM         GO DO TSEG
         USING *,R14
         B     TWRITEX2            GO DO TWRITE
         SPACE 3
* ROUTINE TO DO TSEG FOLLOWED BY A BLANK
         SPACE
TSEGXB   ST    R14,0(13)
         BALR  R14,0
         USING *,R14
         BAL   R14,TSEGCOM         GO DO TSEG
         USING *,R14
         SYSQS 1,0,' '             SET UP FOR TSEG OF BLANK
         BAL   R14,TSEGCOM2        GO DO TSEG OF BLANK
         USING *,R14
         B     TSEGEXIT
         SPACE 3
* ROUTINE TO DO NORMAL TSEG
         SPACE
TSEGX    ST    R14,0(13)
         BALR  R14,0
         USING *,R14
         BAL   R14,TSEGCOM         GO DO TSEG
         USING *,R14
TSEGEXIT XEXIT 2,8
         SPACE
         DROP  R14
         SPACE 3
* TSEG - ADD SEGMENT TO BUFFER
         SPACE
TSEGCOM  DS    0H
         XENTERI 2,8
TSEGCOM2 DS    0H
         XTRACE TSEG
         LH    SR,RTBWC                PICK UP WRITE COUNT
         LTR   TR,0                    DATA COUNT
         BNPR  R14                     BR IF NULL SEG
         AR    TR,SR                   COMPUTE NEW LENGTH
         CH    TR,=Y(RTBNTEXT)                COMPARE WITH BUF SIZE
         BNH   *+8
         LH    TR,=Y(RTBNTEXT)                SET MAX SIZE
         STH   TR,RTBWC                PLANT NEW WRITE COUNT
         SR    TR,SR                   COMPUTE ACTUAL DATA COUNT
         BNPR  R14                     BR IF NO DATA
         BCTR  TR,0
         LA    SR,RTBTEXT(SR)
         EX    TR,MOVE                 MOVE THE DATA
         BR    R14
         EJECT
* TWRITE OUTPUT A LINE
         SPACE
TMARKX   XENTER 2,8,*
         LH     1,RTBWC
         LTR    1,1
         BP     DOWRITE
         XEXIT  2,8
         SPACE 3
TWRITEX  XENTER 2,8,*
DOWRITE  EQU   *-2               EQUATE TO BALR
TWRITEX2 EQU   *-6               JUST BEFORE LA 13,...
         XTRACE TWRITE
         SR    R15,R15
         L     R3,RTBWAPTR       RTB WORK AREA POINTER
         LH    R2,RTBWC          WRITE COUNT
         LTR   R2,R2             IS IT 0?
         BZ    NOCHARS
         LA    R1,RTBTEXT-1(R2)  POINT TO LAST CHAR
BLNKLOOP CLI   0(R1),C' '
         BNE   NOBLNKS           FOUND A NONBLANK
         BCTR  R1,0              DECREMENT STRING POINTER
         BCT   R2,BLNKLOOP       DECREMENT COUNT
NOBLNKS  STH   R2,RTBWC          SAVE NEW COUNT
NOCHARS  TM    RTBMFL,RTBNOCR    CHECK MODE FLAG FOR NOCR
         BZ    NOTNOCR           NO ITS NOT NOCR
         TM    RTBUFL,RTBUPAD    PAD WANTED?
         BZ    NOPADS            NO SKIP PADDING
         CH    R2,CPLNGTH        IS LINE >= 'LENGTH'
         BNL   NOPADS            YES, SKIP PADDING
         LH    R5,CPLNGTH
         STH   R5,RTBWC          MAKE 'LENGTH' THE NEW SIZE
         SR    R5,R2             NUMBER OF BLANKS TO MOVE
         BCTR  R5,0
         LA    R2,RTBTEXT(R2)    MOVE BLANKS TO HERE
         LA    R1,BLANKS
         EX    R5,MOVE           GO MOVE BLANKS
NOPADS   SR    R0,R0             FOR DIVIDE INSTRUCTION
         LH    R1,RTBCURS(,R3)   CURSOR POSITION
         AH    R1,RTBWC          ADD NUMBER OF CHARS TO LIST
         LH    R2,RTBLSZ(,R3)    LINE SIZE
         DR    R0,R2             FIND REMAINDER
         STH   R0,RTBCURS(,R3)   NEW CURSOR POSITION
         LH    R0,RTBWC          LENGTH OF LINE TO PRINT
         BAL   R6,WRITE          GO WRITE
         SR    R0,R0
         STH   R0,RTBLINE(,R3)   CLEAR LINE COUNT
         B     TRX               AND RETURN
         SPACE 3
WRITE    LTR   R0,R0             ANYTHING TO PRINT?
         BZR   R6                IF NOT RETURN
         XC    CPEXCMCT,CPEXCMCT CLEAR EXEC COMMAND COUNT
         LA    R1,RTBTEXT        POINT TO TEXT TO PRINT
         AIF   ('&USPS' NE '1').LBL01                      USPS01
         BCTR  R0,0                                        USPS01
         CH    R0,=H'1'                                    ITEL
         BNE   WRTPUT0                                     ITEL
         MVI   0(R1),C' '                                  ITEL
         B     WRTPUT1                                     ITEL
WRTPUT0  EQU   *                                           ITEL
         BCTR  R0,0                                        USPS01
WRTPUT1  EQU   *                                           ITEL
         TPUT  (1),(0),EDIT,WAIT                           USPS01
         B     WRLTR                                       USPS01
WRTPUT   O     R1,=XL4'02000000'                           USPS01
         TPUT  (1),(0),R                                   USPS01
WRLTR    LTR   R15,R15                                     USPS01
         AGO   .LBL02                                      USPS01
.LBL01   DS    0H                                          USPS01
         O     R1,=XL4'02000000' TPUT OPTIONS
         TPUT  (1),(0),R
         LTR   R15,R15
.LBL02   DS    0H                                          USPS01
         BZR   R6                NORMAL RETURN
WRATTN   OI    JCBAFL,JCBAFIA    IDLE ATTN ON WRITE
         SR    R0,R0
         STH   R0,RTBCURS(,R3)   CLEAR BALL POSITION
         STH   R0,RTBLINE(,R3)   CLEAR LINE COUNT
         B     TRX
         SPACE 3
PAUSE    LA    R1,=C'.'          PRINT A DOT
         LA    R0,1              LENGTH OF A DOT
         O     R1,=XL4'02000000' TPUT OPTIONS
         TPUT  (1),(0),R         GO DO IT
         LTR   R15,R15
         BNZ   WRATTN
PAUSERD  LA    R1,RTBPAUS(,R3)   POINT TO A WORK AREA
         LA    R0,8              EIGHT IS ENUF
         O     R1,=XL4'80000000' TGET OPTIONS
         TGET  (1),(0),R         WAIT
         B     *+4(R15)          AND RETURN APPROPRIATELY
         BR    R6                GOOD RETURN
         DC    3H'0'
         B     WRATTN            ATTN HIT
         B     PAUSERD           GO REREAD TO FLUSH
         DC    2H'0'
         SVC   3
         SPACE 3
NOTNOCR  TM    RTBMFL,RTBWRAP    IS CR/LF TO BE INSERTED?
         BO    WRAP              YES GO DO IT...
CHKCRT   TM    RTBMFL,RTBCRT     IS PAGING IN EFFECT?
         BO    NWRAPCRT          YES GO TEST PAGING
PUTCR    LH    R2,RTBWC          SIZE OF LINE TO PRINT
         LA    R2,2(,R2)         2 MORE CHARS FOR CR/LF
         CH    R2,=Y(RTBNTEXT)   MORE THAN BUFFER SIZE?
         BNH   *+8               NO IT'S OK
         LH    R2,=Y(RTBNTEXT)   DEFAULT TO MAXIMUM
         LR    R0,R2             LENGTH OF TOTAL LINE
         LA    R2,RTBTEXT-2(R2)  POINT TO PLANT CR/LF
         MVC   0(2,R2),=X'0D25'  PUT IT IN
         BAL   R6,WRITE          GO WRITE LINE
         SR    R0,R0
         STH   R0,RTBCURS(,R3)   ZERO CURSOR POSITION
         B     TRX
         SPACE 3
NWRAPCRT LH    R1,RTBCURS(,R3)   GET CURSOR POSITION
         AH    R1,RTBWC          ADD SIZE OF LINE
         SR    R0,R0
         LH    R2,RTBLSZ(,R3)    LINE SIZE
         LTR   R1,R1
         BZ    *+8               SKIP NEXT TWO INSTR
         BCTR  R1,0
         DR    R0,R2             FIND NEW LINE POSITION
         LA    R1,1(,R1)         ADD ONE
         AH    R1,RTBLINE(,R3)   ADD ALREADY PRINTED COUNT
         STH   R1,RTBLINE(,R3)   SAVE IT
         CH    R1,RTBPSZ(,R3)    NEED PAGING?
         BNH   PUTCR             NO GO PRINT IT NORMALLY
         BAL   R6,PAUSE          GO PAUSE
         LH    R1,RTBWC          SIZE OF LINE
         SR    R0,R0
         LH    R2,RTBLSZ(,R3)    MAX LINE SIZE
         BCTR  R1,0
         DR    R0,R2             FIND NES LINE POSITION
         LA    R1,1(,R1)
         STH   R1,RTBLINE(,R3)   SAVE NEW LINE COUNT
         B     PUTCR             AND GO LIST NORMALLY
         SPACE 3
WRAP     LH    R1,RTBCURS(,R3)   GET CURSOR POSITION
         AH    R1,RTBWC          ADD SIZE OF LINE TO PRINT
         CH    R1,RTBLSZ(,R3)    MORE THAN LINE SIZE?
         BNH   CHKCRT            GO WRITE IGNORING WRAP
         LH    R2,RTBCURS(,R3)   GET CURSOR POSITION
         LTR   R2,R2             WHERE?
         BZ    ZCURS             NO SPECIAL CASE NEEDED
         SR    R0,R0
         STH   R0,RTBCURS(,R3)   ZERO OUT CURSOR POSITION
         LH    R0,RTBLSZ(,R3)    GET LINE SIZE
         SR    R0,R2             NUMBER OF CHARS TO PRINT NOW
ADDCR    LR    R4,R0
         LA    R4,RTBTEXT(R4)    POINT TO PLANT CR/LF
         MVC   RTBSAVE(2,R3),0(R4) SAVE THE TWO CHARS IN TEXT
         MVC   0(2,R4),=X'0D25'  PLANT THE CR/LF
         LH    R1,RTBWC          GET LINE SIZE
         SR    R1,R0             GET REMAINING LENGTH
         STH   R1,RTBWC
         AH    R0,=H'2'          ADD 2 FOR CR/LF
         BAL   R6,WRITE
         MVC   RTBTEXT(2),RTBSAVE(R3) MOVE BACK THE TEXT SAVED
         MVC   RTBTEXT+2(RTBNTEXT-2),2(R4) AND THE REMAINING
ZCURS    LH    R1,RTBWC
         LTR   R1,R1             ANY MORE LEFT?
         BZ    TRX
         CH    R1,RTBLSZ(,R3)    MORE THAN LINESIZE?
         BNH   CHKCRT            GO PRINT REST AS IF NOWRAP
         TM    RTBMFL,RTBCRT     PAGING IN EFFECT?
         BZ    NOCR              NO IGNORE PAGING
         LH    R4,RTBLINE(,R3)   GET LINE COUNT
         LA    R4,1(,R4)         ADD ONE MORE LINE
         STH   R4,RTBLINE(,R3)
         CH    R4,RTBPSZ(,R3)    MORE THAN PAGESIZE?
         BNH   NOCR
         BAL   R6,PAUSE
         SR    R0,R0
         STH   R0,RTBLINE(,R3)   ZERO OUT LINE COUNT
NOCR     LH    R0,RTBLSZ(,R3)    MAXIMUM TO PRINT
         B     ADDCR
         EJECT
* OPWRITE - SEND MESSAGE TO OPERATOR
         SPACE
OPWRITE  XENTER 2,8,*
         XTRACE OPWRITE
         SR    SR,SR
         STH   SR,RTBPC
         STH   SR,RTBRC
         BAL   R14,TREADX
         XEXIT 2,8
         EJECT
* TREAD - PROMPT AND READ A LINE
         SPACE
TREADX   XENTER 2,8,*
         SR    R3,R3               FLAG REGISTER
         CH    R3,CVPRMLIM         RECOVERY WANTED?
         BE    NORECVRY            IF 0 NO RECOVERY NEEDED
         LA    R4,1                TO BE USED AS A FLAG
         TM    CPGFLG,CPFDIRCH     IS DIRCTORY CHANGED?
         BO    RECOVERY            IF SO FORCE RECOVERY
         LH    R4,CVPROMPT         HOW MANY PROMPTS HAVE GONE BY?
         CH    R4,CVPRMLIM         MORE THAN UPDATE LIMIT?
         BL    NORECVRY            IF LESS, NO RECOVERY
         SR    R4,R4               TO BE USED AS A FLAG
RECOVERY L     R3,CVFPFCB          OUR PFCB ADDRESS
         L     R2,CVFPAGE          FIRST PCB ADDRESS
         USING PFCB,R3
         USING PCB,R2
PCBLOOP  TM    PCBFL,PCBFMARK      WAS PAGE MARKED?
         BZ    NEXTPCB             IF NOT SKIP IT
         LH    R1,PCBPN            GET PAGE NUMBER
         LA    R4,1(,R4)           SAY A PAGE WAS WRITTEN
         MVI   PCBRWCCW,PIOWRITE   INDICATE WE WILL WRITE
         CVCALL PIO                GO DO I/O
         NI    PCBFL,255-PCBFMARK  TURN OFF DIRTY MARK
NEXTPCB  LA    R2,PCBSIZE(,R2)     POINT TO NEXT PCB
         C     R2,CVLPAGE          PAST THE LAST ONE?
         BL    PCBLOOP             IF NOT KEEP LOOPING
         LTR   R4,R4               ANYTHING MORE TO BE DONE?
         BZ    NORECVRX            NO, GET OUT
         OI    JCBBFL,JCBPIOW      INDICATE EXCP WILL COME
         LR    R5,R15
         L     R4,JCBWAPTR
         MVC   0(8,R4),=CL8'RECOVER'
         MVC   8(4,R4),PFCBCP      CURRENT PAGES USED
         MVC   12(4,R4),CPRSCNVL   RESCAN ESC SKIP CHARS
         MVC   16(4,R4),CPEXLNET   SAVE EXEC LINE POINTER
         MVC   20(12,R4),CVEXTRAP  EXEC TRAP AND UPDATE CNT
         LA    R4,32(,R4)          MORE TO WRITE
         MVC   0(RTBSIZE-RTBNTEXT,R4),RTBSTART RTB INFO
         LA    R4,RTBSIZE-RTBNTEXT(,R4)
         MVC   0(CPRCVSZ1,R4),CPGLDL           CP INFO
         LA    R4,CPRCVSZ1(,R4)
         MVC   0(CPRCVSZ2,R4),CPDRPT           MORE CP INFO
         LA    R4,CPRCVSZ2(,R4)
         LR    R2,R4                           FOR MVCL
         LA    R3,CPRCVSZ3                     LENGTH
         LA    R14,CPDREC                      FROM
         LR    R15,R3                          SAME LENGTH
         MVCL  R2,R14                          MOVE IT
         LA    R4,CPRCVSZ3(,R4)
         LR    R2,R4                           FOR MVCL
         LA    R3,ROUTBLEN                     LENGTH
         LA    R14,ROUTBLE                     FROM
         LR    R15,R3                          SAME LENGTH
         MVCL  R2,R14                          MOVE IT
         LA    R4,ROUTBLEN(,R4)
         L     R15,RTBWAPTR
         MVC   0(256,R4),0(R15)                 TERMINAL INFO
*        DO EXCP
         L     R3,CVPIOB
         USING PIOB,R3
         L     R4,JCBWAPTR
         STCM  R4,7,PCCWWRT1+1          SAVE IT
         MVI   PSEEKREC,1        SET RECORD 1
         MVI   PCCWWRT1+4,X'00'  UNCHAIN
         XC    PECB,PECB
         EXCP  PIOBSTRT
        LA    R14,PECB
        WAIT  ECB=(R14)           WAIT FOR I/O TO COMPLETE
         L     R3,CVFPFCB          OUR PFCB ADDRESS
         USING PFCB,R3
         L     R14,JCBWAPTR           GET BUFFER
         L     R2,PFCBPTST            BEGINNING OF PAGE TABLE
         LA    R3,&PAGE0              MAX NUMBER OF PAGES
         LR    R15,R3                 SAME LENGTH
         MVCL  R14,R2                 MOVE IT
*        DO EXCP
         L     R3,CVPIOB
         USING PIOB,R3
         L     R4,JCBWAPTR
         STCM  R4,7,PCCWWRT1+1          SAVE IT
         MVI   PSEEKREC,2        SET RECORD 2
         XC    PECB,PECB
         EXCP  PIOBSTRT
        LA    R14,PECB
        WAIT  ECB=(R14)           WAIT FOR I/O TO COMPLETE
         LA    R2,CPAREA+CPSIZE     2ND CP PAGE
         STCM  R2,7,PCCWWRT1+1          SAVE IT
         L     R3,CVPIOB
         USING PIOB,R3
         MVI   PSEEKREC,3        SET RECORD 3
         XC    PECB,PECB
         EXCP  PIOBSTRT
        LA    R14,PECB
        WAIT  ECB=(R14)           WAIT FOR I/O TO COMPLETE
         L     R2,CVCPADDR          ADDR OF VCP
         STCM  R2,7,PCCWWRT1+1          SAVE IT
         L     R3,CVPIOB
         USING PIOB,R3
         MVI   PSEEKREC,4        SET RECORD 4
         XC    PECB,PECB
         EXCP  PIOBSTRT
         LA    R14,PECB
         WAIT  ECB=(R14)           WAIT FOR I/O TO COMPLETE
         MVI   PSEEKREC,1        SET RECORD 1
         MVI   PCCWWRT1+4,X'40'  SET CHAINED
         XC    PCCWWRT1+1(3),PCCWWRT1+1
         DROP  R3
         DROP  R2
         LR    R15,R5          RESTORE R15
NORECVRX LM    R2,R6,4(R8)          RESTORE INPUT REGISTERSDEL
NORECVRY SR    R3,R3
         STH   R3,CPEXCMCT         ZERO EXEC COUNT
         L     R4,RTBWAPTR         GET RTB WORK AREA POINTER
         STH   R3,RTBLINE(,R4)     CLEAR LINES PRINTED
         LTR   RR,15               TEST '? ' INSERT
         BP    DNTADIT             NO '? '
         LPR   R4,R15              SET IT TO POSITIVE
         C     R4,=X'005A5B7C'     IS IT MOD OR EDIT?
         BNE   *+6
         LR    R3,R4               FLAG NO REPROMPT
         TSEG  '? '                COMPLETE PROMPT
DNTADIT  LH    R0,RTBWC            COMPUTE PROMPT SIZE
         LTR   R0,R0               ANY PROMPT INVOLVED?
         BZ    RD                  NO .. GO TO RD
         L     R4,RTBWAPTR
         LA    R1,RTBTEXT
         CH    R0,=Y(RTBPMAX)    MORE THAN THAT?
         BNH   *+10
         SH    R0,=Y(RTBPMAX)
         AR    R1,R0               POINT TO LAST RTBPMAX CHARS
         MVC   RTBPRMPT(RTBPMAX,R4),0(R1) MOVE THE PROMPT
TPUTIT   LH    R5,RTBWC            GET WRITE COUNT
         TM    RTBMFL,RTBWRAP      WRAP FORCE WANTED?
         BZ    RNOWRAP             NO, REGULAR
         LH    R1,RTBCURS(,R4)     GET BALL POSITION
         AR    R1,R5               ADD LENGTH TO BE WRITTEN
         CH    R1,RTBLSZ(,R4)      MORE THAN LS?
         BL    RNOWRAP             NO GO DO WITHOUT WRAP
         LH    R2,RTBCURS(,R4)     GET BALL POSITION
         LTR   R2,R2               WAS BALL MOVED?
         BZ    RZCURS              NO, NO SPECIAL CASE THEN
         SR    R0,R0
         STH   R0,RTBCURS(,R4)     CLEAR BALL POSITION
         LH    R0,RTBLSZ(,R4)      GET LS
         SR    R0,R2               GET SPECIAL CASE LENGTH
RADDCR   LR    R3,R0               LENGTH TO PRINT THIS TIME
         LA    R3,RTBTEXT(R3)      POINT TO END OF IT
         MVC   RTBSAVE(2,R4),0(R3) SAVE 2 CHARS
         MVC   0(2,R3),=X'0D25'    PUT CR/LF
         SR    R5,R0               GET REMAINING COUNT
         AH    R0,=H'2'            ADD 2 MORE FOR CR/LF
         BAL   R6,RWRITE           GO WRITE PORTION
         MVC   RTBTEXT(2),RTBSAVE(R4) MOVE BACK THE 2 CHARS
         MVC   RTBTEXT+2(RTBNTEXT-2),2(R3) AND SHIFT OTHERS
RZCURS   LTR   R1,R5               ANYTHING MORE TO WRITE?
         BZ    RD                  NO, GET OUT
         CH    R1,RTBLSZ(,R4)      MORE THAN LS?
         BL    RNOWRAP             NO, ACT JUST LIKE NOWRAP
         LH    R0,RTBLSZ(,R4)      PROMPT SOME MORE
         B     RADDCR
         SPACE
RNOWRAP  LH    R1,RTBCURS(,R4)     GET CURSOR POSITION
         AR    R1,R5               ADD WRITE COUNT
         SR    R0,R0
         LH    R2,RTBLSZ(,R4)
         DR    R0,R2               FIND NEW BALL POSIT = REM.
         STH   R0,RTBCURS(,R4)
         LR    R0,R5
         BAL   R6,RWRITE
RD       LA    R0,SZR              MAX LINE SIZE
         LA    R1,RTBTEXT
         CLI   LFLG1,CPF3277 IS THIS A 3277?                  ITEL
         BE    RD1           YES                              ITEL
         O     R1,=XL4'80000000'    JUST TGET FOR NON 3277    ITEL
         TGET  (1),(0),R                                      ITEL
         B     *+4(R15)                                       ITEL
         B     SETREGS       TGET SUCCESSFUL                  ITEL
         DC    2H'0'         CANNOT HAVE NOWAIT               ITEL
         B     RDATTN        ATTN ON READ                     ITEL
         B     FLUSH         TOO MANY CHARACTERS              ITEL
         DC    2H'0'         CANNOT HAVE INVALID PARMS        ITEL
         SVC   3             USER HANGED UP DE FONE           ITEL
         SPACE                                                ITEL
RD1      O     R1,=XL4'81000000'    TGET ASIS
         TGET  (1),(0),R
         B     *+4(R15)
         B     TESTKEY       TGET SUCCESSFUL
         DC    2H'0'         CANNOT HAVE NOWAIT
         B     RDATTN        ATTN ON READ
         B     FLUSH         TOO MANY CHARACTERS
         DC    2H'0'         CANNOT HAVE INVALID PARMS
         SVC   3             USER HANGED UP DE FONE
         SPACE
TESTKEY  DS    0H
         LTR   R1,R1              ANYTHING RETURNED
         BZ    REPROMP            NO TGET AGAIN
         LR    R0,R1              SAVE ACROSS TRT
         EX    R1,TRANTEST        TRT
         BNZ   DELCUR             DELETE CURSOR CHAR
TESTENT  LR    R1,R0              RESTORE COUNT
         CLI   RTBTEXT,X'7D'      ENTER HIT
         BNE   TESTPFK            NO TEST PFK
SETENT   SH    R1,=H'6'           FOR ASIS INFO
         LTR   R1,R1              SEE IF NEG
         BNM   *+8
         LA    R1,0               SET ZERO IF MINUS
         EX    R1,MOVTEXT         MOV THE TEXT OVER
         LA    R2,RTBTEXT+1(R1)  MOVE BLANKS
         MVC   0(6,R2),BLANKS    FILL LINE WITH BLANKS
         B     SETREGS            CONTINUE
         SPACE
DELCUR   DS    0H
         LR    R3,R1           SET CUR POS
         LA    R14,RTBTEXT     POINT TO BEGININNG
         SR    R3,R14          DISPL INTO RTBTEXT
         LR    R4,R0           TEMP REST
         SR    R4,R3           DECR FOR MOVE
         SH    R4,=H'4'        FOR EXEC
         EX    R4,MOVTEXT2     MOV IT
         SH    R0,=H'3'
         B     TESTENT         CONTINUE
MOVTEXT  MVC   RTBTEXT(0),RTBTEXT+6         MOVE OVER ASIS INFO
MOVTEXT2 MVC   0(0,R1),3(R1)                MOVE OVER ASIS INFO
TRANTEST TRT   RTBTEXT+6(0),CURTAB           DELETE CURSOR CHARS
         SPACE
TESTPFK  DS    0H
         L     VCPR,CVCPADDR      POINT TO VCP PAGE
         USING DVCP,VCPR
         LA    R2,VCPPVAR         POINT TO PFK KEYS
         DROP  VCPR
         LA    R3,24              NUMBER OF PFK'S
         SLR   R4,R4              USED FOR IC
FINDPFK  CLC   RTBTEXT(1),0(R2)         MATCH
         BE    SEEPFK             YES SEE IF SET
         LA    R2,25(R2)          NEXT ENTRY
         BCT   R3,FINDPFK         CHECK NEXT
         B     SETENT                   UNKNOW SET AS ENTER
         SPACE
SEEPFK   CH    R1,=AL2(6)         ANY THING ELSE
         BH    SETPFK             OVER 6 MEANS SET PFK
SEEPFK2  SLR   R4,R4              FOR INSERT
         ICM   R4,1,1(R2)         GET LENGTH
         BZ    SETENT             ZERO LENGTH ¢6 SET AS ENTER
         LR    R1,R4              FOR LATER
         BCTR  R4,R0              FOR MOVE
         EX    R4,PFKMOVE         MOV TO RTBTEXT
         B     SETREGS            CONTINUE PROCESSING
         SPACE
REPROMP  DS    0H
         SLR   R0,R0              CLEAR REGISTER FOR ICM
         ICM   R0,3,RTBPC         AND PROMPT COUNT
         BZ    RD                 NO JUST READ
         BAL   R6,RWRITE          REWRITE
         B     RD                 GO RE-READ
         SPACE
SETPFK   DS   0H
         L     VCPR,CVCPADDR      POINT TO VCP PAGE
         USING DVCP,VCPR
         LA    R2,VCPPVAR         POINT TO PFK KEYS
         DROP  VCPR
         SH    R1,=AL2(6)    SUBTRACT GARBAGE
         CH    R1,=AL2(23)   MAX FOR ANY PFK
         BH    PFKMAX        HIGH IGNORE
PFKSLOOP CLC   RTBTEXT(1),0(R2)
         BE    MOVPFK        YES
         LA    R2,25(R2)     NEXT PFK
         B     PFKSLOOP      LOOP
MOVPFK   STC   R1,1(R2)        SAVE LENGTH
         BCTR  R1,R0         DECR FOR EXECUTE
         MVI   2(R2),C' '     CLEAR LAST ENTRY
         MVC   3(22,R2),2(R2)       ENTIRELY
         EX    R1,MOVEIT     MOVE IT
         B     SEEPFK2          EXECUTE COMMAND
MOVEIT   MVC   2(0,R2),RTBTEXT+6  CURRENT KEY
         SPACE
*
PFKMAX   TSEG 'PFK ENTRY TOO LONG'
         B    CVGETCOM
PFKMOVE  MVC   RTBTEXT(0),2(R2)        COMMAND
         SPACE
RWRITE   LA    R1,RTBTEXT
         AIF   ('&USPS' NE '1').LBL03                      USPS01
         TPUT  (1),(0),ASIS,WAIT                           USPS01
         B     RWLTR                                       USPS01
RWTPUT   O     R1,=XL4'02000000'                           USPS01
         TPUT  (1),(0),R                                   USPS01
RWLTR    LTR   R15,R15                                     USPS01
         AGO   .LBL04                                      USPS01
.LBL03   DS    0H                                          USPS01
         O     R1,=XL4'02000000'
         TPUT  (1),(0),R
         LTR   R15,R15
.LBL04   DS    0H                                          USPS01
         BZR   R6            SUCCESSFUL TPUT
RDATTN   SR    R1,R1         ATTN INNTERRUPT
         SR    R0,R0
         B     TRXT
         SPACE
FLUSH    LA    R0,SZR
         LA    R1,RTBTEXT
         O     R1,=XL4'80000000'
         TGET  (1),(0),R
         B     *+4(R15)
         B     SETREGM       FIRST NOTIFY TRUNCATION
         DC    2H'0'         CANNOT BE NOWAIT
         B     RDATTN        ATTN ON READ???
         B     FLUSH         KEEP ON FLUSHING ZE INPUT
         DC    2H'0'         ILLEGAL PARMS???
         SVC   3             USER HUNG UP
         SPACE 3
SETREGM  LA    R1,LONGMSG
         LA    R0,L'LONGMSG
REPROMPT TPUT  (1),(0),R
SETREGM2 LH    R0,RTBWC      GET PROMPT COUNT
         L     R1,RTBWAPTR
         XC    RTBCURS(2,R1),RTBCURS(R1) CLEAR BALL POSITION
         LTR   R0,R0         IS THERE ANY?
         BZ    RD            GO READ AGAIN
         LR    R4,R1         POINT TO WA
         MVC   RTBTEXT(RTBPMAX),RTBPRMPT(R1) MOVE PROMPT BACK
         CH    R0,=Y(RTBPMAX) IS IT TOO LONG?
         BNH   TPUTIT
         LA    R0,RTBPMAX    MAX PROMPT SIZE
         STH   R0,RTBWC      SAVE NEW WRITE COUNT
         B     TPUTIT        GO PROMPT AGAIN
         SPACE
SETREGS  LR    R0,R1           LENGTH OF INPUT
         LA    R1,RTBTEXT      ADDRESS OF INPUT
         TM    RTBUFL,RTBUATTN IS ATTN SEQ ALLOWED
         BZ    READTEST        IF NOT SKIP THE CHECK
         L     SR,RTBWAPTR
         LH    R5,RTBATNSZ(,SR) LENGTH OF ATTN SEQ
         CR    R5,R0           CAN THERE BE AN ATTN SEQ?
         BH    READTEST        IF NOT SKIP THE CHECK
         LR    R6,R1           POINT TO INPUT
         AR    R6,R0           POINT TO END OF INPUT
         SR    R6,R5           POINT TO POSSIBLE ATTN SEQ
         BCTR  R5,R0           GUESS WHY
         EX    R5,CLCATTN      IS IT AN ATTN?
         BNE   READTEST        IF NOT RETURN
         LA    R5,1(,R5)       BACK TO CORRECT LENGTH
         CR    R5,R0           WAS IT ONLY THE ATTN SEQ?
         BE    TRXX            IF SO RETURN REAL ATTN
         C     R3,=X'005A5B7C' IS IT EDIT OR MODIFY?
         BNE   SETREGM2        IF NOT REPROMPT
         BCTR  R6,R0           POINT TO CHAR BEFORE ATTN
         CLI   0(R6),C'$'      IS IT A DOLLAR?
         BE    TRXX
         CLI   0(R6),C'!'      IS IT AN EXCLAMATION?
         BE    TRXX
         CLI   0(R6),C'@'      IS IT AN AT SIGN
         BNE   SETREGM2        IF NON OF THE ABOVE, REPROMPT
TRXX     SR    R0,R5           GET RID OF ATTN SEQ
         LA    R15,4           RETURN NONZERO CC
READTEST LTR   SR,R0           UPLOW OR TABS POSSIBLE?
         BZ    TRXT
         BCTR  SR,0
         TM    CPGFLG,CPFUPLW  UPLOW ALLOWED?
         BO    NOEXTR          YES, SKIP TRANSLATE
         EX    SR,TRUPLOW
         AIF   ('&USPS' NE '1').LBL05                      USPS01
NOEXTR   DS    0H                                          USPS01
         AGO   .LBL06                                      USPS01
.LBL05   DS    0H                                          USPS01
NOEXTR   L     R3,RTBWAPTR
         XC    RTBBSCNT(2,R3),RTBBSCNT(R3) CLEAR BS COUNT
         LA    R3,RTBTRBUF(,R3) R3: @ BUFFER FOR COPY OF INPUT
         LR    R4,SR           R4: REMAINING LENGTH - 1
         LA    R5,RTBTEXT      R5: @ RESULT OF INPUT
         SR    R0,R0           R0: PROCESSED LENGTH
         SR    R2,R2
         EX    R4,MVC2         GET A COPY OF INPUT
TABBSLP  EX    R4,TABBS        FIND A TAB OR BS
         BZ    ENDTABS         NONE, END UP
         SR    R1,R3           R1: LENGTH OF STRING W/OUT TAB
         BZ    NOMVC           IF NONE SKIP THE NEXT FEW
         BCTR  R1,0            LESS 1 FOR EX
         EX    R1,MVC1         MOVE THE STUFF OVER FROM COPY
         LA    R1,1(,R1)       ADD 1 TO GET REAL LENGTH
         AR    R5,R1           UPDATE REAL INPUT POINTER
         AR    R3,R1           UPDATE COPY POINTER
         AR    R0,R1           UPDATE PROCESSED LENGTH
         SR    R4,R1           UPDATE REMAINING LENGTH
NOMVC    LA    R3,1(,R3)       ADD 1 MORE FOR BS OR TAB CHR
         B     *(R2)           R2 WAS SET FROM THE TRT
         B     TAB             R2=4 MEANS A TAB, 8 MEANS A BS
         SPACE
         TM    RTBUFL,RTBUBACK BACK SET ?
         BO    ADDBS           IF SO TREAT BS AS A CHARCTER
         LTR   R0,R0           WAS THERE ANYTHING IN BUFFER?
         BZ    TESTREM         NO, DON'T DECREMENT
         BCTR  R0,0            REDUCE PROCESSED LENGTH
         BCTR  R5,0            REDUCE BUFFER POINTER
TESTREM  LTR   R4,R4           ANYTHING LEFT?
         BZ    TRXXT           NO, EXIT
         BCTR  R4,0            REDUCE 1 MORE FOR TAB OR BS
         B     TABBSLP         GO FIND MORE
         SPACE
ADDBS    MVI   0(R5),X'16'     MOVE IN A BS
         LA    R5,1(,R5)       ADD 1 TO BUFFER POINTER
         AH    R0,=H'1'        ADD 1 TO PROCESSED LENGTH
         L     R14,RTBWAPTR
         LH    R1,RTBBSCNT(,R14) GET BS COUNT
         LA    R1,1(,R1)       ADD 1
         STH   R1,RTBBSCNT(,R14) SAVE BS COUNT
         B     TABBSLP
         SPACE
TAB      LR    R6,R0           GET PROCESSED COUNT
         L     R14,RTBWAPTR
         SH    R6,RTBBSCNT(,R14) REDUCE IT BY # BS'S
         XC    RTBBSCNT(2,R14),RTBBSCNT(R14) CLEAR BS COUNT
         TM    RTBUFL,RTBURELT ARE TABS RELATIVE?
         BO    CURSET          IF SO SKIP THE NEXT 2
         AH    R6,RTBCURS(,R14) ADD CURSOR POSITON
CURSET   LA    R14,RTBTABS      POINT TO TABS
         LA    R1,8             AT MOST EIGHT TABS
TBLP     IC    R2,0(,R14)       GET A TAB
         LTR   R2,R2            IS THERE ONE?
         BZ    BADTABS          TOO BAD...
         BCTR  R2,0             LESS 1
         CR    R2,R6            DOES THIS ONE FIT?
         BH    FNDTAB           OK IT DOES.
         LA    R14,1(,R14)      POINT TO NEXT TAB
         BCT   R1,TBLP          AND CHECK MORE
BADTABS  LA    R1,TABMSG        UNSET TABS
         LA    R0,L'TABMSG
         B     REPROMPT
         SPACE
FNDTAB   LR    R1,R2            TAB POSITION
         SR    R1,R6            TAB TO THIS MANY POSITIONS
         AR    R0,R1            NEW PROCESSED COUNT
         BCTR  R1,0
         EX    R1,MVCB          MOVE SOME BLANKS OVER
         LA    R5,1(R1,R5)      UPDATE BUFFER POINTER
         B     TESTREM          AND GO FIND MORE
         SPACE
ENDTABS  AR    R0,R4            TOTAL LENGTH OF INPUT
         AH    R0,=H'1'         PLUS 1
         CH    R0,=Y(RTBNTEXT)  LENGTH OK?
         BH    BADTABS          NOPE
         EX    R4,MVC1          MOVE REMAINING OVER
TRXXT    LA    R1,RTBTEXT       POINT TO REAL INPUT
.LBL06   DS    0H                                          USPS01
TRXT     L     SR,RTBWAPTR
         XC    RTBCURS(2,SR),RTBCURS(SR) CLEAR BALL POSITION
TRX      SR    SR,SR
         STH   SR,RTBWC
         STH   SR,RTBPC
         STH   SR,RTBRC
         XEXIT 2,8,LTR
         SPACE 3
TRUPLOW  TR    RTBTEXT(0),UPLTAB
CLCATTN  CLC   0(0,R6),RTBATTN(SR)
MOVE     MVC   0(0,SR),0(1)
MVC2     MVC   0(0,R3),0(R5)
         AIF   ('&USPS' EQ '1').LBL07                      USPS01
TABBS    TRT   0(0,R3),TABTAB
.LBL07   DS    0H                                          USPS01
MVC1     MVC   0(0,R5),0(R3)
MVCB     MVC   0(0,R5),BLANKS
BLANKS   DC    168C' '
LONGMSG  DC    C'INPUT TOO LONG, REENTER'
         AIF   ('&USPS' EQ '1').LBL08                      USPS01
TABMSG   DC    C'UNSET TABS, REENTER'
TABTAB   DC    256X'00'
         ORG   TABTAB+X'05'
         DC    X'04'
         ORG   TABTAB+X'16'
         DC    X'08'
         ORG
         SPACE
.LBL08   DS    0H                                          USPS01
UPLTAB   DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
         EJECT
CURTAB    DC   256X'0'         FOR TRANSLATE AND TEST
          ORG  CURTAB+X'11'
          DC   X'04'
          ORG  ,
* SET TABS
         SPACE
TTABS    XENTER 2,8
         MVC   RTBTABS(8),0(1)         PLACE TABS INTO RTB
         XEXIT 2,8
         EJECT
         LTORG
         EJECT
         COPY  WYLCONST
         EJECT
PFCB     DSECT
         COPY  PFCBTSO
         EJECT
PCB      DSECT
         COPY  PCBTSO
         EJECT
PIOB     DSECT
         COPY  PIOB
         COPY VCPTSO
         EJECT
         COMMON
         SPACE
         END
./ ADD NAME=WTR8,SSI=00000178
         COPY PMAC IS THIS CORRECT
WTR      TITLE 'WYLTSO INTERFACE WITH TCAM'
* PROPERTY OF C. U. C. C. A.
         SPACE 3
         GBLC  &USPS                                       USPS01
&USPS    SETC  '1'                                         USPS01
         TRACER OFF
WTR      CSECT
         WIDENT 001
         SPACE
         XTRNS ,
         SPACE 3
*  REGISTER USAGE
         SPACE
SR       EQU   2
TR       EQU   3
RR       EQU   4
JCBR     EQU   5
         SPACE 3
         USING CPAREA,R12
         EJECT
         ENTRY TSEGXM,TSEGXW,TSEGXB,TSEGX
         SPACE 3
* ROUTINE TO DO TSEG AND TMARK
         SPACE
TSEGXM   ST    R14,0(13)
         BALR  R14,0
         USING *,R14
         BAL   R14,TSEGCOM         GO DO TSEG
         USING *,R14
         B     TWRITEX2            GO DO TWRITE
         SPACE 3
* ROUTINE TO DO TSEG AND TWRITE
         SPACE
TSEGXW   ST    R14,0(13)
         BALR  R14,0
         USING *,R14
         BAL   R14,TSEGCOM         GO DO TSEG
         USING *,R14
         B     TWRITEX2            GO DO TWRITE
         SPACE 3
* ROUTINE TO DO TSEG FOLLOWED BY A BLANK
         SPACE
TSEGXB   ST    R14,0(13)
         BALR  R14,0
         USING *,R14
         BAL   R14,TSEGCOM         GO DO TSEG
         USING *,R14
         SYSQS 1,0,' '             SET UP FOR TSEG OF BLANK
         BAL   R14,TSEGCOM2        GO DO TSEG OF BLANK
         USING *,R14
         B     TSEGEXIT
         SPACE 3
* ROUTINE TO DO NORMAL TSEG
         SPACE
TSEGX    ST    R14,0(13)
         BALR  R14,0
         USING *,R14
         BAL   R14,TSEGCOM         GO DO TSEG
         USING *,R14
TSEGEXIT XEXIT 2,8
         SPACE
         DROP  R14
         SPACE 3
* TSEG - ADD SEGMENT TO BUFFER
         SPACE
TSEGCOM  DS    0H
         XENTERI 2,8
TSEGCOM2 DS    0H
         XTRACE TSEG
         LH    SR,RTBWC                PICK UP WRITE COUNT
         LTR   TR,0                    DATA COUNT
         BNPR  R14                     BR IF NULL SEG
         AR    TR,SR                   COMPUTE NEW LENGTH
         CH    TR,=Y(RTBNTEXT)                COMPARE WITH BUF SIZE
         BNH   *+8
         LH    TR,=Y(RTBNTEXT)                SET MAX SIZE
         STH   TR,RTBWC                PLANT NEW WRITE COUNT
         SR    TR,SR                   COMPUTE ACTUAL DATA COUNT
         BNPR  R14                     BR IF NO DATA
         BCTR  TR,0
         LA    SR,RTBTEXT(SR)
         EX    TR,MOVE                 MOVE THE DATA
         BR    R14
         EJECT
* TWRITE OUTPUT A LINE
         SPACE
TMARKX   XENTER 2,8,*
         LH     1,RTBWC
         LTR    1,1
         BP     DOWRITE
         XEXIT  2,8
         SPACE 3
TWRITEX  XENTER 2,8,*
DOWRITE  EQU   *-2               EQUATE TO BALR
TWRITEX2 EQU   *-6               JUST BEFORE LA 13,...
         XTRACE TWRITE
         SR    R15,R15
         L     R3,RTBWAPTR       RTB WORK AREA POINTER
         LH    R2,RTBWC          WRITE COUNT
         LTR   R2,R2             IS IT 0?
         BZ    NOCHARS
         LA    R1,RTBTEXT-1(R2)  POINT TO LAST CHAR
BLNKLOOP CLI   0(R1),C' '
         BNE   NOBLNKS           FOUND A NONBLANK
         BCTR  R1,0              DECREMENT STRING POINTER
         BCT   R2,BLNKLOOP       DECREMENT COUNT
NOBLNKS  STH   R2,RTBWC          SAVE NEW COUNT
NOCHARS  TM    RTBMFL,RTBNOCR    CHECK MODE FLAG FOR NOCR
         BZ    NOTNOCR           NO ITS NOT NOCR
         TM    RTBUFL,RTBUPAD    PAD WANTED?
         BZ    NOPADS            NO SKIP PADDING
         CH    R2,CPLNGTH        IS LINE >= 'LENGTH'
         BNL   NOPADS            YES, SKIP PADDING
         LH    R5,CPLNGTH
         STH   R5,RTBWC          MAKE 'LENGTH' THE NEW SIZE
         SR    R5,R2             NUMBER OF BLANKS TO MOVE
         BCTR  R5,0
         LA    R2,RTBTEXT(R2)    MOVE BLANKS TO HERE
         LA    R1,BLANKS
         EX    R5,MOVE           GO MOVE BLANKS
NOPADS   SR    R0,R0             FOR DIVIDE INSTRUCTION
         LH    R1,RTBCURS(,R3)   CURSOR POSITION
         AH    R1,RTBWC          ADD NUMBER OF CHARS TO LIST
         LH    R2,RTBLSZ(,R3)    LINE SIZE
         DR    R0,R2             FIND REMAINDER
         STH   R0,RTBCURS(,R3)   NEW CURSOR POSITION
         LH    R0,RTBWC          LENGTH OF LINE TO PRINT
         BAL   R6,WRITE          GO WRITE
         SR    R0,R0
         STH   R0,RTBLINE(,R3)   CLEAR LINE COUNT
         B     TRX               AND RETURN
         SPACE 3
WRITE    LTR   R0,R0             ANYTHING TO PRINT?
         BZR   R6                IF NOT RETURN
         XC    CPEXCMCT,CPEXCMCT CLEAR EXEC COMMAND COUNT
         LA    R1,RTBTEXT        POINT TO TEXT TO PRINT
         AIF   ('&USPS' NE '1').LBL01                      USPS01
         BCTR  R0,0                                        USPS01
         CH    R0,=H'1'                                    ITEL
         BE    WRTPUT0                                     ITEL
         BCTR  R0,0                                        USPS01
WRTPUT0  EQU   *                                           ITEL
         TPUT  (1),(0),EDIT,WAIT                           USPS01
         B     WRLTR                                       USPS01
WRTPUT   O     R1,=XL4'02000000'                           USPS01
         TPUT  (1),(0),R                                   USPS01
WRLTR    LTR   R15,R15                                     USPS01
         AGO   .LBL02                                      USPS01
.LBL01   DS    0H                                          USPS01
         O     R1,=XL4'02000000' TPUT OPTIONS
         TPUT  (1),(0),R
         LTR   R15,R15
.LBL02   DS    0H                                          USPS01
         BZR   R6                NORMAL RETURN
WRATTN   OI    JCBAFL,JCBAFIA    IDLE ATTN ON WRITE
         SR    R0,R0
         STH   R0,RTBCURS(,R3)   CLEAR BALL POSITION
         STH   R0,RTBLINE(,R3)   CLEAR LINE COUNT
         B     TRX
         SPACE 3
PAUSE    LA    R1,=C'.'          PRINT A DOT
         LA    R0,1              LENGTH OF A DOT
         O     R1,=XL4'02000000' TPUT OPTIONS
         TPUT  (1),(0),R         GO DO IT
         LTR   R15,R15
         BNZ   WRATTN
PAUSERD  LA    R1,RTBPAUS(,R3)   POINT TO A WORK AREA
         LA    R0,8              EIGHT IS ENUF
         O     R1,=XL4'80000000' TGET OPTIONS
         TGET  (1),(0),R         WAIT
         B     *+4(R15)          AND RETURN APPROPRIATELY
         BR    R6                GOOD RETURN
         DC    3H'0'
         B     WRATTN            ATTN HIT
         B     PAUSERD           GO REREAD TO FLUSH
         DC    2H'0'
         SVC   3
         SPACE 3
NOTNOCR  TM    RTBMFL,RTBWRAP    IS CR/LF TO BE INSERTED?
         BO    WRAP              YES GO DO IT...
CHKCRT   TM    RTBMFL,RTBCRT     IS PAGING IN EFFECT?
         BO    NWRAPCRT          YES GO TEST PAGING
PUTCR    LH    R2,RTBWC          SIZE OF LINE TO PRINT
         LA    R2,2(,R2)         2 MORE CHARS FOR CR/LF
         CH    R2,=Y(RTBNTEXT)   MORE THAN BUFFER SIZE?
         BNH   *+8               NO IT'S OK
         LH    R2,=Y(RTBNTEXT)   DEFAULT TO MAXIMUM
         LR    R0,R2             LENGTH OF TOTAL LINE
         LA    R2,RTBTEXT-2(R2)  POINT TO PLANT CR/LF
         MVC   0(2,R2),=X'0D25'  PUT IT IN
         BAL   R6,WRITE          GO WRITE LINE
         SR    R0,R0
         STH   R0,RTBCURS(,R3)   ZERO CURSOR POSITION
         B     TRX
         SPACE 3
NWRAPCRT LH    R1,RTBCURS(,R3)   GET CURSOR POSITION
         AH    R1,RTBWC          ADD SIZE OF LINE
         SR    R0,R0
         LH    R2,RTBLSZ(,R3)    LINE SIZE
         LTR   R1,R1
         BZ    *+8               SKIP NEXT TWO INSTR
         BCTR  R1,0
         DR    R0,R2             FIND NEW LINE POSITION
         LA    R1,1(,R1)         ADD ONE
         AH    R1,RTBLINE(,R3)   ADD ALREADY PRINTED COUNT
         STH   R1,RTBLINE(,R3)   SAVE IT
         CH    R1,RTBPSZ(,R3)    NEED PAGING?
         BNH   PUTCR             NO GO PRINT IT NORMALLY
         BAL   R6,PAUSE          GO PAUSE
         LH    R1,RTBWC          SIZE OF LINE
         SR    R0,R0
         LH    R2,RTBLSZ(,R3)    MAX LINE SIZE
         BCTR  R1,0
         DR    R0,R2             FIND NES LINE POSITION
         LA    R1,1(,R1)
         STH   R1,RTBLINE(,R3)   SAVE NEW LINE COUNT
         B     PUTCR             AND GO LIST NORMALLY
         SPACE 3
WRAP     LH    R1,RTBCURS(,R3)   GET CURSOR POSITION
         AH    R1,RTBWC          ADD SIZE OF LINE TO PRINT
         CH    R1,RTBLSZ(,R3)    MORE THAN LINE SIZE?
         BNH   CHKCRT            GO WRITE IGNORING WRAP
         LH    R2,RTBCURS(,R3)   GET CURSOR POSITION
         LTR   R2,R2             WHERE?
         BZ    ZCURS             NO SPECIAL CASE NEEDED
         SR    R0,R0
         STH   R0,RTBCURS(,R3)   ZERO OUT CURSOR POSITION
         LH    R0,RTBLSZ(,R3)    GET LINE SIZE
         SR    R0,R2             NUMBER OF CHARS TO PRINT NOW
ADDCR    LR    R4,R0
         LA    R4,RTBTEXT(R4)    POINT TO PLANT CR/LF
         MVC   RTBSAVE(2,R3),0(R4) SAVE THE TWO CHARS IN TEXT
         MVC   0(2,R4),=X'0D25'  PLANT THE CR/LF
         LH    R1,RTBWC          GET LINE SIZE
         SR    R1,R0             GET REMAINING LENGTH
         STH   R1,RTBWC
         AH    R0,=H'2'          ADD 2 FOR CR/LF
         BAL   R6,WRITE
         MVC   RTBTEXT(2),RTBSAVE(R3) MOVE BACK THE TEXT SAVED
         MVC   RTBTEXT+2(RTBNTEXT-2),2(R4) AND THE REMAINING
ZCURS    LH    R1,RTBWC
         LTR   R1,R1             ANY MORE LEFT?
         BZ    TRX
         CH    R1,RTBLSZ(,R3)    MORE THAN LINESIZE?
         BNH   CHKCRT            GO PRINT REST AS IF NOWRAP
         TM    RTBMFL,RTBCRT     PAGING IN EFFECT?
         BZ    NOCR              NO IGNORE PAGING
         LH    R4,RTBLINE(,R3)   GET LINE COUNT
         LA    R4,1(,R4)         ADD ONE MORE LINE
         STH   R4,RTBLINE(,R3)
         CH    R4,RTBPSZ(,R3)    MORE THAN PAGESIZE?
         BNH   NOCR
         BAL   R6,PAUSE
         SR    R0,R0
         STH   R0,RTBLINE(,R3)   ZERO OUT LINE COUNT
NOCR     LH    R0,RTBLSZ(,R3)    MAXIMUM TO PRINT
         B     ADDCR
         EJECT
* OPWRITE - SEND MESSAGE TO OPERATOR
         SPACE
OPWRITE  XENTER 2,8,*
         XTRACE OPWRITE
         SR    SR,SR
         STH   SR,RTBPC
         STH   SR,RTBRC
         BAL   R14,TREADX
         XEXIT 2,8
         EJECT
* TREAD - PROMPT AND READ A LINE
         SPACE
TREADX   XENTER 2,8,*
         SR    R3,R3               FLAG REGISTER
         CH    R3,CVPRMLIM         RECOVERY WANTED?
         BE    NORECVRY            IF 0 NO RECOVERY NEEDED
         LA    R4,1                TO BE USED AS A FLAG
         TM    CPGFLG,CPFDIRCH     IS DIRCTORY CHANGED?
         BO    RECOVERY            IF SO FORCE RECOVERY
         LH    R4,CVPROMPT         HOW MANY PROMPTS HAVE GONE BY?
         CH    R4,CVPRMLIM         MORE THAN UPDATE LIMIT?
         BL    NORECVRY            IF LESS, NO RECOVERY
         SR    R4,R4               TO BE USED AS A FLAG
RECOVERY L     R3,CVFPFCB          OUR PFCB ADDRESS
         L     R2,CVFPAGE          FIRST PCB ADDRESS
         USING PFCB,R3
         USING PCB,R2
PCBLOOP  TM    PCBFL,PCBFMARK      WAS PAGE MARKED?
         BZ    NEXTPCB             IF NOT SKIP IT
         LH    R1,PCBPN            GET PAGE NUMBER
         LA    R4,1(,R4)           SAY A PAGE WAS WRITTEN
         MVI   PCBRWCCW,PIOWRITE   INDICATE WE WILL WRITE
         CVCALL PIO                GO DO I/O
         NI    PCBFL,255-PCBFMARK  TURN OFF DIRTY MARK
NEXTPCB  LA    R2,PCBSIZE(,R2)     POINT TO NEXT PCB
         C     R2,CVLPAGE          PAST THE LAST ONE?
         BL    PCBLOOP             IF NOT KEEP LOOPING
         LTR   R4,R4               ANYTHING MORE TO BE DONE?
         BZ    NORECVRX            NO, GET OUT
         OI    JCBBFL,JCBPIOW      INDICATE EXCP WILL COME
         LR    R5,R15
         L     R4,JCBWAPTR
         MVC   0(8,R4),=CL8'RECOVER'
         MVC   8(4,R4),PFCBCP      CURRENT PAGES USED
         MVC   12(4,R4),CPRSCNVL   RESCAN ESC SKIP CHARS
         MVC   16(4,R4),CPEXLNET   SAVE EXEC LINE POINTER
         MVC   20(12,R4),CVEXTRAP  EXEC TRAP AND UPDATE CNT
         LA    R4,32(,R4)          MORE TO WRITE
         MVC   0(RTBSIZE-RTBNTEXT,R4),RTBSTART RTB INFO
         LA    R4,RTBSIZE-RTBNTEXT(,R4)
         MVC   0(CPRCVSZ1,R4),CPGLDL           CP INFO
         LA    R4,CPRCVSZ1(,R4)
         MVC   0(CPRCVSZ2,R4),CPDRPT           MORE CP INFO
         LA    R4,CPRCVSZ2(,R4)
         LR    R2,R4                           FOR MVCL
         LA    R3,CPRCVSZ3                     LENGTH
         LA    R14,CPDREC                      FROM
         LR    R15,R3                          SAME LENGTH
         MVCL  R2,R14                          MOVE IT
         LA    R4,CPRCVSZ3(,R4)
         LR    R2,R4                           FOR MVCL
         LA    R3,ROUTBLEN                     LENGTH
         LA    R14,ROUTBLE                     FROM
         LR    R15,R3                          SAME LENGTH
         MVCL  R2,R14                          MOVE IT
         LA    R4,ROUTBLEN(,R4)
         L     R15,RTBWAPTR
         MVC   0(256,R4),0(R15)                 TERMINAL INFO
*        DO EXCP
         L     R3,CVPIOB
         USING PIOB,R3
         L     R4,JCBWAPTR
         STCM  R4,7,PCCWWRT1+1          SAVE IT
         MVI   PSEEKREC,1        SET RECORD 1
         MVI   PCCWWRT1+4,X'00'  UNCHAIN
         XC    PECB,PECB
         EXCP  PIOBSTRT
        LA    R14,PECB
        WAIT  ECB=(R14)           WAIT FOR I/O TO COMPLETE
         L     R3,CVFPFCB          OUR PFCB ADDRESS
         USING PFCB,R3
         L     R14,JCBWAPTR           GET BUFFER
         L     R2,PFCBPTST            BEGINNING OF PAGE TABLE
         LA    R3,&PAGE0              MAX NUMBER OF PAGES
         LR    R15,R3                 SAME LENGTH
         MVCL  R14,R2                 MOVE IT
*        DO EXCP
         L     R3,CVPIOB
         USING PIOB,R3
         L     R4,JCBWAPTR
         STCM  R4,7,PCCWWRT1+1          SAVE IT
         MVI   PSEEKREC,2        SET RECORD 2
         XC    PECB,PECB
         EXCP  PIOBSTRT
        LA    R14,PECB
        WAIT  ECB=(R14)           WAIT FOR I/O TO COMPLETE
         LA    R2,CPAREA+CPSIZE     2ND CP PAGE
         STCM  R2,7,PCCWWRT1+1          SAVE IT
         L     R3,CVPIOB
         USING PIOB,R3
         MVI   PSEEKREC,3        SET RECORD 3
         XC    PECB,PECB
         EXCP  PIOBSTRT
        LA    R14,PECB
        WAIT  ECB=(R14)           WAIT FOR I/O TO COMPLETE
         L     R2,CVCPADDR          ADDR OF VCP
         STCM  R2,7,PCCWWRT1+1          SAVE IT
         L     R3,CVPIOB
         USING PIOB,R3
         MVI   PSEEKREC,4        SET RECORD 4
         XC    PECB,PECB
         EXCP  PIOBSTRT
         LA    R14,PECB
         WAIT  ECB=(R14)           WAIT FOR I/O TO COMPLETE
         MVI   PSEEKREC,1        SET RECORD 1
         MVI   PCCWWRT1+4,X'40'  SET CHAINED
         XC    PCCWWRT1+1(3),PCCWWRT1+1
         DROP  R3
         DROP  R2
         LR    R15,R5          RESTORE R15
NORECVRX LM    R2,R6,4(R8)          RESTORE INPUT REGISTERSDEL
NORECVRY SR    R3,R3
         STH   R3,CPEXCMCT         ZERO EXEC COUNT
         L     R4,RTBWAPTR         GET RTB WORK AREA POINTER
         STH   R3,RTBLINE(,R4)     CLEAR LINES PRINTED
         LTR   RR,15               TEST '? ' INSERT
         BP    DNTADIT             NO '? '
         LPR   R4,R15              SET IT TO POSITIVE
         C     R4,=X'005A5B7C'     IS IT MOD OR EDIT?
         BNE   *+6
         LR    R3,R4               FLAG NO REPROMPT
         TSEG  '? '                COMPLETE PROMPT
DNTADIT  LH    R0,RTBWC            COMPUTE PROMPT SIZE
         LTR   R0,R0               ANY PROMPT INVOLVED?
         BZ    RD                  NO .. GO TO RD
         L     R4,RTBWAPTR
         LA    R1,RTBTEXT
         CH    R0,=Y(RTBPMAX)    MORE THAN THAT?
         BNH   *+10
         SH    R0,=Y(RTBPMAX)
         AR    R1,R0               POINT TO LAST RTBPMAX CHARS
         MVC   RTBPRMPT(RTBPMAX,R4),0(R1) MOVE THE PROMPT
TPUTIT   LH    R5,RTBWC            GET WRITE COUNT
         TM    RTBMFL,RTBWRAP      WRAP FORCE WANTED?
         BZ    RNOWRAP             NO, REGULAR
         LH    R1,RTBCURS(,R4)     GET BALL POSITION
         AR    R1,R5               ADD LENGTH TO BE WRITTEN
         CH    R1,RTBLSZ(,R4)      MORE THAN LS?
         BL    RNOWRAP             NO GO DO WITHOUT WRAP
         LH    R2,RTBCURS(,R4)     GET BALL POSITION
         LTR   R2,R2               WAS BALL MOVED?
         BZ    RZCURS              NO, NO SPECIAL CASE THEN
         SR    R0,R0
         STH   R0,RTBCURS(,R4)     CLEAR BALL POSITION
         LH    R0,RTBLSZ(,R4)      GET LS
         SR    R0,R2               GET SPECIAL CASE LENGTH
RADDCR   LR    R3,R0               LENGTH TO PRINT THIS TIME
         LA    R3,RTBTEXT(R3)      POINT TO END OF IT
         MVC   RTBSAVE(2,R4),0(R3) SAVE 2 CHARS
         MVC   0(2,R3),=X'0D25'    PUT CR/LF
         SR    R5,R0               GET REMAINING COUNT
         AH    R0,=H'2'            ADD 2 MORE FOR CR/LF
         BAL   R6,RWRITE           GO WRITE PORTION
         MVC   RTBTEXT(2),RTBSAVE(R4) MOVE BACK THE 2 CHARS
         MVC   RTBTEXT+2(RTBNTEXT-2),2(R3) AND SHIFT OTHERS
RZCURS   LTR   R1,R5               ANYTHING MORE TO WRITE?
         BZ    RD                  NO, GET OUT
         CH    R1,RTBLSZ(,R4)      MORE THAN LS?
         BL    RNOWRAP             NO, ACT JUST LIKE NOWRAP
         LH    R0,RTBLSZ(,R4)      PROMPT SOME MORE
         B     RADDCR
         SPACE
RNOWRAP  LH    R1,RTBCURS(,R4)     GET CURSOR POSITION
         AR    R1,R5               ADD WRITE COUNT
         SR    R0,R0
         LH    R2,RTBLSZ(,R4)
         DR    R0,R2               FIND NEW BALL POSIT = REM.
         STH   R0,RTBCURS(,R4)
         LR    R0,R5
         BAL   R6,RWRITE
RD       LA    R0,SZR              MAX LINE SIZE
         LA    R1,RTBTEXT
         O     R1,=XL4'81000000'    TGET ASIS
         TGET  (1),(0),R
         B     *+4(R15)
         B     TESTKEY       TGET SUCCESSFUL
         DC    2H'0'         CANNOT HAVE NOWAIT
         B     RDATTN        ATTN ON READ
         B     FLUSH         TOO MANY CHARACTERS
         DC    2H'0'         CANNOT HAVE INVALID PARMS
         SVC   3             USER HANGED UP DE FONE
         SPACE
TESTKEY  DS    0H
         LTR   R1,R1              ANYTHING RETURNED
         BZ    REPROMP            NO TGET AGAIN
         LR    R0,R1              SAVE ACROSS TRT
         EX    R1,TRANTEST        TRT
         BNZ   DELCUR             DELETE CURSOR CHAR
TESTENT  LR    R1,R0              RESTORE COUNT
         CLI   RTBTEXT,X'7D'      ENTER HIT
         BNE   TESTPFK            NO TEST PFK
SETENT   SH    R1,=H'6'           FOR ASIS INFO
         LTR   R1,R1              SEE IF NEG
         BNM   *+8
         LA    R1,0               SET ZERO IF MINUS
         EX    R1,MOVTEXT         MOV THE TEXT OVER
         LA    R2,RTBTEXT+1(R1)  MOVE BLANKS
         MVC   0(6,R2),BLANKS    FILL LINE WITH BLANKS
         B     SETREGS            CONTINUE
         SPACE
DELCUR   DS    0H
         LR    R3,R1           SET CUR POS
         LA    R14,RTBTEXT     POINT TO BEGININNG
         SR    R3,R14          DISPL INTO RTBTEXT
         LR    R4,R0           TEMP REST
         SR    R4,R3           DECR FOR MOVE
         SH    R4,=H'4'        FOR EXEC
         EX    R4,MOVTEXT2     MOV IT
         SH    R0,=H'3'
         B     TESTENT         CONTINUE
MOVTEXT  MVC   RTBTEXT(0),RTBTEXT+6         MOVE OVER ASIS INFO
MOVTEXT2 MVC   0(0,R1),3(R1)                MOVE OVER ASIS INFO
TRANTEST TRT   RTBTEXT+6(0),CURTAB           DELETE CURSOR CHARS
         SPACE
TESTPFK  DS    0H
         L     VCPR,CVCPADDR      POINT TO VCP PAGE
         USING DVCP,VCPR
         LA    R2,VCPPVAR         POINT TO PFK KEYS
         DROP  VCPR
         LA    R3,24              NUMBER OF PFK'S
         SLR   R4,R4              USED FOR IC
FINDPFK  CLC   RTBTEXT(1),0(R2)         MATCH
         BE    SEEPFK             YES SEE IF SET
         LA    R2,25(R2)          NEXT ENTRY
         BCT   R3,FINDPFK         CHECK NEXT
         B     SETENT                   UNKNOW SET AS ENTER
         SPACE
SEEPFK   CH    R1,=AL2(6)         ANY THING ELSE
         BH    SETPFK             OVER 6 MEANS SET PFK
SEEPFK2  SLR   R4,R4              FOR INSERT
         ICM   R4,1,1(R2)         GET LENGTH
         BZ    SETENT             ZERO LENGTH ¢6 SET AS ENTER
         LR    R1,R4              FOR LATER
         BCTR  R4,R0              FOR MOVE
         EX    R4,PFKMOVE         MOV TO RTBTEXT
         B     SETREGS            CONTINUE PROCESSING
         SPACE
REPROMP  DS    0H
         SLR   R0,R0              CLEAR REGISTER FOR ICM
         ICM   R0,3,RTBPC         AND PROMPT COUNT
         BZ    RD                 NO JUST READ
         BAL   R6,RWRITE          REWRITE
         B     RD                 GO RE-READ
         SPACE
SETPFK   DS   0H
         L     VCPR,CVCPADDR      POINT TO VCP PAGE
         USING DVCP,VCPR
         LA    R2,VCPPVAR         POINT TO PFK KEYS
         DROP  VCPR
         SH    R1,=AL2(6)    SUBTRACT GARBAGE
         CH    R1,=AL2(23)   MAX FOR ANY PFK
         BH    PFKMAX        HIGH IGNORE
PFKSLOOP CLC   RTBTEXT(1),0(R2)
         BE    MOVPFK        YES
         LA    R2,25(R2)     NEXT PFK
         B     PFKSLOOP      LOOP
MOVPFK   STC   R1,1(R2)        SAVE LENGTH
         BCTR  R1,R0         DECR FOR EXECUTE
         MVI   2(R2),C' '     CLEAR LAST ENTRY
         MVC   3(22,R2),2(R2)       ENTIRELY
         EX    R1,MOVEIT     MOVE IT
         B     SEEPFK2          EXECUTE COMMAND
MOVEIT   MVC   2(0,R2),RTBTEXT+6  CURRENT KEY
         SPACE
*
PFKMAX   TSEG 'PFK ENTRY TOO LONG'
         B    CVGETCOM
PFKMOVE  MVC   RTBTEXT(0),2(R2)        COMMAND
         SPACE
RWRITE   LA    R1,RTBTEXT
         AIF   ('&USPS' NE '1').LBL03                      USPS01
         TPUT  (1),(0),ASIS,WAIT                           USPS01
         B     RWLTR                                       USPS01
RWTPUT   O     R1,=XL4'02000000'                           USPS01
         TPUT  (1),(0),R                                   USPS01
RWLTR    LTR   R15,R15                                     USPS01
         AGO   .LBL04                                      USPS01
.LBL03   DS    0H                                          USPS01
         O     R1,=XL4'02000000'
         TPUT  (1),(0),R
         LTR   R15,R15
.LBL04   DS    0H                                          USPS01
         BZR   R6            SUCCESSFUL TPUT
RDATTN   SR    R1,R1         ATTN INNTERRUPT
         SR    R0,R0
         B     TRXT
         SPACE
FLUSH    LA    R0,SZR
         LA    R1,RTBTEXT
         O     R1,=XL4'80000000'
         TGET  (1),(0),R
         B     *+4(R15)
         B     SETREGM       FIRST NOTIFY TRUNCATION
         DC    2H'0'         CANNOT BE NOWAIT
         B     RDATTN        ATTN ON READ???
         B     FLUSH         KEEP ON FLUSHING ZE INPUT
         DC    2H'0'         ILLEGAL PARMS???
         SVC   3             USER HUNG UP
         SPACE 3
SETREGM  LA    R1,LONGMSG
         LA    R0,L'LONGMSG
REPROMPT TPUT  (1),(0),R
SETREGM2 LH    R0,RTBWC      GET PROMPT COUNT
         L     R1,RTBWAPTR
         XC    RTBCURS(2,R1),RTBCURS(R1) CLEAR BALL POSITION
         LTR   R0,R0         IS THERE ANY?
         BZ    RD            GO READ AGAIN
         LR    R4,R1         POINT TO WA
         MVC   RTBTEXT(RTBPMAX),RTBPRMPT(R1) MOVE PROMPT BACK
         CH    R0,=Y(RTBPMAX) IS IT TOO LONG?
         BNH   TPUTIT
         LA    R0,RTBPMAX    MAX PROMPT SIZE
         STH   R0,RTBWC      SAVE NEW WRITE COUNT
         B     TPUTIT        GO PROMPT AGAIN
         SPACE
SETREGS  LR    R0,R1           LENGTH OF INPUT
         LA    R1,RTBTEXT      ADDRESS OF INPUT
         TM    RTBUFL,RTBUATTN IS ATTN SEQ ALLOWED
         BZ    READTEST        IF NOT SKIP THE CHECK
         L     SR,RTBWAPTR
         LH    R5,RTBATNSZ(,SR) LENGTH OF ATTN SEQ
         CR    R5,R0           CAN THERE BE AN ATTN SEQ?
         BH    READTEST        IF NOT SKIP THE CHECK
         LR    R6,R1           POINT TO INPUT
         AR    R6,R0           POINT TO END OF INPUT
         SR    R6,R5           POINT TO POSSIBLE ATTN SEQ
         BCTR  R5,R0           GUESS WHY
         EX    R5,CLCATTN      IS IT AN ATTN?
         BNE   READTEST        IF NOT RETURN
         LA    R5,1(,R5)       BACK TO CORRECT LENGTH
         CR    R5,R0           WAS IT ONLY THE ATTN SEQ?
         BE    TRXX            IF SO RETURN REAL ATTN
         C     R3,=X'005A5B7C' IS IT EDIT OR MODIFY?
         BNE   SETREGM2        IF NOT REPROMPT
         BCTR  R6,R0           POINT TO CHAR BEFORE ATTN
         CLI   0(R6),C'$'      IS IT A DOLLAR?
         BE    TRXX
         CLI   0(R6),C'!'      IS IT AN EXCLAMATION?
         BE    TRXX
         CLI   0(R6),C'@'      IS IT AN AT SIGN
         BNE   SETREGM2        IF NON OF THE ABOVE, REPROMPT
TRXX     SR    R0,R5           GET RID OF ATTN SEQ
         LA    R15,4           RETURN NONZERO CC
READTEST LTR   SR,R0           UPLOW OR TABS POSSIBLE?
         BZ    TRXT
         BCTR  SR,0
         TM    CPGFLG,CPFUPLW  UPLOW ALLOWED?
         BO    NOEXTR          YES, SKIP TRANSLATE
         EX    SR,TRUPLOW
         AIF   ('&USPS' NE '1').LBL05                      USPS01
NOEXTR   DS    0H                                          USPS01
         AGO   .LBL06                                      USPS01
.LBL05   DS    0H                                          USPS01
NOEXTR   L     R3,RTBWAPTR
         XC    RTBBSCNT(2,R3),RTBBSCNT(R3) CLEAR BS COUNT
         LA    R3,RTBTRBUF(,R3) R3: @ BUFFER FOR COPY OF INPUT
         LR    R4,SR           R4: REMAINING LENGTH - 1
         LA    R5,RTBTEXT      R5: @ RESULT OF INPUT
         SR    R0,R0           R0: PROCESSED LENGTH
         SR    R2,R2
         EX    R4,MVC2         GET A COPY OF INPUT
TABBSLP  EX    R4,TABBS        FIND A TAB OR BS
         BZ    ENDTABS         NONE, END UP
         SR    R1,R3           R1: LENGTH OF STRING W/OUT TAB
         BZ    NOMVC           IF NONE SKIP THE NEXT FEW
         BCTR  R1,0            LESS 1 FOR EX
         EX    R1,MVC1         MOVE THE STUFF OVER FROM COPY
         LA    R1,1(,R1)       ADD 1 TO GET REAL LENGTH
         AR    R5,R1           UPDATE REAL INPUT POINTER
         AR    R3,R1           UPDATE COPY POINTER
         AR    R0,R1           UPDATE PROCESSED LENGTH
         SR    R4,R1           UPDATE REMAINING LENGTH
NOMVC    LA    R3,1(,R3)       ADD 1 MORE FOR BS OR TAB CHR
         B     *(R2)           R2 WAS SET FROM THE TRT
         B     TAB             R2=4 MEANS A TAB, 8 MEANS A BS
         SPACE
         TM    RTBUFL,RTBUBACK BACK SET ?
         BO    ADDBS           IF SO TREAT BS AS A CHARCTER
         LTR   R0,R0           WAS THERE ANYTHING IN BUFFER?
         BZ    TESTREM         NO, DON'T DECREMENT
         BCTR  R0,0            REDUCE PROCESSED LENGTH
         BCTR  R5,0            REDUCE BUFFER POINTER
TESTREM  LTR   R4,R4           ANYTHING LEFT?
         BZ    TRXXT           NO, EXIT
         BCTR  R4,0            REDUCE 1 MORE FOR TAB OR BS
         B     TABBSLP         GO FIND MORE
         SPACE
ADDBS    MVI   0(R5),X'16'     MOVE IN A BS
         LA    R5,1(,R5)       ADD 1 TO BUFFER POINTER
         AH    R0,=H'1'        ADD 1 TO PROCESSED LENGTH
         L     R14,RTBWAPTR
         LH    R1,RTBBSCNT(,R14) GET BS COUNT
         LA    R1,1(,R1)       ADD 1
         STH   R1,RTBBSCNT(,R14) SAVE BS COUNT
         B     TABBSLP
         SPACE
TAB      LR    R6,R0           GET PROCESSED COUNT
         L     R14,RTBWAPTR
         SH    R6,RTBBSCNT(,R14) REDUCE IT BY # BS'S
         XC    RTBBSCNT(2,R14),RTBBSCNT(R14) CLEAR BS COUNT
         TM    RTBUFL,RTBURELT ARE TABS RELATIVE?
         BO    CURSET          IF SO SKIP THE NEXT 2
         AH    R6,RTBCURS(,R14) ADD CURSOR POSITON
CURSET   LA    R14,RTBTABS      POINT TO TABS
         LA    R1,8             AT MOST EIGHT TABS
TBLP     IC    R2,0(,R14)       GET A TAB
         LTR   R2,R2            IS THERE ONE?
         BZ    BADTABS          TOO BAD...
         BCTR  R2,0             LESS 1
         CR    R2,R6            DOES THIS ONE FIT?
         BH    FNDTAB           OK IT DOES.
         LA    R14,1(,R14)      POINT TO NEXT TAB
         BCT   R1,TBLP          AND CHECK MORE
BADTABS  LA    R1,TABMSG        UNSET TABS
         LA    R0,L'TABMSG
         B     REPROMPT
         SPACE
FNDTAB   LR    R1,R2            TAB POSITION
         SR    R1,R6            TAB TO THIS MANY POSITIONS
         AR    R0,R1            NEW PROCESSED COUNT
         BCTR  R1,0
         EX    R1,MVCB          MOVE SOME BLANKS OVER
         LA    R5,1(R1,R5)      UPDATE BUFFER POINTER
         B     TESTREM          AND GO FIND MORE
         SPACE
ENDTABS  AR    R0,R4            TOTAL LENGTH OF INPUT
         AH    R0,=H'1'         PLUS 1
         CH    R0,=Y(RTBNTEXT)  LENGTH OK?
         BH    BADTABS          NOPE
         EX    R4,MVC1          MOVE REMAINING OVER
TRXXT    LA    R1,RTBTEXT       POINT TO REAL INPUT
.LBL06   DS    0H                                          USPS01
TRXT     L     SR,RTBWAPTR
         XC    RTBCURS(2,SR),RTBCURS(SR) CLEAR BALL POSITION
TRX      SR    SR,SR
         STH   SR,RTBWC
         STH   SR,RTBPC
         STH   SR,RTBRC
         XEXIT 2,8,LTR
         SPACE 3
TRUPLOW  TR    RTBTEXT(0),UPLTAB
CLCATTN  CLC   0(0,R6),RTBATTN(SR)
MOVE     MVC   0(0,SR),0(1)
MVC2     MVC   0(0,R3),0(R5)
         AIF   ('&USPS' EQ '1').LBL07                      USPS01
TABBS    TRT   0(0,R3),TABTAB
.LBL07   DS    0H                                          USPS01
MVC1     MVC   0(0,R5),0(R3)
MVCB     MVC   0(0,R5),BLANKS
BLANKS   DC    168C' '
LONGMSG  DC    C'INPUT TOO LONG, REENTER'
         AIF   ('&USPS' EQ '1').LBL08                      USPS01
TABMSG   DC    C'UNSET TABS, REENTER'
TABTAB   DC    256X'00'
         ORG   TABTAB+X'05'
         DC    X'04'
         ORG   TABTAB+X'16'
         DC    X'08'
         ORG
         SPACE
.LBL08   DS    0H                                          USPS01
UPLTAB   DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
         EJECT
CURTAB    DC   256X'0'         FOR TRANSLATE AND TEST
          ORG  CURTAB+X'11'
          DC   X'04'
          ORG  ,
* SET TABS
         SPACE
TTABS    XENTER 2,8
         MVC   RTBTABS(8),0(1)         PLACE TABS INTO RTB
         XEXIT 2,8
         EJECT
         LTORG
         EJECT
         COPY  WYLCONST
         EJECT
PFCB     DSECT
         COPY  PFCBTSO
         EJECT
PCB      DSECT
         COPY  PCBTSO
         EJECT
PIOB     DSECT
         COPY  PIOB
         COPY VCPTSO
         EJECT
         COMMON
         SPACE
         END
./ ADD NAME=WYLWA,SSI=00000002
         TITLE 'WDIOWA --- PROTOTYPE'
         ENTRY WDIOWA
WDIOWA   WDIOWA CSECT
         END
