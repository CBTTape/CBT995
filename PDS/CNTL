./ ADD NAME=ASMJCL   0102-80182-80193-1716-00022-00042-00001-$SYS13  00
//ASMJCL  JOB (2000,S010),WENZEL,CLASS=Z
/*JOBPARM Q=F,I
//*
//ASMWYL   PROC  PRE='SYS4.WYLTSO.JUN80',
//         MEM=
//ASM      EXEC  PGM=IFOX00,PARM='LOAD'
//SYSLIB   DD    DSN=&PRE..MACLIB0,DISP=SHR,DCB=BLKSIZE=19040
//         DD    DSN=&PRE..MACLIB,DISP=SHR,DCB=BLKSIZE=19040
//         DD    DSN=SYS1.AMODGEN,DISP=SHR
//         DD    DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD    DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSUT2   DD    DSN=&&SYSUT2,UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSUT3   DD    DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSPRINT DD    SYSOUT=*
//SYSPUNCH DD    DUMMY
//SYSGO    DD    DSN=&PRE..OBJ(&MEM),DISP=SHR,
//         DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB)
//SYSIN    DD    DSN=&PRE..ASM(&MEM),DISP=SHR
//        PEND
//*
//INIT    EXEC ASMWYL,REGION=2048K,MEM=INIT
//PEDP    EXEC ASMWYL,REGION=2048K,MEM=PEDP
./ ADD NAME=ASMJCL9  0101-80182-80228-1357-00041-00042-00000-$SYS13  00
//ASMJCL  JOB (2000,S010),WENZEL,CLASS=Z
/*JOBPARM Q=F,I
//*
//ASMWYL   PROC  PRE='SYS4.WYLTSO.JUN80',
//         MEM=
//ASM      EXEC  PGM=IFOX00,PARM='LOAD'
//SYSLIB   DD    DSN=&PRE..MACLIB0,DISP=SHR,DCB=BLKSIZE=19040
//         DD    DSN=&PRE..MACLIB,DISP=SHR,DCB=BLKSIZE=19040
//         DD    DSN=SYS1.AMODGEN,DISP=SHR
//         DD    DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD    DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSUT2   DD    DSN=&&SYSUT2,UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSUT3   DD    DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSPRINT DD    SYSOUT=*
//SYSPUNCH DD    DUMMY
//SYSGO    DD    DSN=&PRE..OBJ(&MEM),DISP=SHR,
//         DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB)
//SYSIN    DD    DSN=&PRE..ASM(&MEM),DISP=SHR
//        PEND
//*
//BEXE    EXEC ASMWYL,REGION=2048K,MEM=BEXE
//BLPR    EXEC ASMWYL,REGION=2048K,MEM=BLPR
//CR      EXEC ASMWYL,REGION=2048K,MEM=CR
//CVREAL  EXEC ASMWYL,REGION=2048K,MEM=CVREAL
//INIT    EXEC ASMWYL,REGION=2048K,MEM=INIT
//PAGER   EXEC ASMWYL,REGION=2048K,MEM=PAGER
//PDIO    EXEC ASMWYL,REGION=2048K,MEM=PDIO
//PDOS    EXEC ASMWYL,REGION=2048K,MEM=PDOS
//PEDP    EXEC ASMWYL,REGION=2048K,MEM=PEDP
//PEDS    EXEC ASMWYL,REGION=2048K,MEM=PEDS
//PGOP    EXEC ASMWYL,REGION=2048K,MEM=PGOP
//PGOS    EXEC ASMWYL,REGION=2048K,MEM=PGOS
//PPRT    EXEC ASMWYL,REGION=2048K,MEM=PPRT
//PROC    EXEC ASMWYL,REGION=2048K,MEM=PROC
//PSCN    EXEC ASMWYL,REGION=2048K,MEM=PSCN
//PSGT    EXEC ASMWYL,REGION=2048K,MEM=PSGT
//PTSO    EXEC ASMWYL,REGION=2048K,MEM=PTSO
//PUTB    EXEC ASMWYL,REGION=2048K,MEM=PUTB
//PWYL    EXEC ASMWYL,REGION=2048K,MEM=PWYL
//WTR     EXEC ASMWYL,REGION=2048K,MEM=WTR
//WYLWA   EXEC ASMWYL,REGION=2048K,MEM=WYLWA
./ ADD NAME=HELPJCL  0109-80160-80234-1234-00009-00393-00009-$SYS11  00
//HELPJCL  JOB (2000,S010),WENZEL,CLASS=Z,MSGCLASS=C
//STEP1 EXEC PGM=HELPLIST
//SYSUT1   DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.HELP
//SYSINDEX DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
GENWYL
WYLBUR
/*
./ ADD NAME=IEBCOPYD 0101-80182-80182-1737-00023-00043-00000-$SYS13  00
//IEBCOPY  JOB (2000,S010),WENZEL,CLASS=Z
/*JOBPARM Q=F,I
//STEP1    EXEC PGM=IEBCOPY,REGION=1024K
//SYSPRINT DD SYSOUT=*
//OUT1     DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.ASM
//OUT2     DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.MACLIB0
//OUT3     DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.MACLIB
//IN1      DD DISP=(SHR,PASS),DSN=ASM,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(1,NL,EXPDT=98000)
//IN2      DD DISP=(SHR,PASS),DSN=CNTL,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(2,NL,EXPDT=98000)
//IN3      DD DISP=(SHR,PASS),DSN=DOCLIB,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(3,NL,EXPDT=98000)
//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(5,1))
//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(5,1))
//SYSIN    DD *
 COPY I=IN1,O=OUT1
 COPY I=IN2,O=OUT2
 COPY I=IN3,O=OUT3
/*
./ ADD NAME=IEBCOPYT 0103-80182-80193-1753-00048-00043-00047-$SYS13  00
//IEBCOPYT JOB (2000,S010),WENZEL,CLASS=Z
/*JOBPARM Q=F,I
//STEP1    EXEC PGM=IEBCOPY,REGION=1024K
//SYSPRINT DD SYSOUT=*
//IN1      DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.ASM
//IN2      DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.CNTL
//IN3      DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.DOCLIB
//IN4      DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.LOAD
//IN5      DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.MACLIB0
//IN6      DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.MACLIB
//IN7      DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.OBJ
//IN8      DD DISP=SHR,DSN=SYS4.WYLTSO.JUN80.HELP
//OUT1     DD DISP=(SHR,PASS),DSN=ASM,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(1,NL,EXPDT=98000)
//OUT2     DD DISP=(SHR,PASS),DSN=CNTL,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(2,NL,EXPDT=98000)
//OUT3     DD DISP=(SHR,PASS),DSN=DOCLIB,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(3,NL,EXPDT=98000)
//OUT4     DD DISP=(SHR,PASS),DSN=LOAD,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(4,NL,EXPDT=98000)
//OUT5     DD DISP=(SHR,PASS),DSN=MACLIB0,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(5,NL,EXPDT=98000)
//OUT6     DD DISP=(SHR,PASS),DSN=MACLIB,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(6,NL,EXPDT=98000)
//OUT7     DD DISP=(SHR,PASS),DSN=OBJ,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(7,NL,EXPDT=98000)
//OUT8     DD DISP=(SHR,PASS),DSN=HELP,
//         VOL=SER=WENZEL,
//         UNIT=TAPE,LABEL=(8,NL,EXPDT=98000)
//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(5,1))
//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(5,1))
//SYSIN    DD *
 COPY I=IN1,O=OUT1
 COPY I=IN2,O=OUT2
 COPY I=IN3,O=OUT3
 COPY I=IN4,O=OUT4
 COPY I=IN5,O=OUT5
 COPY I=IN6,O=OUT6
 COPY I=IN7,O=OUT7
 COPY I=IN8,O=OUT8
/*
./ ADD NAME=INFO     0100-80193-80193-1719-00043-00043-00000-$SYS13  00
TO RUN WYLBUR UNDER TSO:

1)  INSTALL INTO CMDLIB IN WHICH CASE WYLBUR BECOMES A COMMAND PROCESSOR
2)  INSTALL IN SOME LOADLIB AND: CALL '..DSN..(WYLBUR)'

FOR BEST PERFORMANCE, WYLBUR (JUST THE MAIN MODULE - WYLBUR) SHOULD
BE IN THE TIMESHARE LINK PACK AREA.  THE SWAP LOAD IS THEN AROUND
30K OR SO.

3)  WHEN WYLBUR IS INVOKED, IT EXPECTS A PAGEFILE TO BE ALLOCATED
    (AND FORMATTED).  THE PAGEFILE DDNAME IS "PAGE0".  MULTIPLE
    PAGEFILES (OR MULTI-EXTENTS) ARE NOT SUPPORTED.

    IF THE PAGEFILE IS NOT PROPERLY FORMATTED, WYLBUR WILL FORMAT IT.

4)  DDNAME CONVENTIONS.  IN ORDER FOR WYLBUR TO ACCESS A PACK THE
    PACK MUST BE ALLOCATED TO WYLBUR.

    DDNAMES BEGINING WITH:
      IO... -  INPUT/OUTPUT VOLUMES (SAVES AND USES ALLOWED)
      IN... -  INPUT ONLY VOLUMES (ONLY USES PERMITTED)

5)  IF A PACK IS NOT PREALLOCATED, WYLBUR WILL ATTEMPT TO USE A
    DD DYNAM FOR THE PACK.  WYLBUR ATTEMPTS TO ALLOCATE A
    DATASET WITH DSN=WYL.CU.CTR.VTOC,VOL=SER=......,DISP=SHR.

    THUS ZERO TRACK DATASETS SHOULD BE PRE-ALLOCATED ON PUBLIC
    VOLUMES.  TO CHANGE THE DEFAULT DSNAME LOOK AT MODULE: PDIO
    AND WYLWA.

6)  THERE ARE TWO TYPES OF WYLBUR USERS.  PRIVILIGED AND NORMAL.
    PRIVILEGED USERS CAN MODIFY DATASETS NOT BELONGING TO THEM.

7)  NEW COMMANDS:
      TO <USERID> ...MSG.
          IF <USERID> IS LOGGED ON HE WILL RECEIVE THE 'MSG'.
      TSO
          ATTACHES THE TMP (IKJEFT01).
          YOU CAN TYPE IN ANY TSO COMMANDS.  WHEN DONE TYPE IN: LOGOFF
          DO NOT HIT ATTENTION WHEN YOU ARE AT THIS LEVEL OF TSO.
          YOU WILL THEN RETURN TO WYLBUR.
      SHOW USERS
          GIVES A LIST OF CURRENT TSO USERS.
./ ADD NAME=LINIT    0102-80113-80113-1659-00091-00108-00000-$SYS13  00
 INCLUDE SYSLIB(INIT)
 INCLUDE SYSLIB(PEDP)
 INCLUDE SYSLIB(PGOP)
 INCLUDE SYSLIB(PSGT)
 INCLUDE SYSLIB(PTSO)
 OVERLAY ONE
 INSERT P001
 OVERLAY ONE
 INSERT P002
 OVERLAY ONE
 INSERT P003
 OVERLAY ONE
 INSERT P004
 OVERLAY ONE
 INSERT P005
 OVERLAY ONE
 INSERT P006
 OVERLAY ONE
 INSERT P007
 OVERLAY ONE
 INSERT P008
 OVERLAY ONE
 INSERT P009
 OVERLAY ONE
 INSERT P010
 OVERLAY ONE
 INSERT P011
 OVERLAY ONE
 INSERT P012
 OVERLAY ONE
 INSERT P013
 OVERLAY ONE
 INSERT P014
 OVERLAY ONE
 INSERT P015
 OVERLAY ONE
 INSERT P016
 OVERLAY ONE
 INSERT P017
 OVERLAY ONE
 INSERT P018
 OVERLAY ONE
 INSERT P019
 OVERLAY ONE
 INSERT P020
 OVERLAY ONE
 INSERT P021
 OVERLAY ONE
 INSERT P022
 OVERLAY ONE
 INSERT P023
 OVERLAY ONE
 INSERT P024
 OVERLAY ONE
 INSERT P025
 OVERLAY ONE
 INSERT P026
 OVERLAY ONE
 INSERT P027
 OVERLAY ONE
 INSERT P028
 OVERLAY ONE
 INSERT P029
 OVERLAY ONE
 INSERT P030
 OVERLAY ONE
 INSERT P031
 OVERLAY ONE
 INSERT P032
 OVERLAY ONE
 INSERT P033
 OVERLAY ONE
 INSERT P034
 OVERLAY ONE
 INSERT P035
 OVERLAY ONE
 INSERT P036
 OVERLAY ONE
 INSERT P037
 OVERLAY ONE
 INSERT P038
 OVERLAY ONE
 INSERT P039
 OVERLAY ONE
 INSERT P040
 OVERLAY ONE
 INSERT P041
 OVERLAY ONE
 ENTRY INITWYL
 SETCODE AC(1)
 NAME WYLINIT(R)
./ ADD NAME=LWYLBUR  0100-80113-80113-1516-00019-00019-00000-$SYS13  00
 INCLUDE SYSLIB(PWYL)
 INCLUDE SYSLIB(PDIO)
 INCLUDE SYSLIB(PAGER)
 INCLUDE SYSLIB(WTR)
 INCLUDE SYSLIB(PROC)
 INCLUDE SYSLIB(PSCN)
 INCLUDE SYSLIB(PDOS)
 INCLUDE SYSLIB(CVREAL)
 INCLUDE SYSLIB(CR)
 INCLUDE SYSLIB(PEDS)
 INCLUDE SYSLIB(PGOS)
 INCLUDE SYSLIB(BEXE)
 INCLUDE SYSLIB(BLPR)
 INCLUDE SYSLIB(PUTB)
 INCLUDE SYSLIB(PPRT)
 ENTRY WYLTSO
 ALIAS W
 SETCODE AC(1)
 NAME WYLBUR(R)
./ ADD NAME=LWYLWA   0100-80113-80113-1516-00004-00004-00000-$SYS13  00
 INCLUDE SYSLIB(WYLWA)
 ENTRY WDIOWA
 SETCODE AC(1)
 NAME WYLWA(R)
./ ADD NAME=WASMPDS  0102-80113-80170-1257-00006-00006-00004-$SYS13  00
PROC 1 NAME OPTION() PRE(SYS4.WYLTSO)
ASMX '&PRE..ASM(&NAME.)' &OPTION NOMAC -
                       LIB('SYS1.MACLIB' -
                           '&PRE..MACLIB') -
                      LOAD('&PRE..OBJ(&NAME.)')
END
./ ADD NAME=WYLASM   0101-80170-80193-1718-00008-00005-00000-$SYS13  00
PROC 1 NAME OPTION() PRE(SYS4.WYLTSO.JUN80)
ASMX '&PRE..ASM(&NAME.)' &OPTION NOMAC -
                      LIB('&PRE..MACLIB0' -
                          '&PRE..MACLIB'  -
                          'SYS1.MACLIB'   -
                          'SYS1.AMODGEN') -
                      LOAD('&PRE..OBJ(&NAME.)')
END
./ ADD NAME=WYLLINK  0103-80113-80193-1718-00006-00006-00000-$SYS13  00
PROC 2 MEMBER OUT PRE(SYS4.WYLTSO.JUN80)
ALLOC F(SYSUT1) SP(5,5) CYL REUSE
ALLOC DA(&OUT) SHR F(SYSLMOD) REUSE
ALLOC DA('&PRE..CNTL(L&MEMBER.)') SHR F(SYSLIN) REUSE
ALLOC DA('&PRE..OBJ') SHR F(SYSLIB) REUSE
# IEWL 'NCAL,LIST,OVLY,TEST,LET,XREF,MAP,SIZE=(128K,32K)'
