./ ADD NAME=ALLOC
         MACRO
&NAME    ALLOC &DUMMY,&PERM,&DSN=,&DDN=,&DDNRET=,&MEMBER=,&DISP=,      X
               &VOL=,&UNIT=,&SYSOUT=,&FREE=,&COPIES=,&LABEL=,          X
               &BLKSIZE=,&DEN=,&DSORG=,&KEYLEN=,&LRECL=,&RECFM=,       X
               &PASWORD=,&DSNRET=,&MF=AUTO,&PREFIX=,&ERROR=,           X
               &SPACE=,&F=,&FILE=,&DA=,&QNAME=,&DSORGRT=,              X
               &VOLRET=,&DCBDSN=,&DCBDDN=,&SPECIAL=,&DDNTO=,           X
               &FORMS=,&DEST=,&SSREQ=,&FORUSER=,&TU=,&DSNPDE=
.**********************************************************************
.*                                                                    *
.*    THIS MACRO PROVIDES A DYNAMIC ALLOCATION FUNCTION BY BUILDING   *
.*    A DYNAMIC ALLOCATION PARAMETER LIST AND INVOKING SVC 99.        *
.*    IT FIRST SETS UP A WORKAREA ENVIRONMENT FOR THE PARAMETER LIST  *
.*    AND THEN TESTS THE KEYWORDS SUPPLIED AND INVOKES INNER MACROS   *
.*    TO BUILD THE TEXT UNITS. THE INNER MACROS THEMSELVES USE INNER  *
.*    MACROS TO UPDATE GLOBAL VARIABLES, STORE TEXT UNIT POINTERS ETC *
.*    THERE ARE THREE WAYS OF SPECIFYING THE WORK AREA ADDRESS.       *
.*    A) MF=AUTO, MF=G, MF=(E,ADDRESS,LNTHSYMB).                      *
.*    IN THE FIRST FORM, AN INNER MACRO DYNSPACE IS CALLED TO NAME    *
.*    A WORK AREA, THE NAME BEING RETURNED IN THE GLOBAL SETC         *
.*    VARIABLE &DYNSP. A DSECT IS CREATED TO MAP THIS AREA.           *
.*    THE GLOBAL VARIABLES &DTUO (TEXT UNIT OFFSET COUNTER) AND       *
.*    &DTUPO (TEXT UNIT POINTER OFFSET ACCUMULATOR) ARE SET TO ZERO.  *
.*    THESE ACCUMULATORS ARE UPDATED AS EACH TEXT UNIT PROCESSOR      *
.*    AQUIRES STORAGE. AFTER ALL TEXT UNITS HAVE BEEN BUILT, THE      *
.*    AMOUNT OF SPACE USED IS CALCULATED, AND THE DYNSPACE MACRO IS   *
.*    THEN CALLED AGAIN TO LOG THE AMOUNT NEEDED. DYNSPACE SETS A     *
.*    GLOBAL VARIABLE &DYNSPQ TO THE HIGHEST AMOUNT ANY ALLOC OR      *
.*    FREE MACRO REQUESTED, AND WHEN CALLED WITH THE EXPAND OPTION,   *
.*    (NO OPERANDS OR NAME FIELD SUPPLIED), EXPANDS INTO A DS FOR     *
.*    THAT QUANTITY. (SEE DYNSPACE)                                   *
.*    MF=G SPECIFIES THAT THE ALLOC MACRO ENTER THE BEGIN MACRO       *
.*    WORKAREA TO ACQUIRE THE STORAGE NECESSARY. IT DOES THIS VIA     *
.*    THE RCPDS MACRO. (SEE RCPDS). HOWEVER, IF THE ALLOC MACRO IS    *
.*    CALLED SEVERAL TIMES WITH THIS OPTION, A LOT OF STORAGE WILL BE *
.*    USED UP, AS THE STORAGE WILL NOT BE SHARED. THUS, THIS FORM     *
.*    SHOULD ONLY BE USED IF THE ALLOC/FREE MACRO IS ONLY TO BE USED  *
.*    ONCE OR TWICE DURING AN ASSEMBLY.                               *
.*    MF=E CAUSES THE MACRO TO USE A USER SPECIFIED WORK AREA. THE    *
.*    SECOND PARAMETER GIVES THE NAME OF THE WORKAREA, AND AN         *
.*    OPTIONAL THIRD PARAMETER IS THE NAME OF A SYMBOL TO BE EQUATED  *
.*    TO THE LENGTH OF THE REQUIRED WORK AREA.                        *
.*                                                                    *
.*    DYNAMIC ALLOCATION FUNCTIONS ARE SIMILAR TO THOSE AVAILABLE    *
.*    WITH JCL, USING THE SAME KEYWORDS. HOWEVER, CERTAIN FORMATS    *
.*    ARE SLIGHTLY DIFFERENT. FOR INSTANCE, CERTAIN KEYWORDS CAN     *
.*    HAVE VARYING PARAMETERS, EG DATASET NAME, DDNAME, VOLSER ETC.  *
.*    PROVISION IS MADE FOR BOTH VARIABLE SPECIFICATION.             *
.*    IN THE ABSOLUTE FORM, THE PARAMETER IS ENTERED IN QUOTES,      *
.*    E.G.   ALLOC DSN='SYS1.LINKLIB',DISP=SHR                       *
.*    HOWEVER, THIS NAME REMAINS FIXED FOR THE ASSEMBLY.             *
.*    IN THE VARIABLE FORMAT, THE ADDRESS OF A LOCATOR IS SPECIFIED, *
.*    WHERE THE LOCATOR CONSISTS OF A SIX BYTE FIELD, THE FIRST 4    *
.*    BYTES OF WHICH POINT TO THE PARAMETER, WHILE THE NEXT TWO      *
.*    CONTAIN THE LENGTH.                                            *
.*    EG          ALLOC DSN=LOCATOR                                  *
.*       LOCATOR  DC    A(DSN),Y(12)                                 *
.*       DSN      DC    C'SYS1.LINKLIB'                              *
.*                                                                   *
.*       NUMERIC QUANTITIES E.G. COPIES= FOR SYSOUT, SHOULD EITHER   *
.*       SPECIFY A NUMERIC VALUE, COPIES=3,                          *
.*       A VALUE IN A REGISTER, COPIES=(R3),                         *
.*       OR THE NAME OFF A FULLWORD CONTAINING THE VALUE,            *
.*          COPIES=NUMCOPYS, WHERE NUMCOPYS IS THE NAME OF A         *
.*       FULLWORD FIELD.                                             *
.*                                                                   *
.*       OTHER KEYWORDS SUCH AS DISP= CAN ONLY HAVE THE ABSOLUTE     *
.*       FORM, AND VALUES SHOULD NOT BE ENTERED WITHIN QUOTES.       *
.*       ADDITIONAL FACILITIES NOT AVAILABLE WITH JCL ARE THE        *
.*       RETURN BY THE SYSTEM OF INFORMATION ON THE DATASET, EG      *
.*       DSORG. THIS IS DONE BY SPECIFYING DSORGRT=SYMBOL, WHERE     *
.*       SYMBOL IS A SYMBOL WHICH WILL BE EQUATED TO A TWO BYTE      *
.*       FIELD CONTAINING THE DSORG TYPE (SEE JOB MANAGEMENT,        *
.*       SUPERVISOR AND TSO).                                        *
.*       THE SYSTEM CAN ALSO GENERATE AND RETURN A DDNAME. THIS IS   *
.*       CARRIED OUT BY ENTERING DDNTO=(ADDR1,ADDR2,,...)            *
.*       WHERE ADDR1,ADDR2 ETC ARE THE NAMES OF 8 BYTE FIELDS WHICH  *
.*       ARE TO RECEIVE THE DDNAME.                                  *
.*       FOR FURTHER INFORMATION ON DYNAMIC ALLOCATION, SEE          *
.*       JOB MANAGEMENT, SUPERVISOR AND TSO.                         *
.*                                                                   *
.**********************************************************************
         GBLA  &RCPDYN            COUNTER FOR NO ENTRIES TO MACRO
         GBLA  &DTUO              OFFSET TO TEXT UNITS
         GBLA  &DTUPO             OFFSET TO TEXT UNIT POINTERS
         GBLB  &RCPS99(2)         TELL RCPDSECT NEED DSECTS
         GBLC  &DYNP              PREFIX FOR LABELS FOR THIS CALL
         GBLC  &DYNSP         NAME FOR AUTOMATIC STORAGE ALLOC
         LCLA  &DDNRTO,&DSNRTO         FOR EQUATES FOR RETURNED FLDS
         LCLA  &VOLRTO,&DSRGRTO        FOR EQUATES FOR RETURNED FIELDS
         LCLA  &I                 COUNTER
         LCLB  &DSECT             DSECT NEEDED FOR STORAGE, MF=E
         LCLC  &C,&T,&PAR
.*
.*   THE ALLOC MACRO PROVIDES A DYNAMIC ALLOCATION FUNCTION,
&RCPS99(1)     SETB           1
&RCPDYN  SETA  &RCPDYN+1          INCEREMENT COUNTER
&DYNP    SETC  'DYN&RCPDYN' SET DEFAULT PREFIX
&NAME    DS    0H
         AIF   ('&PREFIX' EQ '').TMF
         AIF   (K'&PREFIX LT 4).POK
         MNOTE 4,'PREFIX TOO LONG, 1ST 4 CHARS USED'
&DYNP    SETC  '&PREFIX'(1,4)
         AGO   .TMF
.POK     ANOP
&DYNP    SETC  '&PREFIX'
.TMF     AIF   ('&MF(1)' EQ 'G').GEN
         AIF   ('&MF' NE 'AUTO').TMFE
NAME     DYNSPACE             GET NAME FOR SPACE
         LA    R1,&DYNSP               LOAD ADDRESS OF PARAM LIST
         USING &DYNP.DS,R1             USE GENERATED DSECT
&T       SETC  'A'
&PAR     SETC  '&DYNSP+4'
&DSECT   SETB  1
         AGO   .START
.TMFE    AIF   ('&MF(2)' NE '').E2OK
         MNOTE 4,'PLIST ADDRESS OMITTED, MF=G USED'
         AGO   .GEN
.E2OK    ANOP
&DSECT   SETB  1
         AIF   ('&MF(2)' EQ '(').RMFE
         LA    R1,&MF(2)               LOAD PARAM LIST ADDRESS
         USING &DYNP.DS,R1             USE GENERATED DSECT
         AGO   .START
.RMFE    AIF   ('&MF(2)' EQ '(R1)' OR '&MF(2)' EQ '(1)').START
         LR    R1,&PAR                 LOAD S99 PARAM LIST ADDRESS
         AGO   .START
.GEN     LA    R1,&DYNP.RBP            LOAD ADDRESS OF S99 RBP
.START   LA    R15,&DYNP.RB            LOAD ADDRESS OF S99 RB
         USING S99RB,R15
         ST    R15,0(R1)               AND STORE IN RB POINTER
         XC    4(&DYNP.LEN-4,R1),4(R1) ZERO PARAMETER LIST
         MVI   S99RBLN,20              MOVE IN LIST LENGTH
         MVI   S99VERB,S99VRBAL        MOVE IN VERB CODE
         LA    R14,&DYNP.TUP           LOAD ADDRESS OF TU POINTERS
         ST    R14,S99TXTPP            STORE ADDRESS IN S99 RB
         LA    R15,&DYNP.TU            POINT TO SPACE FOR TEXT UNITS
         USING S99TUNIT,R15
&DTUO    SETA  0
&DTUPO   SETA  0
         AIF   ('&SSREQ' EQ 'YES').SSREQ
.TDSN    AIF   ('&DSN&DA' NE '').DSN
         AIF   ('&DSNPDE' NE '').DSNPDE
         AIF   ('&DSNRET' NE '').DSNRT
         AIF   ('&SYSOUT' NE '').SYSOUT
         AIF   ('&DUMMY' NE '').DUMMY
         AIF   ('&QNAME' NE '').QNAME
.TDDN    AIF   ('&DDN&FILE&F' NE '').DDN
         AIF   ('&DDNRET&DDNTO' NE '').DDNRT
.TUNIT   AIF   ('&UNIT&VOL' NE '').UNIT
.TVOLRET AIF   ('&VOLRET' NE '').VOLRET
.TDSRGO  AIF   ('&DSORGRT' NE '').DSORGRT
.TLABEL  AIF   ('&LABEL' NE '').LABEL
.TPSWD   AIF   ('&PASWORD' NE '').PASWORD
.TFORUSE AIF   ('&FORUSER' NE '').FORUSER
.TTU     AIF   ('&TU' NE '').TU
.TDISP   AIF   ('&DISP' NE '').DISP
.TSPACE  AIF   ('&SPACE' NE '').SPACE
.TLRECL  AIF   ('&LRECL' NE '').DCB
         AIF   ('&DEN' NE '').DCB
         AIF   ('&RECFM' NE '').DCB
         AIF   ('&BLKSIZE' NE '').DCB
         AIF   ('&DSORG' NE '').DCB
         AIF   ('&KEYLEN' NE '').DCB
.TDCBDSN AIF   ('&DCBDSN' NE '').DCBDSN
.TDCBDDN AIF   ('&DCBDDN' NE '').DCBDDN
.TFREE   AIF   ('&FREE' EQ 'CLOSE').FREE                         TE7343
.TPERM   AIF   ('&PERM' EQ 'PERM' OR '&PERM' EQ 'PERMANENT').PERM
         AIF   ('&DUMMY' EQ 'PERM' OR '&DUMMY' EQ 'PERMANENT').PERM
.TSPECI  AIF   ('&SPECIAL' NE '').SPECIAL
         AGO   .SVC99
.SSREQ   RCPSSREQ
         AGO   .TDSN
.DSN     RCPDSN &DSN&DA,&MEMBER
         AGO   .TDDN
.DSNPDE  RCPDSNPD &DSNPDE
         AGO   .TDDN
.DSNRT   RCPDSNRT &DSNRET
&DSNRTO  SETA  &DTUO-46
         AGO   .TDDN
.SYSOUT  RCPSYSOU &SYSOUT,COPIES=&COPIES,FREE=&FREE,DEST=&DEST,        X
               FORMS=&FORMS
         AGO   .TDDN
.DUMMY   RCPDUMMY &DUMMY
         AGO   .TDDN
.QNAME   RCPQNAME &QNAME
         AGO   .TDDN
.DDN     RCPDDN &DDN&F&FILE
         AGO   .TUNIT
.DDNRT   RCPDDNRT &DDNRET
&DDNRTO  SETA  &DTUO-10
         AGO   .TUNIT
.UNIT   RCPUNIT &UNIT,&VOL
         AGO   .TVOLRET
.VOLRET  RCPVOLRT &VOLRET
&VOLRTO  SETA  &DTUO-8
         AGO   .TDSRGO
.DSORGRT RCPDSRGR
&DSRGRTO SETA  &DTUO-2
         AGO   .TLABEL
.LABEL   RCPLABEL &LABEL
         AGO   .TPSWD
.PASWORD RCPPSWD &PASWORD
         AGO   .TFORUSE
.FORUSER RCPFORUS &FORUSER
         AGO   .TTU
.TU      RCPTU &TU
         AGO   .TDISP
.DISP    RCPDISP &DISP
         AGO   .TSPACE
.SPACE   RCPSPACE &SPACE
         AGO   .TLRECL
.DCB     RCPDDCB LRECL=&LRECL,DEN=&DEN,RECFM=&RECFM,BLKSIZE=&BLKSIZE,  X
               DSORG=&DSORG,KEYLEN=&KEYLEN
         AGO .TDCBDSN
.DCBDSN  RCPDCBDS &DCBDSN
         AGO .TDCBDDN
.DCBDDN  RCPDCBDD &DCBDDN
         AGO .TFREE                                              TE7343
.FREE    RCPFREE  &FREE                                          TE7343
         AGO   .TPERM
.PERM    RCPPERM
         AGO   .TSPECI
.SPECIAL RCPSPEC &SPECIAL
.SVC99   ANOP
&DTUPO   SETA  &DTUPO-4
         SPACE
         MVI   &DYNP.TUP+&DTUPO,X'80'  SET HIGH ORDER BIT ON TEXT PTRS
         MVI   &DYNP.RBP,X'80'         SET HIGH ORDER BIT ON RB PTR
         RCPSR2 UNSAVE
&DTUPO   SETA  &DTUPO+4
         AIF   (NOT &DSECT).DYNA
         DROP  R1,R15                  DEACTIVATE ADDRESSABILITY
         LA    R14,4(R1)               POINT TO REQUEST BLOCK
.DYNA    DYNALLOC
         AIF   (NOT &DSECT).LTR
         USING &DYNP.RB,R14            SET UP ADDRESSABILITY
**       NOTE  R14 HAS RB ADDRESS, R15 HAS SVC 99 RETURN CODE        **
.LTR     AIF   ('&ERROR' EQ '').TDDTO
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   &ERROR                  BRANCH IF NON ZERO
.TDDTO   AIF   ('&DDNTO' EQ '').RESERVE
&I       SETA  0
.DDNTOL  ANOP
&I       SETA  &I+1
         AIF   ('&DDNTO(&I)' EQ '').RESERVE
         AIF   ('&DDNTO(&I)'(1,1) EQ '(').DDNTOR
         MVC   &DDNTO(&I).(8),&DYNP.TU+&DDNRTO+2
         AGO   .DDNTOL
.DDNTOR  ANOP
&C       SETC  '&DDNTO(&I)'(2,K'&DDNTO(&I)-2)
         MVC   0(8,&C),&DYNP.TU+&DDNRTO+2
         AGO   .DDNTOL
.RESERVE AIF   (&DSECT).RESDS
         SPACE 1
***********************************************************************
**       RESERVE SPACE FOR DYNALLOC PARAMETER LIST                   **
***********************************************************************
         RCPDS
.SSP     ANOP
&DYNP.RBP DS   F                       SVC 99 REQ BLOCK POINTER
&DYNP.RB  DS   5F                      SVC 99 REQUEST BLOCK
&DYNP.TUP DS   CL&DTUPO                SPACE FOR TEXT POINTERS
         AIF   (&DTUO EQ 0).DTU21
&DYNP.TU  DS   CL&DTUO                 SPACE FOR TEXT UNITS
         AIF   (&DSNRTO EQ 0).TDDNRTO
&DSNRET  EQU   &DYNP.TU+&DSNRTO        OFFSET TO RETURNED DSN
.TDDNRTO AIF   ('&DDNRET' EQ '').DTU11
&DDNRET  EQU   &DYNP.TU+&DDNRTO        OFFSET TO RETURNED DDNAME
.DTU11   AIF   (&VOLRTO EQ 0).DTU12
&VOLRET  EQU   &DYNP.TU+&VOLRTO        OFFSET TO RETURNED VOLSER
.DTU12   AIF   (&DSRGRTO EQ 0).DTU10
&DSORGRT EQU   &DYNP.TU+&DSRGRTO       OFFSET TO RETURNED DSORG
         AGO   .DTU10
.DTU21   ANOP
&DYNP.TU  DS   0C                      NO SPACE NEEDED FOR TEXT UNITS
.DTU10   ANOP
&DYNP.LEN EQU  *-&DYNP.RBP             LENGTH OF SPACE USED
         AIF   (&DSECT).DSP
         RCPDS
         SPACE 3
         AGO   .EXIT
.RESDS   ANOP
         AIF   ('&DYNSP' EQ '').SP3
         DYNSPACE ADD
.SP3     SPACE
&DYNP.DS DSECT                         DSECT TO MAP SVC 99 DATA
         AGO   .SSP
.DSP     AIF   ('&MF(3)' EQ '').END1
&MF(3)   EQU   &DYNP.LEN               LENGTH OF AREA
.END1    ANOP
&SYSECT  CSECT
         SPACE 3
.EXIT    MEND
./ ADD NAME=BLPRWA   0100-79355-79355-0620-00019-00019-00000-TEC015  00
         MACRO
         BLPRWA
BLPRWA   DSECT
         SPACE
WAFLAG1  DS    X
         SPACE
WALOWCOL EQU   X'80'              LOW COL SPECIFIED
WAHICOL  EQU   X'40'              HI COLUMN SPECIFIED
WAFMRKN  EQU   X'20'              LIST MARKER
WAFTWLN  EQU   X'10'
WAF2LNS  EQU   X'08'              LIST TWOLINES
WAFSQUSH EQU   X'04'              LIST SQUSHED
WAFCAN   EQU   X'02'              CANCEL RUN
         SPACE 3
WAMRKCH  DS    CL1
WA2LNCH  DS    CL1
         DS    0F
WASIZE   EQU   *-BLPRWA
         MEND
./ ADD NAME=BTD
         MACRO
&L       BTD   &LOC,&LEN,&WORD,&SW
&L       SYSLR 15,&WORD,OP=L
         SYSLR 0,&LEN,TYPE=&SW
         SYSLR 1,&LOC
         CVCALL BTD
         MEND
./ ADD NAME=BTX
         MACRO
&L       BTX   &LOC,&LEN,&WORD
&L       SYSLR 15,&WORD,OP=L
         SYSLR 0,&LEN
         SYSLR 1,&LOC
         CVCALL BTX
         MEND
./ ADD NAME=CA
         MACRO                                                   JH2038
         CA    &DUMMY   (&DUMMY ALLOWS COMMENTS FIELD)           JH2038
.*                                                               JH2038
.*CHANGED 72.038 (07FEB72), J. HALPERIN.                         JH2038
.*  CHANGE FROM COPY TO MACRO CALL.                              JH2038
.*  ADD CATCB FIELD.                                             JH2038
.*                                                               JH2038
*
*  CONTROL AREA
*
CASTART  DS    0F
CAFL     DS    0X .     --FLAG BYTE
*
CAFECB   EQU   X'80' .  CAECB CONTAINS AN ECB ADDR
CAFQF    EQU   X'40' .  QUEUE HAS OVERFLOWED
CAFQE    EQU   X'20' .  QUEUE HAS BEEN EMPTIED
*
CAECB    DS    A .      ADDR OF ECB
CATCB    DS    A .      ADDR OF TCB CORRESPONDING TO ECB        +JH2038
CAQCTR   DS    F .      NUMBER OF ENTRIES IN THE QUEUE
*
CAQSIZE  EQU   16 .     QUEUE CAPACITY (WORDS)
*
CAQUEUE  DS    (CAQSIZE)F
*
CASIZE   EQU   *-CASTART
         MEND                                                    JH2038
./ ADD NAME=CALCTRK,SSI=00009345
         LA    R6,CPWA             SET BASE
         USING DVTAREA,R6              FOR DEVTABLE
         LA    R0,CPSIZE           SET R0 TO BLKSIZE ALSO
         LR    R3,R0               SET R3 ALSO
         MH    R3,DVTTOL           MULT BY TOLERANCE
         SRA   R3,9                DIVIDE BY 512
         SR    R1,R1               SET FOR IC
         IC    R1,DVTKEYO          GET KEY OVERHEAD
         SR    R0,R1               ADJUST BLKSIZES SINCE NO KEYS
         SR    R3,R1
         TM    DVTFLAG,DVTFOHD     IS IT HALF WORD OVERHEAD
         BO    CALCTRK1            BR YES
         IC    R1,DVTBLKO          GET NORMAL BLOCK OVERHEAD
         AR    R3,R1               ADJUST NORMAL VALUE
         IC    R1,DVTLBLKO         GET LAST BLOCK OVERHEAD
         AR    R0,R1               ADJUST LAST BLOCK VALUE
         B     CALCTRK2            NOW GO ON
         SPACE
CALCTRK1 LH    R1,DVTBLKO          GET BLOCK OVERHEAD
         AR    R0,R1               ADJUST BOTH FOR
         AR    R3,R1                   BLOCK OVERHEAD
CALCTRK2 LH    R1,DVTTRKSZ         GET TRACK SIZE
         SR    R1,R0               ADJUST FOR LAST BLOCK
         AR    R1,R3               ADD TO INCR COUNT BY 1
         SR    R0,R0               SET FOR DIVIDE
         DR    R0,R3               CALCULATE VALUE IN R1
         DROP  R6
./ ADD NAME=CAMLST
         MACRO
&NAME    CAMLST &PAR1,&PAR2,&PAR3,&PAR4,&OPT1,&OPT2,&OPT3,&DUMMY=
         LCLA  &B1,&B2,&B3,&CTR
         LCLB  &P(16),&OP(3),&D(4),&NOGO                            TSO
         AIF   ('&PAR1' EQ '').E1
         AIF   ('&PAR2' EQ '').E2
.R1      ANOP
&P(1)    SETB  ('&PAR1' EQ 'CAT' OR '&PAR1' EQ 'CATBX')             TSO
&P(2)    SETB  ('&PAR1' EQ 'RECAT')
&P(3)    SETB  ('&PAR1' EQ 'UNCAT' OR '&PAR1' EQ 'UCATDX')          TSO
&P(4)    SETB  ('&PAR1' EQ 'BLDX' OR '&PAR1' EQ 'CATBX')            TSO
&P(5)    SETB  ('&PAR1' EQ 'BLDG')
&P(6)    SETB  ('&PAR1' EQ 'BLDA')
&P(7)    SETB  ('&PAR1' EQ 'LNKX')
&P(8)    SETB  ('&PAR1' EQ 'DLTX' OR '&PAR1' EQ 'UCATDX')           TSO
&P(9)    SETB  ('&PAR1' EQ 'DLTA')
&P(10)   SETB  ('&PAR1' EQ 'DRPX')
&P(11)   SETB  ('&PAR1' EQ 'NAME')
&P(12)   SETB  ('&PAR1' EQ 'BLOCK')
&P(13)   SETB  ('&PAR1' EQ 'SEARCH')
&P(14)   SETB  ('&PAR1' EQ 'SEEK')
&P(15)   SETB  ('&PAR1' EQ 'SCRATCH')
&P(16)   SETB  ('&PAR1' EQ 'RENAME')
&CTR     SETA  &P(1)+&P(2)+&P(3)+&P(4)+&P(5)+&P(6)+&P(7)+&P(8)+&P(9)
&CTR     SETA  &CTR+&P(10)+&P(11)+&P(12)+&P(13)+&P(14)+&P(15)+&P(16)
         AIF   (&CTR EQ 0).E3                                       TSO
&D(1)    SETB  ('&PAR3' NE '')
&D(2)    SETB  ('&PAR4' NE '')
         AIF   (NOT &D(1) AND (&P(13) OR &P(14) OR &P(16))).E4
.R3      AIF   (&D(1) AND &P(15)).E5
         AIF   (NOT &D(2) AND (&P(1) OR &P(2) OR &P(6) OR &P(7) OR &P(1X
               1) OR &P(12) OR &P(13) OR &P(14) OR &P(15) OR &P(16))).E
         AIF   (&P(1) AND &P(4)).R2                                 TSO
         AIF   (&D(2) AND (&P(3) OR &P(4) OR &P(5) OR &P(8) OR &P(9) ORX
               &P(10))).E6
.R2      AIF   ('&OPT1' EQ '').CONTA
         AIF   ('&OPT1' NE 'DELETE').E7
&OP(1)   SETB  1
         AIF   (NOT &P(5)).E7
.CONTA   AIF   ('&OPT2' EQ '').CONTB
&OP(2)   SETB  ('&OPT2' EQ 'EMPTY')
&OP(3)   SETB  ('&OPT2' EQ 'OVRD')
         AIF   (&OP(2)+&OP(3)  NE 1).E8
         AIF   (NOT &P(5) AND &OP(2) OR(NOT &P(15) AND &OP(3))).E8
.CONTB   AIF   ('&OPT3' EQ '' AND &P(5)).E10
         AIF   ('&OPT3' NE '' AND NOT &P(5)).E11
         AIF   (&NOGO EQ 1).END
&B1      SETA  128*&D(1)+64*&D(2)+32*&P(1)+20*&P(2)+8*&P(3)+2*&P(12) O
&D(4)    SETB  (&P(3) OR &P(8))                                     TSO
&B1      SETA  &B1+4*(&P(11)+&P(5)+&P(6)+&P(7)+&D(4)+&P(9)+&P(10))  TSO
&D(3)    SETB  (&P(1) OR &P(4))                                     TSO
&B1      SETA  &B1+4*&D(3)+&P(13)+&P(15)+&P(16)                     TSO
&B2      SETA  128*&P(14)+64*&P(4)+32*&P(5)+16*&P(6)+8*&P(7)+4*&P(8)+&PX
               (9)
&B3      SETA  128*&P(10)+64*&P(15)+32*&P(16)+64*&OP(1)+16*&OP(3)+8*&OPX
               (2)
&NAME    DS    0F                                ALIGN ON FULL WORD
         DC    AL1(&B1)                          THREE BYTES OF FLAGS
         DC    AL1(&B2)                          INDICATING THE FUNC-
         DC    AL1(&B3)                          TION TO BE PERFORMED
         AIF   (&P(5)).CONTC
         DC    AL1(0)                            NO OPTION THREE
         AGO   .CONTD
.CONTC   DC    AL1(&OPT3)                        NO. OF ENTRIES
.CONTD   DC    A(&PAR2)                          PARAMETER TWO
         AIF   (&D(1)).CONTE
         DC    A(0)                              PARAM. THREE OMMITTED
         AGO   .CONTF
.CONTE   DC    A(&PAR3)                          PARAMETER THREE
.CONTF   AIF   (NOT &D(2)).END
         DC    A(&PAR4)                          PARAMETER FOUR
         MEXIT
.E       IHBERMAC 5                     PAR4 MISSING
         MEXIT
.E1      IHBERMAC 2                     PAR1 MISSING
         MEXIT
.E2      IHBERMAC 3                     PAR2 MISSING
&NOGO    SETB  1
         AGO   .R1
.E3      IHBERMAC 36,,&PAR1             PAR1 INVALID
         MEXIT
.E4      IHBERMAC 4                     PAR3 MISSING
&NOGO    SETB  1
         AGO   .R3
         MEXIT
.E5      IHBERMAC 60,,&PAR3             PAR3 W/SCRATCH
         MEXIT
.E6      IHBERMAC 39,,&PAR4             PAR4 NOT ALLOWED
&NOGO    SETB  1
         AGO   .R2
.E7      IHBERMAC 50,,&OPT1             OPTN1 INVALID
&NOGO    SETB  1
         AGO   .CONTA
.E8      IHBERMAC 51,,&OPT2             OPTN2 INVALID
&NOGO    SETB  1
         AGO   .CONTB
.E10     IHBERMAC 52                    OPTN3 MISSING
         MEXIT
.E11     IHBERMAC 53,,&OPT3             OPTN3 INVALID
.END     MEND
./ ADD NAME=COMMAND
         MACRO
&LABEL   COMMAND &CMND,&GOTO,&HELP,&ABBR
         LCLA  &K,&I,&J,&MASK(8)
&MASK(1) SETA  1
&MASK(2) SETA  2
&MASK(3) SETA  4
&MASK(4) SETA  8
&MASK(5) SETA  16
&MASK(6) SETA  32
&MASK(7) SETA  64
&MASK(8) SETA  128
&LABEL   DC    CL8'&CMND' .        COMMAND ID
         DC    AL2(R&HELP-ROUTBLE) HELP ROUTINE
         DC    H'0'
.* NOW GENERATE THE MASK
&I       SETA  4
.LOOP    AIF   ('&SYSLIST(&I)' EQ '').DONE
&K       SETA  &SYSLIST(&I)
&J       SETA  &J+&MASK(&K)
&I       SETA  &I+1
         AGO   .LOOP
.DONE    ANOP
         DC    AL1(&J) .           ABBREVIATIONS
         DC    AL3(&GOTO) .        PROCESSING ROUTINE
         MEND
./ ADD NAME=COMMOLD
         MACRO
         COMMON
CPAREA   DSECT
         SPACE
         COPY  CPTSO
         EJECT
         COPY  DSNWA
         EJECT
         COPY  CVTSO
         EJECT
         COPY  CVUSER
         EJECT
JCB      DS    0F
         SPACE
         COPY  JCBTSO
         SPACE
         ROUTBLE ,
         MEND
./ ADD NAME=COMMON,SSI=00009361
         MACRO
         COMMON
CPAREA   DSECT
         COPY  CVTSO
         EJECT
         COPY  CVUSER
         EJECT
JCB      DS    0F
         SPACE
         COPY  JCBTSO
         SPACE
         ROUTBLE ,
         SPACE
         COPY  CPTSO
         EJECT
         COPY  DSNWA
         EJECT
         MEND
./ ADD NAME=COUNT
         MACRO
&LABEL   COUNT &VALUE,&REG=0,&INCR=
.* COUNT IS USED TO ADD INCR TO VALUE AND STORE IT BACK
.* REG IS USED AS THE REGISTER AND LOGICAL ADDS ARE DONE TO
.*     AVOID ANY OVERFLOW OR CONDITION CODE PROBLEMS.
.* IF THE INCR IS OMITTED, THEN CVONE IS USED TO INCR BY ONE
.*     IN THE ADD INSTRUCTION.  OTHERWISE, A LITERAL IS USED.
.* IT WILL WORK FOR A, F, OR H TYPE CONSTANTS WITH IMPLIED LENGTHS
         LCLC  &H,&TP
&TP      SETC  T'&VALUE           SET TP TO TYPE OF VALUE
         AIF   ('&TP' EQ 'A' OR '&TP' EQ 'F').GO
         AIF   ('&TP' EQ 'H').GOH
         MNOTE 8,'TYPE OF &VALUE IS &TP -- NOT A, F, OR H'
         MEXIT
.GOH     ANOP
&H       SETC  'H'
.GO      ANOP
&LABEL   L&H   &REG,&VALUE        LOAD OLD COUNT
         AIF   ('&INCR' EQ '').CVINCR
         AL    &REG,=F'&INCR'     ADD INCR TO THE COUNT
         AGO   .DOSTORE
.CVINCR  AL    &REG,CVONE          ADD ONE TO THE COUNT
.DOSTORE ST&H  &REG,&VALUE        SAVE NEW COUNT
         MEND
./ ADD NAME=CPOLD,SSI=00009327
* WYLTSO LINE EDITOR CONTROL PAGE
         SPACE ,
*                                                               JEP005
*                                                               JEP005
* MODIFIED AT DCEC TO INCORPORATE UPPER AND LOWER OPERANDS      JEP005
* ON THE CHANGE CMD FOR CHANGING CASE OF TEXT.                  JEP005
*                                                               JEP004
*                                                               JEP004
* MODIFIED AT DCEC TO ENABLE RECOGNITION OF 3277 TERMINALS.     JEP004
* ACCOMPLISHED IN LFLG1. JERRY PITTENGER                        JEP004
*                                                               JEP010
*                                                               JEP010
* MODIFIED AT DCEC TO ALLOW FOR FOUR LOCAL FLAGS (LFLG1-4).     JEP010
*                                                               JEP001
*                                                               JEP001
* MODIFIED AT DCEC TO ALLOW FOR UP TO 7 CHAR. LOGON ID.         JEP001
*                                                               JEP001
*                                                               JEP017
* MODIFIED AT DCEC TO DOUBLE THE EXEC FILE SIZE.                JEP017
*                                                               JEP017
CPSTART  DS    0D
CPR13    DS    A                       REGISTERS
CPR14    DS    A
CPR15    DS    A
CPR0     DS    A
CPR1     DS    A
CPR2     DS    A
CPR3     DS    A
CPR4     DS    A
CPR5     DS    A
CPR6     DS    A
CPR7     DS    A
CPR8     DS    A
         SPACE 3
* REMOTE TERMINAL BUFFER
         SPACE ,
RTBSTART DC    0F'0'
RTBTABS  DC    XL8'00'             TABS
         SPACE 2
RTBMFL   DC    AL1(0)              MODE FLAG
         SPACE ,
RTBMFUC  EQU   X'80'               UPPER-CASE ONLY
RTBMFNA  EQU   X'40'               NO WRITE ATTN
RTBMFCL  EQU   X'20'               CLEAN LISTING
RTBMFNTO EQU   X'10'               NO TABS IN OUTPUT
RTBNOCR  EQU   X'08'               NO CARRIAGE RETURNS
RTBNOTR  EQU   X'04'               NO TRANSLATE TABLE
RTBWRAP  EQU   X'02'               CR/LF NEEDED FOR WRAPPING
RTBCRT   EQU   X'01'               PAGING IS TO BE DONE
         SPACE 2
RTBSFL   DC    X'00'       STATUS FLAGS
         SPACE ,
RTBSFEND EQU   X'C0'       ENDING STATUS, 00=OK, 01=ATTN, 11=I/O ERROR
RTBSFATN EQU   X'40'       ATTENTION
RTBSFERR EQU   X'C0'       I/O ERROR
RTBSFUST EQU   X'20'       UNSET TAB
RTBSFBRK EQU   X'10'       ENDED BY BREAK
RTBSFHU  EQU   X'08'       HUNG UP PHONE
         SPACE ,
RTBWC    DC    H'0'        WRITE COUNT
RTBPC    DC    H'0'        PROMPT COUNT
RTBRC    DC    H'0'        READ COUNT
         SPACE ,
RTBNTEXT EQU   168         SIZE OF TEXT BUFFER
RTBPMAX  EQU   32          MAX LENGTH FOR PROMPT
         SPACE ,
RTBWAPTR DS    F           RTB WORK AREA POINTER (256 BYTES)
RTBATNSZ EQU   0           2 BYTES: ATTN SEQ LENGTH
RTBATTN  EQU   2           8 BYTES: ATTN SEQ
RTBPSZ   EQU   10          2 BYTES: PAGE SIZE
RTBLSZ   EQU   12          2 BYTES: LINE SIZE
RTBLINE  EQU   14          2 BYTES: LINES PRINTED
RTBCURS  EQU   16          2 BYTES: CHARS PRINTED
RTBBSCNT EQU   18          2 BYTES: BS COUNTER FOR TABS
RTBTRBUF EQU   20        168 BYTES: TRANSLATE BUFFER
RTBPRMPT EQU   188        32 BYTES: REPROMPT BUFFER
RTBSAVE  EQU   220         2 BYTES: SAVE BUFFER FOR CR/LF
*        EQU   222        26 BYTES: STILL AVAILABLE
RTBPAUS  EQU   248         8 BYTES: CRT PAUSE READ BUFFER
         SPACE 2
RTBUFL   DS    X
         SPACE ,
RTBUATTN EQU   X'80'       ATTN SEQUENCE EXISTS
RTBUNCOL EQU   X'40'       AUTOMATIC COLLECT NOT HONORED
RTBUPAD  EQU   X'20'       PAD WHEN LISTING NOCR
RTBURELT EQU   X'10'       TABS ARE RELATIVE
RTBUBACK EQU   X'08'       BACKSPACE IS A GOOD CHARACTER
RTBUFAST EQU   X'04'       FASTLIST IN EFFECT
RTBUTBUN EQU   X'02'       TABS ARE UNNUMBERED
         SPACE ,
         DS    3X          MORE SPACE AVAILABLE
         DC    0F'0'     FULL WORD FOR ORVYL-WYLBUR
RTBTEXT  DC    CL(RTBNTEXT)' ' TEXT BUFFER
         DC    0F'0'
         SPACE ,
RTBSIZE  EQU   *-RTBSTART
         SPACE 3
CPRTBSZ  EQU   RTBSIZE                 SIZE OF RTB
CPSCANSZ EQU   24                      SIZE OF SCAN AREA
CPSCAN   DS    0F,(CPSCANSZ)X          SCANNER WORK AREA
         SPACE ,
* FOR THE TEXT-EDITOR
CPGLDL   DS    1F   GLOBAL DELTA
CPHIPS   DS    1F   HIGHEST POSITION YET REACHED  * MUST
CPLNCT   DS    1H   LINE COUNT                    *STAY
CPAGCT   DS    1H   PAGE COUNT                    * TOGETHER
CPLNGTH  DS    1H   LINE LENGTH OPTION
         SPACE 2
CPGFLG   DS    1X      GLOBAL FLAG BYTE
         SPACE ,
CPFOPN   EQU   X'80'   EXTERNAL DATA SET OPEN FLAG
CPFCMOFF EQU   X'40'   TERSE MODE FLAG FOR NORMAL MESSAGES
CPFUPLW  EQU   X'20'   UPPER-LOWER CASE FLAG
CPFVOLM  EQU   X'10'   DEFAULT VOLUME SET FLAG
CPFDIRCH EQU   X'08'   DIRECTORY HAS CHANGED
CPFRETRY EQU   X'04'   COMMAND RETRY GOING ON
CPFRETOK EQU   X'02'   COMMAND RETRY CAN BE DONE
         SPACE 2
CPGFLG2  DS    1X      GLOBAL FLAG BYTE
         SPACE ,
CPFEXEC  EQU   X'80'   TAKE COMMANDS FROM EXEC FILE
CPFNOLOG EQU   X'40'   DON'T LOG COMMANDS FROM EXEC FILE
CPFEXTER EQU   X'20'   EXEC MODE TERSE FLAG
CPSKNULL EQU   X'04'   SKIP CHARACTER IS NULL FLAG
CPESNULL EQU   X'02'   ESCAPE CHARACTER IS NULL FLAG
         SPACE ,
CPDOUB   DS    1D   DOUBLE-WORD WORK
CPHFWRD  DS    H    USED TO EXTEND CPDOUB TO 10 BYTES
CPVOLSV  DS    CL6  DEFAULT VOLUME SAVE AREA
         SPACE ,
CPLSTCOL DS    1F   NEXT LINE NO. TO COLLECT
CPDLTCOL DS    1F   DELTA FOR COLLECT
         SPACE ,
CPEXLINE DS    F    EXEC FILE LINE NUMBER
CPEXHIPS DS    F    HIGHEST LINENO IN EXEC FILE   * MUST
CPEXLNCT DS    H    EXEC FILE LINE COUNT          * STAY
CPEXCNT  DS    H    COUNT OF PAGES IN EXEC FILE   * TOGETHER
CPEXCMCT DS    H    EXEC COMMAND COUNT WITHOUT USING TYPEWRITER
*PEXDIR  DS     5CL6   EXEC FILE DIRECTORY SPACE                JEP017
CPEXDIR  DS   10CL6    EXEC FILE DIRECTORY SPACE                JEP017
CPEXECMX EQU   (*-CPEXDIR)/6 MAX NO. OF PAGES IN EXEC FILE
         SPACE ,
CPCURRL  DS    F   CURRENT LINE POINTER
         SPACE ,
CPPFXL   DS    H                       LENGTH OF PREFIX
         SPACE ,
CPPFXSZ  EQU   36                      SIZE OF PREFIX AREA
CPPFX    DS    CL(CPPFXSZ)             PREFIX AREA
         SPACE ,
CPUSER   DS    CL3                 SIGNED ON USER
CPGRP    DS    CL5                 SIGNED ON GROUP              JEP001
CPUSERSV DS    CL3                 SAVE USER ID FOR DSNAMES
CPGRPSV  DS    CL5                 SAVE GROUP ID FOR DSNAMES    JEP001
CPMEMBSV DS    CL8                 SAVE MEMBER NAME FOR DSNAMES
CPSTCNT  DS    H                   STOWIT MOD COUNT FOR RECOVERY
CPRCVSZ1 EQU   *-CPGLDL            SIZE OF RECOVERY INFO
         EJECT
* LOCAL ITEMS FOR COMMANDS
         DS    0F
CPCMNM   DS    XL3  FOR FIRST 3 BYTES OF CURRENT COMMAND NAME
         SPACE 2
CPLFLG1  DS    1X      FIRST LOCAL FLAG BYTE
         SPACE ,
CPFTMINF EQU   X'80'   SHOW INFO/TIME FLAG
CPFNOTRG EQU   X'80'   "NOT" LOGIC FOR RANGE
CPFCPY   EQU   X'20'   COPY FLAG
CPFALL   EQU   X'10'   FLAG FOR DETRNG|-- DEFAULT ALL OKAY
CPFUSCAT EQU   X'04'   USE CATALOG TO LOCATE VOLUME
CPFTNOV  EQU   X'01'   NOVERIFY OF SET TABS
         SPACE ,
* NUMBER USAGE
CPFNMOD  EQU   X'02'   REMAINDER IN TIMES OPTION
CPFTIMES EQU   X'01'   TIMES OPTION FOR NUMBER
         SPACE 2
CPLFLG2  DS    1X      SECOND LOCAL FLAG BYTE
         SPACE ,
CPFMODCD EQU   X'80'   MODIFY MODE -- USED IN MODIFY/EDIT
CPFSCRTC EQU   X'40'   SCRATCH FLAG (SAVE-SHOW DSNAMES)
CPFDSNMS EQU   X'20'   NULL/NO DEFAULT OK ON DSNAMES FLAG
CPFSING  EQU   X'10'   SINGLE PROMPT MODE -- MODIFY/EDIT
CPFCLEAR EQU   X'10'   CLEAR ACTIVE FILE FLAG
CPFCOMB  EQU   X'08'   COMBINE FLAG FOR COPY
CPFMERG  EQU   X'04'   MERGE FLAG FOR COPY/MOVE/COLLECT
CPFREP1  EQU   X'02'   REPLACE CONTROL FLAG
CPFDITTO EQU   X'01'   DITTO CONTROL FLAG (REPLACE & INSERT)
CPFSMALL EQU   X'01'   SMALL DATA SET SAVED (SAVE)
         SPACE ,
* EXEC USAGE
CPFEXLNE EQU   X'08'   EXPLICIT LINENO WAS SPECIFIED
CPFEXACT EQU   X'04'   EXEC ACTIVE WAS SPECIFIED
CPFEXPA  EQU   X'02'   EXEC PAUSE WAS SPECIFIED
CPFEXFR  EQU   X'01'   EXEC FROM WAS SPECIFIED
         SPACE ,
* CHANGE USAGE
CPFCHLIM EQU   X'20'   STRING POSITIONALLY DELIMITED
CPFCHDEL EQU   X'10'   REPLACING STRING VOID FLAG
CPFCHNGD EQU   X'08'   SOMETHING CHANGED FLAG
CPFLNCHN EQU   X'04'   AT LEAST 1 LINE CHANGED FLAG
CPFCHPOS EQU   X'02'   POSITIONAL CHANGE
CPFCHND  EQU   X'01'   TERMINATE CHANGE FLAG
         SPACE ,
* SHOW DSNAMES & CONSOLE MSGS USAGE
CPFSTOP  EQU   X'01'   STOP 2741 LIST FLAG FOR DSNAMES & CONSOLE MSGS
         SPACE ,
* READ USAGE
CPFRDNO  EQU   X'02'   LINE NUMBER FLAG FOR READ
CPFRDEL  EQU   X'01'   DELETE LINE AFTER READ FLAG
         SPACE ,
* SHOW SIZE USAGE
CPFFIRST EQU   X'01'   TURNS ON 'NOT FIRST TIME' FLAG
CPFCOUNT EQU   X'02'   TURNS ON 'DONT DISPLAY COUNT FLAG'
         SPACE 2
CPLFLG3  DS    X       THIRD LOCAL FLAG BYTE
         SPACE ,
CPFSET   EQU   X'80'   SET PREFIX AFTER SCAN (USE-SAVE-COPY-SCR)
CPFDSCLG EQU   X'40'   CATALOG DATA SET (SAVE AND MISC)
CPFUNCLG EQU   X'20'   UNCATALOG DATA SET (SAVE AND MISC)
CPFRECLG EQU   CPFDSCLG+CPFUNCLG  (SAVE AND MISC)
         SPACE ,
* SHOW DSNAMES/DIRECTORY USAGE
CPFPROTF EQU   X'20'   PROTECT OPTION FLAG
CPFDATED EQU   X'10'   DATED OPTION FLAG
CPFEXCL  EQU   X'08'   EXCLUDE OPTION FLAG
CPFSPACE EQU   X'04'   SPACE OPTION FLAG
CPFTYPE  EQU   X'02'   TYPE/ALL OPTION FLAG (SHOW DSN/DIR RESP.)
         SPACE ,
* SHOW DSNAMES/DIRECTORY - PUT USAGE
CPFPUT   EQU   X'01'   PUT IN ACTIVE FILE
CPFNOL   EQU   X'40'   PUT AND DONT LIST
CPFPUTER EQU   X'08'   ERROR IN STOWING
CPFPMSG  EQU   X'80'   GAVE PAGE SHRTGE MSG ALREADY
         SPACE ,
* CHANGE USAGE
CPFCHIN  EQU   X'80'   RANGE SPECIFIED
CPFCHUS  EQU   X'40'   CHANGE USING
CPFCHTO  EQU   X'20'   CHANGE TO
CPFCHNM  EQU   X'10'   CHANGE TO NUMBERS
CPFCHNMI EQU   X'08'   INCREMENT NUMBER FLAG
CPFCHLN  EQU   X'04'   LINE OPTION
CPFCHREP EQU   X'02'   REPEAT OPTION FOR USING RANGE
CPFCHALL EQU   X'01'    CHANGE ALL COLS TO UPPER OR LOWER       JEP005
         SPACE ,
* LIST USAGE
CPFCLEAN EQU   X'80'   CLEAN LIST
         SPACE ,
* CPLBYT1 & CPLBYT2 NO LONGER USED BY LIST OR CHANGE
         SPACE 2
CPLFLG4  DS    1X      FOURTH LOCAL FLAG BYTE
         SPACE ,
CPFSTSPL EQU   X'80'   PAGE SPLIT AT LINE NUMBER FLAG FOR STOWIT
CPFSTINS EQU   X'40'   ALLOW INSERT ONLY FLAG FOR STOWIT
CPFDESET EQU   X'20'   THIS FLAG SIGNALS TO DESPOT THAT THE
*                      VALUE OF CPNWLN HAS BEEN SET FOR THE NEXT
*                      LOCATE AND SHOULD NOT BE KICKED UP.
         SPACE ,
CPFDESRT EQU   X'10'   RE-ENTRY TO DESPOT -- DON'T RESET RANGE
*                      THIS ALLOWS RUN TO HANDLE DISJOINT RANGES AND
*                      COUNT RANGES PROPERLY BUT IT DOES PROHIBIT
*                      OCCURRENCE COUNTS FOR ASSOCIATIVE RANGES
*                      AS WELL AS RE-USE OF THE RANGE AFTER RETURN
*                      FROM DESPOT
CPFCHUP  EQU   X'08'   USED BY CHANGE TO UPPER                  JEP005
CPFCHLO  EQU   X'04'   USED BY CHANGE TO LOWER                  JEP005
         SPACE ,
CPFNOCUR EQU   X'02'   NO ABORT IF CURRENT, NEXT, OR PREVIOUS
*                      DO NOT EXIST
         SPACE ,
CPFNOINC EQU   X'01'   NO INCREMENT ON LINE NUMBERS
         SPACE 2
CPLFLG5  DS    1X   FIFTH LOCAL FLAG BYTE
         SPACE ,
* COMMON FLAG BITS OF CPLFLG5 USED BY MANY COMMANDS
CPFUNUM  EQU   X'80'   UNNUMBERED FLAG
CPFNTEX  EQU   X'40'   NOTEXT LISTING CONTROL FLAG
CPFNONUM EQU   CPFUNUM+CPFNTEX NONUMBER LISTING CONTROL FLAG
CPFNLST  EQU   X'20'   NOLIST LISTING CONTROL FLAG
CPFFOPT  EQU   X'10'   SET IF ANY NUMBER OPTION SPECIFIED
CPFINT   EQU   X'08'   EXPAND LINE NUMBERS AS INTEGERS FLAG
CPFSELOC EQU   X'06'   RANGE SELECTION FLAG BITS
*              X'00'   USE NORMAL ACTIVE FILE FOR RANGE
*              X'02'   USE EXEC FILE FOR RANGE
*              X'06'   USE EXTERNAL FILE FOR RANGE
CPFSELEX EQU   X'02'   RANGE WILL BE SELECTED FROM EXEC FILE
CPFNCUR  EQU   X'01'   DON'T CHANGE CURRENT LINE POINTER FLAG
         SPACE 3
LFLG1    DS    1X      *****LOCAL FLAG BYTE 1*****              JEP010
CPF3277  EQU   X'01'        3277 RECOGNITION                    JEP004
LFLG2    DS    1X      *****LOCAL FLAG BYTE 2*****              JEP010
LFLG3    DS    1X      *****LOCAL FLAG BYTE 3*****              JEP010
LFLG4    DS    1X      *****LOCAL FLAG BYTE 4*****              JEP010
         SPACE 3                                                JEP010
* CPDRPT - CPLCNO - CPREVLN SET BY LOCATE LINE ROUTINES
CPDRPT   DS    1F      ADDR DIR ENTRY OF LOCATE PG (1ST BYTE=FLAGS)
         SPACE ,
CPFNTYT  EQU   X'80'   NOTHING AT ALL IN USER'S DATA SET YET
CPFHIGH  EQU   X'40'   HIGHER THAN ANY LINE NO. IN USER'S DATA SET YET
CPFPGHI  EQU   X'20'   GTR THAN ANY LINENO ON PG, LESS THAN 1ST ON NEXT
CPFPGLW  EQU   X'10'   FIRST LINE ON PAGE
CPFMTCH  EQU   X'08'   LINE NO. MATCHES EXACTLY A PRE-EXISTING ONE
CPFFSLN  EQU   X'04'   LINE NO. LESS OR EQUAL FIRST OF ALL
CPFPGND  EQU   X'02'   LINE WAS LAST ON A TEXT PAGE
CPFNDDS  EQU   X'01'   LINE WAS LAST IN WORKING DATA SET
         SPACE ,
CPLCNO   DS    1F   INTERNAL LINE NUMBER OF LOCATED LINE
CPREVLN  DS    1F   LINE NO. PREVIOUS TO LOCATED IF ON SAME TEXT PAGE
CPDIRCNT DS    H    RESIDUAL PAGE COUNT AFTER LOCATE
CPGDISP  DS    H    PAGE DISPLACEMENT TO LOCATED LINE
         SPACE ,
* DETRNG SETS CPFSLN-CPLSLN-CPSTLN-CPSTAD-CPCMPST-CPCMPLN-CPMDLN-CPMDAD
         SPACE ,
CPNWLN   DS    1F   USED BY DESPOT TO REMEMBER LINE NO. IT'S AT
CPFSLN   DS    1F   1ST LINE NO. IN RANGE
CPLSLN   DS    1F   LAST LINE NO. IN RANGE
CPCMPST  DS    1F   DISPLACEMENT INTO LINE OF FIELD FOR MATCH
CPCMPLN  DS    1F   LENGTH OF MATCH FIELD
CPSTLN   DS    1F   0=EXPL RNG, POS=LEN ASSOC CHAR STR, NEG=BLANK LINES
CPSTAD   DS    1F   ADDRESS OF CHAR STRING FOR ASSOCIATIVE RANGE
         SPACE ,
* FLAGS FOR CPSTAD (FIRST BYTE)
CPFEXPRG EQU   X'80'   EXPLICIT RANGE FLAG
CPFSTRRG EQU   X'40'   ASSOCIATIVE RANGE FLAG (OVER WHOLE LINE)
CPFLIMRG EQU   X'20'   ASSOCIATIVE RANGE FLAG(OVER SPECIFIED POSITIONS)
CPFONERG EQU   X'10'   START POSITION FOR STRING SPECIFIED FLAG
CPFBLKRG EQU   X'08'   BLANK LINE RANGE FLAG
CPFMODS  EQU   X'04'   MODS SPECIFIED FLAG
CPFDSJNT EQU   X'02'   DISJOINT EXPLICIT RANGE FLAG
CPFSOME  EQU   X'01'   NON-VOID RANGE FLAG
         SPACE ,
* CPMDLN & CPMDAD ALSO USED BY LOCATE AND SHOW COMMANDS
CPMDLN   DS    1F   NO. OF MODS OR NO EXPLICIT LINE NOS IN RANGE (0-10)
CPMDAD   DS    10F  THE MODS OR LINE NOS.
         SPACE ,
* CPDRED FOR USE, SAVE, COPY, RUN, PUNCH, LIST OFFLINE
CPDRED   DS    2F   ADDRESS OF BUFFER FOR EXTERNAL DATA SETS
*              FLAG USED IN CPDRED
CPFSTART EQU   X'F0'   SIGNAL 1ST READ OR NOT
         SPACE ,
* CPWKPS & CPWKDL ARE USED WHERE REQUIRED
         SPACE ,
CPWKPS   DS    1F   WORK POSITION
CPWKDL   DS    1F   WORK DELTA
* AS USED DURING RANGE DETERMINATION
CPTELL   EQU   CPWKPS   (CPWKPS & CPWKDL - USED IN RANGE DETERMINATION)
CPRCVSZ2 EQU   *-CPDRPT
         EJECT
* WORK CELLS FOR LOCAL USE BY TEXT-EDITING COMMANDS
         SPACE ,
CPWK1    DS    1F   WORK CELLS
CPWK2    DS    1F
CPWK3    DS    1F
CPWK4    DS    1F
CPWK5    DS    1F
CPWK6    DS    1F
         SPACE ,
* CPWK1, CPWK2 & CPWK3 USED BY LXCATE (EXTERNAL COPY)
* CPWK4 USED BY MOVE & COPY
* CPWK1, CPWK2 & CPWK3 USED BY SHOW OPERATOR
* CPWK1 USED BY IMMEDIATE DELETE IN BWYL
         SPACE ,
* CPWK6 AS USED BY RUN, PUNCH, SAVE, AND USE
CPSEQFLD EQU   CPWK6   START OF SEQ FIELD FOR NUMBERED
CPSEQLN  EQU   CPWK6+2 LENGTH OF SEQ FIELD FOR NUMBERED
         SPACE ,
* AS USED BY "CHANGE"
         SPACE ,
CPCHCST  EQU   CPWK1   DISPLACEMENT IN LINE OF CHANGE TARGET FIELD
CPCHCLN  EQU   CPWK2   LENGTH OF FIELD
CPCHLN1  EQU   CPWK3   LENGTH OF STRING TO MATCH
CPCHAD1  EQU   CPWK4   IT'S ADDRESS
CPCHMOD  EQU   CPCHAD1 USE FIRST BYTE FOR OCCURRENCE COUNT
CPCHLN2  EQU   CPWK5   LENGTH OF STRING TO USE AS REPLACE
CPCHAD2  EQU   CPWK6   IT'S ADDRESS
         SPACE ,
* AS USED BY "MOVE" & "COPY"
CPBGLN   EQU   CPWK5   1ST LINE NO. OF COPY-MOVE
CPNDLN   EQU   CPWK6   START OF REPLACE/INTERLEAVE ON COPY-MOVE
         SPACE ,
* AS USED BY "USE" & "SAVE"
CPLRCL   EQU   CPWK1   LRECL FOR USE-SAVE
CPNREC   EQU   CPWK2   BLOCKING FACTOR FOR USE-SAVE
CPRCSZ   EQU   CPWK3   BLOCKSIZE FOR USE-SAVE
CPNXAD   EQU   CPWK4   WORK CELL FOR USE-SAVE
CPNWCT   EQU   CPWK5   WORK CELL FOR USE-SAVE
         SPACE ,
* AS USED BY "ALIGN"
CPNAWAPT EQU   CPWK1   WORK AREA ADDR FOR ALIGN
         SPACE ,
* AS USED BY "READ"
CPWKRD   EQU   CPWK1   LINE NUMBER FOR READ COMMAND
         SPACE ,
* AS USED BY "LIST/POINT"
CPSPAC   EQU   CPWK4
* AS USED BY "COLLECT"
CPNXPS   EQU   CPWK1   COMPARE HERE FOR INTERLEAVE OR OVERLAY
         SPACE ,
* AS USED BY "EXEC"
CPEXLNET EQU   CPWK6   SPECIFIED LINE NO. FOR EXEC
         SPACE ,
* AS USED BY SHOW SIZE
CPOVSIZE EQU   CPWK1   WORK CELL FOR SHOW SIZE
         SPACE 3
CPWORK1  DS    F
CPWORK2  DS    F
         SPACE 2
CPSYSFLG DS    X
         SPACE ,
CPFRNGCM EQU   X'40'
CPFTUSXC EQU   X'20'
CPFNTYPD EQU   X'10'
         SPACE ,
CPPROTFL DS    X                   PERMIT FLAGS
         SPACE ,
CPSPARE  DS    1F   1 SPARE  (USED TO BE 2--1 TAKEN FOR FLAGS)  JEP010
         SPACE ,
* PRE-PROC INFO
CPRSCNVL DS    H                   RESCAN VALUE
CPESCAPE DS    X                   ESCAPE CHAR
CPSKIP   DS    X                   SKIP CHAR
         SPACE ,
CPSAVE   DS    2A   SCAN SAVES PTRS LAST ITEM HERE
         EJECT
CPWA     DS    199F                    WORK AREA
         SPACE ,
* FIRST PART OF CPWA USED FOR DSNAME WORK AREA WHEN REQUIRED.
CPDSNWA  EQU   CPWA                DSNAME WORK AREA
         SPACE 2
CPCTSAV  EQU   CPWA+600    WT-EDT COMMAND COUNT TEMP SAVE
CPCMSAV  EQU   CPWA+604    WT-EDT COMMAND TEMP SAVE (NOT TYPED)
* CPCTSAV & CPCMSAV USED BY EXEC TO KEEP UNPRESSED COMMANDS
         SPACE ,
CPCHECK  DC    X'6913723F'             CHECK FOR OVERFLOW
         SPACE ,
CPSIZE   EQU   1584                    SIZE OF CONTROL PAGE
         SPACE ,
CPTNPG   EQU   (CPAREA+2*CPSIZE-*)/6   TOTAL NO. OF DIRECTORY ENTRIES
         SPACE ,
CPDREC   DS    0X                      START OF DIRECTORY
CPRCVSZ3 EQU   CPAREA+CPSIZE-CPDREC    1ST DIRECTORY SIZE
         SPACE ,
         ORG   CPSTART+2*CPSIZE
./ ADD NAME=CPTSO
* WYLTSO LINE EDITOR CONTROL PAGE
         SPACE ,
*                                                               JEP005
*                                                               JEP005
* MODIFIED AT DCEC TO INCORPORATE UPPER AND LOWER OPERANDS      JEP005
* ON THE CHANGE CMD FOR CHANGING CASE OF TEXT.                  JEP005
*                                                               JEP004
*                                                               JEP004
* MODIFIED AT DCEC TO ENABLE RECOGNITION OF 3277 TERMINALS.     JEP004
* ACCOMPLISHED IN LFLG1. JERRY PITTENGER                        JEP004
*                                                               JEP010
*                                                               JEP010
* MODIFIED AT DCEC TO ALLOW FOR FOUR LOCAL FLAGS (LFLG1-4).     JEP010
*                                                               JEP001
*                                                               JEP001
* MODIFIED AT DCEC TO ALLOW FOR UP TO 7 CHAR. LOGON ID.         JEP001
*                                                               JEP001
*                                                               JEP017
* MODIFIED AT DCEC TO DOUBLE THE EXEC FILE SIZE.                JEP017
*                                                               JEP017
CPSTART  DS    0D
CPR13    DS    A                       REGISTERS
CPR14    DS    A
CPR15    DS    A
CPR0     DS    A
CPR1     DS    A
CPR2     DS    A
CPR3     DS    A
CPR4     DS    A
CPR5     DS    A
CPR6     DS    A
CPR7     DS    A
CPR8     DS    A
         SPACE 3
* REMOTE TERMINAL BUFFER
         SPACE ,
RTBSTART DC    0F'0'
RTBTABS  DC    XL8'00'             TABS
         SPACE 2
RTBMFL   DC    AL1(0)              MODE FLAG
         SPACE ,
RTBMFUC  EQU   X'80'               UPPER-CASE ONLY
RTBMFNA  EQU   X'40'               NO WRITE ATTN
RTBMFCL  EQU   X'20'               CLEAN LISTING
RTBMFNTO EQU   X'10'               NO TABS IN OUTPUT
RTBNOCR  EQU   X'08'               NO CARRIAGE RETURNS
RTBNOTR  EQU   X'04'               NO TRANSLATE TABLE
RTBWRAP  EQU   X'02'               CR/LF NEEDED FOR WRAPPING
RTBCRT   EQU   X'01'               PAGING IS TO BE DONE
         SPACE 2
RTBSFL   DC    X'00'       STATUS FLAGS
         SPACE ,
RTBSFEND EQU   X'C0'       ENDING STATUS, 00=OK, 01=ATTN, 11=I/O ERROR
RTBSFATN EQU   X'40'       ATTENTION
RTBSFERR EQU   X'C0'       I/O ERROR
RTBSFUST EQU   X'20'       UNSET TAB
RTBSFBRK EQU   X'10'       ENDED BY BREAK
RTBSFHU  EQU   X'08'       HUNG UP PHONE
         SPACE ,
RTBWC    DC    H'0'        WRITE COUNT
RTBPC    DC    H'0'        PROMPT COUNT
RTBRC    DC    H'0'        READ COUNT
         SPACE ,
RTBNTEXT EQU   168         SIZE OF TEXT BUFFER
RTBPMAX  EQU   32          MAX LENGTH FOR PROMPT
         SPACE ,
RTBWAPTR DS    F           RTB WORK AREA POINTER (256 BYTES)
RTBATNSZ EQU   0           2 BYTES: ATTN SEQ LENGTH
RTBATTN  EQU   2           8 BYTES: ATTN SEQ
RTBPSZ   EQU   10          2 BYTES: PAGE SIZE
RTBLSZ   EQU   12          2 BYTES: LINE SIZE
RTBLINE  EQU   14          2 BYTES: LINES PRINTED
RTBCURS  EQU   16          2 BYTES: CHARS PRINTED
RTBBSCNT EQU   18          2 BYTES: BS COUNTER FOR TABS
RTBTRBUF EQU   20        168 BYTES: TRANSLATE BUFFER
RTBPRMPT EQU   188        32 BYTES: REPROMPT BUFFER
RTBSAVE  EQU   220         2 BYTES: SAVE BUFFER FOR CR/LF
*        EQU   222        26 BYTES: STILL AVAILABLE
RTBPAUS  EQU   248         8 BYTES: CRT PAUSE READ BUFFER
         SPACE 2
RTBUFL   DS    X
         SPACE ,
RTBUATTN EQU   X'80'       ATTN SEQUENCE EXISTS
RTBUNCOL EQU   X'40'       AUTOMATIC COLLECT NOT HONORED
RTBUPAD  EQU   X'20'       PAD WHEN LISTING NOCR
RTBURELT EQU   X'10'       TABS ARE RELATIVE
RTBUBACK EQU   X'08'       BACKSPACE IS A GOOD CHARACTER
RTBUFAST EQU   X'04'       FASTLIST IN EFFECT
RTBUTBUN EQU   X'02'       TABS ARE UNNUMBERED
         SPACE ,
         DS    3X          MORE SPACE AVAILABLE
         DC    0F'0'     FULL WORD FOR ORVYL-WYLBUR
RTBTEXT  DC    CL(RTBNTEXT)' ' TEXT BUFFER
         DC    0F'0'
         SPACE ,
RTBSIZE  EQU   *-RTBSTART
         SPACE 3
CPRTBSZ  EQU   RTBSIZE                 SIZE OF RTB
CPSCANSZ EQU   24                      SIZE OF SCAN AREA
CPSCAN   DS    0F,(CPSCANSZ)X          SCANNER WORK AREA
         SPACE ,
* FOR THE TEXT-EDITOR
CPGLDL   DS    1F   GLOBAL DELTA
CPHIPS   DS    1F   HIGHEST POSITION YET REACHED  * MUST
CPLNCT   DS    1H   LINE COUNT                    *STAY
CPAGCT   DS    1H   PAGE COUNT                    * TOGETHER
CPLNGTH  DS    1H   LINE LENGTH OPTION
         SPACE 2
CPGFLG   DS    1X      GLOBAL FLAG BYTE
         SPACE ,
CPFOPN   EQU   X'80'   EXTERNAL DATA SET OPEN FLAG
CPFCMOFF EQU   X'40'   TERSE MODE FLAG FOR NORMAL MESSAGES
CPFUPLW  EQU   X'20'   UPPER-LOWER CASE FLAG
CPFVOLM  EQU   X'10'   DEFAULT VOLUME SET FLAG
CPFDIRCH EQU   X'08'   DIRECTORY HAS CHANGED
CPFRETRY EQU   X'04'   COMMAND RETRY GOING ON
CPFRETOK EQU   X'02'   COMMAND RETRY CAN BE DONE
         SPACE 2
CPGFLG2  DS    1X      GLOBAL FLAG BYTE
         SPACE ,
CPFEXEC  EQU   X'80'   TAKE COMMANDS FROM EXEC FILE
CPFNOLOG EQU   X'40'   DON'T LOG COMMANDS FROM EXEC FILE
CPFEXTER EQU   X'20'   EXEC MODE TERSE FLAG
CPSKNULL EQU   X'04'   SKIP CHARACTER IS NULL FLAG
CPESNULL EQU   X'02'   ESCAPE CHARACTER IS NULL FLAG
         SPACE ,
CPDOUB   DS    1D   DOUBLE-WORD WORK
CPHFWRD  DS    H    USED TO EXTEND CPDOUB TO 10 BYTES
CPVOLSV  DS    CL6  DEFAULT VOLUME SAVE AREA
         SPACE ,
CPLSTCOL DS    1F   NEXT LINE NO. TO COLLECT
CPDLTCOL DS    1F   DELTA FOR COLLECT
         SPACE ,
CPEXLINE DS    F    EXEC FILE LINE NUMBER
CPEXHIPS DS    F    HIGHEST LINENO IN EXEC FILE   * MUST
CPEXLNCT DS    H    EXEC FILE LINE COUNT          * STAY
CPEXCNT  DS    H    COUNT OF PAGES IN EXEC FILE   * TOGETHER
CPEXCMCT DS    H    EXEC COMMAND COUNT WITHOUT USING TYPEWRITER
*PEXDIR  DS     5CL6   EXEC FILE DIRECTORY SPACE                JEP017
CPEXDIR  DS   10CL6    EXEC FILE DIRECTORY SPACE                JEP017
CPEXECMX EQU   (*-CPEXDIR)/6 MAX NO. OF PAGES IN EXEC FILE
         SPACE ,
CPCURRL  DS    F   CURRENT LINE POINTER
         SPACE ,
CPPFXL   DS    H                       LENGTH OF PREFIX
         SPACE ,
CPPFXSZ  EQU   36                      SIZE OF PREFIX AREA
CPPFX    DS    CL(CPPFXSZ)             PREFIX AREA
         SPACE ,
CPUSER   DS    CL3                 SIGNED ON USER
CPGRP    DS    CL5                 SIGNED ON GROUP              JEP001
CPUSERSV DS    CL3                 SAVE USER ID FOR DSNAMES
CPGRPSV  DS    CL5                 SAVE GROUP ID FOR DSNAMES    JEP001
CPMEMBSV DS    CL8                 SAVE MEMBER NAME FOR DSNAMES
CPSTCNT  DS    H                   STOWIT MOD COUNT FOR RECOVERY
CPRCVSZ1 EQU   *-CPGLDL            SIZE OF RECOVERY INFO
         EJECT
* LOCAL ITEMS FOR COMMANDS
         DS    0F
CPCMNM   DS    XL3  FOR FIRST 3 BYTES OF CURRENT COMMAND NAME
         SPACE 2
CPLFLG1  DS    1X      FIRST LOCAL FLAG BYTE
         SPACE ,
CPFTMINF EQU   X'80'   SHOW INFO/TIME FLAG
CPFNOTRG EQU   X'80'   "NOT" LOGIC FOR RANGE
CPFCPY   EQU   X'20'   COPY FLAG
CPFALL   EQU   X'10'   FLAG FOR DETRNG|-- DEFAULT ALL OKAY
CPFUSCAT EQU   X'04'   USE CATALOG TO LOCATE VOLUME
CPFTNOV  EQU   X'01'   NOVERIFY OF SET TABS
         SPACE ,
* NUMBER USAGE
CPFNMOD  EQU   X'02'   REMAINDER IN TIMES OPTION
CPFTIMES EQU   X'01'   TIMES OPTION FOR NUMBER
         SPACE 2
CPLFLG2  DS    1X      SECOND LOCAL FLAG BYTE
         SPACE ,
CPFMODCD EQU   X'80'   MODIFY MODE -- USED IN MODIFY/EDIT
CPFSCRTC EQU   X'40'   SCRATCH FLAG (SAVE-SHOW DSNAMES)
CPFDSNMS EQU   X'20'   NULL/NO DEFAULT OK ON DSNAMES FLAG
CPFSING  EQU   X'10'   SINGLE PROMPT MODE -- MODIFY/EDIT
CPFCLEAR EQU   X'10'   CLEAR ACTIVE FILE FLAG
CPFCOMB  EQU   X'08'   COMBINE FLAG FOR COPY
CPFMERG  EQU   X'04'   MERGE FLAG FOR COPY/MOVE/COLLECT
CPFREP1  EQU   X'02'   REPLACE CONTROL FLAG
CPFDITTO EQU   X'01'   DITTO CONTROL FLAG (REPLACE & INSERT)
CPFSMALL EQU   X'01'   SMALL DATA SET SAVED (SAVE)
         SPACE ,
* EXEC USAGE
CPFEXLNE EQU   X'08'   EXPLICIT LINENO WAS SPECIFIED
CPFEXACT EQU   X'04'   EXEC ACTIVE WAS SPECIFIED
CPFEXPA  EQU   X'02'   EXEC PAUSE WAS SPECIFIED
CPFEXFR  EQU   X'01'   EXEC FROM WAS SPECIFIED
         SPACE ,
* CHANGE USAGE
CPFCHLIM EQU   X'20'   STRING POSITIONALLY DELIMITED
CPFCHDEL EQU   X'10'   REPLACING STRING VOID FLAG
CPFCHNGD EQU   X'08'   SOMETHING CHANGED FLAG
CPFLNCHN EQU   X'04'   AT LEAST 1 LINE CHANGED FLAG
CPFCHPOS EQU   X'02'   POSITIONAL CHANGE
CPFCHND  EQU   X'01'   TERMINATE CHANGE FLAG
         SPACE ,
* SHOW DSNAMES & CONSOLE MSGS USAGE
CPFSTOP  EQU   X'01'   STOP 2741 LIST FLAG FOR DSNAMES & CONSOLE MSGS
         SPACE ,
* READ USAGE
CPFRDNO  EQU   X'02'   LINE NUMBER FLAG FOR READ
CPFRDEL  EQU   X'01'   DELETE LINE AFTER READ FLAG
         SPACE ,
* SHOW SIZE USAGE
CPFFIRST EQU   X'01'   TURNS ON 'NOT FIRST TIME' FLAG
CPFCOUNT EQU   X'02'   TURNS ON 'DONT DISPLAY COUNT FLAG'
         SPACE 2
CPLFLG3  DS    X       THIRD LOCAL FLAG BYTE
         SPACE ,
CPFSET   EQU   X'80'   SET PREFIX AFTER SCAN (USE-SAVE-COPY-SCR)
CPFDSCLG EQU   X'40'   CATALOG DATA SET (SAVE AND MISC)
CPFUNCLG EQU   X'20'   UNCATALOG DATA SET (SAVE AND MISC)
CPFRECLG EQU   CPFDSCLG+CPFUNCLG  (SAVE AND MISC)
         SPACE ,
* SHOW DSNAMES/DIRECTORY USAGE
CPFPROTF EQU   X'20'   PROTECT OPTION FLAG
CPFDATED EQU   X'10'   DATED OPTION FLAG
CPFEXCL  EQU   X'08'   EXCLUDE OPTION FLAG
CPFSPACE EQU   X'04'   SPACE OPTION FLAG
CPFTYPE  EQU   X'02'   TYPE/ALL OPTION FLAG (SHOW DSN/DIR RESP.)
         SPACE ,
* SHOW DSNAMES/DIRECTORY - PUT USAGE
CPFPUT   EQU   X'01'   PUT IN ACTIVE FILE
CPFNOL   EQU   X'40'   PUT AND DONT LIST
CPFPUTER EQU   X'08'   ERROR IN STOWING
CPFPMSG  EQU   X'80'   GAVE PAGE SHRTGE MSG ALREADY
         SPACE ,
* CHANGE USAGE
CPFCHIN  EQU   X'80'   RANGE SPECIFIED
CPFCHUS  EQU   X'40'   CHANGE USING
CPFCHTO  EQU   X'20'   CHANGE TO
CPFCHNM  EQU   X'10'   CHANGE TO NUMBERS
CPFCHNMI EQU   X'08'   INCREMENT NUMBER FLAG
CPFCHLN  EQU   X'04'   LINE OPTION
CPFCHREP EQU   X'02'   REPEAT OPTION FOR USING RANGE
CPFCHALL EQU   X'01'    CHANGE ALL COLS TO UPPER OR LOWER       JEP005
         SPACE ,
* LIST USAGE
CPFCLEAN EQU   X'80'   CLEAN LIST
         SPACE ,
* CPLBYT1 & CPLBYT2 NO LONGER USED BY LIST OR CHANGE
         SPACE 2
CPLFLG4  DS    1X      FOURTH LOCAL FLAG BYTE
         SPACE ,
CPFSTSPL EQU   X'80'   PAGE SPLIT AT LINE NUMBER FLAG FOR STOWIT
CPFSTINS EQU   X'40'   ALLOW INSERT ONLY FLAG FOR STOWIT
CPFDESET EQU   X'20'   THIS FLAG SIGNALS TO DESPOT THAT THE
*                      VALUE OF CPNWLN HAS BEEN SET FOR THE NEXT
*                      LOCATE AND SHOULD NOT BE KICKED UP.
         SPACE ,
CPFDESRT EQU   X'10'   RE-ENTRY TO DESPOT -- DON'T RESET RANGE
*                      THIS ALLOWS RUN TO HANDLE DISJOINT RANGES AND
*                      COUNT RANGES PROPERLY BUT IT DOES PROHIBIT
*                      OCCURRENCE COUNTS FOR ASSOCIATIVE RANGES
*                      AS WELL AS RE-USE OF THE RANGE AFTER RETURN
*                      FROM DESPOT
CPFCHUP  EQU   X'08'   USED BY CHANGE TO UPPER                  JEP005
CPFCHLO  EQU   X'04'   USED BY CHANGE TO LOWER                  JEP005
         SPACE ,
CPFNOCUR EQU   X'02'   NO ABORT IF CURRENT, NEXT, OR PREVIOUS
*                      DO NOT EXIST
         SPACE ,
CPFNOINC EQU   X'01'   NO INCREMENT ON LINE NUMBERS
         SPACE 2
CPLFLG5  DS    1X   FIFTH LOCAL FLAG BYTE
         SPACE ,
* COMMON FLAG BITS OF CPLFLG5 USED BY MANY COMMANDS
CPFUNUM  EQU   X'80'   UNNUMBERED FLAG
CPFNTEX  EQU   X'40'   NOTEXT LISTING CONTROL FLAG
CPFNONUM EQU   CPFUNUM+CPFNTEX NONUMBER LISTING CONTROL FLAG
CPFNLST  EQU   X'20'   NOLIST LISTING CONTROL FLAG
CPFFOPT  EQU   X'10'   SET IF ANY NUMBER OPTION SPECIFIED
CPFINT   EQU   X'08'   EXPAND LINE NUMBERS AS INTEGERS FLAG
CPFSELOC EQU   X'06'   RANGE SELECTION FLAG BITS
*              X'00'   USE NORMAL ACTIVE FILE FOR RANGE
*              X'02'   USE EXEC FILE FOR RANGE
*              X'06'   USE EXTERNAL FILE FOR RANGE
CPFSELEX EQU   X'02'   RANGE WILL BE SELECTED FROM EXEC FILE
CPFNCUR  EQU   X'01'   DON'T CHANGE CURRENT LINE POINTER FLAG
         SPACE 3
LFLG1    DS    1X      *****LOCAL FLAG BYTE 1*****              JEP010
CPF3277  EQU   X'01'        3277 RECOGNITION                    JEP004
LFLG2    DS    1X      *****LOCAL FLAG BYTE 2*****              JEP010
LFLG3    DS    1X      *****LOCAL FLAG BYTE 3*****              JEP010
LFLG4    DS    1X      *****LOCAL FLAG BYTE 4*****              JEP010
         SPACE 3                                                JEP010
* CPDRPT - CPLCNO - CPREVLN SET BY LOCATE LINE ROUTINES
CPDRPT   DS    1F      ADDR DIR ENTRY OF LOCATE PG (1ST BYTE=FLAGS)
         SPACE ,
CPFNTYT  EQU   X'80'   NOTHING AT ALL IN USER'S DATA SET YET
CPFHIGH  EQU   X'40'   HIGHER THAN ANY LINE NO. IN USER'S DATA SET YET
CPFPGHI  EQU   X'20'   GTR THAN ANY LINENO ON PG, LESS THAN 1ST ON NEXT
CPFPGLW  EQU   X'10'   FIRST LINE ON PAGE
CPFMTCH  EQU   X'08'   LINE NO. MATCHES EXACTLY A PRE-EXISTING ONE
CPFFSLN  EQU   X'04'   LINE NO. LESS OR EQUAL FIRST OF ALL
CPFPGND  EQU   X'02'   LINE WAS LAST ON A TEXT PAGE
CPFNDDS  EQU   X'01'   LINE WAS LAST IN WORKING DATA SET
         SPACE ,
CPLCNO   DS    1F   INTERNAL LINE NUMBER OF LOCATED LINE
CPREVLN  DS    1F   LINE NO. PREVIOUS TO LOCATED IF ON SAME TEXT PAGE
CPDIRCNT DS    H    RESIDUAL PAGE COUNT AFTER LOCATE
CPGDISP  DS    H    PAGE DISPLACEMENT TO LOCATED LINE
         SPACE ,
* DETRNG SETS CPFSLN-CPLSLN-CPSTLN-CPSTAD-CPCMPST-CPCMPLN-CPMDLN-CPMDAD
         SPACE ,
CPNWLN   DS    1F   USED BY DESPOT TO REMEMBER LINE NO. IT'S AT
CPFSLN   DS    1F   1ST LINE NO. IN RANGE
CPLSLN   DS    1F   LAST LINE NO. IN RANGE
CPCMPST  DS    1F   DISPLACEMENT INTO LINE OF FIELD FOR MATCH
CPCMPLN  DS    1F   LENGTH OF MATCH FIELD
CPSTLN   DS    1F   0=EXPL RNG, POS=LEN ASSOC CHAR STR, NEG=BLANK LINES
CPSTAD   DS    1F   ADDRESS OF CHAR STRING FOR ASSOCIATIVE RANGE
         SPACE ,
* FLAGS FOR CPSTAD (FIRST BYTE)
CPFEXPRG EQU   X'80'   EXPLICIT RANGE FLAG
CPFSTRRG EQU   X'40'   ASSOCIATIVE RANGE FLAG (OVER WHOLE LINE)
CPFLIMRG EQU   X'20'   ASSOCIATIVE RANGE FLAG(OVER SPECIFIED POSITIONS)
CPFONERG EQU   X'10'   START POSITION FOR STRING SPECIFIED FLAG
CPFBLKRG EQU   X'08'   BLANK LINE RANGE FLAG
CPFMODS  EQU   X'04'   MODS SPECIFIED FLAG
CPFDSJNT EQU   X'02'   DISJOINT EXPLICIT RANGE FLAG
CPFSOME  EQU   X'01'   NON-VOID RANGE FLAG
         SPACE ,
* CPMDLN & CPMDAD ALSO USED BY LOCATE AND SHOW COMMANDS
CPMDLN   DS    1F   NO. OF MODS OR NO EXPLICIT LINE NOS IN RANGE (0-10)
CPMDAD   DS    10F  THE MODS OR LINE NOS.
         SPACE ,
* CPDRED FOR USE, SAVE, COPY, RUN, PUNCH, LIST OFFLINE
CPDRED   DS    2F   ADDRESS OF BUFFER FOR EXTERNAL DATA SETS
*              FLAG USED IN CPDRED
CPFSTART EQU   X'F0'   SIGNAL 1ST READ OR NOT
         SPACE ,
* CPWKPS & CPWKDL ARE USED WHERE REQUIRED
         SPACE ,
CPWKPS   DS    1F   WORK POSITION
CPWKDL   DS    1F   WORK DELTA
* AS USED DURING RANGE DETERMINATION
CPTELL   EQU   CPWKPS   (CPWKPS & CPWKDL - USED IN RANGE DETERMINATION)
CPRCVSZ2 EQU   *-CPDRPT
         EJECT
* WORK CELLS FOR LOCAL USE BY TEXT-EDITING COMMANDS
         SPACE ,
CPWK1    DS    1F   WORK CELLS
CPWK2    DS    1F
CPWK3    DS    1F
CPWK4    DS    1F
CPWK5    DS    1F
CPWK6    DS    1F
         SPACE ,
* CPWK1, CPWK2 & CPWK3 USED BY LXCATE (EXTERNAL COPY)
* CPWK4 USED BY MOVE & COPY
* CPWK1, CPWK2 & CPWK3 USED BY SHOW OPERATOR
* CPWK1 USED BY IMMEDIATE DELETE IN BWYL
         SPACE ,
* CPWK6 AS USED BY RUN, PUNCH, SAVE, AND USE
CPSEQFLD EQU   CPWK6   START OF SEQ FIELD FOR NUMBERED
CPSEQLN  EQU   CPWK6+2 LENGTH OF SEQ FIELD FOR NUMBERED
         SPACE ,
* AS USED BY "CHANGE"
         SPACE ,
CPCHCST  EQU   CPWK1   DISPLACEMENT IN LINE OF CHANGE TARGET FIELD
CPCHCLN  EQU   CPWK2   LENGTH OF FIELD
CPCHLN1  EQU   CPWK3   LENGTH OF STRING TO MATCH
CPCHAD1  EQU   CPWK4   IT'S ADDRESS
CPCHMOD  EQU   CPCHAD1 USE FIRST BYTE FOR OCCURRENCE COUNT
CPCHLN2  EQU   CPWK5   LENGTH OF STRING TO USE AS REPLACE
CPCHAD2  EQU   CPWK6   IT'S ADDRESS
         SPACE ,
* AS USED BY "MOVE" & "COPY"
CPBGLN   EQU   CPWK5   1ST LINE NO. OF COPY-MOVE
CPNDLN   EQU   CPWK6   START OF REPLACE/INTERLEAVE ON COPY-MOVE
         SPACE ,
* AS USED BY "USE" & "SAVE"
CPLRCL   EQU   CPWK1   LRECL FOR USE-SAVE
CPNREC   EQU   CPWK2   BLOCKING FACTOR FOR USE-SAVE
CPRCSZ   EQU   CPWK3   BLOCKSIZE FOR USE-SAVE
CPNXAD   EQU   CPWK4   WORK CELL FOR USE-SAVE
CPNWCT   EQU   CPWK5   WORK CELL FOR USE-SAVE
         SPACE ,
* AS USED BY "ALIGN"
CPNAWAPT EQU   CPWK1   WORK AREA ADDR FOR ALIGN
         SPACE ,
* AS USED BY "READ"
CPWKRD   EQU   CPWK1   LINE NUMBER FOR READ COMMAND
         SPACE ,
* AS USED BY "LIST/POINT"
CPSPAC   EQU   CPWK4
* AS USED BY "COLLECT"
CPNXPS   EQU   CPWK1   COMPARE HERE FOR INTERLEAVE OR OVERLAY
         SPACE ,
* AS USED BY "EXEC"
CPEXLNET EQU   CPWK6   SPECIFIED LINE NO. FOR EXEC
         SPACE ,
* AS USED BY SHOW SIZE
CPOVSIZE EQU   CPWK1   WORK CELL FOR SHOW SIZE
         SPACE 3
CPWORK1  DS    F
CPWORK2  DS    F
         SPACE 2
CPSYSFLG DS    X
         SPACE ,
CPFRNGCM EQU   X'40'
CPFTUSXC EQU   X'20'
CPFNTYPD EQU   X'10'
         SPACE ,
CPPROTFL DS    X                   PERMIT FLAGS
         SPACE ,
CPSPARE  DS    1F   1 SPARE  (USED TO BE 2--1 TAKEN FOR FLAGS)  JEP010
         SPACE ,
* PRE-PROC INFO
CPRSCNVL DS    H                   RESCAN VALUE
CPESCAPE DS    X                   ESCAPE CHAR
CPSKIP   DS    X                   SKIP CHAR
         SPACE ,
CPSAVE   DS    2A   SCAN SAVES PTRS LAST ITEM HERE
         EJECT
CPWA     DS    199F                    WORK AREA
         SPACE ,
* FIRST PART OF CPWA USED FOR DSNAME WORK AREA WHEN REQUIRED.
CPDSNWA  EQU   CPWA                DSNAME WORK AREA
         SPACE 2
CPCTSAV  EQU   CPWA+600    WT-EDT COMMAND COUNT TEMP SAVE
CPCMSAV  EQU   CPWA+604    WT-EDT COMMAND TEMP SAVE (NOT TYPED)
* CPCTSAV & CPCMSAV USED BY EXEC TO KEEP UNPRESSED COMMANDS
         SPACE ,
CPCHECK  DC    X'6913723F'             CHECK FOR OVERFLOW
         SPACE ,
CPSIZE   EQU   3016   1952 1584        SIZE OF CONTROL PAGE
         SPACE ,
CPTNPG   EQU   (CPAREA+2*CPSIZE-*)/6   TOTAL NO. OF DIRECTORY ENTRIES
         SPACE ,
CPDREC   DS    0X                      START OF DIRECTORY
CPRCVSZ3 EQU   CPSTART+CPSIZE-CPDREC   1ST DIRECTORY SIZE
         SPACE ,
         ORG   CPSTART+2*CPSIZE
./ ADD NAME=CUCCCVT
         MACRO
         CUCCCVT
         SPACE 2
*******************************************************************C511
*                                                                 *C511
*        THE CUCC CVT EXTENSION IS POINTED TO BY                  *C511
*           THE CVTUSER FIELD IN THE CVT, AND                     *C511
*           IS PART OF THE NUCLEUS.  IT CONTAINS                  *C511
*           10 FULLWORDS.
*                                                                 *C511
*******************************************************************C511
         SPACE  , -                                                C511
CUCCCVT  DS    0F
CVTNUCH1 DC    F'0' -              ADDRESS OF H1 PART OF NUCLEUS   C511
CVTCBECB DC    F'0' -              CRBEWTR ECB                     C511
CVTWRPRM DC    F'0' -              CRBEWTR PARM LIST               C511
CVTDYNDS DC    F'0' -              DYNAMIC DISPATCHING PARM PTR    C511
CVTACCTQ DC    F'0' -              REQUEST QUEUE FOR ACCTING TASK  C511
CVTTVT   DC    F'0' -              ADDRESS OF ASP TVT              C511
CVTCALL  DC    F'0' -              POINTER TO T#GTAB               C511
CVTVOLS  DC    F'0' -     PROTECTION VOLLIST AND BATCH/TSO
CVTPRTSO  EQU    X'80'      TSO BIT ON => TSO SUPPORT
CVTPRBAT  EQU    X'40'      BATCH BIT ON => BATCH SUPPORT
CVTTESTT  EQU    X'20'    TEST => NOT ENFORCED IN TSOBUT INDICATE VIOL
CVTTESTB  EQU    X'10'    TEST=> NOT ENFORCED IN BATCH..INDICATE VIOL
CVTUSERS DC    F'0' -     PROTECTION CODE PRIVED USER LIST
CVTDSNS  DC    F'0' -     PROTECTION PROTECTED DSNS
         SPACE 2
         MEND
./ ADD NAME=CVCALL
         MACRO
&L       CVCALL &R,&PFREE
         GBLC  &PAGECDE
         LCLC  &C
         AIF   (K'&R LE 6).NOSCH
         AIF   ('&R' EQ 'ABSCENT').ABSCENT
         AIF   ('&R' EQ 'DOCLEAR').DOCLEAR
         AIF   ('&R' EQ 'DSNAMED').DSNAMED
         AIF   ('&R' EQ 'HASPSTAT').HSTAT
         AIF   ('&R' EQ 'INVALID').INVALID
         AIF   ('&R' EQ 'OPWRITE').OPWRITE
         AIF   ('&R' EQ 'SETPFXNS').SPFXNS
         AIF   ('&R' EQ 'TWRITEX').TWRITEX
         AIF   ('&R' EQ 'UNLEGAL').UNLEGAL
         AIF   ('&R' EQ 'VOLCHEK').VOLCHEK
.NOSCH   ANOP
&C       SETC  '&R'(1,6)           USE ONLY FIRST 6 CHARACTERS
         AGO   .GO
.ABSCENT ANOP
&C       SETC  'ABSCNT'
         AGO   .GO
.DOCLEAR ANOP
&C       SETC  'DOCLR'
         AGO   .GO
.DSNAMED ANOP
&C       SETC  'DSNMED'
         AGO   .GO
.HSTAT   ANOP
&C       SETC  'HSTAT'
         AGO   .GO
.INVALID ANOP
&C       SETC  'INVAL'
         AGO   .GO
.OPWRITE ANOP
&C       SETC  'OPWRT'
         AGO   .GO
.RDEDCH  ANOP
         AGO   .GO
.SPFXNS  ANOP
&C       SETC  'SPFXNS'
         AGO   .GO
.TWRITEX ANOP
&C       SETC  'TWRTX'
         AGO   .GO
.UNLEGAL ANOP
&C       SETC  'UNLEG'
         AGO   .GO
.VOLCHEK ANOP
&C       SETC  'VOLCHK'
.GO      ANOP
&L       L     14,CV&C
         BALR  14,14
         MEND
./ ADD NAME=CVTSO    0100-79354-79354-0303-00197-00197-00000-TEC015  00
         SPACE ,
* WYLTSO COMMUNICATION VECTOR
         SPACE ,
*                                                               JEP001
*                                                               JEP001
* MOD JEP001                                                    JEP001
*  USED 1 OF THE CVSPARES FOR NAMING CONV. DENOTED JEP001       JEP001
*                                                               JEP001
*                                                               JEP016
*                                                               JEP016
* MOD JEP016                                                    JEP016
*  USED 3 OF THE CVSPARES FOR REENTERABILITY. DENOTED JEP016    JEP016
*   ALSO CHANGED SOME CODE TO MAKE REENTRANT. DENOTED JEP016    JEP016
*                                                               JEP012
*                                                               JEP012
* MOD JEP012                                                    JEP012
*  ADDED VCON FOR STAX ADDRESS USED IN RUN COMMAND.             JEP012
*   DENOTED JEP012                                              JEP012
*                                                               JEP012
CVSTART  DS    0F
         SPACE 3
* COMMON COMMAND EXIT ROUTINES
         SPACE ,
CVGETCOM L     14,CVCMDPRT
         BR    14
         SPACE ,
CVQTYPE  L     14,CVQTYPED
         BR    14
         SPACE ,
CVNVALID L     14,CVINVAL
         BR    14
         SPACE ,
CVUNLEGL L     14,CVUNLEG
         BR    14
         SPACE ,
CVABSENT L     14,CVABSCNT
         BR    14
         SPACE 3
* COMMON SUBROUTINE CALL ADDRESSES
         SPACE ,
CVABSCNT DC    V(ABSCENT)     XCALL
CVADDER  DC    V(ADDER)       XCALL
CVBTD    DC    V(BTD)         CALLED BY BTD
CVBTX    DC    V(BTX)         CALLED BY BTX
CVCMDPRT DC    V(CMDPRT)      XCALL
CVCVEXNO DC    V(CVEXNO)      XCALL
CVDCLOSE DC    V(DCLOSE)      CALLED BY DCLOSE/HCLOSE
CVDESPOT DC    V(DESPOT)      XCALL
CVDETRNG DC    V(DETRNG)      XCALL
CVDOCLR  DC    V(DOCLEAR)     XCALL
CVDODELE DC    V(DODELE)      XCALL
CVDODSNM DC    V(DODSNM)      XCALL
CVDOPEN  DC    V(DOPEN)       CALLED BY DOPEN/DSCRATCH
CVDQSCAN DC    V(DQSCAN)      XCALL
CVDREAD  DC    V(DREAD)       CALLED BY DREAD
CVDSNMED DC    V(DSNAMED)     XCALL
CVDWRITE DC    V(DWRITE)      CALLED BY DWRITE
CVINVAL  DC    V(INVALID)     XCALL
CVLENCHK DC    V(LENCHK)      XCALL
CVNTGDOP DC    V(NTGDOPN)     XCALL
CVOPWRT  DC    V(OPWRITE)     CALLED BY OPWRITE
CVPFREE  DC    V(PFREE)       CALLED BY PFREE
CVPGET   DC    V(PGET)        CALLED BY PGET
CVPJUNK  DC    V(PJUNK)
CVIOWA   DS    A              ADDR OF GETMAINED CORE
CVPMARK  DC    V(PMARK)       CALLED BY PMARK
CVPNUM   DC    V(PNUM)        CALLED BY PNUM
CVPRESS  DC    V(PRESS)       XCALL
CVQTYPED DC    V(QTYPED)      XCALL
CVSCAN   DC    V(SCAN)        CALLED BY SCAN
CVSCINIT DC    V(SCINIT)      CALLED BY SCINIT
CVSCTELL DC    V(SCTELL)      CALLED BY SCTELL
CVSPFXNS DC    V(SETPFXNS)    XCALL
CVSTOWIT DC    V(STOWIT)      XCALL
CVTRDRTN DC    V(TRDRTN)      CALLED BY TATNRDR/TREADR
CVTMARKX DC    V(TMARKX)      CALLED BY TMARK
CVTREADX DC    V(TREADX)      CALLED BY TREAD/TREDE
CVTSEGXB DC    V(TSEGXB)      CALLED BY TSEG
CVTSEGXM DC    V(TSEGXM)      CALLED BY TSEG
CVTSEGXW DC    V(TSEGXW)      CALLED BY TSEG
CVTSEGX  DC    V(TSEGX)       CALLED BY TSEG
CVTWRTX  DC    V(TWRITEX)     CALLED BY TWRITE
CVUNLEG  DC    V(UNLEGAL)     XCALL
CVUNPRES DC    V(UNPRESS)     XCALL
CVVOLCHK DC    V(VOLCHEK)     XCALL
CVYESREQ DC    V(YESREQ)      XCALL
CVLISTLI DC    V(LISTLINE)    XCALL
CVCLRTST DC    V(CLRTST)      XCALL
CVCLEARC DC    V(CLEARCK)     XCALL
CVITSNIL DC    V(ITSNIL)      XCALL
CVSETPRM DC    V(SETPRMPT)    XCALL
CVLOWMUL DC    V(LOWMULT)     XCALL
CVLOCLIS DC    V(LOCLIST)     XCALL
CVLOCATE DC    V(LOCATE)
CVLSLNMS DC    V(LSLNMSG)     XCALL
CVSELDEL DC    V(SELDELTA)    XCALL
CVSCNEXF DC    V(SCNEXFR)     XCALL
CVMEMBER DC    V(MEMBERED)    XCALL
CVDATE   DC    V(DATE)        XCALL
CVNOMORP DC    V(NOMORPG)     XCALL
CVFIXNUM DC    V(FIXNUMB)     XCALL
CVNOTMYD DC    V(NOTMYDS)     XCALL
CVCTLGED DC    V(CTLGED)      XCALL
CVATNRTN DC    V(ATTNRTN)     ATTENTION TRAP ROUTIONE FOR STAX
CVPARM   DC    A(0)           PARAMETER POINTER PASSED
CVFMTIME DC    V(FMTTIME)     PROC RTN TO FORMAT DATE&TIME
CVPIOB   DC    A(0)           RECOVERY IOB ADDRESS
CVPIO    DC    V(PAGEIO)      ADDRESS OF DO PAGE I/O IN WCP
CVGOSAV  DC    V(GOSAVE)      ADDRESS OF SAVE COMMAND
CVDOCLRX DC    V(DOCLREX)     CLEAR EXEC ROUTINE
CVTIME   DC    V(TIME)        FORMAT TIME ROUTINE
CVLNENO  DC    V(LNENOPRT)    POINTER TO LINE NO PRT
CVLTNPR  DC    V(LTNPRT)      POINTER TO LIST OPTIONS PRT
CVCLRPR  DC    V(CLRPRT)      POINTER TO CLEAR OPTIONS PRT
CVPSYNAD DC    V(PSYNAD)      SYNAD EXIT FOR PAGE WRITES
CVDSNSTD DC    V(DSNSTDDO)    STANDARD DSN CHECK
CVDSNUDS DC    V(DSNUDSDO)    SET DSN POSSESSION FLAGS
CVNUMPR  DC    V(NUMPRT)      PRT FOR NUMBER OPTIONS
CVVOLCH  DC    V(VOLCHKNL)    VOL CHECK WITH R1 SET
CVSHOVA  DC    V(SHOVAR)      SHOW VALUE
CVSHEXE  DC    V(SHEXEC)      SHOW EXEC
CVIGDSN  DC    V(IGDSNPRT)    ADDR OF IGNORE DSN PARMS PRT
CVPGRTN  DC    A(0)           ADDR OF CUR. PGD CODE
CVSTAX   DC    V(STAX)     STAX RTN ADDRESS                     JEP012
CVTRACE  DC    A(0)           NEXT TRACE ENTRY
CVTRSTRT DC    A(0)           START OF TABLE
CVTREND  DC    A(0)           END OF TRACE TABLE
CVPADDRS DC    A(0)           ADDRESS OF PCB TABLE
CVDDNAMS DC    A(0)           POINTER TO DDNAMES
CVDDCNT  DC    A(0)           COUNT OF DD'S
CVDAIR   DC    A(0)           ADDR OF DAIR ROUTINE
CVRETURN DC    A(0)           OS RETURN ADDR
CVEXTRAP DC    A(0)           EXEC BREAK TRAP LINE NO.
CVTRAPLN DC    A(0)           EXEC BROKEN LINE NO.
CVUSRFLD DC    A(0)                USER FIELD...1 CHAR = ID LEN JEP001
COMMAREA DC    A(0)               COMMAREA FOR INTRDR COMMUN    JEP016
SWITCH   DC    A(0)                USED FOR WHERE TO GO IN RUN  JEP016
WYLDSNL  DC    H'0'              WYLBUR TYPE DSN LENGTH         JEP016
DUMMY    DC    H'0'             DUMMY FOR LATER USE             JEP016
CVPROMPT DC    H'0'           PROMPT COUNT
CVPRMLIM DC    H'10'          # PROMPTS PER PAGEFILE UPDATE
CVTPROTF DC    V(TPROTF)      XCALL -- DISPLAY PROT BITS
CVSPARES DC    5A(0)          8 SPARES
CVPFK    DC    A(0)           PAGE FOR PFK KEYS   JJG
         SPACE 3
CVMPAGE1 DC    X'00'
CVMPAGE2 DC    X'FF'
CVTTYPE  DC    C'TM'          TIOT IDENT FOR TEMP VOLS
CVSTYPE  DC    C'IO'          DD PREFIX FOR SAVE VOLUMES
CVUTYPE  DC    C'IN'          DD PREFIX FOR USE ONLY VOLUMES
         SPACE 3
* THE FOLLOWING CODE GETS A ROUTINE FROM THE MASTER
         SPACE ,
CVROUTGT STM   R14,R8,0(R13)       SAVE SOME REGISTERS
         LR    R8,R13
         LA    R13,11*4(,R8)
         LA    R2,ROUTBLE          GET ADDRESS OF TABLE
         AH    2,0(,14)            ADD IN DISPLACEMENT PARM
         LH    0,0(,2)             GET PAGE NUMBER OF ROUTINE
         SR    R1,R1               CLEAR PCB POINTER
         L     R14,CVPGET          GET AN OLD PAGE
         BALR  R14,R14             GO GET EM
         ST    R1,CVPGRTN          SAVE ADDR OF PAGED RNT
         LR    R10,R1              LOAD BASE ADDR
         MVC   CVROUTG3+2(2),2(2)  SET ROUTINE ADDR IN BRANCH
         LR    R13,R8              RESTORE SAVE AREA PTR
         LM    R14,R8,0(R13)       RESTORE REGISTERS
         LA    14,2(,14)           STEP 14 PAST DISPLACEMENT
CVROUTG3 B     0(10)               GO TO ROUTINE. DISPLACEMENT
*                                  IS FILLED IN BEFORE BRANCH
         SPACE 3
* CVCALLS IN PAGED CODE EXIT THE PAGE THROUGH THE FOLLOWING
* ROUTINE TO MAKE THE RETURN ADDRESS RELATIVE.  NOTE THAT THE
* PAGED CODE CAN USE R7 AS THE BAL REGISTER BECAUSE R10 IS USED
* AS THE PROGRAM BASE.
         SPACE ,
CVCALLER SLR   7,10                MAKE RETURN ADDRESS RELATIVE
         BALR  14,14               GO CALL ROUTINE
         B     0(7,10)             ON RETURN -- RE-ENTER PAGE CODE
         SPACE 3
* NORMAL EXIT FROM PAGED CODE DOES NOT PFREE THE PAGE.
* THE FOLLOWING ROUTINE CAN BE USED AS AN EXIT TO FREE
* THE PAGE BEFORE FINISHING THE EXIT.
         SPACE ,
CVROUTEX STM   14,2,0(13)          SAVE SOME REGISTERS
         LR    2,13                SAVE OLD R13
         LA    13,20(,13)          BUMP 13 FOR PFREE
         LR    1,10                PUT PAGE POINTER IN R1
         SR    10,10               ZERO REGISTER 10
         L     14,CVPFREE          GET ADDRESS OF PFREE
         BALR  14,14               GO FREE PAGE
         LR    13,2                RESTORE R13
         LM    14,2,0(13)          RESTORE SAVED REGISTERS
         BR    14                  COMPLETE THE EXIT
         SPACE 3
         DS    0F
CVSIZE   EQU   *-CVSTART
./ ADD NAME=CVUSER
* WYLTSO COMMUNICATION VECTOR - USER DEPENDENT PART
         SPACE ,
CVUSER   DS    0F
CVCPADDR DS    A                   VCP ADDRESS
         SPACE
CVFPAGE  DS    V                   V(FRSTPAGE)
CVLPAGE  DS    V                   V(LASTPAGE)
CVFPFCB  DS    V                   V(FRSTPFCB)
CVLPFCB  DS    V                   V(LASTPFCB)
CVSPIEAD DS    A                   SPIE RECOVERY ADDRESS
CVTIOT   DS    A                   POINTER TO TIOT
CVTIOTCT DS    F                   COUNTER OF SAVE VOLUMES
         SPACE
./ ADD NAME=DAIRINT
         TITLE  'DAIR DEFAULT PARAMS FOR INTRDR'
DAIRINT  DS    0F
DAIR30   DC    X'0030'
         DC    X'0000'
         DC    X'00000000'
         DC    F'0'
         DC    CL8'WYLRDR'
         DC    CL8' '
         DC    CL8' '
         DC    F'80'
         DC    F'0'
         DC    F'0'
DAIRWTR  DC    CL8'INTRDR'
         DC    CL4' '
         DC    XL3'000000'
         DC    X'80'
         DC    CL8' '
         DS    0F
DAIR18   DC    X'0018'
         DC    X'0000'
         DC    X'0000'
         DC    X'0000'
         DC    AL4(0)
         DC    CL8'WYLRDR'
         DC    CL8' '
         DC    C'O'
         DC    X'0'
         DC    X'0'
         DC    X'0'
         DC    8X'0'
DAINTSZ  EQU   *-DAIRINT
./ ADD NAME=DAIRLST,SSI=00009355
         TITLE  'DAIR DEFAULT PARAMS FOR LISTOFF COMMAND'
DAIRLST  DS    0F
         DC    X'0030'
         DC    X'0000'
         DC    X'00000000'
         DC    F'0'
         DC    CL8'WYLPRINT'
         DC    CL8' '
         DC    CL8' '
         DC    F'80'
         DC    F'0'
         DC    F'0'
         DC    CL8' '
         DC    CL4' '
         DC    XL3'000000'
         DC    X'80'
         DC    CL8' '
DALSTSZ  EQU   *-DAIRLST
./ ADD NAME=DCATLG
         MACRO
&L       DCATLG
&L       DOPEN ,,CATLG
         MEND
./ ADD NAME=DCLOSE
         MACRO
&L       DCLOSE
&L       CVCALL DCLOSE
         MEND
./ ADD NAME=DEB
         SPACE ,
* OS DATA EXTENT BLOCK (DEB)
         SPACE ,
DEBSTART DS    0F
         SPACE ,
* APPENDAGE TABLE
         SPACE ,
DEBAPP   DS    0F
DEBEOEA  DS    A                   END OF EXTENT APPENDAGE
DEBSIOA  DS    A                   START I/O APPENDAGE
DEBPCIA  DS    A                   PCI APPENDAGE
DEBCEA   DS    A                   CHANNEL END APPENDAGE
DEBXCEA  DS    A                   ABNORMAL END APPENDAGE
DEBAPPSZ EQU   *-DEBAPP            SIZE OF APPENDAGE TABLE
         SPACE ,
* PREFIX SECTION
         SPACE ,
DEBPFX   DS    0F
DEBWKARA DS    X                   I/O SUPPORT WORK AREA (DA)
DEBDSCBA DS    XL7                 DSCB ADDRESS (DA)
DEBDCBMK DS    F                   DCB MODIFICATION MASK
DEBLNGTH DS    X                   LENGTH OF DEB IN DOUBLE WORDS
         DS    3X
DEBPFXSZ EQU   *-DEBPFX            SIZE OF PREFIX
         SPACE ,
* BASIC SECTION
         SPACE ,
DEBBASIC DS    0F
DEBNMSUB DS    X                   NO. OF SUBROUTINES LOADED
DEBTCBAD DS    AL3                 TCB ADDRESS
DEBAMLNG DS    X                   SIZE OF ACCESS METHOD
DEBDEBAD DS    AL3                 NEXT DEB
DEBOFLGS DS    X                   DATA SET STATUS FLAGS
DEBIRBAD DS    AL3                 IRB FOR APPENDAGE EXITS
DEBOPATB DS    X                   METHOD OF I/O PROCESSING
DEBQSCNT DS    X                   QUIESCE COUNT
         DS    H
DEBNMEXT DS    X                   NO. OF EXTENTS
DEBUSRPG DS    AL3                 1ST IOB IN USER PURGE CHAIN
DEBPRIOR DS    X                   TASK PRIORITY
DEBECBAD DS    AL3                 ADDRESS OF PURGE ECB LIST
DEBPROTG DS    X                   PROTECTION KEY
         ORG   *-1
DEBDEBID DS    X
DEBDCBAD DS    AL3                 DCB ADDRESS
DEBEXSCL DS    X                   EXTENT SCALE
DEBAPPAD DS    AL3                 APPENDAGE TABLE
DEBBASSZ EQU   *-DEBBASIC          SIZE OF BASIC SECTION
         SPACE ,
* DEVICE DEPENDENT SECTION
         SPACE ,
DEBDDEP  DS    0F
DEBDVMOD DS    X                   DEVICE MODIFIER
DEBUCBAD DS    AL3                 1ST UCB ADDRESS
         SPACE ,
DEBDSZMT EQU   *-DEBDDEP           SIZE FOR MAGNETIC TAPE
DEBDSZUR EQU   *-DEBDDEP           SIZE FOR UNIT RECORD
DEBDSZTC EQU   *-DEBDDEP           SIZE FOR TELECOMMUNICATIONS
         SPACE ,
DEBBINUM DS    H                   BIN NO.
DEBSTRCC DS    H                   CC FOR START OF EXTENT
DEBSTRHH DS    H                   HH FOR START OF EXTENT
DEBENDCC DS    H                   CC FOR END OF EXTENT
DEBENDHH DS    H                   HH FOR END OF EXTENT
DEBNMTRK DS    H                   NO. OF TRACKS IN EXTENT
         SPACE ,
DEBDSZDA EQU   *-DEBDDEP           SIZE FOR DIRECT ACCESS
./ ADD NAME=DECBS
         MACRO
&L       DECBS
         GBLA  &NCP
         LCLA  &CNT
.* THIS MACRO DEFINES THE DECB'S AND BUFFERS FOR THE VTOC READ
.*    THE GLOBAL ASSEMBLY VARIABLE NCP DEFINES HOW MANY DECB'S
.*    SHOULD BE CREATED
.*    THE DECB'S AND BUFFERS ARE ALSO USED TO READ THE DIRECTORIES
         MNOTE *,'&NCP DECBS AND BUFFERS ARE DEFINED'
&CNT     SETA  1
DECB1    DS    0F                  START OF DECB'S
         AIF   ('&L' EQ '').LOOP
&L       EQU   *                   DEFINE LABEL
.LOOP    ANOP  ,
         READ  GDECB&CNT,SF,DCB,BUFF&CNT,MF=L
BUFF&CNT DS    35F    264 BYTE AREA FOR DSCB OR DIRECTORY BLOCK
         AIF   (&CNT NE 1).SKIP    SKIP AFTER FIRST TIME
DECBLEN  EQU   *-DECB1             LENGTH OF DECB AND BUFFER
.SKIP    ANOP  ,
&CNT     SETA  &CNT+1              INCREASE LOOP COUNTER
         AIF   (&CNT LE &NCP).LOOP   LOOP IF NOT DONE
DECB2    DS    0F                  MARK END OF DECB'S
         MEND
./ ADD NAME=DENTER
         MACRO
&L       DENTER &W,&SZ,&L2,&BASE
.* MACRO TO REPLACE GENTER FOR DSNAME COMMANDS
         AIF   ('&L' EQ '').NEP
         ENTRY &L
.NEP     ANOP
&L       DS    0H
         LA    8,CPDSNWA+(&W+3)/4*4
         LR    13,8
&L2      GENTERI &SZ,&BASE
.EXIT    MEND
./ ADD NAME=DENTRY
* DEVICE TABLE FOR WYLBUR VOLUMES
         SPACE
DVNAME   DS    CL6                 DCU001
DVTYPE   DS    CL2                 IO/TM/US
DDTYPE   DS    XL1                 09
DUNIT    DS    CL6                 2305-2/3330
DENTSZ   EQU   *-DVNAME
./ ADD NAME=DIE
         MACRO
&LABEL   DIE   &DUMDUM
&LABEL   DC    H'0'                ABEND .. 0C1
         MEND
./ ADD NAME=DOPEN
         MACRO
&L       DOPEN &FMT,&SPACE,&TYPE
&L       SYSLR 0,&FMT,NULL=,OP=L
         SYSLR 15,&SPACE,NULL=,OP=L
         AIF   ('&TYPE'(1,3) EQ 'USE').USE
         AIF   ('&TYPE'(1,3) EQ 'SAV').SAVE
         AIF   ('&TYPE'(1,3) EQ 'SCR').SCR
         AIF   ('&TYPE'(1,7) EQ 'SHOWDSN').SHOWDSN
         AIF   ('&TYPE'(1,7) EQ 'SHOWDIR').SHOWDIR
         AIF   ('&TYPE'(1,7) EQ 'SHOWCAT').SHOWCAT
         AIF   ('&TYPE'(1,3) EQ 'CAT').CATLG
         MNOTE 4,'&TYPE INVALID.  ''USE'' ASSUMED.'
.USE     MVI   DSNWAF2,0
         AGO   .CALL
.SAVE    MVI   DSNWAF2,DSNFWRT
         AGO   .CALL
.SCR     MVI   DSNWAF2,DSNFWRT+DSNFSCR
         AGO   .CALL
.SHOWDSN MVI   DSNWAF2,DSNFSHOW
         AGO   .CALL
.SHOWDIR MVI   DSNWAF2,DSNFSHOW+DSNFPDS
         AGO   .CALL
.SHOWCAT MVI   DSNWAF2,DSNFSHOW+DSNFCAT
         AGO   .CALL
.CATLG   MVI   DSNWAF2,DSNFCAT
.CALL    ANOP
         CVCALL DOPEN
         MEND
./ ADD NAME=DPDSD
         MACRO
&L       DPDSD &P
&L       DSHOW &P,SHOWDIR
         MEND
./ ADD NAME=DREAD
         MACRO
&L       DREAD
&L       CVCALL DREAD
         MEND
./ ADD NAME=DSCRATCH
         MACRO
&L       DSCRATCH
&L       DOPEN ,,SCRATCH
         MEND
./ ADD NAME=DSHCAT
         MACRO
&L       DSHCAT &P
&L       DSHOW &P,SHOWCAT
         MEND
./ ADD NAME=DSHOW
         MACRO
&L       DSHOW &P,&FUNCT
         AIF   ('&P' EQ '').DEF
&L       DOPEN ,&P,&FUNCT
         MEXIT
.DEF     ANOP
&L       DOPEN ,=A(GETTPAG),&FUNCT
         MEND
./ ADD NAME=DSNWA
* WYLTSO DATA SET CONSTANTS
         SPACE ,
         ORG   CPDSNWA   DSNAME WORK AREA IN CP
DSNWADSN DS    CL44           DSNAME
         SPACE ,
* OFFSETS OF DSNAME LEVELS FOR STANDARD WYLBUR DSNAMES
DSNXG    EQU   4         OFFSET OF GROUP ID IN STD DSNAME
DSNXGL   EQU   3         LENGTH OF GROUP ID LEVEL IN STD DSNAME
DSNXU    EQU   DSNXG+DSNXGL  OFFSET OF USER ID IN STD DSNAME
DSNXUL   EQU   4         LENGTH OF USER ID LEVEL IN STD DSNAME
DSNXN    EQU   DSNXU+DSNXUL  OFFSET AFTER STD DSNAME PREFIX
         SPACE ,
DSNWAMBR DS    CL8            PDS MEMBER NAME
DSNWAVOL DS    CL6            VOLUME
DSNWACLR EQU   *-DSNWADSN     LENGTH TO BE CLEARED TO BLANKS
DSNWANL  DS    H              DSNAME LENGTH
         SPACE 2
DSNWAF1  DS    CL1            DSNAME FLAG BYTE 1
         SPACE ,
DSNFSTD  EQU   X'80'          DSNAME IS STANDARD WYLBUR NAME
DSNFMYDS EQU   X'40'          DSNAME BELONGS TO USER
DSNFWLIB EQU   X'20'          DATA SET IS STANDARD WYLBUR PDS
DSNFQDSN EQU   X'10'          DSNAME WAS SPECIFIED IN QUOTES
DSNFCCNO EQU   X'08'          NOT CATALOG'ED
DSNFCCAT EQU   X'04'          CATALOG
DSNFCUNC EQU   X'02'          UNCATALOG
DSNFCUNO EQU   X'01'          NOT UNCATALOG'ED
         SPACE 2
DSNWAF2  DS    CL1            DSNAME FLAG BYTE 2
         SPACE ,
DSNFWRT  EQU   X'80'          DATA SET TO BE WRITTEN
DSNFSCR  EQU   X'40'          SCRATCH FUNCTION FLAG
DSNFPDS  EQU   X'20'          COMMAND DEALING WITH A PDS
DSNFPERM EQU   X'10'          PERMIT COMMAND IN PROGRESS
DSNFSHOW EQU   X'08'          FUNCTION IS SHOW
DSNFCAT  EQU   X'04'          COMMAND MANIPULATING THE CATLG
DSNFRENM EQU   X'02'          RENAME COMMAND IN PROGRESS
DSNNOVER EQU   X'01'          NOVERIFY OPTION SPECIFIED
         SPACE 2
DSNWAF3  DS    CL1
         SPACE ,
DSNFTYP  EQU   X'80'          SHOW DSN/TYPE,DIR/ALL,CAT/TYPE
DSNFLIN  EQU   X'80'               LINES OPTION ON SAVE
DSNFSPAC EQU   X'40'          SHOW DSN/SPACE
DSNFDATD EQU   X'20'          SHOW DSN/DATED
DSNFXCL  EQU   X'10'          EXCLUDE ON SHOW DSN/DIR/CAT
DSNFCHT  EQU   X'04'               TYPE CHANGE OK ON SAVE
DSNFRTO  EQU   X'04'          TO OPTION IN RENAME
DSNFEXP  EQU   X'02'               EXPDT OVERRIDE OK ON SAVE/SCR
DSNFRALI EQU   X'02'          ALIAS OPTION IN RENAME
DSNFSSI  EQU   X'01'               SSI VALUE SPECIFIED
         SPACE 2
DSNWAF4  DS    CL1            PROTECTION FLAG TO BE SET
         SPACE ,
DSNPSET  EQU   X'01'
DSNPRUSR EQU   X'80'
DSNPRGRP EQU   X'40'
DSNPRBLK EQU   X'C0'
DSNPPUB  EQU   X'00'
DSNPWUSR EQU   X'20'
DSNPWGRP EQU   X'10'
DSNPWBLK EQU   X'30'
DSNPDPO  EQU   X'02'
DSNPREAD EQU   X'08'
DSNPWRIT EQU   X'04'
         SPACE 2
DSNWAF5  DS    CL1            SPARE FLAG
         SPACE ,
DSNFSHR  EQU   X'80'          DON'T ENQ EXCLUSIVE, PLEASE...
DSNPSYDS EQU   X'40'          DS IS NON STD, NON AC, NON SYSMSG
DSNPSYD2 EQU   X'20'          FRO RENAME DSN 2 IS NON STD
DSNRCVRY EQU   X'10'          RECOVERY RUNNING. NO PROT CHK
         SPACE 2
DSNWAF6  DS    CL1            SPARE FLAG
         SPACE 2
DSNWAF7  DS    CL1            SPARE FLAG
         SPACE 2
DSNWAGOR DS    CL(DSNXGL-1)   DSNAME GROUP OVERRIDE
DSNWAUOR DS    CL(DSNXUL-1)   DSNAME USER OVERRIDE
         SPACE ,
         DS    0F
DSSIZ    EQU   *-DSNWADSN     LENGTH OF DSNAME WORK AREA
         SPACE ,
* OFFSETS IN DSNAME WORK AREA FOR SHOW DSNAMES
SDSNQSZ  EQU   44                 SHOW DSNAMES BOUND AREA SIZE
SDSNQLB  DS    CL(SDSNQSZ)        SHOW DSNAMES LOWER BOUND
SDSNQUB  DS    CL(SDSNQSZ)        SHOW DSNAMES UPPER BOUND
SDSNDSZ  EQU   *-DSNWADSN                LNGTH OF SDSN WK AREA
         SPACE ,
         ORG   DSNWADSN+DSSIZ      DEFINE AREA FOR SAVE
DSAVSSI  DS    F                   SPACE FOR SSI IF GIVEN
DSAVSPA  DS    F                   BYTE SIZE FOR NEW DATA SET
DSAVCNT  DS    H                   LINE COUNT FOR NEW DATA SET
DSAVBLK  DS    H                   BLOCK COUNT FOR EDIT SAVE
DSAVSIZ  EQU   *-DSNWADSN          SIZE OF WORK AREA FOR SAVE
         SPACE ,
MXRECSZ  EQU   3520    MAX RECORD SIZE WYLBUR SAVES
         ORG   ,
./ ADD NAME=DVTAREA
         MACRO
&L       DVTAREA &DUMMY
.* THIS IS A MAPPING OF THE DEVCODE INFORMATION
&L       DS    0F
DVTDEVCD DS    F                   DEVICE CODE
DVTFRPS  EQU   X'10'  RPS FLAG BIT FOR OPTION BYTE (2ND BYTE)
         DS    F                   MAX BLOCK SIZE -- NOT NEEDED
DVTNUMC  DS    H                   NUMBER OF CYLINDERS
DVTNUMT  DS    H                   NUMBER OF TRACKS
DVTTRKSZ DS    H                   TRACK SIZE
DVTBLKO  DS    X                   KEYED BLOCK OVERHEAD
DVTLBLKO DS    X                   KEYED BLOCK OVERHEAD (LAST)
DVTKEYO  DS    X                   REDUCE OVERHEAD IF NO KEYS
DVTFLAG  DS    X                   FLAG BYTE
DVTFOHD  EQU   8                   OVERHEAD IS SINGLE HALF-WORD
DVTFTOL  EQU   1                   DEVICE NEEDS TOLERANCE FACTOR
DVTTOL   DS    H                   TOLERANCE FACTOR FOR DEVICE
*  NOTE: DVTTOL IS 512 FOR DEVICES NOT HAVING TOLERANCE FACTOR
*        SO DVTFTOL NEED NOT BE CHECKED BEFORE USING DVTTOL.
         MEND
./ ADD NAME=DVTOC
         MACRO
&L       DVTOC &P
&L       DSHOW &P,SHOWDSN
         MEND
./ ADD NAME=DWRITE
         MACRO
&L       DWRITE &LEN
&L       SYSLR 0,&LEN
         CVCALL DWRITE
         MEND
./ ADD NAME=GENTER
         MACRO
&L       GENTER &SZ,&BASE
         AIF   ('&L' EQ '').NEP
         ENTRY &L
.NEP     ANOP
&L       GENTERI &SZ,&BASE
         MEND
./ ADD NAME=GENTERI
         MACRO
&L       GENTERI &SZ,&BASE
         GBLC  &PAGECDE
         AIF   ('&L' EQ '').NONM
&L       DS    0H
.NONM    ANOP
         AIF   ('&SZ' EQ '').NWA
         LA    13,(&SZ+3)/4*4(,13)
.NWA     ANOP
         AIF   ('&BASE' EQ 'NO').EXIT
         AIF   ('&PAGECDE' EQ 'YES').EXIT
         BALR  7,0
         USING *,7
.EXIT    MEND
./ ADD NAME=HT
         MACRO
&L       HT    &O,&LEN=1
.* THIS MACRO WILL GENERATE A 2 'DC' STATMENTS, THE FIRST
.* BEING THE LENGTH OF THE OPERAND SUPPLIED IN EITHER A
.* HALFWORD OR AS AL1 DEPENDING ON 'LEN=' OPERAND, AND THE
.* SECOND THE OPERAND ITSELF IN A C'...' FORM.
         LCLA  &X,&N
         LCLC  &C
         AIF   ('&O' EQ '').ERR
         AIF   ('&O'(1,1) NE '''').ERR
&X       SETA  1
&C       SETC  '&&'
.LOOP    ANOP
&X       SETA  &X+1
         AIF   (&X GE K'&O).EL
&N       SETA  &N+1
         AIF   ('&O'(&X,1) NE '''' AND '&O'(&X,1) NE '&C'(1,1)).LOOP
&X       SETA  &X+1
         AGO   .LOOP
.EL      AIF   (&LEN EQ 2).HALF
         AIF   (&LEN NE 1).ERR
&L       DC    AL1(&N),C&O
         MEXIT
.HALF    AIF   (&N/2*2 NE &N).ODD
&L       DC    H'&N',C&O
         MEXIT
.ODD     ANOP
&N       SETA  &N+1
&L       DC    H'&N',C&O,C' '
         MEXIT
.ERR     ANOP
&L       SYSLR ERR='***** BAD OPERAND *****'
         MEND
./ ADD NAME=IECSDSL1 0100-80106-80106-1255-00182-00182-00000-$SYS13  00
         MACRO
         IECSDSL1 &PARA
         LCLA  &CTR
&CTR     SETA  1
.LOOP    AIF   (&CTR GT N'&PARA).ENDOFIT
         AIF   ('&PARA(&CTR)' EQ '1').FIRSTON
         AIF   ('&PARA(&CTR)' EQ '2').SECNDON
         AIF   ('&PARA(&CTR)' EQ '3').THIRDON
         AIF   ('&PARA(&CTR)' EQ '4').FORTHON
         AIF   ('&PARA(&CTR)' EQ '5').FIFTHON
         AGO   .ERROR
.FIRSTON ANOP
IECSDSL1 EQU   *                        FORMAT 1 DSCB
DS1DSNAM DS    11F                      DATA SET NAME
DS1FMTID DS    CL1                      FORMAT IDENTIFIER
DS1DSSN  DS    CL6                      DATA SET SERIAL NUMBER
DS1VOLSQ DS    CL2                      VOLUME SEQUENCE NUMBER
DS1CREDT DS    CL3                      CREATION DATE
DS1EXPDT DS    CL3                      EXPIRATION DATE
DS1NOEPV DS    CL1                      NUMBER OF EXTENTS ON VOLUME
DS1NOBDB DS    CL1                      NUMBER OF BYTES USED IN LAST
*                                          DIRECTORY BLOCK
         DS    CL1                      SPARE BYTE
DS1SYSCD DS    CL13                     SYSTEM CODE
*        DS    CL7                      FUTURE USE (ALREADY USED)
DS1TIME  DS    XL3                 BINARY TIME OF CREATION         C522
DS1SPACE DS    X                   FLAG = X'69' IF WYLBUR DATASET  C522
DS1FLAG  DS    X                   FLAG = X'CB' FOR CRBEOUT DS,    C522
DS1REFD  EQU   DS1FLAG             REF DATA SU60
*                                  OR X'10' FOR TEMPORARY DATASET. C522
DS1MODEL DS    X -                 MODEL NUMBER OF CREATING 360    C522
DS1PROTF DS    X                   DATA SET PROTECTION FLAGS.   WA45090
         SPACE ,                                                WA45090
DS1RDFLG EQU   X'C0'               READ BITS MASK.              WA45090
DS1WRFLG EQU   X'30'               WRITE BITS MASK.             WA45090
DS1ACFLG EQU   X'01'               DATA SET PROTECTION IN EFFECTWA45090
DS1DSORG DS    CL2                      DATA SET ORGANIZATION
DS1RECFM DS    CL1                      RECORD FORMAT
DS1OPTCD DS    CL1                      OPTION CODE
DS1BLKL  DS    CL2                      BLOCK LENGTH
DS1LRECL DS    CL2                      RECORD LENGTH
DS1KEYL  DS    CL1                      KEY LENGTH
DS1RKP   DS    CL2                      RELATIVE KEY POSITION
DS1DSIND DS    CL1                      DATA SET INDICATORS
DS1SCALO DS    CL4                      SECONDARY ALLOCATION
DS1LSTAR DS    CL3                      LAST USED TRACK AND RECORD ON
*                                          TRACK
DS1TRBAL DS    CL2                      AMOUNT OF SPACE REMAINING ON
*                                          LAST TRACK USED
         DS    CL2                      SPARE BYTES
DS1EXT1  DS    CL10                     FIRST EXTENT DESCRIPTION
*        FIRST BYTE                     EXTENT TYPE INDICATOR
*        SECOND BYTE                   EXTENT SEQUENCE NUMBER
*        THIRD - SIXTH BYTES            LOWER LIMIT
*        SEVENTH - TENTH BYTES         UPPER LIMIT
DS1EXT2  DS    CL10                     SECOND EXTENT DESCRIPTION
DS1EXT3  DS    CL10                     THIRD EXTENT DESCRIPTION
DS1PTRDS DS    CL5                      POINTER TO NEXT DSCB RECORD
&CTR     SETA  &CTR+1
         AGO   .LOOP
.SECNDON ANOP
IECSDSL2 EQU   *                        FORMAT 2 DSCB
         DS    CL1                      UNUSED (IN KEY)
DS22MIND DS    CL7                      ADDRESS OF 2ND LEVEL MASTER IND
DS2L2MEN DS    CL5                      LAST 2ND LEVEL MASTER IND ENTRY
DS23MIND DS    CL7                      ADDRESS OF 3RD LEVEL MASTER
*                                          INDEX
DS2L3MIN DS    CL5                      LAST 3RD LEVEL MASTER INDEX
*                                          ENTRY
         DS    CL19                     SPARE
* THE FOLLOWING FIELDS ARE CONTAINED IN THE DATA PORTION OF THE FORMAT
* 2DSCB:
DS2FMTID DS    CL1                     FORMAT ID
DS2NOLEV DS    CL1                      NUMBER OF INDEX LEVELS
DS2DVIND DS    CL1                      HIGH LEVEL INDEX DEVELOPMENT
*                                          INDICATOR
DS21RCYL DS    CL3                      FIRST DATA RECORD IN CYLINDER
DS2LTCYL DS    CL2                      LAST  DATA TRACK  IN CYLINDER
DS2CYLOV DS    CL1                      NUMBER OF TRACKS FOR CYLINDER
*                                          OVERFLOW
DS2HIRIN DS    CL1                      HIGHEST "R" ON HIGH-LEVEL INDEX
*                                          TRACK
DS2HIRPR DS    CL1                     HIGHEST @R@ ON HIGH-LEVEL INDEX
DS2HIROV DS    CL1                      HIGHEST "R" ON OVERFLOW TRACK
DS2RSHTR DS    CL1                      "R" OF LAST DATA RECORD ON
*                                          SHARED TRACK
         DS    CL2                      RESERVED FOR FUTURE USE
DS2TAGDT DS    CL2                      TAG DELETION COUNT
DS2RORG3 DS    CL3                      NON-FIRST OVERFLOW REFERENCE
*                                          COUNT (RORG3)
DS2NOBYT DS    CL2                      NUMBER OF BYTES FOR HIGHEST-
*                                          LEVEL INDEX
DS2NOTRK DS    CL1                      NUMBER OF TRACKS FOR HIGHEST-
*                                          LEVEL INDEX
DS2PRCTR DS    CL4                      PRIME RECORD COUNT
DS2STIND DS    CL1                      STATUS INDICATORS
*        BIT   DESCRIPTION
*        0     LAST BLOCK FULL
*        1     LAST TRACK FULL
*        2-7   MUST REMAIN OFF
*
DS2CYLAD DS    CL7                      ADDRESS OF CYLINDER INDEX
DS2ADLIN DS    CL7                      ADDRESS OF LOWEST LEVEL MASTER
*                                          INDEX
DS2ADHIN DS    CL7                      ADDRESS OF HIGHEST LEVEL MASTER
*                                          INDEX
DS2LPRAD DS    CL8                      LAST PRIME DATA RECORD ADDRESS
DS2LTRAD DS    CL5                      LAST TRACK INDEX ENTRY ADDRESS
DS2LCYAD DS    CL5                      LAST CYLINDER INDEX ENTRY
*                                          ADDRESS
DS2LMSAD DS    CL5                      LAST MASTER INDEX ENTRY ADDRESS
DS2LOVAD DS    CL8                      LAST INDEPENDENT OVERFLOW
*                                          RECORD ADDRESS
DS2BYOVL DS    CL2                      BYTES REMAINING ON OVERFLOW
*                                          TRACK
DS2RORG2 DS    CL2                      NUMBER OF INDEPENDENT OVERFLOW
*                                          TRACKS
DS2OVRCT DS    CL2                      OVERFLOW RECORD COUNT
DS2RORG1 DS    CL2                      CYLINDER OVERFLOW AREA COUNT
         DS    CL3                      SPARE
DS2PTRDS DS    CL5                      POINTER TO FORMAT 3 DSCB
&CTR     SETA  &CTR+1
         AGO   .LOOP
.THIRDON ANOP
IECSDSL3 EQU   *                        FORMAT 3 DSCB
         DS    CL4                      UNUSED (IN KEY)
DS3EXTNT DS    CL40                     EXTENT (IN KEY)
DS3FMTID DS    CL1                      FORMAT IDENTIFIER
DS3ADEXT DS    CL90                     ADDITIONAL EXTENT
DS3PTRDS DS    CL5                      POINTER TO NEXT DSCB
&CTR     SETA  &CTR+1
         AGO   .LOOP
.FORTHON ANOP
IECSDSF4 EQU   *                        FORMAT 4 DSCB
DS4IDFMT DS    CL1                      FORMAT ID
DS4HPCHR DS    CL5                      HIGHEST PRIME CCHHR
DS4DSREC DS    CL2                      AVAILABLE DSCB RECORDS
DS4HCCHH DS    CL4                      HIGHEST CCHH OF ALTERNATE TRKS
DS4NOATK DS    CL2                      NUMBER OF ALTERNATE TRACKS
DS4VTOCI DS    CL1                      VTOC INDICATORS
*        BIT             DESCRIPTION
*        O               IF ON INDICATES THAT EITHER NO FORMAT 5 DSCB'S
*                        EXIST, OR THAT THEY DO NOT REFLECT THE TRUE
*                        STATUS OF THE VOLUME
*        1-7             SPARE
DS4NOEXT DS    CL1                      NUMBER OF EXTENTS
         DS    CL2                      RESERVED FOR FUTURE USE
DS4DEVCT DS    0CL14                   DEVICE CONSTANTS
DS4DEVSZ DS    CL4                      DEVICE SIZE
DS4DEVTK DS    CL2                      DEVICE TRACK LENGTH
DS4DEVOV DS    0CL3                    DEVICE RECORD OVERHEAD
DS4DEVI  DS    CL1                     FOR KEYED RECORD NOT LAST ONE
DS4DEVL  DS    CL1                     FOR KEYED RECORD LAST ONE
DS4DEVK  DS    CL1                      CONSTANT TO BE SUBTRACTED IF
*                                          RECORD IS UNKEYED
DS4DEVFG DS    CL1                      FLAG BYTE
*        BIT                  DESCRIPTION
*        7                    A TOLERANCE FACTOR MUST BE APPLIED TO ALL
*                             BUT THE LAST RECORD ON THE TRACK
*        6                    CC AND HH MUST BE USED AS 1 BYTE VALUES
*                                AS IN THE CASE OF THE 2321
DS4DEVTL DS    CL2                     DEVICE TOLERANCE
DS4DEVDT DS    CL1                      NUMBER OF DSCB'S PER TRACK
DS4DEVDB DS    CL1                      NUMBER OF DIRECTORY BLOCKS PER
*                                          TRACK
         DS    CL29                     SPARE
DS4VTOCE DS    CL10                     VTOC EXTENT
         DS    CL25                     SPARE
&CTR     SETA  &CTR+1
         AGO   .LOOP
.FIFTHON ANOP
IECSDSF5 EQU   *                        FORMAT 5 DSCB
DS5KEYID DS    CL4                      KEY IDENTIFICATION
DS5AVEXT DS    CL5                      AVAILABLE EXTENT
DS5EXTAV DS    CL35                     AVAILABLE EXTENTS, IN KEY
DS5FMTID DS    CL1                      FORMAT IDENTIFIER
DS5MAVET DS    CL90                    AVAILABLE EXTENTS
DS5PTRDS DS    CL5                      POINTER TO NEXT FORMAT 5 DSCB
&CTR     SETA  &CTR+1
         AGO   .LOOP
.ERROR   MNOTE 7,'***INCORRECT FORMAT NUMBER'
.ENDOFIT MEND
./ ADD NAME=JCBTSO
* WYLTSO LINE EDITOR - JOB CONTROL BLOCK
         SPACE ,
JCBSTART DS    0D
         SPACE ,
JCBPAGES DS    3A
JCBWAPTR DS    A
         SPACE ,
JCBAFL   DS    X                       FLAGS
         SPACE ,
JCBAFALO EQU   X'80'                   AUTO LOGOFF
JCBSYSPR EQU   X'40'                   SYS PRIV
JCBTSO   EQU   X'20'                   TSO TASK
JCBAFDO  EQU   X'10'                   DATA SET IS OPEN
JCBSTAX  EQU   X'08'                   STAX ISSUED
JCBSTAXD EQU   X'04'                   STAX DEFER=YES
JCBAFIA  EQU   X'02'                   IDLE ATTN RECEIVED
JCBAINIT EQU   X'01'                   INITILIZATION PHASE
         SPACE ,
JCBBFL   DS    X                       FLAGS
         SPACE ,
JCBBFPER EQU   X'80'                   PAGE DRUM ERROR
JCBPGRD  EQU   X'40'                   PAGE MUST BE READ IN
JCBPIOW  EQU   X'20'                   WAIT MUST BE ISSUED
         SPACE ,
         DS    0F
JCBSIZE  EQU   *-JCBSTART
./ ADD NAME=KWYL
KWYL     DC    C'WYL.'        FIRST LEVEL OF WYLBUR DSNAMES
./ ADD NAME=MDC
*
*  MACHINE DEPENDENT CELLS
*
EXTOPSW  EQU   24                      EXTERNAL OLD PSW
SVCOPSW  EQU   32                      SVC OLD PSW
PIOPSW   EQU   40                      PROGRAM OLD PSW
MKOPSW   EQU   48                      MACHINE CHECK OLD PSW
IOOPSW   EQU   56                      I/O OLD PSW
CSW      EQU   64                      CHANNEL STATUS WORD
CSWKEY   EQU   64                      PROTECT KEY PORTION
CSWADDR  EQU   65                      ADDRESS PORTION OF CSW
CSWSTAT  EQU   68                      STATUS BYTES
*
CSWSATTN EQU   X'80'                   ATTENTION
CSWSSM   EQU   X'40'                   STATUS MODIFIER
CSWSCUE  EQU   X'20'                   CONTROL UNIT END
CSWSBUSY EQU   X'10'                   CONTROL UNIT BUSY
CSWSCE   EQU   X'08'                   CHANNEL END
CSWSDE   EQU   X'04'                   DEVICE END
CSWSUC   EQU   X'02'                   UNIT CHECK
CSWSUE   EQU   X'01'                   UNIT EXCEPTION
*
CSWSTAT2 EQU   69                      2ND STATUS BYTE
*
CSWSPCI  EQU   X'80'                   PCI
CSWSIL   EQU   X'40'                   INCORRECT LENGTH
CSWSPC   EQU   X'20'                   PROGRAM CHECK
CSWSSPC  EQU   X'10'                   STORAGE PROTECTION CHECK
CSWSCDC  EQU   X'08'                   CHANNEL DATA CHECK
CSWSCCC  EQU   X'04'                   CHANNEL CONTROL CHECK
CSWSICC  EQU   X'02'                   INTERFACE CONTROL CHECK
CSWSCC   EQU   X'01'                   CHAINING CHECK
*
CSWLEN   EQU   70                      UNUSED LENGTH
CAW      EQU   72                      CHANNEL ADDRESS WORD
TIMER    EQU   80                      INTERVAL TIMER
EXTNPSW  EQU   88                      EXTERNAL NEW PSW
SVCNPSW  EQU   96                      SVC NEW PSW
PINPSW   EQU   104                     PROGRAM NEW PSW
MKNPSW   EQU   112                     MACHINE CHECK NEW PSW
IONPSW   EQU   120                     I/O NEW PSW
DSA      EQU   128                     DIAGNOSTIC SCAN-OUT AREA
*
*  CCW DEFINITIONS
*
CCWCC    EQU   0                       COMMAND CODE
*
CCWCSAD0 EQU   X'13'                   SET ADDRESS 0
CCWCSAD1 EQU   X'17'                   SET ADDRESS 1
CCWCSAD2 EQU   X'1B'                   SET ADDRESS 2
CCWCSAD3 EQU   X'1F'                   SET ADDRESS 3
CCWCEABL EQU   X'27'                   ENABLE
CCWCDABL EQU   X'2F'                   DISABLE
CCWCPREP EQU   X'06'                   PREPARE
CCWCBRK  EQU   X'0D'                   BREAK
CCWCWR   EQU   X'01'                   WRITE
CCWCRDTO EQU   X'02'                   READ WITH TIMEOUT
CCWCRDI  EQU   X'0A'                   READ INHIBIT
CCWCNOP  EQU   X'03'                   NO OPERATION
CCWCTIC  EQU   X'08'                   TRANSFER IN CHANNEL
*
CCWADDR  EQU   1                       ADDRESS
CCWFL    EQU   4                       FLAGS
*
CCWFDCH  EQU   X'80'                   DATA CHAINING BIT
CCWFCCH  EQU   X'40'                   COMMAND CHAINING BIT
CCWFSLI  EQU   X'20'                   SUPPRESS INCORRECT LENGTH BIT
CCWFSKIP EQU   X'10'                   SUPPRESS DATA TRANSFER BIT
*
CCWLEN   EQU   6                       LENGTH
*
*  SENSE BYTES
*
SNSBYTE1 EQU   0                       SENSE BYTE 1
*
SNSBCR   EQU   X'80'                   COMMAND REJECT
SNSBIR   EQU   X'40'                   INTERVENTION REQUIRED
SNSBBOPC EQU   X'20'                   BUS OUT PARITY CHECK
SNSBEC   EQU   X'10'                   EQUIPMENT CHECK
SNSBDC   EQU   X'08'                   DATA CHECK
SNSBOR   EQU   X'04'                   OVERRUN
SNSBLD   EQU   X'02'                   LOST DATA
SNSBTO   EQU   X'01'                   TIMEOUT
./ ADD NAME=OFFSET
         MACRO
&LABEL   OFFSET &REG,&TAG
&LABEL   L     &REG,=A(&TAG-CPAREA)
         AR    &REG,R12
         MEND
./ ADD NAME=OPWRITE
         MACRO
&L       OPWRITE
&L       CVCALL OPWRITE
         MEND
./ ADD NAME=PAGECDE
         MACRO
&LCSECT  PAGECDE
.* THIS MACRO STARTS THE ASSEMBLY OF CODE THAT WILL BE PAGED
.* THE LABEL FIELD MUST BE THE CSECT NAME.  AFTER DEFINING THE
.* CSECT, THE GLOBAL SYMBOL &PAGECDE IS SET TO 'YES' AND A
.* USING FOR REGISTER 10 IS DONE
.* THE OPERANDS OF PAGECDE ARE THE NAMES OF THE ROUTINES FOUND
.* IN THIS PAGE.  A "P" IS PREFIXED TO THE ROUTINE NAME TO GET THE
.* ENTRY SYMBOL IN THE PAGE AND AN "R" IS PREFIXED TO GET THE
.* ROUTBLE SYMBOL.
         GBLC  &PAGECDE,&CSECT
         LCLA  &CTR
         LCLC  &CURR
&CSECT   SETC  '&LCSECT'
         SPACE ,
&CSECT   CSECT
&PAGECDE SETC 'YES'
         USING *,10                   R10 POINTS TO START OF CSECT
         DC    AL2(&CSECT.END-&CSECT) DISPLACEMENT TO INIT START
         SPACE ,
* EACH PAGE OF CODE MUST START WITH A PAGECDE DEFINING THE ROUTINES
* FOUND IN THE PAGE.  THE PAGED-CODE MUST END WITH A PINIT AND
* PEND MACRO SURROUNDING ANY INITIALIZATION CODE NECESSARY FOR
* THE PAGE.  THE INITIALIZATION ROUTINE IS CALLED BEFORE ANY
* PAGE IS WRITTEN SO IT CAN BE USED TO INITIALIZE SUCH THINGS
* AS SCAN TABLE PUSH DOWN POINTERS THAT ARE ABSOLUTE ADDRESSES.
* ADDRESSABILITY FOR THE PAGED-CODE, THE CV, AND CV2 IS ESTABLISHED
* BEFORE THE ROUTINE IS CALLED.  THE PEND MACRO GENERATES THE
* RETURN VIA R14.  R0-R4 CAN BE USED BY THE ROUTINES.
         SPACE ,
* EACH PAGE OF CODE CAN BE NO LONGER THAN CPSIZE.  THE FOLLOWING
* SCON GENERATES NO CODE BUT IT WILL GENERATE AN ERROR IF THE
* PAGE CODE SIZE EXCEEDS CPSIZE.
         DC    0S(CPSIZE-&CSECT.END+&CSECT.(0))
         SPACE ,
* THE TABLE OF ROUTINES IN THIS PAGE IS GIVEN BELOW.  EACH ENTRY
* CONSISTS OF 2 HALFWORD DISPLACEMENTS USED BY THE WYLOAD ROUTINE
* AT STARTUP TO INITIALIZE THE ROUTBLE ENTRIES.
* THE FIRST HALFWORD IS THE ROUTBLE DISPLACEMENT TO BE INITIALIZED
* AT STARTUP; THE SECOND HALFWORD IS THE DISPLACEMENT TO THE START
* OF THE ROUTINE IN THE PAGE.  IF THE ROUTINE IS THE NAME "MISSING",
* THE PAGE DISPLACEMENT AND PAGE NUMBER OF THE ROUTINE WILL BE USED
* TO INITIALIZE ALL ENTRIES IN ROUTBLE WHICH WERE NOT INITIALIZED
* BY OTHER ROUTINES.  ONLY 1 "MISSING" ROUTINE SHOULD EVER BE
* DEFINED.
         SPACE ,
         AIF   (N'&SYSLIST NE 0).GO
         MNOTE 8,'NO ROUTINES DEFINED IN PAGE'
         MEXIT
.GO      ANOP
&CTR     SETA  &CTR+1
&CURR    SETC  '&SYSLIST(&CTR)'
         AIF   ('&CURR' EQ 'MISSING').MISS
         DC    AL2(R&CURR-ROUTBLE,P&CURR-&CSECT)
         AGO   .TEST
.MISS    ANOP
* THE FOLLOWING ROUTINE WILL FILL ALL MISSING ROUTINES IN ROUTBLE
         DC    AL2(0-1,P&CURR-&CSECT)
         SPACE ,
.TEST    AIF   (N'&SYSLIST GT &CTR).GO
         DC    AL2(0-2)  END OF TABLE FOR THIS PAGE
         MEND
./ ADD NAME=PAGEFILE
         MACRO
         PAGEFILE
         GBLA  &PFCBCNT
         LCLA  &X,&DD
.LOOP    ANOP
&X       SETA  &X+1
         AIF   (&X GT N'&SYSLIST).EXIT
&PFCBCNT SETA  &PFCBCNT+1
PTSIZE&PFCBCNT EQU &SYSLIST(&X)
PFCB&PFCBCNT DC 0F'0',(PFCBSIZE)X'00'
         PFORG PFCBPTST
         DC    A(PT&PFCBCNT)
         PFORG PFCBNP
         DC    A(&SYSLIST(&X))
         PFORG PFCBMASK
         DC    A((&PFCBCNT-1)*X'1000')
         AIF   (&X NE N'&SYSLIST).NOFL
         PFORG PFCBFL
         DC    AL1(PFCBFGND)
.NOFL    ANOP
         PFORG PFCBDCBA
&DD      SETA  &PFCBCNT-1
         DCB   DDNAME=PAGE&DD,MACRF=E,DEVD=DA,DSORG=DA
         ORG   ,
         SPACE ,
         AGO   .LOOP
.EXIT    ANOP
         MEND
./ ADD NAME=PAGEOPEN 0105-79320-79323-0830-00028-00060-00000-TEC015  00
*
*  OPEN FILE
*
         LA    R3,PFCBDCB          POINT AT DCB
         OPEN  ((R3),(OUTPUT))     OPEN PAGE FILE
         TM    PFCBDCB+(DCBOFLGS-IHADCB),X'10' OPEN OK
         BZ    BADOPEN             BAD PUT OUT MSG
*
PFOPND   DS    0H
         L     R3,PFCBDCB+(DCBDEBAD-IHADCB)  DEB ADDR
         USING DEBBASIC,R3
         SR    R4,R4
         IC    R4,DEBNMEXT         NO. OF EXTENTS
         LA    R3,DEBBASND              END OF BASIC SECTION
         USING DEBDASD,R3               IS START OF DASD EXTENT
         SR    1,1                 SET NO. OF TRACKS
CNTTRK   AH    1,DEBNMTRK          NO. TRACKS IN THIS EXTENT
         LA    R3,(DEBNMTRK-DEBDASD)+L'DEBNMTRK(,R2)  +SIZE OF S
         BCT   R4,CNTTRK           NEXT EXTENT
         M     0,PFCBRPT           TIMES RECORDS/TRACK
         CL    1,PFCBNP            COMPARE WITH MAX DEFINED
         BNH   *+8                 BR IF OK
         L     1,PFCBNP            OR USE MAX DEFINED
         ST    1,PFCBNP            SAVE NO. OF PAGES
         AL    1,PFCBPTST          POINT TO
         BCTR  1,0                     END OF PAGE TABLE
         ST    1,PFCBPTND          SAVE IT
ENDOPEN  DS    0H                                                JJG
./ ADD NAME=PAGES
         MACRO
         PAGES &NUM
         LCLA  &PAGES
.LOOP    ANOP
&PAGES   SETA  &PAGES+1
CVPAGE&PAGES DS  0D
         DS    XL(PCBSIZE)
         AIF   (&PAGES LT &NUM).LOOP
         MEND
./ ADD NAME=PCALL
         MACRO
&L       PCALL &R
.* THIS MACRO GENERATES CODE TO CALL PAGED WYLBUR CODE
.* TO GET THE DISPLACEMENT IN ROUTBLE AN "R" IS PREFIXED
.* TO THE ROUTINE NAME GIVEN.
         GBLC  &PAGECDE
&L       BAL   14,CVROUTGT         GO TO CODE-GET ROUTINE
         DC    AL2(R&R-ROUTBLE) DISPLACEMENT FOR ROUTINE
         AIF   ('&PAGECDE' NE 'YES').EXIT
         DC    AL2(0) FORCE ERROR IF RETURN IS MADE TO PAGED CODE
.EXIT    MEND
./ ADD NAME=PCBTSO
* WYLTSO LINE EDITOR PAGE BUFFER
         SPACE
PCBSTART DS    0D
PCBPSIZE EQU   3016   1952   1584      PAGE SIZE
PCBBUF   DS    (PCBPSIZE)X             PAGE BUFFER
PCBPT    DS    A                       POINTER TO PT ENTRY
PCBPFCB  DS    A                       ADDRESS OF PFCB
PCBPN    DS    H                       PAGE NUMBER
*                    FORMAT: X'ZYYY'    Z: PFCB SEQUENCE
*                          :          YYY: RELATIVE PG #
PCBFL    DS    X              FLAGS
*
PCBFFULL EQU   X'80'               BUFFER IS FULL
PCBPCODE EQU   X'40'               PAGED CODE
PCBFMARK EQU   X'20'               PAGE HAS BEEN ALTERED
PCBOWNED EQU   X'10'               PCB IN USE
PIOWRITE EQU   5                   OPCODE FOR WRITE
PIOREAD  EQU   6                   OPCODE FOR READ
PCBECB   DC    A(0)                ECB FOR EXCP
PCBIOB   DS    0F                  START OF IOB
PCBFLG1  DC    X'42'               IOB FLAGS 1
PCBSECT  DC    X'00'               SECTOR NUMBER IF RPS
PCBSNS   DC    X'0000'             SENSE BYTES
         DC    X'00'
PCBECBP  DC    AL3(PCBECB)         ECB POINTER
PCBCSW   DC    2A(0)               CHANNEL STATUS WORD
         DC    X'00'
PCBCCWP  DC    AL3(PCBCCWS)        POINTER TO CCWS
         DC    X'00'
PCBDCB   DC    AL3(0)              POINTER TO DCB
         DC    2A(0)
PCBSEEK  DC    XL8'00'             SEEK VALUE (MBBCCHHR)
PCBCCWSC CCW   X'23',PCBSECT,X'40',1  SET SECTOR CCW
PCBCCWS  CCW   X'31',PCBSEEK+3,X'40',5  SEARCH
         CCW   X'08',*-8,0,0       TIC
PCBRWCCW CCW   X'06',PCBBUF,0,PCBPSIZE  READ/WRITE
         SPACE
PCBQF    DS    F                   PTR TO NEXT BUFF ON Q
PCBQB    DS    F                   PTR TO PREV BUFF ON Q
         DS    0D
PCBSIZE  EQU   *-PCBSTART              SIZE OF PCB
./ ADD NAME=PEND
         MACRO
         PEND
         GBLC  &PAGECDE,&CSECT
         AIF   ('&PAGECDE' EQ 'YES').GO
         MNOTE 12,'PEND IS ILLEGAL WHEN NOT IN PAGED-CODE'
         MEXIT
.GO      ANOP
         SPACE ,
         DROP  11
         SPACE ,
         BR    14
         SPACE ,
         LTORG
&PAGECDE SETC  ''
         MEND
./ ADD NAME=PFCBTSO,SSI=00009361
* WYLTSO PAGE FILE CONTROL BLOCK
         SPACE
PFCBSTRT DS    0F
PFCBRPT  DC    A(0)                RECORDS/ TRACK
PFCBPTST DS    A(0)                START OF PAGE TABLE
PFCBPTND DC    A(0)                END OF PAGE TABLE
PFCBNP   DC    A(0)                NO. OF PAGES
PFCBCP   DC    A(0)                CURRENT PAGES USED
PFCBMASK DC    XL4'1000'           MASK TO OR IN FILE NO.
PFCBFL   DC    X'00'               FLAGS
         SPACE
PFCBFGND EQU   X'80'               END OF GROUP
PFCBFRPS EQU   X'40'               FILE HAS RPS
*
PFCBSECM EQU   19                  MAX SECTOR RECORDS FOR RPS
PFCBSECT DC    (PFCBSECM)X'00'     DEFINE AREA FOR SECTOR VALUES
         SPACE
PFCBDCBA DS    0F                  DCB AREA
PFCBDCB  DCB   DDNAME=PAGE0,MACRF=(E),DEVD=DA,DSORG=DA
PFCBDSZ1 EQU   *-PFCBDCB
         DS    0F
PFCBPDCB DCB   DDNAME=PAGE0,MACRF=WP,DSORG=PS,OPTCD=C
PFCBDSZ2 EQU   *-PFCBPDCB
         DS    0F
PFCBWRIT WRITE PFCBDECB,SF,0,0,'S',MF=L
         DS    0F
PFCBSIZE EQU   *-PFCBSTRT
./ ADD NAME=PFK      0101-79354-79354-0905-00032-00031-00000-TEC015  00
PFK01    EQU   X'F1'
PFK02    EQU   X'F2'
PFK03    EQU   X'F3'
PFK04    EQU   X'F4'
PFK05    EQU   X'F5'
PFK06    EQU   X'F6'
PFK07    EQU   X'F7'
PFK08    EQU   X'F8'
PFK09    EQU   X'F9'
PFK10    EQU   X'7A'
PFK11    EQU   X'7B'
PFK12    EQU   X'7C'
PFK13    EQU   X'C1'
PFK14    EQU   X'C2'
PFK15    EQU   X'C3'
PFK16    EQU   X'C4'
PFK17    EQU   X'C5'
PFK18    EQU   X'C6'
PFK19    EQU   X'C7'
PFK20    EQU   X'C8'
PFK21    EQU   X'C9'
PFK22    EQU   X'4A'
PFK23    EQU   X'4B'
PFK24    EQU   X'4C'
ENTER    EQU   X'7D'
RESEND   EQU   X'6E'
PFKENT   EQU   64
PFKTYP   EQU   0
PFKSIZ   EQU   1
PFKNO    EQU   2
PFKCMD   EQU   5
NUMPFK   EQU   24
./ ADD NAME=PFLIP
         MACRO
&L       PFLIP &R,&S
&L       LR    1,&R
         LR    &R,&S
         LR    &S,1
         MEND
./ ADD NAME=PFORG
         MACRO
         PFORG &F
         GBLA  &PFCBCNT
         ORG   (&F)-PFCB+PFCB&PFCBCNT
         MEND
./ ADD NAME=PFREE
         MACRO
&L       PFREE &R,&T
         AIF   ('&T' EQ 'EMPTY').LCR
&L       LTR   1,&R
         AGO   .X
.LCR     ANOP
&L       LCR   1,&R
.X       ANOP
         BZ    *+12
         SR    &R,&R
         CVCALL PFREE
         MEND
./ ADD NAME=PGET
         MACRO
&L       PGET  &R,&N
         LCLC  &LAB
&LAB     SETC  '&L'
         AIF   ('&R' EQ '1').NOLOAD
         AIF   ('&R' EQ 'R1').NOLOAD
&LAB     LR    1,&R
&LAB     SETC  ''
.NOLOAD  ANOP
&LAB     SYSLR 0,&N,OP=LH
         CVCALL PGET
         AIF   ('&R' EQ '1').NLD2
         AIF   ('&R' EQ 'R1').NLD2
         LR    &R,1
.NLD2    ANOP
         AIF   ('&N' NE '').NOLTR
         LTR   0,0
.NOLTR   ANOP
         MEND
./ ADD NAME=PINIT
         MACRO
         PINIT
         GBLC  &PAGECDE,&CSECT
         AIF   ('&PAGECDE' EQ 'YES').GO
         MNOTE 12,'PINIT IS ILLEGAL WHEN NOT IN PAGED-CODE'
         MEXIT
.GO      ANOP
         SPACE ,
         DROP  10
         SPACE 3
         LTORG
         EJECT
* DEFINE THE HEADER FOR THE PAGE-CODE INITIALIZATION ROUTINE
         SPACE ,
&CSECT.END DS  0H
         SPACE ,
*  THE FOLLOWING USING ESTABLISH ADDRESSABILITY FOR INITIALIZATION
*  AS USUAL, R12 POINTS TO CP/CV AREA
         SPACE ,
         USING &CSECT,11
         SPACE
         MEND
./ ADD NAME=PIOB,SSI=00000157
PIOBSTRT DS    0D
PIOBFLG1 DC    X'42'
         DC    X'00'
PIOBSNS  DC    X'0000'
         DC    X'00'
PIOBECB  DC    AL3(PECB)
PIOBCSW  DC    2A(0)
         DC    X'00'
PIOBCCW  DC    AL3(PCCWS)
         DC    X'00'
PIOBDCB  DC    AL3(0)
         DC    2A(0)
PSEEK1   DC    XL8'0'
PSEEKREC EQU   PSEEK1+7
PSEEK2   DC    XL8'0'
PSEEK3   DC    XL8'0'
PCCWS    DS    0D
PCCWSID1 CCW   X'31',PSEEK1+3,X'40',5
PCCWTIC1 CCW   X'08',*-8,0,0
PCCWWRT1 CCW   X'05',0,X'40',CPSIZE
PCCWSID2 CCW   X'31',PSEEK2+3,X'40',5
PCCWTIC2 CCW   X'08',*-8,0,0
PCCWWRT2 CCW   X'05',0,X'40',CPSIZE
PCCWSID3 CCW   X'31',PSEEK3+3,X'40',5
PCCWTIC3 CCW   X'08',*-8,0,0
PCCWWRT3 CCW   X'05',0,0,CPSIZE
PECB     DC    A(0)
         DS    0D
PIOBSIZE EQU   *-PIOB
./ ADD NAME=PJUNK
         MACRO
&L       PJUNK &N
.*  MODIFIED 9/18/70 BY E. RUSSELL
&L       SYSLR 0,&N,OP=LH
         CVCALL PJUNK
         MEND
./ ADD NAME=PMAC,SSI=00000164
         GBLA  &NUMPAGE
         GBLA  &PAGE0
*                                                               JEP017
* MODIFIED AT TO TRIPLE PAGE0 SIZE AND DOUBLE EXEC FILE         JEP017
*                                                               JEP017
         GBLA  &PFILES
         GBLA  &MAXDDS
*PAGE0   SETA  25*12                                            JEP017
&PAGE0   SETA   595+20+10+42    MAX WITH 3016 PAGESIZE         JJG
*NUMPAGE SETA  12                                               JEP017
&NUMPAGE SETA  16                                               JEP017
&PFILES  SETA  1
&MAXDDS  SETA  24
./ ADD NAME=PMARK
         MACRO
&L       PMARK &R
&L       LR    1,&R
         CVCALL PMARK
         MEND
./ ADD NAME=PMOVE
         MACRO
&L       PMOVE &R,&S
&L       LR    1,&R
         LR    &R,&S
         SR    &S,&S
         CVCALL PFREE
         MEND
./ ADD NAME=PNUM
         MACRO
&L       PNUM  &R
&L       LR    1,&R
         CVCALL PNUM
         MEND
./ ADD NAME=PT
         MACRO
         PT
         GBLA  &PFCBCNT
         LCLA  &X
.LOOP    ANOP
&X       SETA  &X+1
PT&X     DC    (PTSIZE&X)X'FF'
         AIF   (&X LT &PFCBCNT).LOOP
         MEND
./ ADD NAME=READWA
* WORK AREA DSECT FOR READ COMMAND -- CREATED BY JWW ON 2/4/72
READWA   DSECT
RDWAFL   DS    X                   READ FLAG BYTE
         SPACE
RDWAFLNO EQU   X'80'               READ LINE NUMBER GIVEN
RDWAFDEL EQU   X'40'               DELETE OPTION GIVEN
RDWAFPRO EQU   X'20'               READ VALUE OR READ STRING
RDWAFSTR EQU   X'10'               READ STRING
         SPACE
RDWACOL1 DS    H                   FIRST COLUMN NO. - 1
RDWACOL2 DS    H                   SECOND COL NO. - FIRST + 1
RDWAPRLN DS    H                   READ PROMPT LENGTH
RDWAPRMT DS    XL62                READ PROMPT AREA
RDWAVARN DS    H                   NUMBER OF VARIABLES GIVEN
RDVARMAX EQU   8                   MAX NO. OF VARIABLES ALLOWED
RDWAVAR  DS    (RDVARMAX)F         VARIABLE ADDRESS SAVE AREA
RDWALINO DS    F                   READ LINE NUMBER
RDWASIZE EQU   *-READWA            SIZE OF READ WORK AREA
./ ADD NAME=REGS
         MACRO
         REGS
R0       EQU   0                        REGISTER DEFINITIONS
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
./ ADD NAME=ROUTBLE,SSI=00009327
         MACRO
         ROUTBLE &TYPE
         AIF   ('&TYPE' EQ 'NAMES').RNAMES
ROUTBLE  DS    0D
         SPACE ,
* TABLE ENTRIES ARE 2 HALFWORDS
* THE FIRST HALFWORD IS THE NUMBER OF THE PAGE CONTAINING THE ROUTINE
* THE SECOND HALFWORD IS THE DISPLACEMENT IN THAT PAGE TO THE ROUTINE
*                                                           JEP018
*                                                           JEP018
* MOD JEP018                                                JEP018
*  MODIFIED AT DCEC TO INCLUDE TSOCMDS. JERRY PITTENGER     JEP018
*                                                           JEP018
*                                                           JEP018
         AGO   .ROUTINE
.RNAMES  ANOP
ROUTNAM  EQU   *
.ROUTINE ANOP
&TYPE    ROUTINE BWYLGO,RECOVER,STACK,GODUMP,HELP,DECIDE
&TYPE    ROUTINE LGOFF,COMPARE,INFO,SUSPND,WHERE,CLEAR
&TYPE    ROUTINE GOCOLL,MODGO,GOINS,GOREPL,GONUMB
&TYPE    ROUTINE GOTAB,SHOCOL,GOALINE,DOALINE,GOCENTR
&TYPE    ROUTINE GOSHO,SHOSIZ,SHONAM,SHODSN,WRICTDR,WRIDSSP
&TYPE    ROUTINE SHOVOLS,NOMORPG,GOCTLG,SHOCAT
&TYPE    ROUTINE NTGDCAT,NTGDOPN
&TYPE    ROUTINE SHOSPAC,DSNERR,GOCOMP,SEND
&TYPE   ROUTINE GOPUT,STAX,TIME,GOTSO,PROFIL,LSTUSR,TSOCMDS JEP018
&TYPE    ROUTINE HDSN,HSHOW,HSET,HALIGN,HCATLG,HCENTR,HCHANG
&TYPE    ROUTINE HCLEAR,HCOLCT,HCOMNT,HCOMP,HCOPY,HDECD
&TYPE    ROUTINE HDEL,HSET1,HEDIT,HEXCT,HIF,HINSRT
&TYPE    ROUTINE HJUST,HLIST,HLOAD,HLOGF,HMODFY,HMOVE,HNUM
&TYPE    ROUTINE HPOINT,HPOP,HPUT,HREAD,HRECAT,HRENM,HREP
&TYPE    ROUTINE HRESTR,HSAVE,HSCR,HSEND,HSTACK,HCRT,HSUSP
&TYPE    ROUTINE NOHELP,HTSO,HUNCAT,HUSE,HSET2,HHELP
         SPACE ,
         AIF   ('&TYPE' EQ 'NAMES').ROUTNL
ROUTBLEN EQU   *-ROUTBLE
         MEXIT
.ROUTNL  ANOP
ROUTNLEN EQU   *-ROUTNAM
         MEND
./ ADD NAME=ROUTINE
         MACRO
&TYPE    ROUTINE
.* GENERATE ENTRIES FOR ROUTBLE
         LCLA  &CNT
         LCLC  &ROUT
.LOOP    AIF   (N'&SYSLIST LE &CNT).EXIT
&CNT     SETA  &CNT+1
&ROUT    SETC  '&SYSLIST(&CNT)'
         AIF   ('&TYPE' EQ 'NAMES').ROUTNAM
R&ROUT   DC    2H'0'
         AGO   .LOOP
.ROUTNAM DC    CL7'&ROUT'
         AGO   .LOOP
.EXIT    MEND
./ ADD NAME=RTNCODES
         SPACE 2
***  SYMBOLIC NAMES FOR RETURN CODES GOING TO NTGDOPN ROUTINE
*
RTNNODS  EQU   4         DATA SET NOT FOUND
RTNDUPDS EQU   8         DATA SET ALREADY EXISTS
RTNNOSPC EQU   12        NO SPACE FOR DATA SET
RTNINUSE EQU   16        DATA SET IN USE
RTNINVBS EQU   20        INVALID BLOCK SIZE
RTNILDSN EQU   24        ILLEGAL DSNAME
RTNILORG EQU   28        INVALID RECFM OR DSORG
** TALOCODE IS 32 DEFINED IN WYLCONST
** ABRTCODE IS 36 DEFINED IN WYLCONST
RTNBDVOL EQU   40        INVALID VOLUME
RTNBDMBR EQU   44        INVALID MEMBER NAME
RTNDIRFL EQU   48        DIRECTORY FULL
RTNEXPDT EQU   52        DATA SET IS EXPIRATION DATE PROTECTED   JW2066
RTNOVSP  EQU   56        USER HAS EXCEEDED SEQUENTIAL SAVE SPACE**JWW22
RTNDIRIO EQU   60        DIRECTORY I/O ERROR                     JW2066
RTNSHERR EQU   80        ERROR IN SHOW DSNAMES/DIRECTORY ROUTINE
RTNCATER EQU   100       "CATASTROPHIC" ERROR
RTNPAGES EQU   64        INSUFFICIENT PAGES FOR SHO COMMANDS     RTT
RTNPROT  EQU   68        DATASET PROTECTED BY ORIGINAL OWNER       D008
./ ADD NAME=SCAN
         MACRO
&L       SCAN  &PRT,&NO
         GBLC  &PAGECDE
&L       SYSLR 1,&PRT
         AIF   ('&PAGECDE' NE 'YES').GO
         AIF   ('&PRT' EQ '').GO
         AIF   ('&PRT' EQ '0').GO
         AIF   ('&NO' EQ 'NO').GO
         SLR   1,10                CONVERT ADDR TO RELATIVE
         LCR   1,1                     AND MAKE IT NEGATIVE
.GO      ANOP
         CVCALL SCAN
         MEND
./ ADD NAME=SCANRSTR
         MACRO
&L       SCANRSTR &T
.* MACRO TO RESTORE SCAN POINTERS FROM SPECIFIED SAVE AREA
         AIF   ('&T' EQ '').DEFLT
         AIF   ('&T'(1,1) EQ '(').REG   REG SPEC?
&L       MVC   CPSCAN(6),&T
         MEXIT
.DEFLT   ANOP
&L       MVC   CPSCAN(6),CPTELL
         MEXIT
.REG     ANOP
&L       MVC   CPSCAN(6),0&T
         MEND
./ ADD NAME=SCANSAVE
         MACRO
&L       SCANSAVE &T
.* MACRO TO SAVE SCAN POINTERS IN SPECIFIED SAVE AREA
.* FORMAT OF PARAMETER MAY BE ANY OF THE FOLLOWING FORMS:
.*   NAME   SYMBOLIC NAME WITH ADDRESSABILITY
.*   N(R)   RX FORM - OFFSET N FROM REGISTER R
.*   (R)    REGISTER CONTAINS ADDRESS
.*   NULL   DEFAULT VALUE
         LCLA  &LNT,&PTR,&CNT,&SUB
         LCLC  &C(8)
&LNT     SETA  K'&T                LENGTH OF OPERAND
&CNT     SETA  1                   WORK COUNTER
         AIF   (&LNT EQ 0).DEFLT   CHECK NULL PARM
         AIF   ('&T'(1,1) EQ '(').REG  CHECK REG FORM
.SCHLP   ANOP                      SEARCH FOR LEFT PAREN FOR RX FORM
&CNT     SETA  &CNT+1
         AIF   (&CNT GT &LNT).GEN  CHECK END OF OPERAND
         AIF   ('&T'(&CNT,1) NE '(').SCHLP
.* RX FORM
&PTR     SETA  1                   SET POINTER TO START OF PARM
&SUB     SETA  1                   INIT SUBSCRIPT
.LOOP    ANOP                      SAVE PART OF PARM IN 8 CHAR GROUPS
         AIF   (&CNT LE 8).HVOP    CHECK LAST GROUP REQ
&C(&SUB) SETC  '&T'(&PTR,8)        8 CHAR GROUP
&SUB     SETA  &SUB+1              BUMP SUBSCRIPT
&PTR     SETA  &PTR+8              BUMP SCAN POINTER
&CNT     SETA  &CNT-8              REDUCE LENGTH
         AGO   .LOOP
.* HAVE LAST GROUP
.HVOP    ANOP
&C(&SUB) SETC  '&T'(&PTR,&CNT)     SAVE LAST GROUP
&PTR     SETA  &PTR+&CNT           BUMP PAST PROCESSED STUFF
&CNT     SETA  &LNT-((&SUB-1)*8)-&CNT  REMAINING LENGTH
         AIF   (&PTR GT &LNT).GO   BR IF SECOND PART OF RX PARM
.* JUST PROCESSED FIRST PART OF RX FORM
&C(&SUB+1) SETC '6,'               PUT IN EXPLICIT LENGTH
&SUB     SETA  &SUB+2
         AGO   .LOOP
.* FINISHED WITH RX FORM
.GO      ANOP
&L       MVC   &C(1)&C(2)&C(3)&C(4)&C(5)&C(6)&C(7)&C(8),CPSCAN
         MEXIT
.* DEFAULT VALUE TO BE USED
.DEFLT   ANOP
&L       MVC   CPTELL(6),CPSCAN
         MEXIT
.* SYMBOLIC NAME - NOT IN RX FORM
.GEN     ANOP
&L       MVC   &T.(6),CPSCAN
         MEXIT
.* REGISTER FORM
.REG     ANOP
&C(1)    SETC  '&T'(2,&LNT-2)
&L       MVC   0(6,&C(1).),CPSCAN
         MEND
./ ADD NAME=SCATBUF
         ORG   SBUF
SCBUF    DS    0D        OUTPUT BUFFER FOR SHOW CATALOG
SCBCODE  DS    CL1       TYPE ENTRY CODE
SCBNM    DS    CL8       INDEX LEVEL NAME
SCBNM2   DS    0CL8      OTHER NAME FOR ALIAS ENTRY
SCBVOL   DS    CL6       VOLUME NAME
* FOLLOWING TWO FIELDS MUST REMAIN IN ORDER
SCBMAX   DS    CL1       MAX GDG NAMES
SCBNVOLS DS    H         NUMBER OF VOLS OR GDG ENTRIES
SCBSZ    EQU   *-SCBUF   ** MUST BE HALFWORD MULTIPLE **
./ ADD NAME=SCINIT
         MACRO
&L       SCINIT &LOC,&LEN
&L       SYSLR  1,&LOC,NULL=
         SYSLR  0,&LEN,NULL=
         CVCALL SCINIT
         MEND
./ ADD NAME=SCKW
         MACRO
&L       SCKW  &KP,&XP,&TP,&MP
         GBLC  &PAGECDE
         LCLA  &X,&PV,&TV,&AV,&LV
         LCLC  &RP,&RPP,&AL
&RP      SETC  '&XP'
&AL      SETC  'AL3'   USE AL3 FOR RELOCATIBLE ADCONS NOT IN PAGED CODE
         AIF   ('&RP' NE '').UNZ
&RP      SETC  '0'
.UNZ     AIF   ('&PAGECDE' NE 'YES').UNPAG
&AL      SETC  'AL.24' USE AL.24 FOR ADCONS IN PAGED CODE SO THAT IF
.*             ARE RELOCATIBLE BY ACCIDENT AN ASSEMBLY ERROR WILL BE
.*             GENERATED.
         AIF   ('&RP' EQ '0').UNPAG
&RPP     SETC  '&SYSECT.-'
.UNPAG   AIF   ('&KP'.'&TP' EQ '').UNREC
.LOOP    ANOP
&X       SETA  &X+1
         AIF   (&X GT N'&TP).DONE
         AIF   ('&TP(&X)' EQ 'P').P
         AIF   ('&TP(&X)' EQ 'S').S
         AIF   ('&TP(&X)' EQ 'PI').PI
         AIF   ('&TP(&X)' EQ 'I').I
         AIF   ('&TP(&X)' EQ 'LN').LN
         AIF   ('&TP(&X)' EQ 'A').A
         AIF   ('&TP(&X)' EQ 'POP').POP
         AIF   ('&TP(&X)' EQ 'PUSH').PUSH
         MNOTE 12,'***** "&TP(&X)" IS ILLEGAL'
.P       ANOP
&PV      SETA  1
         AGO   .LOOP
.S       ANOP
&TV      SETA  1
         AGO   .LOOP
.PI      ANOP
&TV      SETA  2
.ICOM    AIF   ('&MP' EQ '').LOOP
&TV      SETA  &TV+1
         AGO   .LOOP
.I       ANOP
&TV      SETA  4
         AGO   .ICOM
.LN      ANOP
&TV      SETA  6
         AGO   .LOOP
.A       ANOP
&AV      SETA  1
         AGO   .LOOP
.DONE    ANOP
         AIF   ('&KP' EQ '').NOKW
&LV      SETA  K'&KP-1
         AIF   ('&KP'(1,1) NE '''').NOQ
&LV      SETA  &LV-2
.NOQ     ANOP
         AIF   (&LV LT 8).NOKW
&LV      SETA  7
.NOKW    ANOP
&X       SETA  &PV*128+&TV*16+&AV*8+&LV
         AIF   ('&KP' EQ '').NOKPQ
         AIF   ('&KP'(1,1) NE '''').NOKPQ
&L       DC    AL1(&X),&AL.(&RPP.&RP),CL(&LV+1)&KP
         AGO   .LIM
.NOKPQ   ANOP
&L       DC    AL1(&X),&AL.(&RPP.&RP),CL(&LV+1)'&KP '
.LIM     ANOP
         AIF   (&TV LT 2 OR &TV GT 5).END
         AIF   ('&MP' EQ '').END
         DC    AL4(&MP)
         MEXIT
.UNREC   ANOP
&L       DC    X'FF',&AL.(&RPP.&RP)
         MEXIT
.POP     ANOP
&L       DC    X'F9'
         MEXIT
.PUSH    ANOP
&L       DC    X'F8',&AL.(&RPP.&RP)
.END     MEND
./ ADD NAME=SCTELL
         MACRO
&L       SCTELL
&L       CVCALL SCTELL
         MEND
./ ADD NAME=SCTYPE
         MACRO
&L       SCTYPE &T
&L       SYSLR 1,&T
         XCALL SCTYPE
         MEND
./ ADD NAME=SDSNBUF
SBUF     DS    0D        OUTPUT BUFFER FOR SHOW DSNAMES
SBDSN    DS    CL44      DSNAME
SBCRDT   DS    CL3       CREATION DATE
SBEXDT   DS    CL3       LAST ACCESS AT SLAC
SBNOEX   DS    CL1       NO. OF EXTENTS
SBDSORG  DS    CL1       DSORG
SBRECFM  DS    CL1       RECFM
SBKEYL   DS    CL1       KEY LENGTH
SBLRECL  DS    H         LRECL
SBBLKSZ  DS    H         BLKSIZE
SBLB     DS    0H,CL5    LAST BLOCK - TTRLL
SBACCTG  DS    CL1       ACCOUNTED FOR FLAG
SPTRK    DS    H         TRACKS ALLOC
SBPROTF  DS    CL1       PROTECTION FLAG
         DS    CL1       SPARE
SBSZ     EQU   *-SBUF    ** MUST BE HALFWORD MULTIPLE **
./ ADD NAME=SENDH
         MACRO
&H       SENDH
         SPACE
* REG 3 CONTAINS ADDR(LAST LINE-1)
* REG 2 CONTAINS ADDR(1ST LINE-1)
         SPACE
&H       SR    R4,R4              ZERO R4
H&SYSNDX IC    R4,0(,R2)          GET LENGTH OF LINE
         LA    R1,1(,R2)          GET ADDR(LINE)
         TSEG  (1),(4),W
         BP    CVQTYPE
         CR    R2,R3              IS THIS THE LAST LINE?
         BE    CVGETCOM           BR IF IT IS.
         LA    R2,1(R2,R4)        GET ADDR. OF LENGTH OF NEXT LINE
         B     H&SYSNDX           GO OUTPUT THE REST
         MEND
./ ADD NAME=SENTER
         MACRO
&L       SENTER &R,&S,&SZ
         GBLC  &PAGECDE
         AIF   ('&L' EQ '').NEP
         ENTRY &L
.NEP     ANOP
&L       DS    0H
         AIF   ('&S' EQ '').NT2
         STM   &R,&S,0(13)
         AIF   ('&SZ' EQ '').NWA
         AIF   ('&SZ' EQ '*').MIN
.SIZ     ANOP
         LR    8,13
         LA    13,(&SZ+3)/4*4(,13)
         AGO   .NWA
.MIN     AIF   (&R GT &S).WRP
         LR    8,13
         LA    13,(&S+1-(&R))*4(,13)
         AGO   .NWA
.WRP     ANOP
         LR    8,13
         LA    13,(&S+17-(&R))*4(,13)
         AGO   .NWA
.NT2     ANOP
         AIF   ('&R' EQ '').NWA
         ST    &R,0(,13)
         AIF   ('&SZ' EQ '').NWA
         AIF   ('&SZ' NE '*').SIZ
         LR    8,13
         LA    13,4(13)
.NWA     ANOP
         AIF   ('&PAGECDE' EQ 'YES').EXIT
         BALR  7,0
         USING *,7
.EXIT    MEND
./ ADD NAME=SETSM
         MACRO
&L       SETSM &MASK
&L       DC    0H'0',X'80',AL1(&MASK),S(*-1)
         MEND
./ ADD NAME=SEXIT
         MACRO
&L       SEXIT &R,&S,&CUE,&PFREE
         GBLC  &PAGECDE
&L       DS    0H
         AIF   ('&CUE' EQ '').NLR
         LR    13,8
.NLR     AIF   ('&S' EQ '').NT2
         LM    &R,&S,0(13)
         AGO   .OUT
.NT2     AIF   ('&R' EQ '').OUT
         L     &R,0(,13)
.OUT     ANOP
         AIF   ('&PAGECDE' EQ 'YES').OUTP
.OUTP1   BR    14
         MEXIT
.OUTP    AIF   ('&PFREE' EQ '').OUTP1
         B     CVROUTEX            PFREE ROUTINE PAGE AND EXIT
         MEND
./ ADD NAME=SHODSN
         MACRO
         SHODSN
         ORG   DBUF
LASTFMT1 DS    CL5 .               LAST VALID FORMAT 1 DSCB
SEARFMT1 DS    CL5 .               START OF SEARCH ID
TRKSPCYL DS    H .                 # OF TRKS/CYL
CURRDSCB DS    A .                 PTR TO CURRENT DSCB
LASTDSCB DS    A .                 PTR TO LAST DSCB READ IN
DSCBPTRK DS    H .                 # OF DSCB'S PER TRK
DSCBNUM  DS    H .                 # OF CURRENT DSCB
         DS    0D .                ALIGNMENT
VTOCPGM  DS    2D .                SEARCH & TIC CCW
         DS    20D .               PGM TO READ 20 DSCB'S AT A TIME
DSCBBUFF DS    20CL148 .           ROOM FOR 20 DSCB'S
         ORG   ,
         MEND
./ ADD NAME=SVCS
*  SVC NUMBER DEFINITIONS
         SPACE
SVCGEN2  EQU   243                     GEN PURPOSE TYPE 2 SVC
SVCACME  EQU   244
SVCSTAT  EQU   254                     JOB STATUS SVC
SVCMIL   EQU   251
SVCHASP  EQU   255                     HASP SVC
./ ADD NAME=SYSKWT
         MACRO
&L       SYSKWT &NAME,&KWS,&LEGAL
         LCLA  &X,&Y
&X       SETA  1
.LOOP    AIF   (&X GT N'&KWS).END
&Y       SETA  1
.LUP     AIF   (&Y GT N'&LEGAL).ERROR
         AIF   ('&KWS(&X)' EQ '&LEGAL(&Y)').LUPEND
&Y       SETA  &Y+1
         AGO   .LUP
.ERROR   MNOTE 12,'"&KWS(&X)" IS AN ILLEGAL &NAME'
.LUPEND  ANOP
&X       SETA  &X+1
         AGO   .LOOP
.END     MEND
./ ADD NAME=SYSLR
         MACRO
&L       SYSLR &R,&P,&TYPE=,&SELECT=,&NULL=0,&ERR=,&OP=LA
         LCLA  &X,&Y,&PT,&KC(8)
         LCLB  &LCR
         LCLC  &C(8),&LABEL,&OPC
         AIF   ('&TYPE' EQ '').GO
&LCR     SETB  1
         AIF   ('&SELECT' EQ '').GO
&X       SETA  1
.LUP     AIF   (&X GT N'&TYPE).LUPEND
&Y       SETA  1
.LUPTOO  AIF   (&Y GT N'&SELECT).LUPGO
         AIF   ('&TYPE(&X)' EQ '&SELECT(&Y)').GO
&Y       SETA  &Y+1
         AGO   .LUPTOO
.LUPGO   ANOP
&X       SETA  &X+1
         AGO   .LUP
.LUPEND  ANOP
&LCR     SETB  0
.GO      ANOP
         AIF   ('&P' NE '').NBL
         AIF   ('&ERR' EQ '').NERR
         MNOTE 12,&ERR
.NERR    AIF   ('&NULL' EQ '').LBL
         AIF   ('&NULL' EQ '0').SR
&L       &OP   &R,&NULL
         AGO   .COM
.LBL     ANOP
         AIF   ('&L' EQ '').END
&L       DS    0H
         MEXIT
.NBL     AIF   ('&P'(1,1) EQ '(').REG
         AIF   ('&P' EQ '0').SR
&LABEL   SETC  '&L'
         AIF   (K'&P LT 2).EXPR
         AIF   ('&P'(1,2) EQ 'L:').L
         AIF   (K'&P LT 3).EXPR
         AIF   ('&P'(1,3) EQ 'LA:').LA
         AIF   ('&P'(1,3) EQ 'LH:').LA
         AIF   ('&P'(1,3) NE 'IC:').EXPR
&L       SR    &R,&R
&LABEL   SETC  ''
.LA      ANOP
&PT      SETA  2
         AGO   .DO
.L       ANOP
&PT      SETA  1
.DO      ANOP
&X       SETA  1
.LOOP    AIF   (K'&P LE &X*8).BIT
&KC(&X)  SETA  8
&C(&X)   SETC  '&P'((&X-1)*8+1,8)
&X       SETA  &X+1
         AGO   .LOOP
.BIT     ANOP
&KC(&X)  SETA  K'&P-(&X-1)*8
&C(&X)   SETC  '&P'((&X-1)*8+1,&KC(&X))
&C(1)    SETC  '&C(1)'(&PT+2,&KC(1)-&PT-1)
&OPC     SETC  '&P'(1,&PT)
&LABEL   &OPC  &R,&C(1)&C(2)&C(3)&C(4)&C(5)&C(6)&C(7)&C(8)
         AGO   .COM
.EXPR    ANOP
&L       &OP   &R,&P
.COM     AIF   (NOT &LCR).END
         LCR   &R,&R
         MEXIT
.SR      ANOP
&L       SR    &R,&R
         MEXIT
.REG     AIF   (&LCR).LCR
         AIF   ('(&R)' EQ '&P').LBL
&L       LR    &R,&P
         MEXIT
.LCR     ANOP
&L       LCR   &R,&P
.END     MEND
./ ADD NAME=SYSQ
*
* SYSTEM (OS) INPUT MESSAGE QUEUE FORMAT
*
SYSQNEXT DC    A(0)        ADDRESS OF NEXT BUFFER IN INPUT QUEUE
SYSQLEN  DC    H'0'        ACTUAL LENGTH OF CURRENT MESSAGE
         DC    X'0'        UNUSED
SYSQUCMI DC    AL1(0)      ID OF ORIGINATING OPR CONSOLE
SYSQBUF  DC    CL126' '    MESSAGE TEXT
SYSQBUFL EQU   L'SYSQBUF   MAXIMUM LENGTH OF MESSAGE TEXT
SYSQSIZE EQU   *-SYSQNEXT  TOTAL SIZE OF QUEUE BUFFER
./ ADD NAME=SYSQS
         MACRO
&L       SYSQS &AR,&LR,&AP,&LP
         LCLA  &X,&N
         LCLC  &C
         AIF   ('&AP' EQ '').NSTR
         AIF   ('&AP'(1,1) EQ '''').STR
.NSTR    ANOP
&L       SYSLR &AR,&AP,ERR='***** LOCATION MISSING *****'
.LL      AIF   ('&LR' EQ '').END
         SYSLR &LR,&LP,ERR='***** LENGTH MISSING *****'
         MEXIT
.STR     AIF   ('&LP' NE '').LG
&L       LA    &AR,=C&AP
&X       SETA  1
&C       SETC  '&&'
.LOOP    ANOP
&X       SETA  &X+1
         AIF   (&X GE K'&AP).EL
&N       SETA  &N+1
         AIF   ('&AP'(&X,1) NE '''' AND '&AP'(&X,1) NE '&C'(1,1)).LOOP
&X       SETA  &X+1
         AGO   .LOOP
.EL      LA    &LR,&N
         MEXIT
.LG      ANOP
&L       LA    &AR,=CL(&LP)&AP
         AGO   .LL
.END     MEND
./ ADD NAME=TALO
         MACRO
&L       TALO
&L       CVCALL TALO
         MEND
./ ADD NAME=TATNRDR
         MACRO
&L       TATNRDR &LOC,&LEN,&CHAR,&CHRB
&L       SYSQS 1,0,&LOC,&LEN
         LA    15,C'&CHAR'
         AIF   (N'&SYSLIST(4) EQ 0).A
         SLL   15,8
         LA    15,C'&CHRB'(,15)
.A       LCR   15,15
         CVCALL TRDRTN
         MEND
./ ADD NAME=TESTPCB
         MACRO
&LABEL   TESTPCB &REG,&EXIT=
         LCLC  &TARGET
&TARGET  SETC  '&LABEL'
         AIF   ('&EXIT' EQ '').NORMAL
&TARGET  C     &REG,CVCPADDR .     VCP?
         BE    &EXIT .             YES.. IGNORE CALL
&TARGET  SETC  ''
.NORMAL  ANOP
&TARGET  C     &REG,CVFPAGE .      LOW?
         BNL   LOK&SYSNDX
         DC    H'0' .              KILL
LOK&SYSNDX C   &REG,CVLPAGE .      HIGH?
         BNH   HOK&SYSNDX
         DC    H'0' .              KILL
HOK&SYSNDX EQU   *
         MEND
./ ADD NAME=TMARK
         MACRO
&L       TMARK
&L       CVCALL TMARKX
         MEND
./ ADD NAME=TRACER
         MACRO
         TRACER &A
         GBLC  &TRACEEE
&TRACEEE SETC  '&A'
         MEND
./ ADD NAME=TREAD
         MACRO
&L       TREAD
.*  MODIFIED 9/18/70 BY E. RUSSELL
&L       CVCALL TREADX
         MEND
./ ADD NAME=TREADR
         MACRO
&L       TREADR &LOC,&LEN,&QM=YES
&L       SYSQS 1,0,&LOC,&LEN
         AIF   ('&QM' EQ 'NO').NQM
         SR    15,15
         AGO   .CALL
.NQM     LA    15,4
.CALL    ANOP
         CVCALL TRDRTN
         MEND
./ ADD NAME=TREDE
         MACRO
&L       TREDE
&L       LA    15,4
         CVCALL TREADX
         MEND
./ ADD NAME=TSEG
         MACRO
&L       TSEG  &LOC,&LEN,&TYPE
         LCLC  &C
&L       SYSQS 1,0,&LOC,&LEN
         AIF   ('&TYPE' EQ '').CALL
&C       SETC  '&TYPE'(1,1)
.CALL    ANOP
         CVCALL TSEGX&C
         MEND
./ ADD NAME=TTABS
         MACRO
&L       TTABS &A
&L       SYSLR 1,&A
         XCALL TTABS
         MEND
./ ADD NAME=TWRITE
         MACRO
&L       TWRITE
&L       CVCALL TWRITEX
         MEND
./ ADD NAME=TXCTL
         MACRO
&L       TXCTL &A
&L       SYSLR 1,&A
         CVCALL TXCTL
         MEND
./ ADD NAME=VCPTSO
DVCP     DSECT
VCP#SVAR EQU   10                 # OF STRING VARIABLES
VCPR     EQU   9                  BASE REG
VCPWVAR  DS    XL40               LINE # AREA
VCPLVAR  EQU   VCPWVAR
VCPNVAR  DS    XL40               INTEGER AREA
VCPSVAR  DS    XL752              STRING AREA
VCPLSVA  EQU   *-VCPSVAR          LENGTH OF STRING AREA
VCPLNG   EQU   *-DVCP
./ ADD NAME=WDIOWA   0100-80113-80113-1547-00369-00369-00000-$SYS13  00
         MACRO
&NM      WDIOWA &TYPE
         SPACE ,
         AIF   ('&TYPE' EQ '').NOSECT
         AIF   ('&TYPE'(1,1) EQ 'C').CSECT
         AIF   ('&TYPE'(1,1) EQ 'D').DSECT
         MNOTE 4,'&TYPE INVALID - IGNORED'
         AGO   .NOSECT
.DSECT   ANOP
&NM      DSECT
         AGO   .START
.CSECT   ANOP
&NM      CSECT
         AGO   .START
.NOSECT  ANOP
&NM      DS    0D
.START   ANOP
*                                                               JEP013
*                                                               JEP013
* MOD JEP013                                                    JEP013
*  CHANGED DEFAULT NAME FROM WYL.CU.CTR.VTOC TO FDRABR  ITEL    JEP013
*  DENOTED JEP013 IN 66/71.  JERRY PITTENGER                    JEP013
*                                                               JEP013
         SPACE 2
         DS    0D
WADECB   DC    AL1(255),AL3(DECB)
UCB      DC    A(0)      UCB ADDR FOR SPEC VOLUME
         SPACE
DFL      DC    X'00'     FLAGS
         SPACE ,
DFREPL   EQU   X'08'     STOW REPL TO BE DONE AT CLOSE
DFUPTSPC EQU   X'02'     UPDATE SPACE ACCTG AT CLOSE
DFUSPCNM EQU   X'01'     NO COND SHOW SPACE CALL IF ON
         SPACE 2
FLAGS    DS    CL5       SAVE DSNAME FLAGS
F1       EQU   FLAGS          FIRST DSNAME FLAG
F2       EQU   FLAGS+1        SECOND DSNAME FLAG
F3       EQU   FLAGS+2        THIRD DSNAME FLAG
F4       EQU   FLAGS+4        FOURTH DSNAME FLAG
F5       EQU   FLAGS+5        FIFTH DSNAME FLAG
         SPACE ,
DSDD     DC    CL8'IOVVVVVV'  DDNAME
         SPACE 2
* EXLST FOR DCB
EXLST    DS    0F
         DC    X'00'               ENTRY TO BE FILLED IN
         DC    AL3(0)
         DC    X'87'               LAST ENTRY/JFCB POINTER
         DC    AL3(JFCB)
         SPACE 2
* IOB FOR EXCP
IOB      DS    0D
         DC    XL2'C200'
IOBSNS   DC    H'0'
         DC    A(DECB)
IOBCSW   DC    2F'0'
IOBSTART DC    F'0'
         DC    A(FOURS)       DCB
         DC    2F'0'
         DC    XL1'0'
IOBB     DC    XL2'0'
SEEK     DC    XL5'0'
         SPACE 2
* CHANNEL PROGRAM FOR EXCP
MT       EQU   X'80'          MULTI-TRACK
SCHIDEQ  EQU   X'31'          SEARCH ID EQUAL
TIC      EQU   X'08'          XFER IN CHANNEL
SCHKYEQ  EQU   X'29'          SEARCH KEY EQUAL
SCHKYHI  EQU   X'49'          SEARCH KEY HIGH
SCHKYHE  EQU   X'69'          SEARCH KEY HI OR EQUAL
SCHKADEQ EQU   X'2D'          SEARCH KEY AND DATA EQUAL
SCHKADHI EQU   X'4D'          SEARCH KEY AND DATA HIGH
SCHKADHE EQU   X'6D'          SEARCH KEY AND DATA HI OR EQUAL
SWKADKY  EQU   SCHKADHE-SCHKYHE    USED TO SWAP SCH KAD/SCH KEY
RDCNT    EQU   X'12'          READ COUNT
RDDATA   EQU   X'06'          READ DATA
RDKYDATA EQU   X'0E'          READ KEY AND DATA
NOPIC    EQU   X'03'          NOP IN CHANNEL
CC       EQU   X'40'          COMMAND CHAIN
DC       EQU   X'80'          DATA CHAIN
SLI      EQU   X'20'          SLI
SKP      EQU   X'10'          SKIP DATA XFER
         SPACE ,
SRCHCCW  CCW   SCHIDEQ,SEEK,CC+SLI,5         SEARCH FOR PREV REC
         CCW   TIC,SRCHCCW,CC+SLI,0
CCWSW    CCW   TIC,ID,CC+SLI,0               SWITCH BETWEEN ID & PDSRD
ID       CCW   SCHIDEQ+MT,ENDTEST,CC+SLI,5   LAST VTOC REC?
         CCW   TIC,KEY,CC+SLI,0              TIC IF NO
         CCW   TIC,ENDCCW1,CC+SLI,0          TIC IF YES
*              LENGTH FIELD IS CHANGED IN FOLLOWING CCW
KEY      CCW   SCHKADEQ+MT,DSNAME,CC+SLI,0   IS REC ONE WE WANT?
         CCW   TIC,ID,CC+SLI,0               TIC IF NO
         CCW   RDCNT+MT,SRCHC,SLI,5          READ ADDR OF FOLL REC
* END OF THIS PART OF COMMAND CHAIN
         SPACE 2
*              LENGTH FIELD IS CHANGED IN FOLLOWING CCW
ENDCCW1  CCW   SCHKADEQ,DSNAME,CC+SLI,0  IS LAST VTOC REC ONE WE WANT?
         CCW   TIC,ENDCCW,CC+SLI,0       TIC IF NO
         CCW   NOPIC,SEEK,CC+SLI+SKP,1   DUMMY CMND
ENDCCW2  CCW   SCHIDEQ,ENDTEST,CC+SLI,5  SO WE CAN SEARCH AGAIN
         CCW   TIC,ENDCCW2,CC+SLI,0
READCCW2 CCW   RDKYDATA,DS1DSNAM,SLI,DS1END-DS1DSNAM  READ DSCB
* END OF THIS PART OF COMMAND CHAIN
         SPACE 2
ENDCCW   CCW   NOPIC,SEEK,SLI,1      DUMMY CMD TO FLAG END OF SEARCH
* IF FINAL CSW POINTS HERE THEN THE VTOC HAS BEEN COMPLETELY SEARCHED
         SPACE ,
* CHANNEL PROGRAM RESTARTED HERE IF A RECORD FOUND WE WANT
READCCW  CCW   SCHIDEQ,SRCHC,CC+SLI,5     SEARCH FOR THE ONE WE WANTED
         CCW   TIC,READCCW,CC+SLI,0
         CCW   RDKYDATA,DS1DSNAM,SLI,DS1END-DS1DSNAM    READ DSCB
* END OF THIS PART OF COMMAND CHAIN
         SPACE 2
* CHANNEL PROGRAM SECTION FOR READING PDS DIRECTORY
PDSREAD  CCW   RDCNT+MT,SRCHC,CC+SLI,5
         CCW   RDKYDATA,DBUF,SLI,264
         SPACE 3
* MISCELLANEOUS WORK AREAS AND CONSTANTS
CCREDT   DS    D
DSNAME   DS    CL44
DSN      DC    44X'04'
         SPACE ,
BLDL     DS    0F
         DC    H'1'           ONE ENTRY
         DC    AL2(BLDLSZ)    LENGTH OF ENTRY
MEMBER   DS    CL8            MEMBER NAME
BLDLTTR  DS    CL3            MEMBER TTR
BLDLKZC  DS    CL3            OTHER BLDL TRASH
BLDLSZ   EQU   *-MEMBER
         ORG   BLDLKZC+1      STOW REQUIRES C BUT NOT K AND Z
STOWLTTR DS    F              DATE OF LAST STOW OR SSI
STOWSZ   EQU   *-MEMBER       SIZE OF DIRECTORY ENTRY STOWED
         SPACE ,
RRECFM   DS    CL1            RECFM
         SPACE ,
SCRVLST  DS    0F             SCRATCH LIST AND OTHERS
         DC    H'1'           NUMBER OF VOLUMES
DEVCODE  DS    CL4            RESULT OF DEVTYPE
DSVID    DS    CL6            VOLUME ID
         DC    X'0'           BYTE OF ZERO
SCRRET   DC    X'0'           RETURN CODE FROM SCRATCH
         SPACE 3
VTOCCCW  DC    AL3(ID)        TIC ADDR FOR SHOW DSNAMES
PDSCCW   DC    AL3(PDSREAD)   TIC ADDR FOR SHOW DIRECTORY
LASTCCW  DC    AL3(ENDCCW+8)  ADDR IN CSW WHEN VTOC SEARCH DONE
LASTCCW1 DC    AL3(ENDCCW)    ADDR IN CSW WHEN LAST VTOC REC WANTED
RECSIZE  DS    F
LRECSIZE DS    F
ERROR    DS    F
SPACE    DS    F
DEVBLOCK DS    F              DEVICE BLOCK SIZE
RETCOD   DS    F
         EJECT
* DECBS AND PARAMTER LISTS
         SPACE ,
         READ  DECB,SF,DCB,DBUF,MF=L
         SPACE 3
DSCB     CAMLST SEARCH,DSNAME,DSVID,DS1FMTID
         SPACE 3
SCRLST   CAMLST SCRATCH,DSNAME,,SCRVLST
         SPACE 3
USCATL   CAMLST NAME,DSNAME,,CATBLOCK
         SPACE 3
USCATL2  CAMLST BLOCK,CATNTTR,CATVOLID,CATBLOCK
CAMVOLID EQU   USCATL2+8      ADDR OF VOLUME ID PTR IN PREV LIST A26
         SPACE 3
VTOC     CAMLST SEARCH,DSN,DSVID,VTOCAREA
         SPACE 3
VTOC3    CAMLST SEEK,DS1PTRDS,DSVID,IECSDSL3
         SPACE 3
CATLST   CAMLST CAT,DSNAME,,SCRVLST     USED FOR CAT/UNCAT/RECAT
         SPACE 3
OPENLIST OPEN  (DCB),MF=L
         SPACE 3
ENQDSN   ENQ   (,DSNAME,,,SYSTEM),RET=USE,MF=L
         EJECT
* DUMMY  DCBS
         SPACE 2
* DUMMY DCB TO ALLOCATE SPACE FOR DCB TO BE MOVED IN
DCB      DCB   DSORG=PS,MACRF=(RP,WP)
         EJECT
FOURS    DCB   DSORG=PS,MACRF=E,EXLST=EXLST
         EJECT
***  THE DATA BUFFER IS ALSO USED AS A WORK AREA AND FOR READING
**    VARIOUS CONTROL BLOCKS.  IT IS CAREFULLY CONSTRUCTED SO
**    THAT AREAS WHICH ARE REQUIRED SIMULTANEOUSLY DO NOT OVERLAY
**    EACH OTHER.  THE OVERLAY STRUCTURE IS AS FOLLOWS:
*
**   DBUF      FMT 4 DSCB WORK AREA
**     |       SHOW DSNAMES WORK AREA
**     |       JFCB AREA
**     |       LOCATE VOL WORK AREA
**     |       REST OF CATLG BLOCK AREA      DSCB1/3/5 WORK AREAS
**     |                 |                            V
**     |                 V
**     |       SHOW DSNAMES BUFFER           SHOW CATLG BUFFER
**     |                 |                   CLEAR JFCB WORK AREA
**     |                 V                            |
**     |                                              V
**     |                                     SUBTASK R13 REG SV AREA
**     |                                              V
**     |
**     V
         SPACE 3
* DAIR INTERFACE:
WAUPT    DC    A(0)
WAECT    DC    A(0)
WAECB    DC    A(WADARECB)
WAPSCB   DC    A(0)
WADAIR   DC    A(DA08CD)
WADARECB DC    F'0'
DAIRDSN  DC    AL2(44)                                          JEP013
DSNPREF  DC    CL44'FDRABR'                                     JEP013
***********************************************************************
* THIS OPERATION CODE CAUSES ALLOCATION OF A DATA SET. IT CAN ALLOC.  *
* EITHER A NEW OR OLD SET.                                            *
***********************************************************************
         DS    0F
DA08CD   DC    AL2(8)   DAIR ENTRY CODE
DA08FLG  DC    X'00'    FUNCTIONS TO BE PERFORMED WHEN RET CODE IS 0
DA08FPE  EQU   X'80'    FUNCT PERFORMED BUT ERROR INDICATED BY RETCD
         DC    X'00'
DA08DARC DC    H'0'     DYN ALLOC RETURN CODE
DA08CTRC DC    H'0'     CATALOG RETURN CODE
DA08PDSN DC    A(DAIRDSN)   PTR TO DSNAME TO BE SEARCHED IN DSE
DA08DDN  DC    CL8' '   DDNAME TO BE SEARCHED IN DSE
DA08UNIT DC    CL8' '   UNITNAME REQUESTED
DA08SER  DC    CL8' '   VOLUME SERIAL NUMBER-PADDED W/BLANKS
DA08BLK  DC    F'0'     DATA SET  AVERAGE RECORD LENGTH
DA08PQTY DC    F'0'     PRIMARY SPACE QUANTITY
DA08SQTY DC    F'0'     SECONDARY SPACE QUANTITY
DA08DQTY DC    F'0'     DIRECTORY BLOCK QUANTITY
DA08MNM  DC    CL8' '   MEMBER NAME
DA08PSWD DC    CL8' '   PASSWORD
DA08DSP1 DC    X'08'    DATA SET STATUS FLGS(IF=0 OLD ASSUMED)
DA08SHR  EQU   X'08'    DATA SET IS SHR
DA08NEW  EQU   X'04'    DATA SET IS NEW
DA08MOD  EQU   X'02'    DATA SET IS MOD
DA08OLD  EQU   X'01'    DATA SET IS OLD
DA08DPS2 DC    X'08'    DATA SET DISPOSITION(IF=0 KEEP ASSUMED)
DA08KEEP EQU   X'08'    DS DISP IS KEEP
DA08DEL  EQU   X'04'    DS DISP IS DELETE
DA08CAT  EQU   X'02'    DS DISP IS CATLG
DA08UCAT EQU   X'01'    DS DISP IS UNCATALOG
DA08DPS3 DC    X'08'    DATA SET CONDITIONAL DISPOSITION
DA08KEP  EQU   X'08'
DA08DELE EQU   X'04'
DA08CATL EQU   X'02'    DS DISP OF CATLG DESIRED
DA08UNCT EQU   X'01'    DS DISP OF UNCATLG DESIRED
DA08CTL  DC    X'08'    FLAGS TO CONTROL ACTIONS TAKEN BY DAIR
DA08TRKS EQU   X'80'    UNITS ARE TRKS
DA08ABKL EQU   X'40'
DA08CYLS EQU   X'C0'    UNITS ARE CYLS
DA08UID  EQU   X'20'    USER ID IS TO BE PREFIXED
DA08RLSE EQU   X'10'    RELEASE (RLSE) REQUESTED
DA08PERM EQU   X'08'    DATA SET MUST BE SPECIFICALLY UNALLOCATED
DA08DMMY EQU   X'04'
DA08ATRL EQU   X'02'    ATTRIBUTE LIST SUPPLIED
         DC    XL3'00'  RESERVED
DA08DSO  DC    XL1'00'  DSORG
DA08ALN  DC    CL8' '   ATTR-LIST-NAME
***********************************************************************
* THIS OPERATION CAUSES THE REQUESTED DATA SET OR DDNAME TO BE        *
* UNALLOCATED. DISPOSITION CAN BE SPECIFIED TO OVERRIDE ANY PREVIOUS  *
* DISPOSITION. LIKENISE SYSOUT CLASS MAY BE SPECIFIED TO OVERRIDE ANY *
* PREVIOUS CLASS.                                                     *
***********************************************************************
         DS    0F
DA18CD   DC    AL2(24)  DAIR ENTRY CODE
DA18FLG  DC    X'00'    FUNCTIONS TO BE PERFORMED WHEN RET CODE IS 0
DA18FPE  EQU   X'80'    FUNCT PERFORMED BUT ERROR INDICATED BY RETCD
         DC    X'00'
DA18DARC DC    H'0'                    DYNAMIC ALLOCATION RETURN CODE
DA18CTRC DC    H'0'               CATALOG RETURN CODE AREA
DA18PDSN DC    A(0)         PTR TO DSNAME TO BE SEARCHED IN DSE
DA18DDN  DC    CL8' '   DDNAME TO BE SEARCHED IN DSE
DA18MNM  DC    CL8' '   MEMBER NAME
DA18SCLS DC    CL2' '   SYSOUT CLASS DESIRED WHEN UNALLOCATING  A
*                       SYSOUT DATA SET
DA18DPS2 DC    X'08'    DATA SET DISPOSITION
DA18KEEP EQU   X'08'    CHANGE DISP TO KEEP
DA18DEL  EQU   X'04'    CHANGE DISP TO DELETE
DA18CAT  EQU   X'02'    CHANGE DISP TO CATALOG
DA18UCAT EQU   X'01'    CHANGE DISP TO UNCATLOG
DA18CTL  DC    X'10'    FLAGS FOR SPECIAL DAIR PROCESSING
DA18UID  EQU   X'20'    USER ID IS TO BE PREFIXED TO DSNAME
DA18PERM EQU   X'10'    UNALLOCATE PERM. ALLOCATED DSE'S
DA18JBNM DC    CL8' '
         SPACE ,
ATTDECB  DC   A(0)                 ECB FOR ATTACH
WATTACH  ATTACH EP=IKJEFT01,ECB=ATTDECB,SF=L
         DS    0F
WASTAX   DC    5A(0)               STAX PARAMETER LIST
DBUF     DS    0D
DBUFSIZE EQU   13030
ACCTWA   EQU   DBUF       ACCOUNTING WORK AREA
         DS    (DBUFSIZE)C
         SPACE 3
* WORK AREA FOR DVTOC
         SPACE ,
* FIRST PART IS FORMAT 4 DSCB AREA
         ORG   DBUF
VTOCAREA DS    0D
         IECSDSL1 4
         ORG   DS4VTOCE       FMT 4 EXTENT DESCRIPTION
         DS    CL2
VTOCBEG  DS    CL4
VTOCEND  DS    CL4
         DS    279C
         SPACE 3
PAGEGET  DS    F
VTOCSV   DS    11F
WAR14    EQU   VTOCSV    REG SAVE AREA FOR SUBTASK COMMUNICATION
WAR15    EQU   WAR14+4
*
ENDTEST  DS    XL5
*
*
DVTAREA  DVTAREA ,                 DEFINE DEVCODE AREA
*
*
NUMTRK   DS    H
*
SRCHC    DS    H
SRCHH    DS    H
SRCHR    DS    H
         EJECT
JFCB     DS    0D
         IEFJFCBN
         EJECT
* VOLUME CATALOG ENTRY WORK AREA
         SPACE ,
CATBLOCK DS    0D
CATNOENT DS    H
CATDVTYP DS    CL4
CATVOL   DS    CL6
CATTRASH DS    CL2
CATENTSZ EQU   *-CATDVTYP
CATNTTR  EQU   CATBLOCK+256        TTR OF BLOCK FOLL READ BLOCK
CATVOLID EQU   CATNTTR+3           VOL ID OF CATLG
CATRSIZE EQU   CATVOLID+6-CATBLOCK SIZE READ FROM CATLG
         SPACE 3
* FORMAT 1 DSCB WORK AREA
         DS    0D
         IECSDSL1 1
DS1END   EQU   *
SPACFLAG EQU   X'69'          SPACE ACCOUNTING FLAG BITS
         SPACE 3
* FORMAT 3 DSCB WORK AREA
         ORG   IECSDSL1
         DS    0D
         IECSDSL1 3
DS3END   EQU   *
         SPACE 3
* FORMAT 5 DSCB WORK AREA
         ORG   IECSDSL1
         IECSDSL1 5
         SPACE 3
         ORG   CATBLOCK+CATRSIZE   (MUST BE .GT. DS3END)
         COPY  SDSNBUF
         SPACE 3
         COPY  SCATBUF
         SPACE 3
JFCBSAVE DS    0D
         DS    CL(JFCBLGTH)
         SPACE 3
WASA     DS    18F       R13 SAVE AREA DURING SUBTASK
         ORG   ,
         MEND
./ ADD NAME=WDIOWA9  0100-80113-80113-1546-00369-00369-00000-$SYS13  00
         MACRO
&NM      WDIOWA &TYPE
         SPACE ,
         AIF   ('&TYPE' EQ '').NOSECT
         AIF   ('&TYPE'(1,1) EQ 'C').CSECT
         AIF   ('&TYPE'(1,1) EQ 'D').DSECT
         MNOTE 4,'&TYPE INVALID - IGNORED'
         AGO   .NOSECT
.DSECT   ANOP
&NM      DSECT
         AGO   .START
.CSECT   ANOP
&NM      CSECT
         AGO   .START
.NOSECT  ANOP
&NM      DS    0D
.START   ANOP
*                                                               JEP013
*                                                               JEP013
* MOD JEP013                                                    JEP013
*  CHANGED DEFAULT NAME FROM WYL.CU.CTR.VTOC TO WYLBUR.         JEP013
*  DENOTED JEP013 IN 66/71.  JERRY PITTENGER                    JEP013
*                                                               JEP013
         SPACE 2
         DS    0D
WADECB   DC    AL1(255),AL3(DECB)
UCB      DC    A(0)      UCB ADDR FOR SPEC VOLUME
         SPACE
DFL      DC    X'00'     FLAGS
         SPACE ,
DFREPL   EQU   X'08'     STOW REPL TO BE DONE AT CLOSE
DFUPTSPC EQU   X'02'     UPDATE SPACE ACCTG AT CLOSE
DFUSPCNM EQU   X'01'     NO COND SHOW SPACE CALL IF ON
         SPACE 2
FLAGS    DS    CL5       SAVE DSNAME FLAGS
F1       EQU   FLAGS          FIRST DSNAME FLAG
F2       EQU   FLAGS+1        SECOND DSNAME FLAG
F3       EQU   FLAGS+2        THIRD DSNAME FLAG
F4       EQU   FLAGS+4        FOURTH DSNAME FLAG
F5       EQU   FLAGS+5        FIFTH DSNAME FLAG
         SPACE ,
DSDD     DC    CL8'IOVVVVVV'  DDNAME
         SPACE 2
* EXLST FOR DCB
EXLST    DS    0F
         DC    X'00'               ENTRY TO BE FILLED IN
         DC    AL3(0)
         DC    X'87'               LAST ENTRY/JFCB POINTER
         DC    AL3(JFCB)
         SPACE 2
* IOB FOR EXCP
IOB      DS    0D
         DC    XL2'C200'
IOBSNS   DC    H'0'
         DC    A(DECB)
IOBCSW   DC    2F'0'
IOBSTART DC    F'0'
         DC    A(FOURS)       DCB
         DC    2F'0'
         DC    XL1'0'
IOBB     DC    XL2'0'
SEEK     DC    XL5'0'
         SPACE 2
* CHANNEL PROGRAM FOR EXCP
MT       EQU   X'80'          MULTI-TRACK
SCHIDEQ  EQU   X'31'          SEARCH ID EQUAL
TIC      EQU   X'08'          XFER IN CHANNEL
SCHKYEQ  EQU   X'29'          SEARCH KEY EQUAL
SCHKYHI  EQU   X'49'          SEARCH KEY HIGH
SCHKYHE  EQU   X'69'          SEARCH KEY HI OR EQUAL
SCHKADEQ EQU   X'2D'          SEARCH KEY AND DATA EQUAL
SCHKADHI EQU   X'4D'          SEARCH KEY AND DATA HIGH
SCHKADHE EQU   X'6D'          SEARCH KEY AND DATA HI OR EQUAL
SWKADKY  EQU   SCHKADHE-SCHKYHE    USED TO SWAP SCH KAD/SCH KEY
RDCNT    EQU   X'12'          READ COUNT
RDDATA   EQU   X'06'          READ DATA
RDKYDATA EQU   X'0E'          READ KEY AND DATA
NOPIC    EQU   X'03'          NOP IN CHANNEL
CC       EQU   X'40'          COMMAND CHAIN
DC       EQU   X'80'          DATA CHAIN
SLI      EQU   X'20'          SLI
SKP      EQU   X'10'          SKIP DATA XFER
         SPACE ,
SRCHCCW  CCW   SCHIDEQ,SEEK,CC+SLI,5         SEARCH FOR PREV REC
         CCW   TIC,SRCHCCW,CC+SLI,0
CCWSW    CCW   TIC,ID,CC+SLI,0               SWITCH BETWEEN ID & PDSRD
ID       CCW   SCHIDEQ+MT,ENDTEST,CC+SLI,5   LAST VTOC REC?
         CCW   TIC,KEY,CC+SLI,0              TIC IF NO
         CCW   TIC,ENDCCW1,CC+SLI,0          TIC IF YES
*              LENGTH FIELD IS CHANGED IN FOLLOWING CCW
KEY      CCW   SCHKADEQ+MT,DSNAME,CC+SLI,0   IS REC ONE WE WANT?
         CCW   TIC,ID,CC+SLI,0               TIC IF NO
         CCW   RDCNT+MT,SRCHC,SLI,5          READ ADDR OF FOLL REC
* END OF THIS PART OF COMMAND CHAIN
         SPACE 2
*              LENGTH FIELD IS CHANGED IN FOLLOWING CCW
ENDCCW1  CCW   SCHKADEQ,DSNAME,CC+SLI,0  IS LAST VTOC REC ONE WE WANT?
         CCW   TIC,ENDCCW,CC+SLI,0       TIC IF NO
         CCW   NOPIC,SEEK,CC+SLI+SKP,1   DUMMY CMND
ENDCCW2  CCW   SCHIDEQ,ENDTEST,CC+SLI,5  SO WE CAN SEARCH AGAIN
         CCW   TIC,ENDCCW2,CC+SLI,0
READCCW2 CCW   RDKYDATA,DS1DSNAM,SLI,DS1END-DS1DSNAM  READ DSCB
* END OF THIS PART OF COMMAND CHAIN
         SPACE 2
ENDCCW   CCW   NOPIC,SEEK,SLI,1      DUMMY CMD TO FLAG END OF SEARCH
* IF FINAL CSW POINTS HERE THEN THE VTOC HAS BEEN COMPLETELY SEARCHED
         SPACE ,
* CHANNEL PROGRAM RESTARTED HERE IF A RECORD FOUND WE WANT
READCCW  CCW   SCHIDEQ,SRCHC,CC+SLI,5     SEARCH FOR THE ONE WE WANTED
         CCW   TIC,READCCW,CC+SLI,0
         CCW   RDKYDATA,DS1DSNAM,SLI,DS1END-DS1DSNAM    READ DSCB
* END OF THIS PART OF COMMAND CHAIN
         SPACE 2
* CHANNEL PROGRAM SECTION FOR READING PDS DIRECTORY
PDSREAD  CCW   RDCNT+MT,SRCHC,CC+SLI,5
         CCW   RDKYDATA,DBUF,SLI,264
         SPACE 3
* MISCELLANEOUS WORK AREAS AND CONSTANTS
CCREDT   DS    D
DSNAME   DS    CL44
DSN      DC    44X'04'
         SPACE ,
BLDL     DS    0F
         DC    H'1'           ONE ENTRY
         DC    AL2(BLDLSZ)    LENGTH OF ENTRY
MEMBER   DS    CL8            MEMBER NAME
BLDLTTR  DS    CL3            MEMBER TTR
BLDLKZC  DS    CL3            OTHER BLDL TRASH
BLDLSZ   EQU   *-MEMBER
         ORG   BLDLKZC+1      STOW REQUIRES C BUT NOT K AND Z
STOWLTTR DS    F              DATE OF LAST STOW OR SSI
STOWSZ   EQU   *-MEMBER       SIZE OF DIRECTORY ENTRY STOWED
         SPACE ,
RRECFM   DS    CL1            RECFM
         SPACE ,
SCRVLST  DS    0F             SCRATCH LIST AND OTHERS
         DC    H'1'           NUMBER OF VOLUMES
DEVCODE  DS    CL4            RESULT OF DEVTYPE
DSVID    DS    CL6            VOLUME ID
         DC    X'0'           BYTE OF ZERO
SCRRET   DC    X'0'           RETURN CODE FROM SCRATCH
         SPACE 3
VTOCCCW  DC    AL3(ID)        TIC ADDR FOR SHOW DSNAMES
PDSCCW   DC    AL3(PDSREAD)   TIC ADDR FOR SHOW DIRECTORY
LASTCCW  DC    AL3(ENDCCW+8)  ADDR IN CSW WHEN VTOC SEARCH DONE
LASTCCW1 DC    AL3(ENDCCW)    ADDR IN CSW WHEN LAST VTOC REC WANTED
RECSIZE  DS    F
LRECSIZE DS    F
ERROR    DS    F
SPACE    DS    F
DEVBLOCK DS    F              DEVICE BLOCK SIZE
RETCOD   DS    F
         EJECT
* DECBS AND PARAMTER LISTS
         SPACE ,
         READ  DECB,SF,DCB,DBUF,MF=L
         SPACE 3
DSCB     CAMLST SEARCH,DSNAME,DSVID,DS1FMTID
         SPACE 3
SCRLST   CAMLST SCRATCH,DSNAME,,SCRVLST
         SPACE 3
USCATL   CAMLST NAME,DSNAME,,CATBLOCK
         SPACE 3
USCATL2  CAMLST BLOCK,CATNTTR,CATVOLID,CATBLOCK
CAMVOLID EQU   USCATL2+8      ADDR OF VOLUME ID PTR IN PREV LIST A26
         SPACE 3
VTOC     CAMLST SEARCH,DSN,DSVID,VTOCAREA
         SPACE 3
VTOC3    CAMLST SEEK,DS1PTRDS,DSVID,IECSDSL3
         SPACE 3
CATLST   CAMLST CAT,DSNAME,,SCRVLST     USED FOR CAT/UNCAT/RECAT
         SPACE 3
OPENLIST OPEN  (DCB),MF=L
         SPACE 3
ENQDSN   ENQ   (,DSNAME,,,SYSTEM),RET=USE,MF=L
         EJECT
* DUMMY  DCBS
         SPACE 2
* DUMMY DCB TO ALLOCATE SPACE FOR DCB TO BE MOVED IN
DCB      DCB   DSORG=PS,MACRF=(RP,WP)
         EJECT
FOURS    DCB   DSORG=PS,MACRF=E,EXLST=EXLST
         EJECT
***  THE DATA BUFFER IS ALSO USED AS A WORK AREA AND FOR READING
**    VARIOUS CONTROL BLOCKS.  IT IS CAREFULLY CONSTRUCTED SO
**    THAT AREAS WHICH ARE REQUIRED SIMULTANEOUSLY DO NOT OVERLAY
**    EACH OTHER.  THE OVERLAY STRUCTURE IS AS FOLLOWS:
*
**   DBUF      FMT 4 DSCB WORK AREA
**     |       SHOW DSNAMES WORK AREA
**     |       JFCB AREA
**     |       LOCATE VOL WORK AREA
**     |       REST OF CATLG BLOCK AREA      DSCB1/3/5 WORK AREAS
**     |                 |                            V
**     |                 V
**     |       SHOW DSNAMES BUFFER           SHOW CATLG BUFFER
**     |                 |                   CLEAR JFCB WORK AREA
**     |                 V                            |
**     |                                              V
**     |                                     SUBTASK R13 REG SV AREA
**     |                                              V
**     |
**     V
         SPACE 3
* DAIR INTERFACE:
WAUPT    DC    A(0)
WAECT    DC    A(0)
WAECB    DC    A(WADARECB)
WAPSCB   DC    A(0)
WADAIR   DC    A(DA08CD)
WADARECB DC    F'0'
DAIRDSN  DC    AL2(44)                                          JEP013
DSNPREF  DC    CL44'@WYLBUR'                                    JEP013
***********************************************************************
* THIS OPERATION CODE CAUSES ALLOCATION OF A DATA SET. IT CAN ALLOC.  *
* EITHER A NEW OR OLD SET.                                            *
***********************************************************************
         DS    0F
DA08CD   DC    AL2(8)   DAIR ENTRY CODE
DA08FLG  DC    X'00'    FUNCTIONS TO BE PERFORMED WHEN RET CODE IS 0
DA08FPE  EQU   X'80'    FUNCT PERFORMED BUT ERROR INDICATED BY RETCD
         DC    X'00'
DA08DARC DC    H'0'     DYN ALLOC RETURN CODE
DA08CTRC DC    H'0'     CATALOG RETURN CODE
DA08PDSN DC    A(DAIRDSN)   PTR TO DSNAME TO BE SEARCHED IN DSE
DA08DDN  DC    CL8' '   DDNAME TO BE SEARCHED IN DSE
DA08UNIT DC    CL8' '   UNITNAME REQUESTED
DA08SER  DC    CL8' '   VOLUME SERIAL NUMBER-PADDED W/BLANKS
DA08BLK  DC    F'0'     DATA SET  AVERAGE RECORD LENGTH
DA08PQTY DC    F'0'     PRIMARY SPACE QUANTITY
DA08SQTY DC    F'0'     SECONDARY SPACE QUANTITY
DA08DQTY DC    F'0'     DIRECTORY BLOCK QUANTITY
DA08MNM  DC    CL8' '   MEMBER NAME
DA08PSWD DC    CL8' '   PASSWORD
DA08DSP1 DC    X'08'    DATA SET STATUS FLGS(IF=0 OLD ASSUMED)
DA08SHR  EQU   X'08'    DATA SET IS SHR
DA08NEW  EQU   X'04'    DATA SET IS NEW
DA08MOD  EQU   X'02'    DATA SET IS MOD
DA08OLD  EQU   X'01'    DATA SET IS OLD
DA08DPS2 DC    X'08'    DATA SET DISPOSITION(IF=0 KEEP ASSUMED)
DA08KEEP EQU   X'08'    DS DISP IS KEEP
DA08DEL  EQU   X'04'    DS DISP IS DELETE
DA08CAT  EQU   X'02'    DS DISP IS CATLG
DA08UCAT EQU   X'01'    DS DISP IS UNCATALOG
DA08DPS3 DC    X'08'    DATA SET CONDITIONAL DISPOSITION
DA08KEP  EQU   X'08'
DA08DELE EQU   X'04'
DA08CATL EQU   X'02'    DS DISP OF CATLG DESIRED
DA08UNCT EQU   X'01'    DS DISP OF UNCATLG DESIRED
DA08CTL  DC    X'08'    FLAGS TO CONTROL ACTIONS TAKEN BY DAIR
DA08TRKS EQU   X'80'    UNITS ARE TRKS
DA08ABKL EQU   X'40'
DA08CYLS EQU   X'C0'    UNITS ARE CYLS
DA08UID  EQU   X'20'    USER ID IS TO BE PREFIXED
DA08RLSE EQU   X'10'    RELEASE (RLSE) REQUESTED
DA08PERM EQU   X'08'    DATA SET MUST BE SPECIFICALLY UNALLOCATED
DA08DMMY EQU   X'04'
DA08ATRL EQU   X'02'    ATTRIBUTE LIST SUPPLIED
         DC    XL3'00'  RESERVED
DA08DSO  DC    XL1'00'  DSORG
DA08ALN  DC    CL8' '   ATTR-LIST-NAME
***********************************************************************
* THIS OPERATION CAUSES THE REQUESTED DATA SET OR DDNAME TO BE        *
* UNALLOCATED. DISPOSITION CAN BE SPECIFIED TO OVERRIDE ANY PREVIOUS  *
* DISPOSITION. LIKENISE SYSOUT CLASS MAY BE SPECIFIED TO OVERRIDE ANY *
* PREVIOUS CLASS.                                                     *
***********************************************************************
         DS    0F
DA18CD   DC    AL2(24)  DAIR ENTRY CODE
DA18FLG  DC    X'00'    FUNCTIONS TO BE PERFORMED WHEN RET CODE IS 0
DA18FPE  EQU   X'80'    FUNCT PERFORMED BUT ERROR INDICATED BY RETCD
         DC    X'00'
DA18DARC DC    H'0'                    DYNAMIC ALLOCATION RETURN CODE
DA18CTRC DC    H'0'               CATALOG RETURN CODE AREA
DA18PDSN DC    A(0)         PTR TO DSNAME TO BE SEARCHED IN DSE
DA18DDN  DC    CL8' '   DDNAME TO BE SEARCHED IN DSE
DA18MNM  DC    CL8' '   MEMBER NAME
DA18SCLS DC    CL2' '   SYSOUT CLASS DESIRED WHEN UNALLOCATING  A
*                       SYSOUT DATA SET
DA18DPS2 DC    X'08'    DATA SET DISPOSITION
DA18KEEP EQU   X'08'    CHANGE DISP TO KEEP
DA18DEL  EQU   X'04'    CHANGE DISP TO DELETE
DA18CAT  EQU   X'02'    CHANGE DISP TO CATALOG
DA18UCAT EQU   X'01'    CHANGE DISP TO UNCATLOG
DA18CTL  DC    X'10'    FLAGS FOR SPECIAL DAIR PROCESSING
DA18UID  EQU   X'20'    USER ID IS TO BE PREFIXED TO DSNAME
DA18PERM EQU   X'10'    UNALLOCATE PERM. ALLOCATED DSE'S
DA18JBNM DC    CL8' '
         SPACE ,
ATTDECB  DC   A(0)                 ECB FOR ATTACH
WATTACH  ATTACH EP=IKJEFT01,ECB=ATTDECB,SF=L
         DS    0F
WASTAX   DC    5A(0)               STAX PARAMETER LIST
DBUF     DS    0D
DBUFSIZE EQU   13030
ACCTWA   EQU   DBUF       ACCOUNTING WORK AREA
         DS    (DBUFSIZE)C
         SPACE 3
* WORK AREA FOR DVTOC
         SPACE ,
* FIRST PART IS FORMAT 4 DSCB AREA
         ORG   DBUF
VTOCAREA DS    0D
         IECSDSL1 4
         ORG   DS4VTOCE       FMT 4 EXTENT DESCRIPTION
         DS    CL2
VTOCBEG  DS    CL4
VTOCEND  DS    CL4
         DS    279C
         SPACE 3
PAGEGET  DS    F
VTOCSV   DS    11F
WAR14    EQU   VTOCSV    REG SAVE AREA FOR SUBTASK COMMUNICATION
WAR15    EQU   WAR14+4
*
ENDTEST  DS    XL5
*
*
DVTAREA  DVTAREA ,                 DEFINE DEVCODE AREA
*
*
NUMTRK   DS    H
*
SRCHC    DS    H
SRCHH    DS    H
SRCHR    DS    H
         EJECT
JFCB     DS    0D
         IEFJFCBN
         EJECT
* VOLUME CATALOG ENTRY WORK AREA
         SPACE ,
CATBLOCK DS    0D
CATNOENT DS    H
CATDVTYP DS    CL4
CATVOL   DS    CL6
CATTRASH DS    CL2
CATENTSZ EQU   *-CATDVTYP
CATNTTR  EQU   CATBLOCK+256        TTR OF BLOCK FOLL READ BLOCK
CATVOLID EQU   CATNTTR+3           VOL ID OF CATLG
CATRSIZE EQU   CATVOLID+6-CATBLOCK SIZE READ FROM CATLG
         SPACE 3
* FORMAT 1 DSCB WORK AREA
         DS    0D
         IECSDSL1 1
DS1END   EQU   *
SPACFLAG EQU   X'69'          SPACE ACCOUNTING FLAG BITS
         SPACE 3
* FORMAT 3 DSCB WORK AREA
         ORG   IECSDSL1
         DS    0D
         IECSDSL1 3
DS3END   EQU   *
         SPACE 3
* FORMAT 5 DSCB WORK AREA
         ORG   IECSDSL1
         IECSDSL1 5
         SPACE 3
         ORG   CATBLOCK+CATRSIZE   (MUST BE .GT. DS3END)
         COPY  SDSNBUF
         SPACE 3
         COPY  SCATBUF
         SPACE 3
JFCBSAVE DS    0D
         DS    CL(JFCBLGTH)
         SPACE 3
WASA     DS    18F       R13 SAVE AREA DURING SUBTASK
         ORG   ,
         MEND
./ ADD NAME=WIDENT
         MACRO
         WIDENT &LEVEL
         SPACE ,
.* THIS MACRO PROVIDES LEVEL,DATE, AND TIME STAMP FOR ASSEMBLIES
.* MUST BE RUN UNDER THE 18JAN70 RELEASE OF ASMG, WITH EXTEN OPTION
         GBLC  &MOD,&IDDATE,&IDTIME
         LCLC  &X1,&X2,&X3,&ENT
&MOD     SETC  '&LEVEL'
&IDDATE  SETC  '&SYSDATE '(1,7)
&IDTIME  SETC  '&SYSTIME'
&X1      SETC  '&IDDATE'(1,2)
&X2      SETC  '&IDDATE'(3,3)
&X3      SETC  '&IDDATE'(6,2)
         AIF   ('&X3'(2,1) NE ' ').A1
&X3      SETC  '0'.'&X3'(1,1)
.A1      ANOP
&IDDATE  SETC  '&X3&X2&X1'
&ENT     SETC  '&SYSECT&MOD'
         SPACE ,
         ENTRY &ENT
         SPACE ,
&ENT     DC    C'&ENT,&IDDATE,&IDTIME'
         MEND
./ ADD NAME=WSTP
         MACRO
&L       WSTP  &A
&L       SYSLR 1,&A
         L     0,=X'AABBCCDD'
         SVC   SVCMIL
         MEND
./ ADD NAME=WYLCONST
         SPACE ,
* REGISTER DEFINITIONS
         SPACE ,
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE ,
* CONSTANTS
         SPACE ,
C4       EQU   4
C8       EQU   8
C12      EQU   12
C16      EQU   16
C20      EQU   20
C24      EQU   24
C28      EQU   28
C32      EQU   32
C36      EQU   36
C40      EQU   40
C44      EQU   44
C48      EQU   48
C52      EQU   52
C80      EQU   80
SZR      EQU   148
MXPRTSZ  EQU   133     MAX LINE SIZE (UNPRESSED)
ABRTCODE EQU   36      ABORT RETURN CODE FOR NTGDOPN ROUTINE
TALOCODE EQU   32      TALO RETURN CODE FOR NTGDOPN ROUTINE
DESRELA  EQU   X'02'   ROUTINE ADDR IS RELATIVE OFF R10
INCORE   EQU   X'33'   PAGE IS IN CORE
FNEGBT   EQU   X'80'   NEGATIVE BIT
FLOWBT   EQU   X'01'   LOW ORDER BIT
FALLBT   EQU   X'FF'   ALL BITS
         SPACE ,
* DESPOT FLAGS
         SPACE ,
DESRTRN  EQU   X'80'   RETURN FROM DESPOT  ** FOR DESPOT CALLS
DESNRTN  EQU   X'00'   CALL CMDPRT FROM DESPOT
LEXATRTN EQU   X'40'   USE LOCATEEX
LXCATRTN EQU   X'60'   USE LXCATE
LOCATRTN EQU   X'00'   USE LOCATE
DESMATCH EQU   X'10'   MATCH A LINE NO ALWAYS
DESNMTCH EQU   X'00'   NO MATCH AT PAGE END
UNPRST   EQU   X'01'   RETURN UNPRESSED FROM DESPOT
PREST    EQU   X'00'   RETURN PRESSED FROM DESPOT
         SPACE ,
FRNGTYP  EQU   X'C0'   RANGE TYPE BITS
*              X'00'   SINGLE LINE NUMBER RANGE N
*              X'40'   COUNT RANGE N(M)
*              X'C0'   NORMAL TWO LINE RANGE N/M
./ ADD NAME=XCALL
         MACRO
&L       XCALL &R
         GBLC  &PAGECDE
         AIF   ('&PAGECDE' EQ 'YES').XCALLP
&L       L     14,=A(&R)
         BALR  14,14
         MEXIT
.XCALLP  ANOP
&L       LA    14,&R
         BAL   7,CVCALLER
         MEND
./ ADD NAME=XENTER
         MACRO
&L       XENTER &R,&S,&SZ,&BASE=
         AIF   ('&L' EQ '').NEP
         ENTRY &L
.NEP     ANOP
&L       ST    14,0(,13)
         XENTERI &R,&S,&SZ
         AIF   ('&BASE' EQ '').DATSALL
         L     7,=A(&BASE)
         USING &BASE,7
.DATSALL ANOP
         MEND
./ ADD NAME=XENTERI
         MACRO
&L       XENTERI &R,&S,&SZ
         GBLC  &PAGECDE
         AIF   ('&L' EQ '').NEP
         ENTRY &L
.NEP     ANOP
&L       STM   &R,&S,4(13)
         LR    8,13
         AIF   ('&SZ' EQ '').NWA
         AIF   ('&SZ' EQ '*').MIN
         LA    13,(&SZ+3)/4*4(,13)
         AGO   .NWA
.MIN     ANOP
         LA    13,(&S+2-(&R))*4(,13)
.NWA     AIF   ('&PAGECDE' EQ 'YES').EXIT
         BALR  7,0
         USING *,7
.EXIT    MEND
./ ADD NAME=XEXIT
         MACRO
&L       XEXIT &R,&S,&LTR
         GBLC  &PAGECDE
&L       LR    13,8
         LM    &R,&S,4(13)
         L     14,0(,13)
         AIF   ('&PAGECDE' EQ 'YES').PEXIT
         AIF   ('&LTR' EQ '').NLTR
         LTR   15,15
.NLTR    BR    14
         MEXIT
.PEXIT   AIF   ('&LTR' NE 'PFREE').PEXIT1
         B     CVROUTEX            PFREE ROUTINE PAGE AND EXIT
         MEXIT
.PEXIT1  AIF   ('&LTR' EQ '').NLTR
         MNOTE 8,'&LTR INVALID IN PAGED CODE'
         AGO   .NLTR
         MEND
./ ADD NAME=XSA
         MACRO
&L       XSA   &S,&R
&L       DC    (&R+2-(&S))A(0)
         MEND
./ ADD NAME=XTRACE
         MACRO
&L       XTRACE &NAME,&A,&B,&SM=255
         GBLC  &TRACEEE
         AIF   ('ON' EQ '&TRACEEE').YESS
&L       SYSLR 1,(1)
         MEXIT
.YESS    ANOP
         AIF   ('&SM' EQ '0').ZSM
&L       SETSM 0
         STM   14,1,TRAC&SYSNDX+4
         AGO   .STD
.ZSM     ANOP
&L       STM   14,1,TRAC&SYSNDX+4
.STD     ANOP
         AIF   ('&A' EQ '').NULL
         AIF   ('&A'(1,1) EQ '(').AR
         MVC   TRAC&SYSNDX+12(8),&A
         AGO   .B
.AR      AIF   ('&A' EQ '(0)').B
         ST    &A,TRAC&SYSNDX+12
.B       AIF   ('&B' EQ '').NULL
         AIF   ('&B'(1,1) EQ '(').BR
         MVC   TRAC&SYSNDX+16(4),&B
         AGO   .NULL
.BR      AIF  ('&B' EQ '(1)' AND '&A'(1,1) EQ '(').NULL
         ST    &B,TRAC&SYSNDX+16
.NULL    ANOP
         CNOP  2,4
         L     15,TRAC&SYSNDX
         BALR  14,15
TRAC&SYSNDX DC V(TRACE)
         DC    4A(0)
         DC    CL8'&NAME'
         LM    14,15,4(14)
         AIF   ('&SM' EQ '0').NRSM
         SETSM &SM
.NRSM    ANOP
         MEND
./ ADD NAME=XTRNS
         MACRO
         XTRNS &DUMMY
         LCLC  &C
.* MACRO TO GENERATE EXTRN STATEMENTS FOR WYLTSO
&C       SETC  '&SYSECT'
         AIF   ('&C' EQ 'PDOS').W1
* PDOS ENTRIES
         EXTRN DOCHNG,DODELEL,DODELE,STOWIT,UNPRESS
         EXTRN LENCHK,TRDRTN,LISTLINE,SETPRMPT,RDSKER
         EXTRN WDSKER,ADDER,LOWMULT,CVEXNO,PRESS
.W1      AIF   ('&C' EQ 'PGOS').W1A
* PGOS ENTRIES
         EXTRN GOCHNG,GODEL,BOOMDEL,GOCOPY,GOMOVE
         EXTRN WORK,LOCLIST,LSLNMSGA,SELDELTA,FIXNUMB
         EXTRN GOSET,SETPFXNS
.W1A     AIF   ('&C' EQ 'PEDS').W2
* PEDS ENTRIES
         EXTRN VOLCHEK,GOSAVE,NTGDOPN,WORKX,GOREN
         EXTRN GOSCRT,NOTMYDS,GOUSE,CLEARCK,YESREQ
         EXTRN DSNAMED,MEMBERED,CTLGED,VOLCHKNL
         EXTRN CHKMBRIG,NOMORPG,GOPERMIT
.W2      AIF   ('&C' EQ 'BLPR').W3
* BLPR ENTRIES
         EXTRN GOPOINT,GOLSPRN,LSTWORK
.W3      AIF   ('&C' EQ 'PUTB').W5
* PUTB ENTRIES
         EXTRN DESPOT,DETRNG,ITSNIL,LOCATE,LOCATEEX
         EXTRN LXCATE,DODSNM,DSNSTDDO,DSNUDSDO,FMTCHK
.W5      AIF   ('&C' EQ 'PWYL').W6
* PWYL ENTRIES
         EXTRN WYLTSO,CMDPRT,INVALID,ILLCMD
         EXTRN EDTCOMMV,EDTCOM,ATTNRTN,PSYNAD
         EXTRN CLRTST,DOCLEAR,GORDCMD
         EXTRN UNLEGAL,ABSCENT,AMMISS,QTYPED,QSYSGO
.W6      AIF   ('&C' EQ 'PAGER').W8
* PAGER ENTRIES
         EXTRN PGET,WPAGES,PAGEIO,PFREE,PMARK
         EXTRN PNUM,PJUNK
.W8      AIF   ('&C' EQ 'PDIO').W9
* PDIO ENTRIES
         EXTRN DOPEN,DOUCBSR,RENCTG,PRENA,DREAD
         EXTRN DWRITE,DCLOSE,CALCTRK
.W9      AIF   ('&C' EQ 'PSCN').W10
* PSCN ENTRIES
         EXTRN SCINIT,SCTELL,SCAN,DQSCAN
.W10     AIF   ('&C' EQ 'WTR').W11
* WTR ENTRIES
         EXTRN TSEGXM,TSEGXW,TSEGXB,TSEGX,TMARKX
         EXTRN TWRITEX,OPWRITE,TREADX,TTABS
.W11     ANOP
         AIF   ('&C' EQ 'BEXE').W12
* BEXE ENTRIES
         EXTRN GOLOAD,GOEXEC,STEXEPRT,SHEXEC,GETEXCMD
         EXTRN WRITECOM,EXLOOPCK,EXECABRT,GORESTOR,GOCOMMNT
         EXTRN EXCLRCK,DOCLREX
.W12     AIF   ('&C' EQ 'PPRT').W14
* PPRT ENTRIES
         EXTRN LISTPRT,TEXTPRT,LTNPRT,NUMPRT,SCRPRT
         EXTRN CLSCRPRT,CLRPRT,IGDSNPRT,LNENOPRT,LNENOPRN
         EXTRN SCNEXFR
.W14     AIF   ('&C' EQ 'PROC').W15
* PROC ENTRIES
         EXTRN FMTTIME,GOIF,LOOKUP,PREPROC,READVAR
         EXTRN READSTR,SETVAR,SHOVAR
.W15     ANOP  ,
* CR ENTRIES
         EXTRN DTB,XTB,BTD,BTX,DATE,TIME
.EXIT    MEND
