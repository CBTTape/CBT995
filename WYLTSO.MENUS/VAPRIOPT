&-----------------------  SPF/TSO PRIMARY OPTION MENU  -------------------------
&SELECT OPTION ===>%OPT     $
&                                                           $USERID   -@ID
&   0 $SPF PARMS  - SPECIFY TERMINAL AND SPF PARAMETERS     $TIME     -@TIME
$                   1) TERMINAL  2) LOG/LIST  3) PF KEYS    $TERMINAL -@TERM
&   1 $BROWSE     - DISPLAY SOURCE DATA OR OUTPUT LISTINGS  $PFKEYS   -@KY
&   2 $EDIT       - CREATE OR CHANGE SOURCE DATA
&   3 $UTILITY    - PERFORM SPF UTILITY FUNCTIONS
$                   1) LIBRARY    3) MOVE/COPY   5) RESET      7) VTOC
$                   2) DATA SET   4) CATALOG     6) HARDCOPY   8) OUTLIST
&   4 $FOREGROUND - COMPILE, ASSEMBLE, OR LINK EDIT, OR DEBUG
&   5 $BACKGROUND - COMPILE, ASSEMBLE, OR LINK EDIT
&   6 $TSO        - ENTER TSO COMMAND OR CLIST
&   7 $TUTORIAL   - DISPLAY INFORMATION ABOUT SPF
&   A $ASM2       - ASM2 DISK STORAGE MANAGEMENT SYSTEM
$                   1) ARCHIVE  2) BACKUP    3) SPACE MANAGEMENT
&   P $PANVALET   - SPF/TSO/PANVALET INTERFACE
$                               2) CHANGE    4) DISPLAY  6) PRINT    8) RETRIEVE
$                   1) ADD      3) COPY      5) LISTDS   7) RENAME   9) STORE
&   J $JTIP       - PERFORM JTIP UTILITY FUNCTIONS
&   X $EXIT       - TERMINATE SPF USING LIST/LOG DEFAULTS
&
&
$PRESS&PF3$(END KEY) TO TERMINATE SPF$
&
<ACTION>
1 OPT CHAR(8) CURSOR GENHELP(TTUTOR)
 LIST    (0       ,0.1     ,0.2     ,0.3     ,
  1       ,
  2       ,
  3       ,3.1     ,3.2     ,3.3     ,3.4     ,3.5     ,3.6     ,3.7    ,
  3.8     ,3.9     ,
  4       ,4.1     ,4.2     ,4.3     ,4.4     ,4.5     ,4.6     ,4.7    ,
  4.8     ,
  5       ,5.1     ,5.2     ,5.3     ,5.4     ,5.5     ,5.6     ,5.7    ,
  5.8     ,
  6       ,
  7       ,
  8       ,8.0     ,8.1     ,8.2     ,8.3     ,8.4     ,8.5     ,8.6    ,
  8.7     ,8.8     ,8.9     ,
  9       ,
  A       ,A.1     ,A.2     ,A.3     ,
  C       ,
  J       ,
  X       ,TESTMENU,' '    ,*)
 RETURN  (SPFOPT  ,SPFOPT  ,SPFOPT  ,SPFOPT  ,
  SPFBRO  ,
  SPFEDIT ,
  SPFUTIL ,SPFUDA  ,SPFUDA  ,SPFUMC  ,SPFUCA  ,SPFURS  ,SPFUHC  ,SPFUVT  ,
  SPFUOL  ,SPFUTIL ,
  SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,
  SPFUTIL ,
  SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,
  SPFJOB  ,
  SPFTSO  ,
  SPFTUTOR,
  SPFUTIL ,TKSPED0D,SPFFOR  ,SPFFOR  ,SPFFOR  ,TKSPBR0D,SPFFOR  ,SPFFOR ,
  SPFFOR  ,SPFFOR  ,SPFFOR  ,
  SPFUTIL ,
  SPFUTIL ,SPFFOR  ,SPFFOR  ,SPFFOR  ,
  TKSUOL0D,
  TKSJOL0D,
  END     ,SPFTMENU,' '   ,?);
2 OPT CHAR(8) INIT($PARM2)
 LIST     (0       ,0.1     ,0.2     ,0.3     ,
  3       ,3.1     ,3.2     ,3.8     ,3.9     ,
  4       ,4.1     ,4.2     ,4.3     ,4.4     ,4.5     ,4.6     ,4.7     ,
  4.8     ,
  5       ,5.1     ,5.2     ,5.3     ,5.4     ,5.5     ,5.6     ,5.7     ,
  5.8     ,
  7       ,
  8       ,8.0     ,8.1     ,8.2     ,8.3     ,8.4     ,8.5     ,8.6     ,
  8.7     ,8.8     ,8.9     ,
  9       ,
  A       ,A.1     ,A.2     ,A.3     ,
  C       ,
  J       )
 RETURN   (OPT00   ,OPT01   ,OPT02   ,OPT03   ,
  UTIL    ,UDA1    ,UDA2    ,UOL01   ,VNOTSUP ,
  VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,
  VNOTSUP ,
  *JOBA   ,JOB01   ,JOB02   ,JOB03   ,JOB04   ,JOB05   ,JOB06   ,JOB07   ,
  JOB08   ,
  T       ,
  VPAN    ,VPANE   ,VPAN01  ,VPAN02  ,VPAN03  ,VPAN04  ,VPAN05  ,VPAN06  ,
  VPAN07  ,VPAN08  ,VPAN09  ,
  VINDEV  ,
  VASM2   ,V$AR    ,V$BK    ,V$SM    ,
  VUOL01  ,
  VJTIP   );
 3 ID       CHAR (8) INIT($PARM3);
 4 TIME     CHAR (5) INIT($PARM4);
 5 DATE     CHAR (8) INIT($PARM5);
 6 DATEJ    CHAR (6) INIT($PARM6);
 7 KY       CHAR (2) INIT($PARM7);
 8 TERM     CHAR (8) INIT($PARM8);
 9 MODE     CHAR (1) INIT($PARM9)
            LIST   (MONO,DUAL)
            RETURN (M   ,D   );
10 PFX      CHAR (8) INIT($PARM10);
11 STEP     CHAR (8) INIT($PARM11);
12 *        FIXED (8) INIT(0);  ** RESERVED **
13 *        CHAR (8) INIT(' '); ** RESERVED **
14 *        FIXED (31) INIT(0); ** RESERVED **
<END>
***
*** ORIGINAL STATEMENTS
***
&-----------------------  SPF/TSO PRIMARY OPTION MENU  -------------------------
&SELECT OPTION ===>%OPT     $
 &                                                          $USERID   -@ID
 &  0 $SPF PARMS  - SPECIFY TERMINAL AND SPF PARAMETERS     $TIME     -@TIME
&   1 $BROWSE     - DISPLAY SOURCE DATA OR OUTPUT LISTINGS  $TERMINAL -@TERM
&   2 $EDIT       - CREATE OR CHANGE SOURCE DATA            $PF KEYS  -@KY
&   3 $UTILITY    - PERFORM SPF UTILITY FUNCTIONS
&   4 $FOREGROUND - COMPILE, ASSEMBLE, LINK EDIT, OR DEBUG
&   5 $BACKGROUND - COMPILE, ASSEMBLE, OR LINK EDIT
&   6 $TSO        - ENTER TSO COMMAND OR CLIST
&   7 $TUTORIAL   - DISPLAY INFORMATION ABOUT SPF
&   X $EXIT       - TERMINATE SPF USING LIST/LOG DEFAULTS
&
$PRESS&END KEY$TO TERMINATE SPF$
&
<ACTION>
1 OPT CHAR(8) CURSOR GENHELP(TTUTOR)
 LIST   (0     ,0.1   ,0.2   ,0.3   ,1     ,2      ,
  3      ,3.1   ,3.2   ,3.3   ,3.4   ,3.5   ,3.6   ,3.7   ,3.8   ,3.9   ,
  4      ,4.1   ,4.2   ,4.3   ,4.4   ,4.5   ,4.6   ,4.7   ,4.8   ,
  5     ,5.1   ,5.2   ,5.3   ,5.4   ,5.5   ,5.6   ,
  6     ,7       ,X  ,TESTMENU,' ',*)
 RETURN (SPFOPT,SPFOPT,SPFOPT,SPFOPT,SPFBRO,SPFEDIT,
  SPFUTIL,SPFUDA,SPFUDA,SPFUMC,SPFUCA,SPFURS,SPFUHC,SPFUVT,SPFUOL,SPFUSC,
  SPFUTIL,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,
  SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,
  SPFTSO,SPFTUTOR,END,SPFTMENU,' ',?);
2 OPT CHAR(8) INIT($PARM2)
 LIST   (0    ,0.1  ,0.2  ,0.3  ,3   ,3.1 ,3.2 ,3.8  ,3.9   ,
  4   ,4.1  ,4.2  ,4.3  ,4.4  ,4.5  ,4.6  ,4.7  ,4.8  ,
  5    ,5.0  ,5.1  ,5.2  ,5.3  ,5.4  ,5.5  ,5.6  ,7)
 RETURN (OPT00,OPT01,OPT02,OPT03,UTIL,UDA1,UDA2,UOL01,SCRPTA,
  FORA,FOR01,FOR02,FOR03,FOR04,FOR05,FOR06,FOR07,FOR08,
  *JOBA,JOB00,JOB01,JOB02,JOB03,JOB04,JOB05,JOB06,T);
3 ID CHAR(8) INIT($PARM3);
4 TIME CHAR(5) INIT($PARM4);
5 DATE CHAR(8) INIT($PARM5);
6 DATEJ CHAR(6) INIT($PARM6);
7 KY CHAR(2) INIT($PARM7);
8 TERM CHAR(8) INIT($PARM8);
9 MODE CHAR(1) INIT($PARM9)
 LIST   (MONO,DUAL)
 RETURN (M   ,D   );
10 PFX CHAR(8) INIT($PARM10);
11 STEP CHAR(8) INIT($PARM11);
12 * FIXED(8) INIT(0);  ** RESERVED **
13 * CHAR(8) INIT(' '); ** RESERVED **
14 * FIXED(31) INIT(0); ** RESERVED **
<END>
