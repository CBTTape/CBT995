&---------------- ASM2 DISK SPACE MANAGEMENT UTILITY ---------------------------
&SELECT OPTION ===>%OPT                                                        $
&
&   BLANK$- DISPLAY DISK DATASET SPACE INFORMATION
&   U$- DISPLAY DISK DATASET USAGE INFORMATION
&   C$- COMPRESS DATASET WITHOUT RELEASING UNUSED SPACE
&   R$- RELEASE UNUSED SPACE IN DATASETS (COMPRESS OPTIONAL)
&   E$- RESET END-OF-FILE TO BEGINNING OF SEQUENTIAL DATASET
$
$TYPE OF NAME  &===>%T$     (L=INDEX LEVELS, BLANK=FULL DSN))
$   NAME       &===>%DSN                                         $
$
$OPTIONS FOR RELEASE/COMPRESS OPTION (OPTION 'R','C')
$   COMPRESS   &===>%C$     (FOR PDS ONLY, 'Y' OR 'N')
$   BACKUP     &===>%B$     (FOR COMPRESS ONLY, 'Y' OR 'N')
$   SAVE       &===>%S    $ (SAVE NNNNN UNUSED TRACKS)
<ACTION>
 1 OPT     CHAR (1)  INIT(' ')     LIST   (U,R,E,C,' ',*) GENHELP(VT$SM)
                       CURSOR      RETURN (U,R,E,C,' ',?);
 2 OPT     CHAR (1)  INIT(' ')     LIST   ('U' ,  * )  KEY(SW1)
                     NOCURSOR      RETURN ('¬' , ' ');
 3 OPT     CHAR (1)  INIT(' ')     LIST   ('U' ,  * )  KEY(SW2)
                     NOCURSOR      RETURN (' ' , '¬');
 4 OPT     CHAR (1)  INIT(' ')     LIST   ('R' ,  * )  KEY(SW7)
                     NOCURSOR      RETURN (' ' , '¬');
 5 OPT     CHAR (1)  INIT(' ')     LIST   ('E' ,  * )  KEY(SW8)
                     NOCURSOR      RETURN (' ' , '¬');
 6 OPT     CHAR (1)  INIT(' ')     LIST   ('C' ,  * )  KEY(SW9)
                     NOCURSOR      RETURN (' ' , '¬');
 7 DSN     CHAR (44) INIT(' ')     LIST   (' ' ,  * )
                     NOCURSOR      RETURN (' '      ); OPTIONAL
 8 DSN     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW3)
                     NOCURSOR      RETURN ('¬' , ' ');
 9 T       CHAR (1)  INIT(' ')     LIST   (' ' , 'L' ,  * )
                     NOCURSOR      RETURN (' ' , 'L' ,  ? ); OPTIONAL
10 T       CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW4)
                     NOCURSOR      RETURN ('¬' , ' ');
11 T       CHAR (1)  INIT(' ')     LIST   ('L' ,  * )  KEY(SW5)
                     NOCURSOR      RETURN ('¬' , ' ');
12 C       CHAR (2)  INIT('Y')     LIST   ('N' ,  'Y' ,  * )
                     NOCURSOR      RETURN ('NO' , ' ' ,  ? ); REQUIRED
13 B       CHAR (2)  INIT('Y')     LIST   ('N' ,  'Y' ,  * )
                     NOCURSOR      RETURN ('NO' , ' ' ,  ? ); REQUIRED
14 S       CHAR (5)  INIT(' ')     LIST   (' ' ,  * )
                     NOCURSOR      RETURN (' '      ); OPTIONAL
15 S       CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW6)
                     NOCURSOR      RETURN ('¬' , ' ');
<END>
